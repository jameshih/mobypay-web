var Sr=Object.defineProperty;var kr=(et,tt,ot)=>tt in et?Sr(et,tt,{enumerable:!0,configurable:!0,writable:!0,value:ot}):et[tt]=ot;var Ot=(et,tt,ot)=>(kr(et,typeof tt!="symbol"?tt+"":tt,ot),ot);(function(){const tt=document.createElement("link").relList;if(tt&&tt.supports&&tt.supports("modulepreload"))return;for(const ft of document.querySelectorAll('link[rel="modulepreload"]'))dt(ft);new MutationObserver(ft=>{for(const pt of ft)if(pt.type==="childList")for(const mt of pt.addedNodes)mt.tagName==="LINK"&&mt.rel==="modulepreload"&&dt(mt)}).observe(document,{childList:!0,subtree:!0});function ot(ft){const pt={};return ft.integrity&&(pt.integrity=ft.integrity),ft.referrerPolicy&&(pt.referrerPolicy=ft.referrerPolicy),ft.crossOrigin==="use-credentials"?pt.credentials="include":ft.crossOrigin==="anonymous"?pt.credentials="omit":pt.credentials="same-origin",pt}function dt(ft){if(ft.ep)return;ft.ep=!0;const pt=ot(ft);fetch(ft.href,pt)}})();var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(et){return et&&et.__esModule&&Object.prototype.hasOwnProperty.call(et,"default")?et.default:et}function getAugmentedNamespace(et){if(et.__esModule)return et;var tt=et.default;if(typeof tt=="function"){var ot=function dt(){return this instanceof dt?Reflect.construct(tt,arguments,this.constructor):tt.apply(this,arguments)};ot.prototype=tt.prototype}else ot={};return Object.defineProperty(ot,"__esModule",{value:!0}),Object.keys(et).forEach(function(dt){var ft=Object.getOwnPropertyDescriptor(et,dt);Object.defineProperty(ot,dt,ft.get?ft:{enumerable:!0,get:function(){return et[dt]}})}),ot}var jsxRuntime={exports:{}},reactJsxRuntime_production_min={},react={exports:{}},react_production_min={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l$f=Symbol.for("react.element"),n$4=Symbol.for("react.portal"),p$4=Symbol.for("react.fragment"),q$2=Symbol.for("react.strict_mode"),r$1=Symbol.for("react.profiler"),t$2=Symbol.for("react.provider"),u$3=Symbol.for("react.context"),v$4=Symbol.for("react.forward_ref"),w$3=Symbol.for("react.suspense"),x$2=Symbol.for("react.memo"),y$2=Symbol.for("react.lazy"),z$2=Symbol.iterator;function A$3(et){return et===null||typeof et!="object"?null:(et=z$2&&et[z$2]||et["@@iterator"],typeof et=="function"?et:null)}var B$2={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C$3=Object.assign,D$3={};function E$1(et,tt,ot){this.props=et,this.context=tt,this.refs=D$3,this.updater=ot||B$2}E$1.prototype.isReactComponent={};E$1.prototype.setState=function(et,tt){if(typeof et!="object"&&typeof et!="function"&&et!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,et,tt,"setState")};E$1.prototype.forceUpdate=function(et){this.updater.enqueueForceUpdate(this,et,"forceUpdate")};function F$2(){}F$2.prototype=E$1.prototype;function G$3(et,tt,ot){this.props=et,this.context=tt,this.refs=D$3,this.updater=ot||B$2}var H$3=G$3.prototype=new F$2;H$3.constructor=G$3;C$3(H$3,E$1.prototype);H$3.isPureReactComponent=!0;var I$3=Array.isArray,J$2=Object.prototype.hasOwnProperty,K$2={current:null},L$2={key:!0,ref:!0,__self:!0,__source:!0};function M$4(et,tt,ot){var dt,ft={},pt=null,mt=null;if(tt!=null)for(dt in tt.ref!==void 0&&(mt=tt.ref),tt.key!==void 0&&(pt=""+tt.key),tt)J$2.call(tt,dt)&&!L$2.hasOwnProperty(dt)&&(ft[dt]=tt[dt]);var ht=arguments.length-2;if(ht===1)ft.children=ot;else if(1<ht){for(var bt=Array(ht),yt=0;yt<ht;yt++)bt[yt]=arguments[yt+2];ft.children=bt}if(et&&et.defaultProps)for(dt in ht=et.defaultProps,ht)ft[dt]===void 0&&(ft[dt]=ht[dt]);return{$$typeof:l$f,type:et,key:pt,ref:mt,props:ft,_owner:K$2.current}}function N$3(et,tt){return{$$typeof:l$f,type:et.type,key:tt,ref:et.ref,props:et.props,_owner:et._owner}}function O$3(et){return typeof et=="object"&&et!==null&&et.$$typeof===l$f}function escape$1(et){var tt={"=":"=0",":":"=2"};return"$"+et.replace(/[=:]/g,function(ot){return tt[ot]})}var P$2=/\/+/g;function Q$3(et,tt){return typeof et=="object"&&et!==null&&et.key!=null?escape$1(""+et.key):tt.toString(36)}function R$2(et,tt,ot,dt,ft){var pt=typeof et;(pt==="undefined"||pt==="boolean")&&(et=null);var mt=!1;if(et===null)mt=!0;else switch(pt){case"string":case"number":mt=!0;break;case"object":switch(et.$$typeof){case l$f:case n$4:mt=!0}}if(mt)return mt=et,ft=ft(mt),et=dt===""?"."+Q$3(mt,0):dt,I$3(ft)?(ot="",et!=null&&(ot=et.replace(P$2,"$&/")+"/"),R$2(ft,tt,ot,"",function(yt){return yt})):ft!=null&&(O$3(ft)&&(ft=N$3(ft,ot+(!ft.key||mt&&mt.key===ft.key?"":(""+ft.key).replace(P$2,"$&/")+"/")+et)),tt.push(ft)),1;if(mt=0,dt=dt===""?".":dt+":",I$3(et))for(var ht=0;ht<et.length;ht++){pt=et[ht];var bt=dt+Q$3(pt,ht);mt+=R$2(pt,tt,ot,bt,ft)}else if(bt=A$3(et),typeof bt=="function")for(et=bt.call(et),ht=0;!(pt=et.next()).done;)pt=pt.value,bt=dt+Q$3(pt,ht++),mt+=R$2(pt,tt,ot,bt,ft);else if(pt==="object")throw tt=String(et),Error("Objects are not valid as a React child (found: "+(tt==="[object Object]"?"object with keys {"+Object.keys(et).join(", ")+"}":tt)+"). If you meant to render a collection of children, use an array instead.");return mt}function S$4(et,tt,ot){if(et==null)return et;var dt=[],ft=0;return R$2(et,dt,"","",function(pt){return tt.call(ot,pt,ft++)}),dt}function T$3(et){if(et._status===-1){var tt=et._result;tt=tt(),tt.then(function(ot){(et._status===0||et._status===-1)&&(et._status=1,et._result=ot)},function(ot){(et._status===0||et._status===-1)&&(et._status=2,et._result=ot)}),et._status===-1&&(et._status=0,et._result=tt)}if(et._status===1)return et._result.default;throw et._result}var U$3={current:null},V$3={transition:null},W$3={ReactCurrentDispatcher:U$3,ReactCurrentBatchConfig:V$3,ReactCurrentOwner:K$2};function X$3(){throw Error("act(...) is not supported in production builds of React.")}react_production_min.Children={map:S$4,forEach:function(et,tt,ot){S$4(et,function(){tt.apply(this,arguments)},ot)},count:function(et){var tt=0;return S$4(et,function(){tt++}),tt},toArray:function(et){return S$4(et,function(tt){return tt})||[]},only:function(et){if(!O$3(et))throw Error("React.Children.only expected to receive a single React element child.");return et}};react_production_min.Component=E$1;react_production_min.Fragment=p$4;react_production_min.Profiler=r$1;react_production_min.PureComponent=G$3;react_production_min.StrictMode=q$2;react_production_min.Suspense=w$3;react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W$3;react_production_min.act=X$3;react_production_min.cloneElement=function(et,tt,ot){if(et==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+et+".");var dt=C$3({},et.props),ft=et.key,pt=et.ref,mt=et._owner;if(tt!=null){if(tt.ref!==void 0&&(pt=tt.ref,mt=K$2.current),tt.key!==void 0&&(ft=""+tt.key),et.type&&et.type.defaultProps)var ht=et.type.defaultProps;for(bt in tt)J$2.call(tt,bt)&&!L$2.hasOwnProperty(bt)&&(dt[bt]=tt[bt]===void 0&&ht!==void 0?ht[bt]:tt[bt])}var bt=arguments.length-2;if(bt===1)dt.children=ot;else if(1<bt){ht=Array(bt);for(var yt=0;yt<bt;yt++)ht[yt]=arguments[yt+2];dt.children=ht}return{$$typeof:l$f,type:et.type,key:ft,ref:pt,props:dt,_owner:mt}};react_production_min.createContext=function(et){return et={$$typeof:u$3,_currentValue:et,_currentValue2:et,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},et.Provider={$$typeof:t$2,_context:et},et.Consumer=et};react_production_min.createElement=M$4;react_production_min.createFactory=function(et){var tt=M$4.bind(null,et);return tt.type=et,tt};react_production_min.createRef=function(){return{current:null}};react_production_min.forwardRef=function(et){return{$$typeof:v$4,render:et}};react_production_min.isValidElement=O$3;react_production_min.lazy=function(et){return{$$typeof:y$2,_payload:{_status:-1,_result:et},_init:T$3}};react_production_min.memo=function(et,tt){return{$$typeof:x$2,type:et,compare:tt===void 0?null:tt}};react_production_min.startTransition=function(et){var tt=V$3.transition;V$3.transition={};try{et()}finally{V$3.transition=tt}};react_production_min.unstable_act=X$3;react_production_min.useCallback=function(et,tt){return U$3.current.useCallback(et,tt)};react_production_min.useContext=function(et){return U$3.current.useContext(et)};react_production_min.useDebugValue=function(){};react_production_min.useDeferredValue=function(et){return U$3.current.useDeferredValue(et)};react_production_min.useEffect=function(et,tt){return U$3.current.useEffect(et,tt)};react_production_min.useId=function(){return U$3.current.useId()};react_production_min.useImperativeHandle=function(et,tt,ot){return U$3.current.useImperativeHandle(et,tt,ot)};react_production_min.useInsertionEffect=function(et,tt){return U$3.current.useInsertionEffect(et,tt)};react_production_min.useLayoutEffect=function(et,tt){return U$3.current.useLayoutEffect(et,tt)};react_production_min.useMemo=function(et,tt){return U$3.current.useMemo(et,tt)};react_production_min.useReducer=function(et,tt,ot){return U$3.current.useReducer(et,tt,ot)};react_production_min.useRef=function(et){return U$3.current.useRef(et)};react_production_min.useState=function(et){return U$3.current.useState(et)};react_production_min.useSyncExternalStore=function(et,tt,ot){return U$3.current.useSyncExternalStore(et,tt,ot)};react_production_min.useTransition=function(){return U$3.current.useTransition()};react_production_min.version="18.3.1";react.exports=react_production_min;var reactExports=react.exports;const React=getDefaultExportFromCjs(reactExports);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f$3=reactExports,k$1=Symbol.for("react.element"),l$e=Symbol.for("react.fragment"),m$4=Object.prototype.hasOwnProperty,n$3=f$3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p$3={key:!0,ref:!0,__self:!0,__source:!0};function q$1(et,tt,ot){var dt,ft={},pt=null,mt=null;ot!==void 0&&(pt=""+ot),tt.key!==void 0&&(pt=""+tt.key),tt.ref!==void 0&&(mt=tt.ref);for(dt in tt)m$4.call(tt,dt)&&!p$3.hasOwnProperty(dt)&&(ft[dt]=tt[dt]);if(et&&et.defaultProps)for(dt in tt=et.defaultProps,tt)ft[dt]===void 0&&(ft[dt]=tt[dt]);return{$$typeof:k$1,type:et,key:pt,ref:mt,props:ft,_owner:n$3.current}}reactJsxRuntime_production_min.Fragment=l$e;reactJsxRuntime_production_min.jsx=q$1;reactJsxRuntime_production_min.jsxs=q$1;jsxRuntime.exports=reactJsxRuntime_production_min;var jsxRuntimeExports=jsxRuntime.exports,client={},reactDom={exports:{}},reactDom_production_min={},scheduler={exports:{}},scheduler_production_min={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(et){function tt(Mt,Ct){var Dt=Mt.length;Mt.push(Ct);e:for(;0<Dt;){var Rt=Dt-1>>>1,Tt=Mt[Rt];if(0<ft(Tt,Ct))Mt[Rt]=Ct,Mt[Dt]=Tt,Dt=Rt;else break e}}function ot(Mt){return Mt.length===0?null:Mt[0]}function dt(Mt){if(Mt.length===0)return null;var Ct=Mt[0],Dt=Mt.pop();if(Dt!==Ct){Mt[0]=Dt;e:for(var Rt=0,Tt=Mt.length,zt=Tt>>>1;Rt<zt;){var Kt=2*(Rt+1)-1,Jt=Mt[Kt],Yt=Kt+1,$t=Mt[Yt];if(0>ft(Jt,Dt))Yt<Tt&&0>ft($t,Jt)?(Mt[Rt]=$t,Mt[Yt]=Dt,Rt=Yt):(Mt[Rt]=Jt,Mt[Kt]=Dt,Rt=Kt);else if(Yt<Tt&&0>ft($t,Dt))Mt[Rt]=$t,Mt[Yt]=Dt,Rt=Yt;else break e}}return Ct}function ft(Mt,Ct){var Dt=Mt.sortIndex-Ct.sortIndex;return Dt!==0?Dt:Mt.id-Ct.id}if(typeof performance=="object"&&typeof performance.now=="function"){var pt=performance;et.unstable_now=function(){return pt.now()}}else{var mt=Date,ht=mt.now();et.unstable_now=function(){return mt.now()-ht}}var bt=[],yt=[],xt=1,gt=null,wt=3,Pt=!1,St=!1,Et=!1,Lt=typeof setTimeout=="function"?setTimeout:null,It=typeof clearTimeout=="function"?clearTimeout:null,kt=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function Nt(Mt){for(var Ct=ot(yt);Ct!==null;){if(Ct.callback===null)dt(yt);else if(Ct.startTime<=Mt)dt(yt),Ct.sortIndex=Ct.expirationTime,tt(bt,Ct);else break;Ct=ot(yt)}}function Ut(Mt){if(Et=!1,Nt(Mt),!St)if(ot(bt)!==null)St=!0,At(Ft);else{var Ct=ot(yt);Ct!==null&&Bt(Ut,Ct.startTime-Mt)}}function Ft(Mt,Ct){St=!1,Et&&(Et=!1,It(Wt),Wt=-1),Pt=!0;var Dt=wt;try{for(Nt(Ct),gt=ot(bt);gt!==null&&(!(gt.expirationTime>Ct)||Mt&&!Gt());){var Rt=gt.callback;if(typeof Rt=="function"){gt.callback=null,wt=gt.priorityLevel;var Tt=Rt(gt.expirationTime<=Ct);Ct=et.unstable_now(),typeof Tt=="function"?gt.callback=Tt:gt===ot(bt)&&dt(bt),Nt(Ct)}else dt(bt);gt=ot(bt)}if(gt!==null)var zt=!0;else{var Kt=ot(yt);Kt!==null&&Bt(Ut,Kt.startTime-Ct),zt=!1}return zt}finally{gt=null,wt=Dt,Pt=!1}}var jt=!1,Xt=null,Wt=-1,qt=5,Zt=-1;function Gt(){return!(et.unstable_now()-Zt<qt)}function Qt(){if(Xt!==null){var Mt=et.unstable_now();Zt=Mt;var Ct=!0;try{Ct=Xt(!0,Mt)}finally{Ct?Ht():(jt=!1,Xt=null)}}else jt=!1}var Ht;if(typeof kt=="function")Ht=function(){kt(Qt)};else if(typeof MessageChannel<"u"){var vt=new MessageChannel,Vt=vt.port2;vt.port1.onmessage=Qt,Ht=function(){Vt.postMessage(null)}}else Ht=function(){Lt(Qt,0)};function At(Mt){Xt=Mt,jt||(jt=!0,Ht())}function Bt(Mt,Ct){Wt=Lt(function(){Mt(et.unstable_now())},Ct)}et.unstable_IdlePriority=5,et.unstable_ImmediatePriority=1,et.unstable_LowPriority=4,et.unstable_NormalPriority=3,et.unstable_Profiling=null,et.unstable_UserBlockingPriority=2,et.unstable_cancelCallback=function(Mt){Mt.callback=null},et.unstable_continueExecution=function(){St||Pt||(St=!0,At(Ft))},et.unstable_forceFrameRate=function(Mt){0>Mt||125<Mt?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):qt=0<Mt?Math.floor(1e3/Mt):5},et.unstable_getCurrentPriorityLevel=function(){return wt},et.unstable_getFirstCallbackNode=function(){return ot(bt)},et.unstable_next=function(Mt){switch(wt){case 1:case 2:case 3:var Ct=3;break;default:Ct=wt}var Dt=wt;wt=Ct;try{return Mt()}finally{wt=Dt}},et.unstable_pauseExecution=function(){},et.unstable_requestPaint=function(){},et.unstable_runWithPriority=function(Mt,Ct){switch(Mt){case 1:case 2:case 3:case 4:case 5:break;default:Mt=3}var Dt=wt;wt=Mt;try{return Ct()}finally{wt=Dt}},et.unstable_scheduleCallback=function(Mt,Ct,Dt){var Rt=et.unstable_now();switch(typeof Dt=="object"&&Dt!==null?(Dt=Dt.delay,Dt=typeof Dt=="number"&&0<Dt?Rt+Dt:Rt):Dt=Rt,Mt){case 1:var Tt=-1;break;case 2:Tt=250;break;case 5:Tt=1073741823;break;case 4:Tt=1e4;break;default:Tt=5e3}return Tt=Dt+Tt,Mt={id:xt++,callback:Ct,priorityLevel:Mt,startTime:Dt,expirationTime:Tt,sortIndex:-1},Dt>Rt?(Mt.sortIndex=Dt,tt(yt,Mt),ot(bt)===null&&Mt===ot(yt)&&(Et?(It(Wt),Wt=-1):Et=!0,Bt(Ut,Dt-Rt))):(Mt.sortIndex=Tt,tt(bt,Mt),St||Pt||(St=!0,At(Ft))),Mt},et.unstable_shouldYield=Gt,et.unstable_wrapCallback=function(Mt){var Ct=wt;return function(){var Dt=wt;wt=Ct;try{return Mt.apply(this,arguments)}finally{wt=Dt}}}})(scheduler_production_min);scheduler.exports=scheduler_production_min;var schedulerExports=scheduler.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var aa=reactExports,ca=schedulerExports;function p$2(et){for(var tt="https://reactjs.org/docs/error-decoder.html?invariant="+et,ot=1;ot<arguments.length;ot++)tt+="&args[]="+encodeURIComponent(arguments[ot]);return"Minified React error #"+et+"; visit "+tt+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(et,tt){ha(et,tt),ha(et+"Capture",tt)}function ha(et,tt){for(ea[et]=tt,et=0;et<tt.length;et++)da.add(tt[et])}var ia=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function oa(et){return ja.call(ma,et)?!0:ja.call(la,et)?!1:ka.test(et)?ma[et]=!0:(la[et]=!0,!1)}function pa(et,tt,ot,dt){if(ot!==null&&ot.type===0)return!1;switch(typeof tt){case"function":case"symbol":return!0;case"boolean":return dt?!1:ot!==null?!ot.acceptsBooleans:(et=et.toLowerCase().slice(0,5),et!=="data-"&&et!=="aria-");default:return!1}}function qa(et,tt,ot,dt){if(tt===null||typeof tt>"u"||pa(et,tt,ot,dt))return!0;if(dt)return!1;if(ot!==null)switch(ot.type){case 3:return!tt;case 4:return tt===!1;case 5:return isNaN(tt);case 6:return isNaN(tt)||1>tt}return!1}function v$3(et,tt,ot,dt,ft,pt,mt){this.acceptsBooleans=tt===2||tt===3||tt===4,this.attributeName=dt,this.attributeNamespace=ft,this.mustUseProperty=ot,this.propertyName=et,this.type=tt,this.sanitizeURL=pt,this.removeEmptyString=mt}var z$1={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(et){z$1[et]=new v$3(et,0,!1,et,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(et){var tt=et[0];z$1[tt]=new v$3(tt,1,!1,et[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(et){z$1[et]=new v$3(et,2,!1,et.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(et){z$1[et]=new v$3(et,2,!1,et,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(et){z$1[et]=new v$3(et,3,!1,et.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(et){z$1[et]=new v$3(et,3,!0,et,null,!1,!1)});["capture","download"].forEach(function(et){z$1[et]=new v$3(et,4,!1,et,null,!1,!1)});["cols","rows","size","span"].forEach(function(et){z$1[et]=new v$3(et,6,!1,et,null,!1,!1)});["rowSpan","start"].forEach(function(et){z$1[et]=new v$3(et,5,!1,et.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(et){return et[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(et){var tt=et.replace(ra,sa);z$1[tt]=new v$3(tt,1,!1,et,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(et){var tt=et.replace(ra,sa);z$1[tt]=new v$3(tt,1,!1,et,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(et){var tt=et.replace(ra,sa);z$1[tt]=new v$3(tt,1,!1,et,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(et){z$1[et]=new v$3(et,1,!1,et.toLowerCase(),null,!1,!1)});z$1.xlinkHref=new v$3("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(et){z$1[et]=new v$3(et,1,!1,et.toLowerCase(),null,!0,!0)});function ta(et,tt,ot,dt){var ft=z$1.hasOwnProperty(tt)?z$1[tt]:null;(ft!==null?ft.type!==0:dt||!(2<tt.length)||tt[0]!=="o"&&tt[0]!=="O"||tt[1]!=="n"&&tt[1]!=="N")&&(qa(tt,ot,ft,dt)&&(ot=null),dt||ft===null?oa(tt)&&(ot===null?et.removeAttribute(tt):et.setAttribute(tt,""+ot)):ft.mustUseProperty?et[ft.propertyName]=ot===null?ft.type===3?!1:"":ot:(tt=ft.attributeName,dt=ft.attributeNamespace,ot===null?et.removeAttribute(tt):(ft=ft.type,ot=ft===3||ft===4&&ot===!0?"":""+ot,dt?et.setAttributeNS(dt,tt,ot):et.setAttribute(tt,ot))))}var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy"),Ia=Symbol.for("react.offscreen"),Ja=Symbol.iterator;function Ka(et){return et===null||typeof et!="object"?null:(et=Ja&&et[Ja]||et["@@iterator"],typeof et=="function"?et:null)}var A$2=Object.assign,La;function Ma(et){if(La===void 0)try{throw Error()}catch(ot){var tt=ot.stack.trim().match(/\n( *(at )?)/);La=tt&&tt[1]||""}return`
`+La+et}var Na=!1;function Oa(et,tt){if(!et||Na)return"";Na=!0;var ot=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(tt)if(tt=function(){throw Error()},Object.defineProperty(tt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(tt,[])}catch(yt){var dt=yt}Reflect.construct(et,[],tt)}else{try{tt.call()}catch(yt){dt=yt}et.call(tt.prototype)}else{try{throw Error()}catch(yt){dt=yt}et()}}catch(yt){if(yt&&dt&&typeof yt.stack=="string"){for(var ft=yt.stack.split(`
`),pt=dt.stack.split(`
`),mt=ft.length-1,ht=pt.length-1;1<=mt&&0<=ht&&ft[mt]!==pt[ht];)ht--;for(;1<=mt&&0<=ht;mt--,ht--)if(ft[mt]!==pt[ht]){if(mt!==1||ht!==1)do if(mt--,ht--,0>ht||ft[mt]!==pt[ht]){var bt=`
`+ft[mt].replace(" at new "," at ");return et.displayName&&bt.includes("<anonymous>")&&(bt=bt.replace("<anonymous>",et.displayName)),bt}while(1<=mt&&0<=ht);break}}}finally{Na=!1,Error.prepareStackTrace=ot}return(et=et?et.displayName||et.name:"")?Ma(et):""}function Pa(et){switch(et.tag){case 5:return Ma(et.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return et=Oa(et.type,!1),et;case 11:return et=Oa(et.type.render,!1),et;case 1:return et=Oa(et.type,!0),et;default:return""}}function Qa(et){if(et==null)return null;if(typeof et=="function")return et.displayName||et.name||null;if(typeof et=="string")return et;switch(et){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if(typeof et=="object")switch(et.$$typeof){case Ca:return(et.displayName||"Context")+".Consumer";case Ba:return(et._context.displayName||"Context")+".Provider";case Da:var tt=et.render;return et=et.displayName,et||(et=tt.displayName||tt.name||"",et=et!==""?"ForwardRef("+et+")":"ForwardRef"),et;case Ga:return tt=et.displayName||null,tt!==null?tt:Qa(et.type)||"Memo";case Ha:tt=et._payload,et=et._init;try{return Qa(et(tt))}catch{}}return null}function Ra(et){var tt=et.type;switch(et.tag){case 24:return"Cache";case 9:return(tt.displayName||"Context")+".Consumer";case 10:return(tt._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return et=tt.render,et=et.displayName||et.name||"",tt.displayName||(et!==""?"ForwardRef("+et+")":"ForwardRef");case 7:return"Fragment";case 5:return tt;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(tt);case 8:return tt===za?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof tt=="function")return tt.displayName||tt.name||null;if(typeof tt=="string")return tt}return null}function Sa(et){switch(typeof et){case"boolean":case"number":case"string":case"undefined":return et;case"object":return et;default:return""}}function Ta(et){var tt=et.type;return(et=et.nodeName)&&et.toLowerCase()==="input"&&(tt==="checkbox"||tt==="radio")}function Ua(et){var tt=Ta(et)?"checked":"value",ot=Object.getOwnPropertyDescriptor(et.constructor.prototype,tt),dt=""+et[tt];if(!et.hasOwnProperty(tt)&&typeof ot<"u"&&typeof ot.get=="function"&&typeof ot.set=="function"){var ft=ot.get,pt=ot.set;return Object.defineProperty(et,tt,{configurable:!0,get:function(){return ft.call(this)},set:function(mt){dt=""+mt,pt.call(this,mt)}}),Object.defineProperty(et,tt,{enumerable:ot.enumerable}),{getValue:function(){return dt},setValue:function(mt){dt=""+mt},stopTracking:function(){et._valueTracker=null,delete et[tt]}}}}function Va(et){et._valueTracker||(et._valueTracker=Ua(et))}function Wa(et){if(!et)return!1;var tt=et._valueTracker;if(!tt)return!0;var ot=tt.getValue(),dt="";return et&&(dt=Ta(et)?et.checked?"true":"false":et.value),et=dt,et!==ot?(tt.setValue(et),!0):!1}function Xa(et){if(et=et||(typeof document<"u"?document:void 0),typeof et>"u")return null;try{return et.activeElement||et.body}catch{return et.body}}function Ya(et,tt){var ot=tt.checked;return A$2({},tt,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:ot??et._wrapperState.initialChecked})}function Za(et,tt){var ot=tt.defaultValue==null?"":tt.defaultValue,dt=tt.checked!=null?tt.checked:tt.defaultChecked;ot=Sa(tt.value!=null?tt.value:ot),et._wrapperState={initialChecked:dt,initialValue:ot,controlled:tt.type==="checkbox"||tt.type==="radio"?tt.checked!=null:tt.value!=null}}function ab(et,tt){tt=tt.checked,tt!=null&&ta(et,"checked",tt,!1)}function bb(et,tt){ab(et,tt);var ot=Sa(tt.value),dt=tt.type;if(ot!=null)dt==="number"?(ot===0&&et.value===""||et.value!=ot)&&(et.value=""+ot):et.value!==""+ot&&(et.value=""+ot);else if(dt==="submit"||dt==="reset"){et.removeAttribute("value");return}tt.hasOwnProperty("value")?cb(et,tt.type,ot):tt.hasOwnProperty("defaultValue")&&cb(et,tt.type,Sa(tt.defaultValue)),tt.checked==null&&tt.defaultChecked!=null&&(et.defaultChecked=!!tt.defaultChecked)}function db(et,tt,ot){if(tt.hasOwnProperty("value")||tt.hasOwnProperty("defaultValue")){var dt=tt.type;if(!(dt!=="submit"&&dt!=="reset"||tt.value!==void 0&&tt.value!==null))return;tt=""+et._wrapperState.initialValue,ot||tt===et.value||(et.value=tt),et.defaultValue=tt}ot=et.name,ot!==""&&(et.name=""),et.defaultChecked=!!et._wrapperState.initialChecked,ot!==""&&(et.name=ot)}function cb(et,tt,ot){(tt!=="number"||Xa(et.ownerDocument)!==et)&&(ot==null?et.defaultValue=""+et._wrapperState.initialValue:et.defaultValue!==""+ot&&(et.defaultValue=""+ot))}var eb=Array.isArray;function fb(et,tt,ot,dt){if(et=et.options,tt){tt={};for(var ft=0;ft<ot.length;ft++)tt["$"+ot[ft]]=!0;for(ot=0;ot<et.length;ot++)ft=tt.hasOwnProperty("$"+et[ot].value),et[ot].selected!==ft&&(et[ot].selected=ft),ft&&dt&&(et[ot].defaultSelected=!0)}else{for(ot=""+Sa(ot),tt=null,ft=0;ft<et.length;ft++){if(et[ft].value===ot){et[ft].selected=!0,dt&&(et[ft].defaultSelected=!0);return}tt!==null||et[ft].disabled||(tt=et[ft])}tt!==null&&(tt.selected=!0)}}function gb(et,tt){if(tt.dangerouslySetInnerHTML!=null)throw Error(p$2(91));return A$2({},tt,{value:void 0,defaultValue:void 0,children:""+et._wrapperState.initialValue})}function hb(et,tt){var ot=tt.value;if(ot==null){if(ot=tt.children,tt=tt.defaultValue,ot!=null){if(tt!=null)throw Error(p$2(92));if(eb(ot)){if(1<ot.length)throw Error(p$2(93));ot=ot[0]}tt=ot}tt==null&&(tt=""),ot=tt}et._wrapperState={initialValue:Sa(ot)}}function ib(et,tt){var ot=Sa(tt.value),dt=Sa(tt.defaultValue);ot!=null&&(ot=""+ot,ot!==et.value&&(et.value=ot),tt.defaultValue==null&&et.defaultValue!==ot&&(et.defaultValue=ot)),dt!=null&&(et.defaultValue=""+dt)}function jb(et){var tt=et.textContent;tt===et._wrapperState.initialValue&&tt!==""&&tt!==null&&(et.value=tt)}function kb(et){switch(et){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function lb(et,tt){return et==null||et==="http://www.w3.org/1999/xhtml"?kb(tt):et==="http://www.w3.org/2000/svg"&&tt==="foreignObject"?"http://www.w3.org/1999/xhtml":et}var mb,nb=function(et){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(tt,ot,dt,ft){MSApp.execUnsafeLocalFunction(function(){return et(tt,ot,dt,ft)})}:et}(function(et,tt){if(et.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in et)et.innerHTML=tt;else{for(mb=mb||document.createElement("div"),mb.innerHTML="<svg>"+tt.valueOf().toString()+"</svg>",tt=mb.firstChild;et.firstChild;)et.removeChild(et.firstChild);for(;tt.firstChild;)et.appendChild(tt.firstChild)}});function ob(et,tt){if(tt){var ot=et.firstChild;if(ot&&ot===et.lastChild&&ot.nodeType===3){ot.nodeValue=tt;return}}et.textContent=tt}var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(et){qb.forEach(function(tt){tt=tt+et.charAt(0).toUpperCase()+et.substring(1),pb[tt]=pb[et]})});function rb(et,tt,ot){return tt==null||typeof tt=="boolean"||tt===""?"":ot||typeof tt!="number"||tt===0||pb.hasOwnProperty(et)&&pb[et]?(""+tt).trim():tt+"px"}function sb(et,tt){et=et.style;for(var ot in tt)if(tt.hasOwnProperty(ot)){var dt=ot.indexOf("--")===0,ft=rb(ot,tt[ot],dt);ot==="float"&&(ot="cssFloat"),dt?et.setProperty(ot,ft):et[ot]=ft}}var tb=A$2({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ub(et,tt){if(tt){if(tb[et]&&(tt.children!=null||tt.dangerouslySetInnerHTML!=null))throw Error(p$2(137,et));if(tt.dangerouslySetInnerHTML!=null){if(tt.children!=null)throw Error(p$2(60));if(typeof tt.dangerouslySetInnerHTML!="object"||!("__html"in tt.dangerouslySetInnerHTML))throw Error(p$2(61))}if(tt.style!=null&&typeof tt.style!="object")throw Error(p$2(62))}}function vb(et,tt){if(et.indexOf("-")===-1)return typeof tt.is=="string";switch(et){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var wb=null;function xb(et){return et=et.target||et.srcElement||window,et.correspondingUseElement&&(et=et.correspondingUseElement),et.nodeType===3?et.parentNode:et}var yb=null,zb=null,Ab=null;function Bb(et){if(et=Cb(et)){if(typeof yb!="function")throw Error(p$2(280));var tt=et.stateNode;tt&&(tt=Db(tt),yb(et.stateNode,et.type,tt))}}function Eb(et){zb?Ab?Ab.push(et):Ab=[et]:zb=et}function Fb(){if(zb){var et=zb,tt=Ab;if(Ab=zb=null,Bb(et),tt)for(et=0;et<tt.length;et++)Bb(tt[et])}}function Gb(et,tt){return et(tt)}function Hb(){}var Ib=!1;function Jb(et,tt,ot){if(Ib)return et(tt,ot);Ib=!0;try{return Gb(et,tt,ot)}finally{Ib=!1,(zb!==null||Ab!==null)&&(Hb(),Fb())}}function Kb(et,tt){var ot=et.stateNode;if(ot===null)return null;var dt=Db(ot);if(dt===null)return null;ot=dt[tt];e:switch(tt){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(dt=!dt.disabled)||(et=et.type,dt=!(et==="button"||et==="input"||et==="select"||et==="textarea")),et=!dt;break e;default:et=!1}if(et)return null;if(ot&&typeof ot!="function")throw Error(p$2(231,tt,typeof ot));return ot}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Mb,Mb),window.removeEventListener("test",Mb,Mb)}catch{Lb=!1}function Nb(et,tt,ot,dt,ft,pt,mt,ht,bt){var yt=Array.prototype.slice.call(arguments,3);try{tt.apply(ot,yt)}catch(xt){this.onError(xt)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(et){Ob=!0,Pb=et}};function Tb(et,tt,ot,dt,ft,pt,mt,ht,bt){Ob=!1,Pb=null,Nb.apply(Sb,arguments)}function Ub(et,tt,ot,dt,ft,pt,mt,ht,bt){if(Tb.apply(this,arguments),Ob){if(Ob){var yt=Pb;Ob=!1,Pb=null}else throw Error(p$2(198));Qb||(Qb=!0,Rb=yt)}}function Vb(et){var tt=et,ot=et;if(et.alternate)for(;tt.return;)tt=tt.return;else{et=tt;do tt=et,tt.flags&4098&&(ot=tt.return),et=tt.return;while(et)}return tt.tag===3?ot:null}function Wb(et){if(et.tag===13){var tt=et.memoizedState;if(tt===null&&(et=et.alternate,et!==null&&(tt=et.memoizedState)),tt!==null)return tt.dehydrated}return null}function Xb(et){if(Vb(et)!==et)throw Error(p$2(188))}function Yb(et){var tt=et.alternate;if(!tt){if(tt=Vb(et),tt===null)throw Error(p$2(188));return tt!==et?null:et}for(var ot=et,dt=tt;;){var ft=ot.return;if(ft===null)break;var pt=ft.alternate;if(pt===null){if(dt=ft.return,dt!==null){ot=dt;continue}break}if(ft.child===pt.child){for(pt=ft.child;pt;){if(pt===ot)return Xb(ft),et;if(pt===dt)return Xb(ft),tt;pt=pt.sibling}throw Error(p$2(188))}if(ot.return!==dt.return)ot=ft,dt=pt;else{for(var mt=!1,ht=ft.child;ht;){if(ht===ot){mt=!0,ot=ft,dt=pt;break}if(ht===dt){mt=!0,dt=ft,ot=pt;break}ht=ht.sibling}if(!mt){for(ht=pt.child;ht;){if(ht===ot){mt=!0,ot=pt,dt=ft;break}if(ht===dt){mt=!0,dt=pt,ot=ft;break}ht=ht.sibling}if(!mt)throw Error(p$2(189))}}if(ot.alternate!==dt)throw Error(p$2(190))}if(ot.tag!==3)throw Error(p$2(188));return ot.stateNode.current===ot?et:tt}function Zb(et){return et=Yb(et),et!==null?$b(et):null}function $b(et){if(et.tag===5||et.tag===6)return et;for(et=et.child;et!==null;){var tt=$b(et);if(tt!==null)return tt;et=et.sibling}return null}var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B$1=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(et){if(lc&&typeof lc.onCommitFiberRoot=="function")try{lc.onCommitFiberRoot(kc,et,void 0,(et.current.flags&128)===128)}catch{}}var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(et){return et>>>=0,et===0?32:31-(pc(et)/qc|0)|0}var rc=64,sc=4194304;function tc(et){switch(et&-et){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return et&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return et&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return et}}function uc(et,tt){var ot=et.pendingLanes;if(ot===0)return 0;var dt=0,ft=et.suspendedLanes,pt=et.pingedLanes,mt=ot&268435455;if(mt!==0){var ht=mt&~ft;ht!==0?dt=tc(ht):(pt&=mt,pt!==0&&(dt=tc(pt)))}else mt=ot&~ft,mt!==0?dt=tc(mt):pt!==0&&(dt=tc(pt));if(dt===0)return 0;if(tt!==0&&tt!==dt&&!(tt&ft)&&(ft=dt&-dt,pt=tt&-tt,ft>=pt||ft===16&&(pt&4194240)!==0))return tt;if(dt&4&&(dt|=ot&16),tt=et.entangledLanes,tt!==0)for(et=et.entanglements,tt&=dt;0<tt;)ot=31-oc(tt),ft=1<<ot,dt|=et[ot],tt&=~ft;return dt}function vc(et,tt){switch(et){case 1:case 2:case 4:return tt+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return tt+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wc(et,tt){for(var ot=et.suspendedLanes,dt=et.pingedLanes,ft=et.expirationTimes,pt=et.pendingLanes;0<pt;){var mt=31-oc(pt),ht=1<<mt,bt=ft[mt];bt===-1?(!(ht&ot)||ht&dt)&&(ft[mt]=vc(ht,tt)):bt<=tt&&(et.expiredLanes|=ht),pt&=~ht}}function xc(et){return et=et.pendingLanes&-1073741825,et!==0?et:et&1073741824?1073741824:0}function yc(){var et=rc;return rc<<=1,!(rc&4194240)&&(rc=64),et}function zc(et){for(var tt=[],ot=0;31>ot;ot++)tt.push(et);return tt}function Ac(et,tt,ot){et.pendingLanes|=tt,tt!==536870912&&(et.suspendedLanes=0,et.pingedLanes=0),et=et.eventTimes,tt=31-oc(tt),et[tt]=ot}function Bc(et,tt){var ot=et.pendingLanes&~tt;et.pendingLanes=tt,et.suspendedLanes=0,et.pingedLanes=0,et.expiredLanes&=tt,et.mutableReadLanes&=tt,et.entangledLanes&=tt,tt=et.entanglements;var dt=et.eventTimes;for(et=et.expirationTimes;0<ot;){var ft=31-oc(ot),pt=1<<ft;tt[ft]=0,dt[ft]=-1,et[ft]=-1,ot&=~pt}}function Cc(et,tt){var ot=et.entangledLanes|=tt;for(et=et.entanglements;ot;){var dt=31-oc(ot),ft=1<<dt;ft&tt|et[dt]&tt&&(et[dt]|=tt),ot&=~ft}}var C$2=0;function Dc(et){return et&=-et,1<et?4<et?et&268435455?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sc(et,tt){switch(et){case"focusin":case"focusout":Lc=null;break;case"dragenter":case"dragleave":Mc=null;break;case"mouseover":case"mouseout":Nc=null;break;case"pointerover":case"pointerout":Oc.delete(tt.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pc.delete(tt.pointerId)}}function Tc(et,tt,ot,dt,ft,pt){return et===null||et.nativeEvent!==pt?(et={blockedOn:tt,domEventName:ot,eventSystemFlags:dt,nativeEvent:pt,targetContainers:[ft]},tt!==null&&(tt=Cb(tt),tt!==null&&Fc(tt)),et):(et.eventSystemFlags|=dt,tt=et.targetContainers,ft!==null&&tt.indexOf(ft)===-1&&tt.push(ft),et)}function Uc(et,tt,ot,dt,ft){switch(tt){case"focusin":return Lc=Tc(Lc,et,tt,ot,dt,ft),!0;case"dragenter":return Mc=Tc(Mc,et,tt,ot,dt,ft),!0;case"mouseover":return Nc=Tc(Nc,et,tt,ot,dt,ft),!0;case"pointerover":var pt=ft.pointerId;return Oc.set(pt,Tc(Oc.get(pt)||null,et,tt,ot,dt,ft)),!0;case"gotpointercapture":return pt=ft.pointerId,Pc.set(pt,Tc(Pc.get(pt)||null,et,tt,ot,dt,ft)),!0}return!1}function Vc(et){var tt=Wc(et.target);if(tt!==null){var ot=Vb(tt);if(ot!==null){if(tt=ot.tag,tt===13){if(tt=Wb(ot),tt!==null){et.blockedOn=tt,Ic(et.priority,function(){Gc(ot)});return}}else if(tt===3&&ot.stateNode.current.memoizedState.isDehydrated){et.blockedOn=ot.tag===3?ot.stateNode.containerInfo:null;return}}}et.blockedOn=null}function Xc(et){if(et.blockedOn!==null)return!1;for(var tt=et.targetContainers;0<tt.length;){var ot=Yc(et.domEventName,et.eventSystemFlags,tt[0],et.nativeEvent);if(ot===null){ot=et.nativeEvent;var dt=new ot.constructor(ot.type,ot);wb=dt,ot.target.dispatchEvent(dt),wb=null}else return tt=Cb(ot),tt!==null&&Fc(tt),et.blockedOn=ot,!1;tt.shift()}return!0}function Zc(et,tt,ot){Xc(et)&&ot.delete(tt)}function $c(){Jc=!1,Lc!==null&&Xc(Lc)&&(Lc=null),Mc!==null&&Xc(Mc)&&(Mc=null),Nc!==null&&Xc(Nc)&&(Nc=null),Oc.forEach(Zc),Pc.forEach(Zc)}function ad(et,tt){et.blockedOn===tt&&(et.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}function bd(et){function tt(ft){return ad(ft,et)}if(0<Kc.length){ad(Kc[0],et);for(var ot=1;ot<Kc.length;ot++){var dt=Kc[ot];dt.blockedOn===et&&(dt.blockedOn=null)}}for(Lc!==null&&ad(Lc,et),Mc!==null&&ad(Mc,et),Nc!==null&&ad(Nc,et),Oc.forEach(tt),Pc.forEach(tt),ot=0;ot<Qc.length;ot++)dt=Qc[ot],dt.blockedOn===et&&(dt.blockedOn=null);for(;0<Qc.length&&(ot=Qc[0],ot.blockedOn===null);)Vc(ot),ot.blockedOn===null&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;function ed(et,tt,ot,dt){var ft=C$2,pt=cd.transition;cd.transition=null;try{C$2=1,fd$3(et,tt,ot,dt)}finally{C$2=ft,cd.transition=pt}}function gd(et,tt,ot,dt){var ft=C$2,pt=cd.transition;cd.transition=null;try{C$2=4,fd$3(et,tt,ot,dt)}finally{C$2=ft,cd.transition=pt}}function fd$3(et,tt,ot,dt){if(dd){var ft=Yc(et,tt,ot,dt);if(ft===null)hd(et,tt,dt,id,ot),Sc(et,dt);else if(Uc(ft,et,tt,ot,dt))dt.stopPropagation();else if(Sc(et,dt),tt&4&&-1<Rc.indexOf(et)){for(;ft!==null;){var pt=Cb(ft);if(pt!==null&&Ec(pt),pt=Yc(et,tt,ot,dt),pt===null&&hd(et,tt,dt,id,ot),pt===ft)break;ft=pt}ft!==null&&dt.stopPropagation()}else hd(et,tt,dt,null,ot)}}var id=null;function Yc(et,tt,ot,dt){if(id=null,et=xb(dt),et=Wc(et),et!==null)if(tt=Vb(et),tt===null)et=null;else if(ot=tt.tag,ot===13){if(et=Wb(tt),et!==null)return et;et=null}else if(ot===3){if(tt.stateNode.current.memoizedState.isDehydrated)return tt.tag===3?tt.stateNode.containerInfo:null;et=null}else tt!==et&&(et=null);return id=et,null}function jd(et){switch(et){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var et,tt=ld,ot=tt.length,dt,ft="value"in kd?kd.value:kd.textContent,pt=ft.length;for(et=0;et<ot&&tt[et]===ft[et];et++);var mt=ot-et;for(dt=1;dt<=mt&&tt[ot-dt]===ft[pt-dt];dt++);return md=ft.slice(et,1<dt?1-dt:void 0)}function od(et){var tt=et.keyCode;return"charCode"in et?(et=et.charCode,et===0&&tt===13&&(et=13)):et=tt,et===10&&(et=13),32<=et||et===13?et:0}function pd(){return!0}function qd(){return!1}function rd(et){function tt(ot,dt,ft,pt,mt){this._reactName=ot,this._targetInst=ft,this.type=dt,this.nativeEvent=pt,this.target=mt,this.currentTarget=null;for(var ht in et)et.hasOwnProperty(ht)&&(ot=et[ht],this[ht]=ot?ot(pt):pt[ht]);return this.isDefaultPrevented=(pt.defaultPrevented!=null?pt.defaultPrevented:pt.returnValue===!1)?pd:qd,this.isPropagationStopped=qd,this}return A$2(tt.prototype,{preventDefault:function(){this.defaultPrevented=!0;var ot=this.nativeEvent;ot&&(ot.preventDefault?ot.preventDefault():typeof ot.returnValue!="unknown"&&(ot.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var ot=this.nativeEvent;ot&&(ot.stopPropagation?ot.stopPropagation():typeof ot.cancelBubble!="unknown"&&(ot.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd}),tt}var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(et){return et.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A$2({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A$2({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(et){return et.relatedTarget===void 0?et.fromElement===et.srcElement?et.toElement:et.fromElement:et.relatedTarget},movementX:function(et){return"movementX"in et?et.movementX:(et!==yd&&(yd&&et.type==="mousemove"?(wd=et.screenX-yd.screenX,xd=et.screenY-yd.screenY):xd=wd=0,yd=et),wd)},movementY:function(et){return"movementY"in et?et.movementY:xd}}),Bd=rd(Ad),Cd=A$2({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A$2({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A$2({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A$2({},sd,{clipboardData:function(et){return"clipboardData"in et?et.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A$2({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(et){var tt=this.nativeEvent;return tt.getModifierState?tt.getModifierState(et):(et=Od[et])?!!tt[et]:!1}function zd(){return Pd}var Qd=A$2({},ud,{key:function(et){if(et.key){var tt=Md[et.key]||et.key;if(tt!=="Unidentified")return tt}return et.type==="keypress"?(et=od(et),et===13?"Enter":String.fromCharCode(et)):et.type==="keydown"||et.type==="keyup"?Nd[et.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(et){return et.type==="keypress"?od(et):0},keyCode:function(et){return et.type==="keydown"||et.type==="keyup"?et.keyCode:0},which:function(et){return et.type==="keypress"?od(et):et.type==="keydown"||et.type==="keyup"?et.keyCode:0}}),Rd=rd(Qd),Sd=A$2({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A$2({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A$2({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A$2({},Ad,{deltaX:function(et){return"deltaX"in et?et.deltaX:"wheelDeltaX"in et?-et.wheelDeltaX:0},deltaY:function(et){return"deltaY"in et?et.deltaY:"wheelDeltaY"in et?-et.wheelDeltaY:"wheelDelta"in et?-et.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae$1=ia&&"CompositionEvent"in window,be$2=null;ia&&"documentMode"in document&&(be$2=document.documentMode);var ce$1=ia&&"TextEvent"in window&&!be$2,de$1=ia&&(!ae$1||be$2&&8<be$2&&11>=be$2),ee$2=" ",fe$2=!1;function ge$2(et,tt){switch(et){case"keyup":return $d.indexOf(tt.keyCode)!==-1;case"keydown":return tt.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function he$2(et){return et=et.detail,typeof et=="object"&&"data"in et?et.data:null}var ie$1=!1;function je$1(et,tt){switch(et){case"compositionend":return he$2(tt);case"keypress":return tt.which!==32?null:(fe$2=!0,ee$2);case"textInput":return et=tt.data,et===ee$2&&fe$2?null:et;default:return null}}function ke$1(et,tt){if(ie$1)return et==="compositionend"||!ae$1&&ge$2(et,tt)?(et=nd(),md=ld=kd=null,ie$1=!1,et):null;switch(et){case"paste":return null;case"keypress":if(!(tt.ctrlKey||tt.altKey||tt.metaKey)||tt.ctrlKey&&tt.altKey){if(tt.char&&1<tt.char.length)return tt.char;if(tt.which)return String.fromCharCode(tt.which)}return null;case"compositionend":return de$1&&tt.locale!=="ko"?null:tt.data;default:return null}}var le$2={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me$1(et){var tt=et&&et.nodeName&&et.nodeName.toLowerCase();return tt==="input"?!!le$2[et.type]:tt==="textarea"}function ne$2(et,tt,ot,dt){Eb(dt),tt=oe$2(tt,"onChange"),0<tt.length&&(ot=new td("onChange","change",null,ot,dt),et.push({event:ot,listeners:tt}))}var pe$1=null,qe$1=null;function re$2(et){se$2(et,0)}function te$1(et){var tt=ue$2(et);if(Wa(tt))return et}function ve$2(et,tt){if(et==="change")return tt}var we$1=!1;if(ia){var xe$2;if(ia){var ye$2="oninput"in document;if(!ye$2){var ze=document.createElement("div");ze.setAttribute("oninput","return;"),ye$2=typeof ze.oninput=="function"}xe$2=ye$2}else xe$2=!1;we$1=xe$2&&(!document.documentMode||9<document.documentMode)}function Ae$2(){pe$1&&(pe$1.detachEvent("onpropertychange",Be$1),qe$1=pe$1=null)}function Be$1(et){if(et.propertyName==="value"&&te$1(qe$1)){var tt=[];ne$2(tt,qe$1,et,xb(et)),Jb(re$2,tt)}}function Ce$1(et,tt,ot){et==="focusin"?(Ae$2(),pe$1=tt,qe$1=ot,pe$1.attachEvent("onpropertychange",Be$1)):et==="focusout"&&Ae$2()}function De$1(et){if(et==="selectionchange"||et==="keyup"||et==="keydown")return te$1(qe$1)}function Ee$2(et,tt){if(et==="click")return te$1(tt)}function Fe$1(et,tt){if(et==="input"||et==="change")return te$1(tt)}function Ge$1(et,tt){return et===tt&&(et!==0||1/et===1/tt)||et!==et&&tt!==tt}var He$1=typeof Object.is=="function"?Object.is:Ge$1;function Ie$2(et,tt){if(He$1(et,tt))return!0;if(typeof et!="object"||et===null||typeof tt!="object"||tt===null)return!1;var ot=Object.keys(et),dt=Object.keys(tt);if(ot.length!==dt.length)return!1;for(dt=0;dt<ot.length;dt++){var ft=ot[dt];if(!ja.call(tt,ft)||!He$1(et[ft],tt[ft]))return!1}return!0}function Je$1(et){for(;et&&et.firstChild;)et=et.firstChild;return et}function Ke$1(et,tt){var ot=Je$1(et);et=0;for(var dt;ot;){if(ot.nodeType===3){if(dt=et+ot.textContent.length,et<=tt&&dt>=tt)return{node:ot,offset:tt-et};et=dt}e:{for(;ot;){if(ot.nextSibling){ot=ot.nextSibling;break e}ot=ot.parentNode}ot=void 0}ot=Je$1(ot)}}function Le(et,tt){return et&&tt?et===tt?!0:et&&et.nodeType===3?!1:tt&&tt.nodeType===3?Le(et,tt.parentNode):"contains"in et?et.contains(tt):et.compareDocumentPosition?!!(et.compareDocumentPosition(tt)&16):!1:!1}function Me$1(){for(var et=window,tt=Xa();tt instanceof et.HTMLIFrameElement;){try{var ot=typeof tt.contentWindow.location.href=="string"}catch{ot=!1}if(ot)et=tt.contentWindow;else break;tt=Xa(et.document)}return tt}function Ne$1(et){var tt=et&&et.nodeName&&et.nodeName.toLowerCase();return tt&&(tt==="input"&&(et.type==="text"||et.type==="search"||et.type==="tel"||et.type==="url"||et.type==="password")||tt==="textarea"||et.contentEditable==="true")}function Oe$1(et){var tt=Me$1(),ot=et.focusedElem,dt=et.selectionRange;if(tt!==ot&&ot&&ot.ownerDocument&&Le(ot.ownerDocument.documentElement,ot)){if(dt!==null&&Ne$1(ot)){if(tt=dt.start,et=dt.end,et===void 0&&(et=tt),"selectionStart"in ot)ot.selectionStart=tt,ot.selectionEnd=Math.min(et,ot.value.length);else if(et=(tt=ot.ownerDocument||document)&&tt.defaultView||window,et.getSelection){et=et.getSelection();var ft=ot.textContent.length,pt=Math.min(dt.start,ft);dt=dt.end===void 0?pt:Math.min(dt.end,ft),!et.extend&&pt>dt&&(ft=dt,dt=pt,pt=ft),ft=Ke$1(ot,pt);var mt=Ke$1(ot,dt);ft&&mt&&(et.rangeCount!==1||et.anchorNode!==ft.node||et.anchorOffset!==ft.offset||et.focusNode!==mt.node||et.focusOffset!==mt.offset)&&(tt=tt.createRange(),tt.setStart(ft.node,ft.offset),et.removeAllRanges(),pt>dt?(et.addRange(tt),et.extend(mt.node,mt.offset)):(tt.setEnd(mt.node,mt.offset),et.addRange(tt)))}}for(tt=[],et=ot;et=et.parentNode;)et.nodeType===1&&tt.push({element:et,left:et.scrollLeft,top:et.scrollTop});for(typeof ot.focus=="function"&&ot.focus(),ot=0;ot<tt.length;ot++)et=tt[ot],et.element.scrollLeft=et.left,et.element.scrollTop=et.top}}var Pe$1=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re$2=null,Se$2=null,Te$2=!1;function Ue$1(et,tt,ot){var dt=ot.window===ot?ot.document:ot.nodeType===9?ot:ot.ownerDocument;Te$2||Qe==null||Qe!==Xa(dt)||(dt=Qe,"selectionStart"in dt&&Ne$1(dt)?dt={start:dt.selectionStart,end:dt.selectionEnd}:(dt=(dt.ownerDocument&&dt.ownerDocument.defaultView||window).getSelection(),dt={anchorNode:dt.anchorNode,anchorOffset:dt.anchorOffset,focusNode:dt.focusNode,focusOffset:dt.focusOffset}),Se$2&&Ie$2(Se$2,dt)||(Se$2=dt,dt=oe$2(Re$2,"onSelect"),0<dt.length&&(tt=new td("onSelect","select",null,tt,ot),et.push({event:tt,listeners:dt}),tt.target=Qe)))}function Ve$1(et,tt){var ot={};return ot[et.toLowerCase()]=tt.toLowerCase(),ot["Webkit"+et]="webkit"+tt,ot["Moz"+et]="moz"+tt,ot}var We$1={animationend:Ve$1("Animation","AnimationEnd"),animationiteration:Ve$1("Animation","AnimationIteration"),animationstart:Ve$1("Animation","AnimationStart"),transitionend:Ve$1("Transition","TransitionEnd")},Xe$1={},Ye$1={};ia&&(Ye$1=document.createElement("div").style,"AnimationEvent"in window||(delete We$1.animationend.animation,delete We$1.animationiteration.animation,delete We$1.animationstart.animation),"TransitionEvent"in window||delete We$1.transitionend.transition);function Ze$1(et){if(Xe$1[et])return Xe$1[et];if(!We$1[et])return et;var tt=We$1[et],ot;for(ot in tt)if(tt.hasOwnProperty(ot)&&ot in Ye$1)return Xe$1[et]=tt[ot];return et}var $e=Ze$1("animationend"),af=Ze$1("animationiteration"),bf=Ze$1("animationstart"),cf=Ze$1("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ff(et,tt){df.set(et,tt),fa(tt,[et])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));function nf(et,tt,ot){var dt=et.type||"unknown-event";et.currentTarget=ot,Ub(dt,tt,void 0,et),et.currentTarget=null}function se$2(et,tt){tt=(tt&4)!==0;for(var ot=0;ot<et.length;ot++){var dt=et[ot],ft=dt.event;dt=dt.listeners;e:{var pt=void 0;if(tt)for(var mt=dt.length-1;0<=mt;mt--){var ht=dt[mt],bt=ht.instance,yt=ht.currentTarget;if(ht=ht.listener,bt!==pt&&ft.isPropagationStopped())break e;nf(ft,ht,yt),pt=bt}else for(mt=0;mt<dt.length;mt++){if(ht=dt[mt],bt=ht.instance,yt=ht.currentTarget,ht=ht.listener,bt!==pt&&ft.isPropagationStopped())break e;nf(ft,ht,yt),pt=bt}}}if(Qb)throw et=Rb,Qb=!1,Rb=null,et}function D$2(et,tt){var ot=tt[of$1];ot===void 0&&(ot=tt[of$1]=new Set);var dt=et+"__bubble";ot.has(dt)||(pf(tt,et,2,!1),ot.add(dt))}function qf(et,tt,ot){var dt=0;tt&&(dt|=4),pf(ot,et,dt,tt)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(et){if(!et[rf]){et[rf]=!0,da.forEach(function(ot){ot!=="selectionchange"&&(mf.has(ot)||qf(ot,!1,et),qf(ot,!0,et))});var tt=et.nodeType===9?et:et.ownerDocument;tt===null||tt[rf]||(tt[rf]=!0,qf("selectionchange",!1,tt))}}function pf(et,tt,ot,dt){switch(jd(tt)){case 1:var ft=ed;break;case 4:ft=gd;break;default:ft=fd$3}ot=ft.bind(null,tt,ot,et),ft=void 0,!Lb||tt!=="touchstart"&&tt!=="touchmove"&&tt!=="wheel"||(ft=!0),dt?ft!==void 0?et.addEventListener(tt,ot,{capture:!0,passive:ft}):et.addEventListener(tt,ot,!0):ft!==void 0?et.addEventListener(tt,ot,{passive:ft}):et.addEventListener(tt,ot,!1)}function hd(et,tt,ot,dt,ft){var pt=dt;if(!(tt&1)&&!(tt&2)&&dt!==null)e:for(;;){if(dt===null)return;var mt=dt.tag;if(mt===3||mt===4){var ht=dt.stateNode.containerInfo;if(ht===ft||ht.nodeType===8&&ht.parentNode===ft)break;if(mt===4)for(mt=dt.return;mt!==null;){var bt=mt.tag;if((bt===3||bt===4)&&(bt=mt.stateNode.containerInfo,bt===ft||bt.nodeType===8&&bt.parentNode===ft))return;mt=mt.return}for(;ht!==null;){if(mt=Wc(ht),mt===null)return;if(bt=mt.tag,bt===5||bt===6){dt=pt=mt;continue e}ht=ht.parentNode}}dt=dt.return}Jb(function(){var yt=pt,xt=xb(ot),gt=[];e:{var wt=df.get(et);if(wt!==void 0){var Pt=td,St=et;switch(et){case"keypress":if(od(ot)===0)break e;case"keydown":case"keyup":Pt=Rd;break;case"focusin":St="focus",Pt=Fd;break;case"focusout":St="blur",Pt=Fd;break;case"beforeblur":case"afterblur":Pt=Fd;break;case"click":if(ot.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Pt=Bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Pt=Dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Pt=Vd;break;case $e:case af:case bf:Pt=Hd;break;case cf:Pt=Xd;break;case"scroll":Pt=vd;break;case"wheel":Pt=Zd;break;case"copy":case"cut":case"paste":Pt=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Pt=Td}var Et=(tt&4)!==0,Lt=!Et&&et==="scroll",It=Et?wt!==null?wt+"Capture":null:wt;Et=[];for(var kt=yt,Nt;kt!==null;){Nt=kt;var Ut=Nt.stateNode;if(Nt.tag===5&&Ut!==null&&(Nt=Ut,It!==null&&(Ut=Kb(kt,It),Ut!=null&&Et.push(tf(kt,Ut,Nt)))),Lt)break;kt=kt.return}0<Et.length&&(wt=new Pt(wt,St,null,ot,xt),gt.push({event:wt,listeners:Et}))}}if(!(tt&7)){e:{if(wt=et==="mouseover"||et==="pointerover",Pt=et==="mouseout"||et==="pointerout",wt&&ot!==wb&&(St=ot.relatedTarget||ot.fromElement)&&(Wc(St)||St[uf]))break e;if((Pt||wt)&&(wt=xt.window===xt?xt:(wt=xt.ownerDocument)?wt.defaultView||wt.parentWindow:window,Pt?(St=ot.relatedTarget||ot.toElement,Pt=yt,St=St?Wc(St):null,St!==null&&(Lt=Vb(St),St!==Lt||St.tag!==5&&St.tag!==6)&&(St=null)):(Pt=null,St=yt),Pt!==St)){if(Et=Bd,Ut="onMouseLeave",It="onMouseEnter",kt="mouse",(et==="pointerout"||et==="pointerover")&&(Et=Td,Ut="onPointerLeave",It="onPointerEnter",kt="pointer"),Lt=Pt==null?wt:ue$2(Pt),Nt=St==null?wt:ue$2(St),wt=new Et(Ut,kt+"leave",Pt,ot,xt),wt.target=Lt,wt.relatedTarget=Nt,Ut=null,Wc(xt)===yt&&(Et=new Et(It,kt+"enter",St,ot,xt),Et.target=Nt,Et.relatedTarget=Lt,Ut=Et),Lt=Ut,Pt&&St)t:{for(Et=Pt,It=St,kt=0,Nt=Et;Nt;Nt=vf(Nt))kt++;for(Nt=0,Ut=It;Ut;Ut=vf(Ut))Nt++;for(;0<kt-Nt;)Et=vf(Et),kt--;for(;0<Nt-kt;)It=vf(It),Nt--;for(;kt--;){if(Et===It||It!==null&&Et===It.alternate)break t;Et=vf(Et),It=vf(It)}Et=null}else Et=null;Pt!==null&&wf(gt,wt,Pt,Et,!1),St!==null&&Lt!==null&&wf(gt,Lt,St,Et,!0)}}e:{if(wt=yt?ue$2(yt):window,Pt=wt.nodeName&&wt.nodeName.toLowerCase(),Pt==="select"||Pt==="input"&&wt.type==="file")var Ft=ve$2;else if(me$1(wt))if(we$1)Ft=Fe$1;else{Ft=De$1;var jt=Ce$1}else(Pt=wt.nodeName)&&Pt.toLowerCase()==="input"&&(wt.type==="checkbox"||wt.type==="radio")&&(Ft=Ee$2);if(Ft&&(Ft=Ft(et,yt))){ne$2(gt,Ft,ot,xt);break e}jt&&jt(et,wt,yt),et==="focusout"&&(jt=wt._wrapperState)&&jt.controlled&&wt.type==="number"&&cb(wt,"number",wt.value)}switch(jt=yt?ue$2(yt):window,et){case"focusin":(me$1(jt)||jt.contentEditable==="true")&&(Qe=jt,Re$2=yt,Se$2=null);break;case"focusout":Se$2=Re$2=Qe=null;break;case"mousedown":Te$2=!0;break;case"contextmenu":case"mouseup":case"dragend":Te$2=!1,Ue$1(gt,ot,xt);break;case"selectionchange":if(Pe$1)break;case"keydown":case"keyup":Ue$1(gt,ot,xt)}var Xt;if(ae$1)e:{switch(et){case"compositionstart":var Wt="onCompositionStart";break e;case"compositionend":Wt="onCompositionEnd";break e;case"compositionupdate":Wt="onCompositionUpdate";break e}Wt=void 0}else ie$1?ge$2(et,ot)&&(Wt="onCompositionEnd"):et==="keydown"&&ot.keyCode===229&&(Wt="onCompositionStart");Wt&&(de$1&&ot.locale!=="ko"&&(ie$1||Wt!=="onCompositionStart"?Wt==="onCompositionEnd"&&ie$1&&(Xt=nd()):(kd=xt,ld="value"in kd?kd.value:kd.textContent,ie$1=!0)),jt=oe$2(yt,Wt),0<jt.length&&(Wt=new Ld(Wt,et,null,ot,xt),gt.push({event:Wt,listeners:jt}),Xt?Wt.data=Xt:(Xt=he$2(ot),Xt!==null&&(Wt.data=Xt)))),(Xt=ce$1?je$1(et,ot):ke$1(et,ot))&&(yt=oe$2(yt,"onBeforeInput"),0<yt.length&&(xt=new Ld("onBeforeInput","beforeinput",null,ot,xt),gt.push({event:xt,listeners:yt}),xt.data=Xt))}se$2(gt,tt)})}function tf(et,tt,ot){return{instance:et,listener:tt,currentTarget:ot}}function oe$2(et,tt){for(var ot=tt+"Capture",dt=[];et!==null;){var ft=et,pt=ft.stateNode;ft.tag===5&&pt!==null&&(ft=pt,pt=Kb(et,ot),pt!=null&&dt.unshift(tf(et,pt,ft)),pt=Kb(et,tt),pt!=null&&dt.push(tf(et,pt,ft))),et=et.return}return dt}function vf(et){if(et===null)return null;do et=et.return;while(et&&et.tag!==5);return et||null}function wf(et,tt,ot,dt,ft){for(var pt=tt._reactName,mt=[];ot!==null&&ot!==dt;){var ht=ot,bt=ht.alternate,yt=ht.stateNode;if(bt!==null&&bt===dt)break;ht.tag===5&&yt!==null&&(ht=yt,ft?(bt=Kb(ot,pt),bt!=null&&mt.unshift(tf(ot,bt,ht))):ft||(bt=Kb(ot,pt),bt!=null&&mt.push(tf(ot,bt,ht)))),ot=ot.return}mt.length!==0&&et.push({event:tt,listeners:mt})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(et){return(typeof et=="string"?et:""+et).replace(xf,`
`).replace(yf,"")}function Af(et,tt,ot){if(tt=zf(tt),zf(et)!==tt&&ot)throw Error(p$2(425))}function Bf(){}var Cf=null,Df=null;function Ef(et,tt){return et==="textarea"||et==="noscript"||typeof tt.children=="string"||typeof tt.children=="number"||typeof tt.dangerouslySetInnerHTML=="object"&&tt.dangerouslySetInnerHTML!==null&&tt.dangerouslySetInnerHTML.__html!=null}var Ff=typeof setTimeout=="function"?setTimeout:void 0,Gf=typeof clearTimeout=="function"?clearTimeout:void 0,Hf=typeof Promise=="function"?Promise:void 0,Jf=typeof queueMicrotask=="function"?queueMicrotask:typeof Hf<"u"?function(et){return Hf.resolve(null).then(et).catch(If)}:Ff;function If(et){setTimeout(function(){throw et})}function Kf(et,tt){var ot=tt,dt=0;do{var ft=ot.nextSibling;if(et.removeChild(ot),ft&&ft.nodeType===8)if(ot=ft.data,ot==="/$"){if(dt===0){et.removeChild(ft),bd(tt);return}dt--}else ot!=="$"&&ot!=="$?"&&ot!=="$!"||dt++;ot=ft}while(ot);bd(tt)}function Lf(et){for(;et!=null;et=et.nextSibling){var tt=et.nodeType;if(tt===1||tt===3)break;if(tt===8){if(tt=et.data,tt==="$"||tt==="$!"||tt==="$?")break;if(tt==="/$")return null}}return et}function Mf(et){et=et.previousSibling;for(var tt=0;et;){if(et.nodeType===8){var ot=et.data;if(ot==="$"||ot==="$!"||ot==="$?"){if(tt===0)return et;tt--}else ot==="/$"&&tt++}et=et.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of$1="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;function Wc(et){var tt=et[Of];if(tt)return tt;for(var ot=et.parentNode;ot;){if(tt=ot[uf]||ot[Of]){if(ot=tt.alternate,tt.child!==null||ot!==null&&ot.child!==null)for(et=Mf(et);et!==null;){if(ot=et[Of])return ot;et=Mf(et)}return tt}et=ot,ot=et.parentNode}return null}function Cb(et){return et=et[Of]||et[uf],!et||et.tag!==5&&et.tag!==6&&et.tag!==13&&et.tag!==3?null:et}function ue$2(et){if(et.tag===5||et.tag===6)return et.stateNode;throw Error(p$2(33))}function Db(et){return et[Pf]||null}var Sf=[],Tf=-1;function Uf(et){return{current:et}}function E(et){0>Tf||(et.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G$2(et,tt){Tf++,Sf[Tf]=et.current,et.current=tt}var Vf={},H$2=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(et,tt){var ot=et.type.contextTypes;if(!ot)return Vf;var dt=et.stateNode;if(dt&&dt.__reactInternalMemoizedUnmaskedChildContext===tt)return dt.__reactInternalMemoizedMaskedChildContext;var ft={},pt;for(pt in ot)ft[pt]=tt[pt];return dt&&(et=et.stateNode,et.__reactInternalMemoizedUnmaskedChildContext=tt,et.__reactInternalMemoizedMaskedChildContext=ft),ft}function Zf(et){return et=et.childContextTypes,et!=null}function $f(){E(Wf),E(H$2)}function ag(et,tt,ot){if(H$2.current!==Vf)throw Error(p$2(168));G$2(H$2,tt),G$2(Wf,ot)}function bg(et,tt,ot){var dt=et.stateNode;if(tt=tt.childContextTypes,typeof dt.getChildContext!="function")return ot;dt=dt.getChildContext();for(var ft in dt)if(!(ft in tt))throw Error(p$2(108,Ra(et)||"Unknown",ft));return A$2({},ot,dt)}function cg(et){return et=(et=et.stateNode)&&et.__reactInternalMemoizedMergedChildContext||Vf,Xf=H$2.current,G$2(H$2,et),G$2(Wf,Wf.current),!0}function dg(et,tt,ot){var dt=et.stateNode;if(!dt)throw Error(p$2(169));ot?(et=bg(et,tt,Xf),dt.__reactInternalMemoizedMergedChildContext=et,E(Wf),E(H$2),G$2(H$2,et)):E(Wf),G$2(Wf,ot)}var eg=null,fg=!1,gg=!1;function hg(et){eg===null?eg=[et]:eg.push(et)}function ig(et){fg=!0,hg(et)}function jg(){if(!gg&&eg!==null){gg=!0;var et=0,tt=C$2;try{var ot=eg;for(C$2=1;et<ot.length;et++){var dt=ot[et];do dt=dt(!0);while(dt!==null)}eg=null,fg=!1}catch(ft){throw eg!==null&&(eg=eg.slice(et+1)),ac(fc,jg),ft}finally{C$2=tt,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(et,tt){kg[lg++]=ng,kg[lg++]=mg,mg=et,ng=tt}function ug(et,tt,ot){og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,qg=et;var dt=rg;et=sg;var ft=32-oc(dt)-1;dt&=~(1<<ft),ot+=1;var pt=32-oc(tt)+ft;if(30<pt){var mt=ft-ft%5;pt=(dt&(1<<mt)-1).toString(32),dt>>=mt,ft-=mt,rg=1<<32-oc(tt)+ft|ot<<ft|dt,sg=pt+et}else rg=1<<pt|ot<<ft|dt,sg=et}function vg(et){et.return!==null&&(tg(et,1),ug(et,1,0))}function wg(et){for(;et===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;et===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I$2=!1,zg=null;function Ag(et,tt){var ot=Bg(5,null,null,0);ot.elementType="DELETED",ot.stateNode=tt,ot.return=et,tt=et.deletions,tt===null?(et.deletions=[ot],et.flags|=16):tt.push(ot)}function Cg(et,tt){switch(et.tag){case 5:var ot=et.type;return tt=tt.nodeType!==1||ot.toLowerCase()!==tt.nodeName.toLowerCase()?null:tt,tt!==null?(et.stateNode=tt,xg=et,yg=Lf(tt.firstChild),!0):!1;case 6:return tt=et.pendingProps===""||tt.nodeType!==3?null:tt,tt!==null?(et.stateNode=tt,xg=et,yg=null,!0):!1;case 13:return tt=tt.nodeType!==8?null:tt,tt!==null?(ot=qg!==null?{id:rg,overflow:sg}:null,et.memoizedState={dehydrated:tt,treeContext:ot,retryLane:1073741824},ot=Bg(18,null,null,0),ot.stateNode=tt,ot.return=et,et.child=ot,xg=et,yg=null,!0):!1;default:return!1}}function Dg(et){return(et.mode&1)!==0&&(et.flags&128)===0}function Eg(et){if(I$2){var tt=yg;if(tt){var ot=tt;if(!Cg(et,tt)){if(Dg(et))throw Error(p$2(418));tt=Lf(ot.nextSibling);var dt=xg;tt&&Cg(et,tt)?Ag(dt,ot):(et.flags=et.flags&-4097|2,I$2=!1,xg=et)}}else{if(Dg(et))throw Error(p$2(418));et.flags=et.flags&-4097|2,I$2=!1,xg=et}}}function Fg(et){for(et=et.return;et!==null&&et.tag!==5&&et.tag!==3&&et.tag!==13;)et=et.return;xg=et}function Gg(et){if(et!==xg)return!1;if(!I$2)return Fg(et),I$2=!0,!1;var tt;if((tt=et.tag!==3)&&!(tt=et.tag!==5)&&(tt=et.type,tt=tt!=="head"&&tt!=="body"&&!Ef(et.type,et.memoizedProps)),tt&&(tt=yg)){if(Dg(et))throw Hg(),Error(p$2(418));for(;tt;)Ag(et,tt),tt=Lf(tt.nextSibling)}if(Fg(et),et.tag===13){if(et=et.memoizedState,et=et!==null?et.dehydrated:null,!et)throw Error(p$2(317));e:{for(et=et.nextSibling,tt=0;et;){if(et.nodeType===8){var ot=et.data;if(ot==="/$"){if(tt===0){yg=Lf(et.nextSibling);break e}tt--}else ot!=="$"&&ot!=="$!"&&ot!=="$?"||tt++}et=et.nextSibling}yg=null}}else yg=xg?Lf(et.stateNode.nextSibling):null;return!0}function Hg(){for(var et=yg;et;)et=Lf(et.nextSibling)}function Ig(){yg=xg=null,I$2=!1}function Jg(et){zg===null?zg=[et]:zg.push(et)}var Kg=ua.ReactCurrentBatchConfig;function Lg(et,tt,ot){if(et=ot.ref,et!==null&&typeof et!="function"&&typeof et!="object"){if(ot._owner){if(ot=ot._owner,ot){if(ot.tag!==1)throw Error(p$2(309));var dt=ot.stateNode}if(!dt)throw Error(p$2(147,et));var ft=dt,pt=""+et;return tt!==null&&tt.ref!==null&&typeof tt.ref=="function"&&tt.ref._stringRef===pt?tt.ref:(tt=function(mt){var ht=ft.refs;mt===null?delete ht[pt]:ht[pt]=mt},tt._stringRef=pt,tt)}if(typeof et!="string")throw Error(p$2(284));if(!ot._owner)throw Error(p$2(290,et))}return et}function Mg(et,tt){throw et=Object.prototype.toString.call(tt),Error(p$2(31,et==="[object Object]"?"object with keys {"+Object.keys(tt).join(", ")+"}":et))}function Ng(et){var tt=et._init;return tt(et._payload)}function Og(et){function tt(It,kt){if(et){var Nt=It.deletions;Nt===null?(It.deletions=[kt],It.flags|=16):Nt.push(kt)}}function ot(It,kt){if(!et)return null;for(;kt!==null;)tt(It,kt),kt=kt.sibling;return null}function dt(It,kt){for(It=new Map;kt!==null;)kt.key!==null?It.set(kt.key,kt):It.set(kt.index,kt),kt=kt.sibling;return It}function ft(It,kt){return It=Pg(It,kt),It.index=0,It.sibling=null,It}function pt(It,kt,Nt){return It.index=Nt,et?(Nt=It.alternate,Nt!==null?(Nt=Nt.index,Nt<kt?(It.flags|=2,kt):Nt):(It.flags|=2,kt)):(It.flags|=1048576,kt)}function mt(It){return et&&It.alternate===null&&(It.flags|=2),It}function ht(It,kt,Nt,Ut){return kt===null||kt.tag!==6?(kt=Qg(Nt,It.mode,Ut),kt.return=It,kt):(kt=ft(kt,Nt),kt.return=It,kt)}function bt(It,kt,Nt,Ut){var Ft=Nt.type;return Ft===ya?xt(It,kt,Nt.props.children,Ut,Nt.key):kt!==null&&(kt.elementType===Ft||typeof Ft=="object"&&Ft!==null&&Ft.$$typeof===Ha&&Ng(Ft)===kt.type)?(Ut=ft(kt,Nt.props),Ut.ref=Lg(It,kt,Nt),Ut.return=It,Ut):(Ut=Rg(Nt.type,Nt.key,Nt.props,null,It.mode,Ut),Ut.ref=Lg(It,kt,Nt),Ut.return=It,Ut)}function yt(It,kt,Nt,Ut){return kt===null||kt.tag!==4||kt.stateNode.containerInfo!==Nt.containerInfo||kt.stateNode.implementation!==Nt.implementation?(kt=Sg(Nt,It.mode,Ut),kt.return=It,kt):(kt=ft(kt,Nt.children||[]),kt.return=It,kt)}function xt(It,kt,Nt,Ut,Ft){return kt===null||kt.tag!==7?(kt=Tg(Nt,It.mode,Ut,Ft),kt.return=It,kt):(kt=ft(kt,Nt),kt.return=It,kt)}function gt(It,kt,Nt){if(typeof kt=="string"&&kt!==""||typeof kt=="number")return kt=Qg(""+kt,It.mode,Nt),kt.return=It,kt;if(typeof kt=="object"&&kt!==null){switch(kt.$$typeof){case va:return Nt=Rg(kt.type,kt.key,kt.props,null,It.mode,Nt),Nt.ref=Lg(It,null,kt),Nt.return=It,Nt;case wa:return kt=Sg(kt,It.mode,Nt),kt.return=It,kt;case Ha:var Ut=kt._init;return gt(It,Ut(kt._payload),Nt)}if(eb(kt)||Ka(kt))return kt=Tg(kt,It.mode,Nt,null),kt.return=It,kt;Mg(It,kt)}return null}function wt(It,kt,Nt,Ut){var Ft=kt!==null?kt.key:null;if(typeof Nt=="string"&&Nt!==""||typeof Nt=="number")return Ft!==null?null:ht(It,kt,""+Nt,Ut);if(typeof Nt=="object"&&Nt!==null){switch(Nt.$$typeof){case va:return Nt.key===Ft?bt(It,kt,Nt,Ut):null;case wa:return Nt.key===Ft?yt(It,kt,Nt,Ut):null;case Ha:return Ft=Nt._init,wt(It,kt,Ft(Nt._payload),Ut)}if(eb(Nt)||Ka(Nt))return Ft!==null?null:xt(It,kt,Nt,Ut,null);Mg(It,Nt)}return null}function Pt(It,kt,Nt,Ut,Ft){if(typeof Ut=="string"&&Ut!==""||typeof Ut=="number")return It=It.get(Nt)||null,ht(kt,It,""+Ut,Ft);if(typeof Ut=="object"&&Ut!==null){switch(Ut.$$typeof){case va:return It=It.get(Ut.key===null?Nt:Ut.key)||null,bt(kt,It,Ut,Ft);case wa:return It=It.get(Ut.key===null?Nt:Ut.key)||null,yt(kt,It,Ut,Ft);case Ha:var jt=Ut._init;return Pt(It,kt,Nt,jt(Ut._payload),Ft)}if(eb(Ut)||Ka(Ut))return It=It.get(Nt)||null,xt(kt,It,Ut,Ft,null);Mg(kt,Ut)}return null}function St(It,kt,Nt,Ut){for(var Ft=null,jt=null,Xt=kt,Wt=kt=0,qt=null;Xt!==null&&Wt<Nt.length;Wt++){Xt.index>Wt?(qt=Xt,Xt=null):qt=Xt.sibling;var Zt=wt(It,Xt,Nt[Wt],Ut);if(Zt===null){Xt===null&&(Xt=qt);break}et&&Xt&&Zt.alternate===null&&tt(It,Xt),kt=pt(Zt,kt,Wt),jt===null?Ft=Zt:jt.sibling=Zt,jt=Zt,Xt=qt}if(Wt===Nt.length)return ot(It,Xt),I$2&&tg(It,Wt),Ft;if(Xt===null){for(;Wt<Nt.length;Wt++)Xt=gt(It,Nt[Wt],Ut),Xt!==null&&(kt=pt(Xt,kt,Wt),jt===null?Ft=Xt:jt.sibling=Xt,jt=Xt);return I$2&&tg(It,Wt),Ft}for(Xt=dt(It,Xt);Wt<Nt.length;Wt++)qt=Pt(Xt,It,Wt,Nt[Wt],Ut),qt!==null&&(et&&qt.alternate!==null&&Xt.delete(qt.key===null?Wt:qt.key),kt=pt(qt,kt,Wt),jt===null?Ft=qt:jt.sibling=qt,jt=qt);return et&&Xt.forEach(function(Gt){return tt(It,Gt)}),I$2&&tg(It,Wt),Ft}function Et(It,kt,Nt,Ut){var Ft=Ka(Nt);if(typeof Ft!="function")throw Error(p$2(150));if(Nt=Ft.call(Nt),Nt==null)throw Error(p$2(151));for(var jt=Ft=null,Xt=kt,Wt=kt=0,qt=null,Zt=Nt.next();Xt!==null&&!Zt.done;Wt++,Zt=Nt.next()){Xt.index>Wt?(qt=Xt,Xt=null):qt=Xt.sibling;var Gt=wt(It,Xt,Zt.value,Ut);if(Gt===null){Xt===null&&(Xt=qt);break}et&&Xt&&Gt.alternate===null&&tt(It,Xt),kt=pt(Gt,kt,Wt),jt===null?Ft=Gt:jt.sibling=Gt,jt=Gt,Xt=qt}if(Zt.done)return ot(It,Xt),I$2&&tg(It,Wt),Ft;if(Xt===null){for(;!Zt.done;Wt++,Zt=Nt.next())Zt=gt(It,Zt.value,Ut),Zt!==null&&(kt=pt(Zt,kt,Wt),jt===null?Ft=Zt:jt.sibling=Zt,jt=Zt);return I$2&&tg(It,Wt),Ft}for(Xt=dt(It,Xt);!Zt.done;Wt++,Zt=Nt.next())Zt=Pt(Xt,It,Wt,Zt.value,Ut),Zt!==null&&(et&&Zt.alternate!==null&&Xt.delete(Zt.key===null?Wt:Zt.key),kt=pt(Zt,kt,Wt),jt===null?Ft=Zt:jt.sibling=Zt,jt=Zt);return et&&Xt.forEach(function(Qt){return tt(It,Qt)}),I$2&&tg(It,Wt),Ft}function Lt(It,kt,Nt,Ut){if(typeof Nt=="object"&&Nt!==null&&Nt.type===ya&&Nt.key===null&&(Nt=Nt.props.children),typeof Nt=="object"&&Nt!==null){switch(Nt.$$typeof){case va:e:{for(var Ft=Nt.key,jt=kt;jt!==null;){if(jt.key===Ft){if(Ft=Nt.type,Ft===ya){if(jt.tag===7){ot(It,jt.sibling),kt=ft(jt,Nt.props.children),kt.return=It,It=kt;break e}}else if(jt.elementType===Ft||typeof Ft=="object"&&Ft!==null&&Ft.$$typeof===Ha&&Ng(Ft)===jt.type){ot(It,jt.sibling),kt=ft(jt,Nt.props),kt.ref=Lg(It,jt,Nt),kt.return=It,It=kt;break e}ot(It,jt);break}else tt(It,jt);jt=jt.sibling}Nt.type===ya?(kt=Tg(Nt.props.children,It.mode,Ut,Nt.key),kt.return=It,It=kt):(Ut=Rg(Nt.type,Nt.key,Nt.props,null,It.mode,Ut),Ut.ref=Lg(It,kt,Nt),Ut.return=It,It=Ut)}return mt(It);case wa:e:{for(jt=Nt.key;kt!==null;){if(kt.key===jt)if(kt.tag===4&&kt.stateNode.containerInfo===Nt.containerInfo&&kt.stateNode.implementation===Nt.implementation){ot(It,kt.sibling),kt=ft(kt,Nt.children||[]),kt.return=It,It=kt;break e}else{ot(It,kt);break}else tt(It,kt);kt=kt.sibling}kt=Sg(Nt,It.mode,Ut),kt.return=It,It=kt}return mt(It);case Ha:return jt=Nt._init,Lt(It,kt,jt(Nt._payload),Ut)}if(eb(Nt))return St(It,kt,Nt,Ut);if(Ka(Nt))return Et(It,kt,Nt,Ut);Mg(It,Nt)}return typeof Nt=="string"&&Nt!==""||typeof Nt=="number"?(Nt=""+Nt,kt!==null&&kt.tag===6?(ot(It,kt.sibling),kt=ft(kt,Nt),kt.return=It,It=kt):(ot(It,kt),kt=Qg(Nt,It.mode,Ut),kt.return=It,It=kt),mt(It)):ot(It,kt)}return Lt}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(et){var tt=Wg.current;E(Wg),et._currentValue=tt}function bh(et,tt,ot){for(;et!==null;){var dt=et.alternate;if((et.childLanes&tt)!==tt?(et.childLanes|=tt,dt!==null&&(dt.childLanes|=tt)):dt!==null&&(dt.childLanes&tt)!==tt&&(dt.childLanes|=tt),et===ot)break;et=et.return}}function ch(et,tt){Xg=et,Zg=Yg=null,et=et.dependencies,et!==null&&et.firstContext!==null&&(et.lanes&tt&&(dh=!0),et.firstContext=null)}function eh(et){var tt=et._currentValue;if(Zg!==et)if(et={context:et,memoizedValue:tt,next:null},Yg===null){if(Xg===null)throw Error(p$2(308));Yg=et,Xg.dependencies={lanes:0,firstContext:et}}else Yg=Yg.next=et;return tt}var fh=null;function gh(et){fh===null?fh=[et]:fh.push(et)}function hh(et,tt,ot,dt){var ft=tt.interleaved;return ft===null?(ot.next=ot,gh(tt)):(ot.next=ft.next,ft.next=ot),tt.interleaved=ot,ih(et,dt)}function ih(et,tt){et.lanes|=tt;var ot=et.alternate;for(ot!==null&&(ot.lanes|=tt),ot=et,et=et.return;et!==null;)et.childLanes|=tt,ot=et.alternate,ot!==null&&(ot.childLanes|=tt),ot=et,et=et.return;return ot.tag===3?ot.stateNode:null}var jh=!1;function kh(et){et.updateQueue={baseState:et.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function lh(et,tt){et=et.updateQueue,tt.updateQueue===et&&(tt.updateQueue={baseState:et.baseState,firstBaseUpdate:et.firstBaseUpdate,lastBaseUpdate:et.lastBaseUpdate,shared:et.shared,effects:et.effects})}function mh(et,tt){return{eventTime:et,lane:tt,tag:0,payload:null,callback:null,next:null}}function nh(et,tt,ot){var dt=et.updateQueue;if(dt===null)return null;if(dt=dt.shared,K$1&2){var ft=dt.pending;return ft===null?tt.next=tt:(tt.next=ft.next,ft.next=tt),dt.pending=tt,ih(et,ot)}return ft=dt.interleaved,ft===null?(tt.next=tt,gh(dt)):(tt.next=ft.next,ft.next=tt),dt.interleaved=tt,ih(et,ot)}function oh(et,tt,ot){if(tt=tt.updateQueue,tt!==null&&(tt=tt.shared,(ot&4194240)!==0)){var dt=tt.lanes;dt&=et.pendingLanes,ot|=dt,tt.lanes=ot,Cc(et,ot)}}function ph(et,tt){var ot=et.updateQueue,dt=et.alternate;if(dt!==null&&(dt=dt.updateQueue,ot===dt)){var ft=null,pt=null;if(ot=ot.firstBaseUpdate,ot!==null){do{var mt={eventTime:ot.eventTime,lane:ot.lane,tag:ot.tag,payload:ot.payload,callback:ot.callback,next:null};pt===null?ft=pt=mt:pt=pt.next=mt,ot=ot.next}while(ot!==null);pt===null?ft=pt=tt:pt=pt.next=tt}else ft=pt=tt;ot={baseState:dt.baseState,firstBaseUpdate:ft,lastBaseUpdate:pt,shared:dt.shared,effects:dt.effects},et.updateQueue=ot;return}et=ot.lastBaseUpdate,et===null?ot.firstBaseUpdate=tt:et.next=tt,ot.lastBaseUpdate=tt}function qh(et,tt,ot,dt){var ft=et.updateQueue;jh=!1;var pt=ft.firstBaseUpdate,mt=ft.lastBaseUpdate,ht=ft.shared.pending;if(ht!==null){ft.shared.pending=null;var bt=ht,yt=bt.next;bt.next=null,mt===null?pt=yt:mt.next=yt,mt=bt;var xt=et.alternate;xt!==null&&(xt=xt.updateQueue,ht=xt.lastBaseUpdate,ht!==mt&&(ht===null?xt.firstBaseUpdate=yt:ht.next=yt,xt.lastBaseUpdate=bt))}if(pt!==null){var gt=ft.baseState;mt=0,xt=yt=bt=null,ht=pt;do{var wt=ht.lane,Pt=ht.eventTime;if((dt&wt)===wt){xt!==null&&(xt=xt.next={eventTime:Pt,lane:0,tag:ht.tag,payload:ht.payload,callback:ht.callback,next:null});e:{var St=et,Et=ht;switch(wt=tt,Pt=ot,Et.tag){case 1:if(St=Et.payload,typeof St=="function"){gt=St.call(Pt,gt,wt);break e}gt=St;break e;case 3:St.flags=St.flags&-65537|128;case 0:if(St=Et.payload,wt=typeof St=="function"?St.call(Pt,gt,wt):St,wt==null)break e;gt=A$2({},gt,wt);break e;case 2:jh=!0}}ht.callback!==null&&ht.lane!==0&&(et.flags|=64,wt=ft.effects,wt===null?ft.effects=[ht]:wt.push(ht))}else Pt={eventTime:Pt,lane:wt,tag:ht.tag,payload:ht.payload,callback:ht.callback,next:null},xt===null?(yt=xt=Pt,bt=gt):xt=xt.next=Pt,mt|=wt;if(ht=ht.next,ht===null){if(ht=ft.shared.pending,ht===null)break;wt=ht,ht=wt.next,wt.next=null,ft.lastBaseUpdate=wt,ft.shared.pending=null}}while(!0);if(xt===null&&(bt=gt),ft.baseState=bt,ft.firstBaseUpdate=yt,ft.lastBaseUpdate=xt,tt=ft.shared.interleaved,tt!==null){ft=tt;do mt|=ft.lane,ft=ft.next;while(ft!==tt)}else pt===null&&(ft.shared.lanes=0);rh|=mt,et.lanes=mt,et.memoizedState=gt}}function sh(et,tt,ot){if(et=tt.effects,tt.effects=null,et!==null)for(tt=0;tt<et.length;tt++){var dt=et[tt],ft=dt.callback;if(ft!==null){if(dt.callback=null,dt=ot,typeof ft!="function")throw Error(p$2(191,ft));ft.call(dt)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(et){if(et===th)throw Error(p$2(174));return et}function yh(et,tt){switch(G$2(wh,tt),G$2(vh,et),G$2(uh,th),et=tt.nodeType,et){case 9:case 11:tt=(tt=tt.documentElement)?tt.namespaceURI:lb(null,"");break;default:et=et===8?tt.parentNode:tt,tt=et.namespaceURI||null,et=et.tagName,tt=lb(tt,et)}E(uh),G$2(uh,tt)}function zh(){E(uh),E(vh),E(wh)}function Ah(et){xh(wh.current);var tt=xh(uh.current),ot=lb(tt,et.type);tt!==ot&&(G$2(vh,et),G$2(uh,ot))}function Bh(et){vh.current===et&&(E(uh),E(vh))}var L$1=Uf(0);function Ch(et){for(var tt=et;tt!==null;){if(tt.tag===13){var ot=tt.memoizedState;if(ot!==null&&(ot=ot.dehydrated,ot===null||ot.data==="$?"||ot.data==="$!"))return tt}else if(tt.tag===19&&tt.memoizedProps.revealOrder!==void 0){if(tt.flags&128)return tt}else if(tt.child!==null){tt.child.return=tt,tt=tt.child;continue}if(tt===et)break;for(;tt.sibling===null;){if(tt.return===null||tt.return===et)return null;tt=tt.return}tt.sibling.return=tt.return,tt=tt.sibling}return null}var Dh=[];function Eh(){for(var et=0;et<Dh.length;et++)Dh[et]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M$3=null,N$2=null,O$2=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P$1(){throw Error(p$2(321))}function Mh(et,tt){if(tt===null)return!1;for(var ot=0;ot<tt.length&&ot<et.length;ot++)if(!He$1(et[ot],tt[ot]))return!1;return!0}function Nh(et,tt,ot,dt,ft,pt){if(Hh=pt,M$3=tt,tt.memoizedState=null,tt.updateQueue=null,tt.lanes=0,Fh.current=et===null||et.memoizedState===null?Oh:Ph,et=ot(dt,ft),Jh){pt=0;do{if(Jh=!1,Kh=0,25<=pt)throw Error(p$2(301));pt+=1,O$2=N$2=null,tt.updateQueue=null,Fh.current=Qh,et=ot(dt,ft)}while(Jh)}if(Fh.current=Rh,tt=N$2!==null&&N$2.next!==null,Hh=0,O$2=N$2=M$3=null,Ih=!1,tt)throw Error(p$2(300));return et}function Sh(){var et=Kh!==0;return Kh=0,et}function Th(){var et={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return O$2===null?M$3.memoizedState=O$2=et:O$2=O$2.next=et,O$2}function Uh(){if(N$2===null){var et=M$3.alternate;et=et!==null?et.memoizedState:null}else et=N$2.next;var tt=O$2===null?M$3.memoizedState:O$2.next;if(tt!==null)O$2=tt,N$2=et;else{if(et===null)throw Error(p$2(310));N$2=et,et={memoizedState:N$2.memoizedState,baseState:N$2.baseState,baseQueue:N$2.baseQueue,queue:N$2.queue,next:null},O$2===null?M$3.memoizedState=O$2=et:O$2=O$2.next=et}return O$2}function Vh(et,tt){return typeof tt=="function"?tt(et):tt}function Wh(et){var tt=Uh(),ot=tt.queue;if(ot===null)throw Error(p$2(311));ot.lastRenderedReducer=et;var dt=N$2,ft=dt.baseQueue,pt=ot.pending;if(pt!==null){if(ft!==null){var mt=ft.next;ft.next=pt.next,pt.next=mt}dt.baseQueue=ft=pt,ot.pending=null}if(ft!==null){pt=ft.next,dt=dt.baseState;var ht=mt=null,bt=null,yt=pt;do{var xt=yt.lane;if((Hh&xt)===xt)bt!==null&&(bt=bt.next={lane:0,action:yt.action,hasEagerState:yt.hasEagerState,eagerState:yt.eagerState,next:null}),dt=yt.hasEagerState?yt.eagerState:et(dt,yt.action);else{var gt={lane:xt,action:yt.action,hasEagerState:yt.hasEagerState,eagerState:yt.eagerState,next:null};bt===null?(ht=bt=gt,mt=dt):bt=bt.next=gt,M$3.lanes|=xt,rh|=xt}yt=yt.next}while(yt!==null&&yt!==pt);bt===null?mt=dt:bt.next=ht,He$1(dt,tt.memoizedState)||(dh=!0),tt.memoizedState=dt,tt.baseState=mt,tt.baseQueue=bt,ot.lastRenderedState=dt}if(et=ot.interleaved,et!==null){ft=et;do pt=ft.lane,M$3.lanes|=pt,rh|=pt,ft=ft.next;while(ft!==et)}else ft===null&&(ot.lanes=0);return[tt.memoizedState,ot.dispatch]}function Xh(et){var tt=Uh(),ot=tt.queue;if(ot===null)throw Error(p$2(311));ot.lastRenderedReducer=et;var dt=ot.dispatch,ft=ot.pending,pt=tt.memoizedState;if(ft!==null){ot.pending=null;var mt=ft=ft.next;do pt=et(pt,mt.action),mt=mt.next;while(mt!==ft);He$1(pt,tt.memoizedState)||(dh=!0),tt.memoizedState=pt,tt.baseQueue===null&&(tt.baseState=pt),ot.lastRenderedState=pt}return[pt,dt]}function Yh(){}function Zh(et,tt){var ot=M$3,dt=Uh(),ft=tt(),pt=!He$1(dt.memoizedState,ft);if(pt&&(dt.memoizedState=ft,dh=!0),dt=dt.queue,$h(ai.bind(null,ot,dt,et),[et]),dt.getSnapshot!==tt||pt||O$2!==null&&O$2.memoizedState.tag&1){if(ot.flags|=2048,bi(9,ci.bind(null,ot,dt,ft,tt),void 0,null),Q$2===null)throw Error(p$2(349));Hh&30||di(ot,tt,ft)}return ft}function di(et,tt,ot){et.flags|=16384,et={getSnapshot:tt,value:ot},tt=M$3.updateQueue,tt===null?(tt={lastEffect:null,stores:null},M$3.updateQueue=tt,tt.stores=[et]):(ot=tt.stores,ot===null?tt.stores=[et]:ot.push(et))}function ci(et,tt,ot,dt){tt.value=ot,tt.getSnapshot=dt,ei(tt)&&fi(et)}function ai(et,tt,ot){return ot(function(){ei(tt)&&fi(et)})}function ei(et){var tt=et.getSnapshot;et=et.value;try{var ot=tt();return!He$1(et,ot)}catch{return!0}}function fi(et){var tt=ih(et,1);tt!==null&&gi(tt,et,1,-1)}function hi(et){var tt=Th();return typeof et=="function"&&(et=et()),tt.memoizedState=tt.baseState=et,et={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:et},tt.queue=et,et=et.dispatch=ii.bind(null,M$3,et),[tt.memoizedState,et]}function bi(et,tt,ot,dt){return et={tag:et,create:tt,destroy:ot,deps:dt,next:null},tt=M$3.updateQueue,tt===null?(tt={lastEffect:null,stores:null},M$3.updateQueue=tt,tt.lastEffect=et.next=et):(ot=tt.lastEffect,ot===null?tt.lastEffect=et.next=et:(dt=ot.next,ot.next=et,et.next=dt,tt.lastEffect=et)),et}function ji(){return Uh().memoizedState}function ki(et,tt,ot,dt){var ft=Th();M$3.flags|=et,ft.memoizedState=bi(1|tt,ot,void 0,dt===void 0?null:dt)}function li(et,tt,ot,dt){var ft=Uh();dt=dt===void 0?null:dt;var pt=void 0;if(N$2!==null){var mt=N$2.memoizedState;if(pt=mt.destroy,dt!==null&&Mh(dt,mt.deps)){ft.memoizedState=bi(tt,ot,pt,dt);return}}M$3.flags|=et,ft.memoizedState=bi(1|tt,ot,pt,dt)}function mi(et,tt){return ki(8390656,8,et,tt)}function $h(et,tt){return li(2048,8,et,tt)}function ni(et,tt){return li(4,2,et,tt)}function oi(et,tt){return li(4,4,et,tt)}function pi(et,tt){if(typeof tt=="function")return et=et(),tt(et),function(){tt(null)};if(tt!=null)return et=et(),tt.current=et,function(){tt.current=null}}function qi(et,tt,ot){return ot=ot!=null?ot.concat([et]):null,li(4,4,pi.bind(null,tt,et),ot)}function ri(){}function si(et,tt){var ot=Uh();tt=tt===void 0?null:tt;var dt=ot.memoizedState;return dt!==null&&tt!==null&&Mh(tt,dt[1])?dt[0]:(ot.memoizedState=[et,tt],et)}function ti(et,tt){var ot=Uh();tt=tt===void 0?null:tt;var dt=ot.memoizedState;return dt!==null&&tt!==null&&Mh(tt,dt[1])?dt[0]:(et=et(),ot.memoizedState=[et,tt],et)}function ui(et,tt,ot){return Hh&21?(He$1(ot,tt)||(ot=yc(),M$3.lanes|=ot,rh|=ot,et.baseState=!0),tt):(et.baseState&&(et.baseState=!1,dh=!0),et.memoizedState=ot)}function vi(et,tt){var ot=C$2;C$2=ot!==0&&4>ot?ot:4,et(!0);var dt=Gh.transition;Gh.transition={};try{et(!1),tt()}finally{C$2=ot,Gh.transition=dt}}function wi(){return Uh().memoizedState}function xi(et,tt,ot){var dt=yi(et);if(ot={lane:dt,action:ot,hasEagerState:!1,eagerState:null,next:null},zi(et))Ai(tt,ot);else if(ot=hh(et,tt,ot,dt),ot!==null){var ft=R$1();gi(ot,et,dt,ft),Bi(ot,tt,dt)}}function ii(et,tt,ot){var dt=yi(et),ft={lane:dt,action:ot,hasEagerState:!1,eagerState:null,next:null};if(zi(et))Ai(tt,ft);else{var pt=et.alternate;if(et.lanes===0&&(pt===null||pt.lanes===0)&&(pt=tt.lastRenderedReducer,pt!==null))try{var mt=tt.lastRenderedState,ht=pt(mt,ot);if(ft.hasEagerState=!0,ft.eagerState=ht,He$1(ht,mt)){var bt=tt.interleaved;bt===null?(ft.next=ft,gh(tt)):(ft.next=bt.next,bt.next=ft),tt.interleaved=ft;return}}catch{}finally{}ot=hh(et,tt,ft,dt),ot!==null&&(ft=R$1(),gi(ot,et,dt,ft),Bi(ot,tt,dt))}}function zi(et){var tt=et.alternate;return et===M$3||tt!==null&&tt===M$3}function Ai(et,tt){Jh=Ih=!0;var ot=et.pending;ot===null?tt.next=tt:(tt.next=ot.next,ot.next=tt),et.pending=tt}function Bi(et,tt,ot){if(ot&4194240){var dt=tt.lanes;dt&=et.pendingLanes,ot|=dt,tt.lanes=ot,Cc(et,ot)}}var Rh={readContext:eh,useCallback:P$1,useContext:P$1,useEffect:P$1,useImperativeHandle:P$1,useInsertionEffect:P$1,useLayoutEffect:P$1,useMemo:P$1,useReducer:P$1,useRef:P$1,useState:P$1,useDebugValue:P$1,useDeferredValue:P$1,useTransition:P$1,useMutableSource:P$1,useSyncExternalStore:P$1,useId:P$1,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(et,tt){return Th().memoizedState=[et,tt===void 0?null:tt],et},useContext:eh,useEffect:mi,useImperativeHandle:function(et,tt,ot){return ot=ot!=null?ot.concat([et]):null,ki(4194308,4,pi.bind(null,tt,et),ot)},useLayoutEffect:function(et,tt){return ki(4194308,4,et,tt)},useInsertionEffect:function(et,tt){return ki(4,2,et,tt)},useMemo:function(et,tt){var ot=Th();return tt=tt===void 0?null:tt,et=et(),ot.memoizedState=[et,tt],et},useReducer:function(et,tt,ot){var dt=Th();return tt=ot!==void 0?ot(tt):tt,dt.memoizedState=dt.baseState=tt,et={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:et,lastRenderedState:tt},dt.queue=et,et=et.dispatch=xi.bind(null,M$3,et),[dt.memoizedState,et]},useRef:function(et){var tt=Th();return et={current:et},tt.memoizedState=et},useState:hi,useDebugValue:ri,useDeferredValue:function(et){return Th().memoizedState=et},useTransition:function(){var et=hi(!1),tt=et[0];return et=vi.bind(null,et[1]),Th().memoizedState=et,[tt,et]},useMutableSource:function(){},useSyncExternalStore:function(et,tt,ot){var dt=M$3,ft=Th();if(I$2){if(ot===void 0)throw Error(p$2(407));ot=ot()}else{if(ot=tt(),Q$2===null)throw Error(p$2(349));Hh&30||di(dt,tt,ot)}ft.memoizedState=ot;var pt={value:ot,getSnapshot:tt};return ft.queue=pt,mi(ai.bind(null,dt,pt,et),[et]),dt.flags|=2048,bi(9,ci.bind(null,dt,pt,ot,tt),void 0,null),ot},useId:function(){var et=Th(),tt=Q$2.identifierPrefix;if(I$2){var ot=sg,dt=rg;ot=(dt&~(1<<32-oc(dt)-1)).toString(32)+ot,tt=":"+tt+"R"+ot,ot=Kh++,0<ot&&(tt+="H"+ot.toString(32)),tt+=":"}else ot=Lh++,tt=":"+tt+"r"+ot.toString(32)+":";return et.memoizedState=tt},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},useDebugValue:ri,useDeferredValue:function(et){var tt=Uh();return ui(tt,N$2.memoizedState,et)},useTransition:function(){var et=Wh(Vh)[0],tt=Uh().memoizedState;return[et,tt]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(et){var tt=Uh();return N$2===null?tt.memoizedState=et:ui(tt,N$2.memoizedState,et)},useTransition:function(){var et=Xh(Vh)[0],tt=Uh().memoizedState;return[et,tt]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(et,tt){if(et&&et.defaultProps){tt=A$2({},tt),et=et.defaultProps;for(var ot in et)tt[ot]===void 0&&(tt[ot]=et[ot]);return tt}return tt}function Di(et,tt,ot,dt){tt=et.memoizedState,ot=ot(dt,tt),ot=ot==null?tt:A$2({},tt,ot),et.memoizedState=ot,et.lanes===0&&(et.updateQueue.baseState=ot)}var Ei={isMounted:function(et){return(et=et._reactInternals)?Vb(et)===et:!1},enqueueSetState:function(et,tt,ot){et=et._reactInternals;var dt=R$1(),ft=yi(et),pt=mh(dt,ft);pt.payload=tt,ot!=null&&(pt.callback=ot),tt=nh(et,pt,ft),tt!==null&&(gi(tt,et,ft,dt),oh(tt,et,ft))},enqueueReplaceState:function(et,tt,ot){et=et._reactInternals;var dt=R$1(),ft=yi(et),pt=mh(dt,ft);pt.tag=1,pt.payload=tt,ot!=null&&(pt.callback=ot),tt=nh(et,pt,ft),tt!==null&&(gi(tt,et,ft,dt),oh(tt,et,ft))},enqueueForceUpdate:function(et,tt){et=et._reactInternals;var ot=R$1(),dt=yi(et),ft=mh(ot,dt);ft.tag=2,tt!=null&&(ft.callback=tt),tt=nh(et,ft,dt),tt!==null&&(gi(tt,et,dt,ot),oh(tt,et,dt))}};function Fi(et,tt,ot,dt,ft,pt,mt){return et=et.stateNode,typeof et.shouldComponentUpdate=="function"?et.shouldComponentUpdate(dt,pt,mt):tt.prototype&&tt.prototype.isPureReactComponent?!Ie$2(ot,dt)||!Ie$2(ft,pt):!0}function Gi(et,tt,ot){var dt=!1,ft=Vf,pt=tt.contextType;return typeof pt=="object"&&pt!==null?pt=eh(pt):(ft=Zf(tt)?Xf:H$2.current,dt=tt.contextTypes,pt=(dt=dt!=null)?Yf(et,ft):Vf),tt=new tt(ot,pt),et.memoizedState=tt.state!==null&&tt.state!==void 0?tt.state:null,tt.updater=Ei,et.stateNode=tt,tt._reactInternals=et,dt&&(et=et.stateNode,et.__reactInternalMemoizedUnmaskedChildContext=ft,et.__reactInternalMemoizedMaskedChildContext=pt),tt}function Hi(et,tt,ot,dt){et=tt.state,typeof tt.componentWillReceiveProps=="function"&&tt.componentWillReceiveProps(ot,dt),typeof tt.UNSAFE_componentWillReceiveProps=="function"&&tt.UNSAFE_componentWillReceiveProps(ot,dt),tt.state!==et&&Ei.enqueueReplaceState(tt,tt.state,null)}function Ii(et,tt,ot,dt){var ft=et.stateNode;ft.props=ot,ft.state=et.memoizedState,ft.refs={},kh(et);var pt=tt.contextType;typeof pt=="object"&&pt!==null?ft.context=eh(pt):(pt=Zf(tt)?Xf:H$2.current,ft.context=Yf(et,pt)),ft.state=et.memoizedState,pt=tt.getDerivedStateFromProps,typeof pt=="function"&&(Di(et,tt,pt,ot),ft.state=et.memoizedState),typeof tt.getDerivedStateFromProps=="function"||typeof ft.getSnapshotBeforeUpdate=="function"||typeof ft.UNSAFE_componentWillMount!="function"&&typeof ft.componentWillMount!="function"||(tt=ft.state,typeof ft.componentWillMount=="function"&&ft.componentWillMount(),typeof ft.UNSAFE_componentWillMount=="function"&&ft.UNSAFE_componentWillMount(),tt!==ft.state&&Ei.enqueueReplaceState(ft,ft.state,null),qh(et,ot,ft,dt),ft.state=et.memoizedState),typeof ft.componentDidMount=="function"&&(et.flags|=4194308)}function Ji(et,tt){try{var ot="",dt=tt;do ot+=Pa(dt),dt=dt.return;while(dt);var ft=ot}catch(pt){ft=`
Error generating stack: `+pt.message+`
`+pt.stack}return{value:et,source:tt,stack:ft,digest:null}}function Ki(et,tt,ot){return{value:et,source:null,stack:ot??null,digest:tt??null}}function Li(et,tt){try{console.error(tt.value)}catch(ot){setTimeout(function(){throw ot})}}var Mi=typeof WeakMap=="function"?WeakMap:Map;function Ni(et,tt,ot){ot=mh(-1,ot),ot.tag=3,ot.payload={element:null};var dt=tt.value;return ot.callback=function(){Oi||(Oi=!0,Pi=dt),Li(et,tt)},ot}function Qi(et,tt,ot){ot=mh(-1,ot),ot.tag=3;var dt=et.type.getDerivedStateFromError;if(typeof dt=="function"){var ft=tt.value;ot.payload=function(){return dt(ft)},ot.callback=function(){Li(et,tt)}}var pt=et.stateNode;return pt!==null&&typeof pt.componentDidCatch=="function"&&(ot.callback=function(){Li(et,tt),typeof dt!="function"&&(Ri===null?Ri=new Set([this]):Ri.add(this));var mt=tt.stack;this.componentDidCatch(tt.value,{componentStack:mt!==null?mt:""})}),ot}function Si(et,tt,ot){var dt=et.pingCache;if(dt===null){dt=et.pingCache=new Mi;var ft=new Set;dt.set(tt,ft)}else ft=dt.get(tt),ft===void 0&&(ft=new Set,dt.set(tt,ft));ft.has(ot)||(ft.add(ot),et=Ti.bind(null,et,tt,ot),tt.then(et,et))}function Ui(et){do{var tt;if((tt=et.tag===13)&&(tt=et.memoizedState,tt=tt!==null?tt.dehydrated!==null:!0),tt)return et;et=et.return}while(et!==null);return null}function Vi(et,tt,ot,dt,ft){return et.mode&1?(et.flags|=65536,et.lanes=ft,et):(et===tt?et.flags|=65536:(et.flags|=128,ot.flags|=131072,ot.flags&=-52805,ot.tag===1&&(ot.alternate===null?ot.tag=17:(tt=mh(-1,1),tt.tag=2,nh(ot,tt,1))),ot.lanes|=1),et)}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(et,tt,ot,dt){tt.child=et===null?Vg(tt,null,ot,dt):Ug(tt,et.child,ot,dt)}function Yi(et,tt,ot,dt,ft){ot=ot.render;var pt=tt.ref;return ch(tt,ft),dt=Nh(et,tt,ot,dt,pt,ft),ot=Sh(),et!==null&&!dh?(tt.updateQueue=et.updateQueue,tt.flags&=-2053,et.lanes&=~ft,Zi(et,tt,ft)):(I$2&&ot&&vg(tt),tt.flags|=1,Xi(et,tt,dt,ft),tt.child)}function $i(et,tt,ot,dt,ft){if(et===null){var pt=ot.type;return typeof pt=="function"&&!aj(pt)&&pt.defaultProps===void 0&&ot.compare===null&&ot.defaultProps===void 0?(tt.tag=15,tt.type=pt,bj(et,tt,pt,dt,ft)):(et=Rg(ot.type,null,dt,tt,tt.mode,ft),et.ref=tt.ref,et.return=tt,tt.child=et)}if(pt=et.child,!(et.lanes&ft)){var mt=pt.memoizedProps;if(ot=ot.compare,ot=ot!==null?ot:Ie$2,ot(mt,dt)&&et.ref===tt.ref)return Zi(et,tt,ft)}return tt.flags|=1,et=Pg(pt,dt),et.ref=tt.ref,et.return=tt,tt.child=et}function bj(et,tt,ot,dt,ft){if(et!==null){var pt=et.memoizedProps;if(Ie$2(pt,dt)&&et.ref===tt.ref)if(dh=!1,tt.pendingProps=dt=pt,(et.lanes&ft)!==0)et.flags&131072&&(dh=!0);else return tt.lanes=et.lanes,Zi(et,tt,ft)}return cj(et,tt,ot,dt,ft)}function dj(et,tt,ot){var dt=tt.pendingProps,ft=dt.children,pt=et!==null?et.memoizedState:null;if(dt.mode==="hidden")if(!(tt.mode&1))tt.memoizedState={baseLanes:0,cachePool:null,transitions:null},G$2(ej,fj),fj|=ot;else{if(!(ot&1073741824))return et=pt!==null?pt.baseLanes|ot:ot,tt.lanes=tt.childLanes=1073741824,tt.memoizedState={baseLanes:et,cachePool:null,transitions:null},tt.updateQueue=null,G$2(ej,fj),fj|=et,null;tt.memoizedState={baseLanes:0,cachePool:null,transitions:null},dt=pt!==null?pt.baseLanes:ot,G$2(ej,fj),fj|=dt}else pt!==null?(dt=pt.baseLanes|ot,tt.memoizedState=null):dt=ot,G$2(ej,fj),fj|=dt;return Xi(et,tt,ft,ot),tt.child}function gj(et,tt){var ot=tt.ref;(et===null&&ot!==null||et!==null&&et.ref!==ot)&&(tt.flags|=512,tt.flags|=2097152)}function cj(et,tt,ot,dt,ft){var pt=Zf(ot)?Xf:H$2.current;return pt=Yf(tt,pt),ch(tt,ft),ot=Nh(et,tt,ot,dt,pt,ft),dt=Sh(),et!==null&&!dh?(tt.updateQueue=et.updateQueue,tt.flags&=-2053,et.lanes&=~ft,Zi(et,tt,ft)):(I$2&&dt&&vg(tt),tt.flags|=1,Xi(et,tt,ot,ft),tt.child)}function hj(et,tt,ot,dt,ft){if(Zf(ot)){var pt=!0;cg(tt)}else pt=!1;if(ch(tt,ft),tt.stateNode===null)ij(et,tt),Gi(tt,ot,dt),Ii(tt,ot,dt,ft),dt=!0;else if(et===null){var mt=tt.stateNode,ht=tt.memoizedProps;mt.props=ht;var bt=mt.context,yt=ot.contextType;typeof yt=="object"&&yt!==null?yt=eh(yt):(yt=Zf(ot)?Xf:H$2.current,yt=Yf(tt,yt));var xt=ot.getDerivedStateFromProps,gt=typeof xt=="function"||typeof mt.getSnapshotBeforeUpdate=="function";gt||typeof mt.UNSAFE_componentWillReceiveProps!="function"&&typeof mt.componentWillReceiveProps!="function"||(ht!==dt||bt!==yt)&&Hi(tt,mt,dt,yt),jh=!1;var wt=tt.memoizedState;mt.state=wt,qh(tt,dt,mt,ft),bt=tt.memoizedState,ht!==dt||wt!==bt||Wf.current||jh?(typeof xt=="function"&&(Di(tt,ot,xt,dt),bt=tt.memoizedState),(ht=jh||Fi(tt,ot,ht,dt,wt,bt,yt))?(gt||typeof mt.UNSAFE_componentWillMount!="function"&&typeof mt.componentWillMount!="function"||(typeof mt.componentWillMount=="function"&&mt.componentWillMount(),typeof mt.UNSAFE_componentWillMount=="function"&&mt.UNSAFE_componentWillMount()),typeof mt.componentDidMount=="function"&&(tt.flags|=4194308)):(typeof mt.componentDidMount=="function"&&(tt.flags|=4194308),tt.memoizedProps=dt,tt.memoizedState=bt),mt.props=dt,mt.state=bt,mt.context=yt,dt=ht):(typeof mt.componentDidMount=="function"&&(tt.flags|=4194308),dt=!1)}else{mt=tt.stateNode,lh(et,tt),ht=tt.memoizedProps,yt=tt.type===tt.elementType?ht:Ci(tt.type,ht),mt.props=yt,gt=tt.pendingProps,wt=mt.context,bt=ot.contextType,typeof bt=="object"&&bt!==null?bt=eh(bt):(bt=Zf(ot)?Xf:H$2.current,bt=Yf(tt,bt));var Pt=ot.getDerivedStateFromProps;(xt=typeof Pt=="function"||typeof mt.getSnapshotBeforeUpdate=="function")||typeof mt.UNSAFE_componentWillReceiveProps!="function"&&typeof mt.componentWillReceiveProps!="function"||(ht!==gt||wt!==bt)&&Hi(tt,mt,dt,bt),jh=!1,wt=tt.memoizedState,mt.state=wt,qh(tt,dt,mt,ft);var St=tt.memoizedState;ht!==gt||wt!==St||Wf.current||jh?(typeof Pt=="function"&&(Di(tt,ot,Pt,dt),St=tt.memoizedState),(yt=jh||Fi(tt,ot,yt,dt,wt,St,bt)||!1)?(xt||typeof mt.UNSAFE_componentWillUpdate!="function"&&typeof mt.componentWillUpdate!="function"||(typeof mt.componentWillUpdate=="function"&&mt.componentWillUpdate(dt,St,bt),typeof mt.UNSAFE_componentWillUpdate=="function"&&mt.UNSAFE_componentWillUpdate(dt,St,bt)),typeof mt.componentDidUpdate=="function"&&(tt.flags|=4),typeof mt.getSnapshotBeforeUpdate=="function"&&(tt.flags|=1024)):(typeof mt.componentDidUpdate!="function"||ht===et.memoizedProps&&wt===et.memoizedState||(tt.flags|=4),typeof mt.getSnapshotBeforeUpdate!="function"||ht===et.memoizedProps&&wt===et.memoizedState||(tt.flags|=1024),tt.memoizedProps=dt,tt.memoizedState=St),mt.props=dt,mt.state=St,mt.context=bt,dt=yt):(typeof mt.componentDidUpdate!="function"||ht===et.memoizedProps&&wt===et.memoizedState||(tt.flags|=4),typeof mt.getSnapshotBeforeUpdate!="function"||ht===et.memoizedProps&&wt===et.memoizedState||(tt.flags|=1024),dt=!1)}return jj(et,tt,ot,dt,pt,ft)}function jj(et,tt,ot,dt,ft,pt){gj(et,tt);var mt=(tt.flags&128)!==0;if(!dt&&!mt)return ft&&dg(tt,ot,!1),Zi(et,tt,pt);dt=tt.stateNode,Wi.current=tt;var ht=mt&&typeof ot.getDerivedStateFromError!="function"?null:dt.render();return tt.flags|=1,et!==null&&mt?(tt.child=Ug(tt,et.child,null,pt),tt.child=Ug(tt,null,ht,pt)):Xi(et,tt,ht,pt),tt.memoizedState=dt.state,ft&&dg(tt,ot,!0),tt.child}function kj(et){var tt=et.stateNode;tt.pendingContext?ag(et,tt.pendingContext,tt.pendingContext!==tt.context):tt.context&&ag(et,tt.context,!1),yh(et,tt.containerInfo)}function lj(et,tt,ot,dt,ft){return Ig(),Jg(ft),tt.flags|=256,Xi(et,tt,ot,dt),tt.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(et){return{baseLanes:et,cachePool:null,transitions:null}}function oj(et,tt,ot){var dt=tt.pendingProps,ft=L$1.current,pt=!1,mt=(tt.flags&128)!==0,ht;if((ht=mt)||(ht=et!==null&&et.memoizedState===null?!1:(ft&2)!==0),ht?(pt=!0,tt.flags&=-129):(et===null||et.memoizedState!==null)&&(ft|=1),G$2(L$1,ft&1),et===null)return Eg(tt),et=tt.memoizedState,et!==null&&(et=et.dehydrated,et!==null)?(tt.mode&1?et.data==="$!"?tt.lanes=8:tt.lanes=1073741824:tt.lanes=1,null):(mt=dt.children,et=dt.fallback,pt?(dt=tt.mode,pt=tt.child,mt={mode:"hidden",children:mt},!(dt&1)&&pt!==null?(pt.childLanes=0,pt.pendingProps=mt):pt=pj(mt,dt,0,null),et=Tg(et,dt,ot,null),pt.return=tt,et.return=tt,pt.sibling=et,tt.child=pt,tt.child.memoizedState=nj(ot),tt.memoizedState=mj,et):qj(tt,mt));if(ft=et.memoizedState,ft!==null&&(ht=ft.dehydrated,ht!==null))return rj(et,tt,mt,dt,ht,ft,ot);if(pt){pt=dt.fallback,mt=tt.mode,ft=et.child,ht=ft.sibling;var bt={mode:"hidden",children:dt.children};return!(mt&1)&&tt.child!==ft?(dt=tt.child,dt.childLanes=0,dt.pendingProps=bt,tt.deletions=null):(dt=Pg(ft,bt),dt.subtreeFlags=ft.subtreeFlags&14680064),ht!==null?pt=Pg(ht,pt):(pt=Tg(pt,mt,ot,null),pt.flags|=2),pt.return=tt,dt.return=tt,dt.sibling=pt,tt.child=dt,dt=pt,pt=tt.child,mt=et.child.memoizedState,mt=mt===null?nj(ot):{baseLanes:mt.baseLanes|ot,cachePool:null,transitions:mt.transitions},pt.memoizedState=mt,pt.childLanes=et.childLanes&~ot,tt.memoizedState=mj,dt}return pt=et.child,et=pt.sibling,dt=Pg(pt,{mode:"visible",children:dt.children}),!(tt.mode&1)&&(dt.lanes=ot),dt.return=tt,dt.sibling=null,et!==null&&(ot=tt.deletions,ot===null?(tt.deletions=[et],tt.flags|=16):ot.push(et)),tt.child=dt,tt.memoizedState=null,dt}function qj(et,tt){return tt=pj({mode:"visible",children:tt},et.mode,0,null),tt.return=et,et.child=tt}function sj(et,tt,ot,dt){return dt!==null&&Jg(dt),Ug(tt,et.child,null,ot),et=qj(tt,tt.pendingProps.children),et.flags|=2,tt.memoizedState=null,et}function rj(et,tt,ot,dt,ft,pt,mt){if(ot)return tt.flags&256?(tt.flags&=-257,dt=Ki(Error(p$2(422))),sj(et,tt,mt,dt)):tt.memoizedState!==null?(tt.child=et.child,tt.flags|=128,null):(pt=dt.fallback,ft=tt.mode,dt=pj({mode:"visible",children:dt.children},ft,0,null),pt=Tg(pt,ft,mt,null),pt.flags|=2,dt.return=tt,pt.return=tt,dt.sibling=pt,tt.child=dt,tt.mode&1&&Ug(tt,et.child,null,mt),tt.child.memoizedState=nj(mt),tt.memoizedState=mj,pt);if(!(tt.mode&1))return sj(et,tt,mt,null);if(ft.data==="$!"){if(dt=ft.nextSibling&&ft.nextSibling.dataset,dt)var ht=dt.dgst;return dt=ht,pt=Error(p$2(419)),dt=Ki(pt,dt,void 0),sj(et,tt,mt,dt)}if(ht=(mt&et.childLanes)!==0,dh||ht){if(dt=Q$2,dt!==null){switch(mt&-mt){case 4:ft=2;break;case 16:ft=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:ft=32;break;case 536870912:ft=268435456;break;default:ft=0}ft=ft&(dt.suspendedLanes|mt)?0:ft,ft!==0&&ft!==pt.retryLane&&(pt.retryLane=ft,ih(et,ft),gi(dt,et,ft,-1))}return tj(),dt=Ki(Error(p$2(421))),sj(et,tt,mt,dt)}return ft.data==="$?"?(tt.flags|=128,tt.child=et.child,tt=uj.bind(null,et),ft._reactRetry=tt,null):(et=pt.treeContext,yg=Lf(ft.nextSibling),xg=tt,I$2=!0,zg=null,et!==null&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=et.id,sg=et.overflow,qg=tt),tt=qj(tt,dt.children),tt.flags|=4096,tt)}function vj(et,tt,ot){et.lanes|=tt;var dt=et.alternate;dt!==null&&(dt.lanes|=tt),bh(et.return,tt,ot)}function wj(et,tt,ot,dt,ft){var pt=et.memoizedState;pt===null?et.memoizedState={isBackwards:tt,rendering:null,renderingStartTime:0,last:dt,tail:ot,tailMode:ft}:(pt.isBackwards=tt,pt.rendering=null,pt.renderingStartTime=0,pt.last=dt,pt.tail=ot,pt.tailMode=ft)}function xj(et,tt,ot){var dt=tt.pendingProps,ft=dt.revealOrder,pt=dt.tail;if(Xi(et,tt,dt.children,ot),dt=L$1.current,dt&2)dt=dt&1|2,tt.flags|=128;else{if(et!==null&&et.flags&128)e:for(et=tt.child;et!==null;){if(et.tag===13)et.memoizedState!==null&&vj(et,ot,tt);else if(et.tag===19)vj(et,ot,tt);else if(et.child!==null){et.child.return=et,et=et.child;continue}if(et===tt)break e;for(;et.sibling===null;){if(et.return===null||et.return===tt)break e;et=et.return}et.sibling.return=et.return,et=et.sibling}dt&=1}if(G$2(L$1,dt),!(tt.mode&1))tt.memoizedState=null;else switch(ft){case"forwards":for(ot=tt.child,ft=null;ot!==null;)et=ot.alternate,et!==null&&Ch(et)===null&&(ft=ot),ot=ot.sibling;ot=ft,ot===null?(ft=tt.child,tt.child=null):(ft=ot.sibling,ot.sibling=null),wj(tt,!1,ft,ot,pt);break;case"backwards":for(ot=null,ft=tt.child,tt.child=null;ft!==null;){if(et=ft.alternate,et!==null&&Ch(et)===null){tt.child=ft;break}et=ft.sibling,ft.sibling=ot,ot=ft,ft=et}wj(tt,!0,ot,null,pt);break;case"together":wj(tt,!1,null,null,void 0);break;default:tt.memoizedState=null}return tt.child}function ij(et,tt){!(tt.mode&1)&&et!==null&&(et.alternate=null,tt.alternate=null,tt.flags|=2)}function Zi(et,tt,ot){if(et!==null&&(tt.dependencies=et.dependencies),rh|=tt.lanes,!(ot&tt.childLanes))return null;if(et!==null&&tt.child!==et.child)throw Error(p$2(153));if(tt.child!==null){for(et=tt.child,ot=Pg(et,et.pendingProps),tt.child=ot,ot.return=tt;et.sibling!==null;)et=et.sibling,ot=ot.sibling=Pg(et,et.pendingProps),ot.return=tt;ot.sibling=null}return tt.child}function yj(et,tt,ot){switch(tt.tag){case 3:kj(tt),Ig();break;case 5:Ah(tt);break;case 1:Zf(tt.type)&&cg(tt);break;case 4:yh(tt,tt.stateNode.containerInfo);break;case 10:var dt=tt.type._context,ft=tt.memoizedProps.value;G$2(Wg,dt._currentValue),dt._currentValue=ft;break;case 13:if(dt=tt.memoizedState,dt!==null)return dt.dehydrated!==null?(G$2(L$1,L$1.current&1),tt.flags|=128,null):ot&tt.child.childLanes?oj(et,tt,ot):(G$2(L$1,L$1.current&1),et=Zi(et,tt,ot),et!==null?et.sibling:null);G$2(L$1,L$1.current&1);break;case 19:if(dt=(ot&tt.childLanes)!==0,et.flags&128){if(dt)return xj(et,tt,ot);tt.flags|=128}if(ft=tt.memoizedState,ft!==null&&(ft.rendering=null,ft.tail=null,ft.lastEffect=null),G$2(L$1,L$1.current),dt)break;return null;case 22:case 23:return tt.lanes=0,dj(et,tt,ot)}return Zi(et,tt,ot)}var zj,Aj,Bj,Cj;zj=function(et,tt){for(var ot=tt.child;ot!==null;){if(ot.tag===5||ot.tag===6)et.appendChild(ot.stateNode);else if(ot.tag!==4&&ot.child!==null){ot.child.return=ot,ot=ot.child;continue}if(ot===tt)break;for(;ot.sibling===null;){if(ot.return===null||ot.return===tt)return;ot=ot.return}ot.sibling.return=ot.return,ot=ot.sibling}};Aj=function(){};Bj=function(et,tt,ot,dt){var ft=et.memoizedProps;if(ft!==dt){et=tt.stateNode,xh(uh.current);var pt=null;switch(ot){case"input":ft=Ya(et,ft),dt=Ya(et,dt),pt=[];break;case"select":ft=A$2({},ft,{value:void 0}),dt=A$2({},dt,{value:void 0}),pt=[];break;case"textarea":ft=gb(et,ft),dt=gb(et,dt),pt=[];break;default:typeof ft.onClick!="function"&&typeof dt.onClick=="function"&&(et.onclick=Bf)}ub(ot,dt);var mt;ot=null;for(yt in ft)if(!dt.hasOwnProperty(yt)&&ft.hasOwnProperty(yt)&&ft[yt]!=null)if(yt==="style"){var ht=ft[yt];for(mt in ht)ht.hasOwnProperty(mt)&&(ot||(ot={}),ot[mt]="")}else yt!=="dangerouslySetInnerHTML"&&yt!=="children"&&yt!=="suppressContentEditableWarning"&&yt!=="suppressHydrationWarning"&&yt!=="autoFocus"&&(ea.hasOwnProperty(yt)?pt||(pt=[]):(pt=pt||[]).push(yt,null));for(yt in dt){var bt=dt[yt];if(ht=ft!=null?ft[yt]:void 0,dt.hasOwnProperty(yt)&&bt!==ht&&(bt!=null||ht!=null))if(yt==="style")if(ht){for(mt in ht)!ht.hasOwnProperty(mt)||bt&&bt.hasOwnProperty(mt)||(ot||(ot={}),ot[mt]="");for(mt in bt)bt.hasOwnProperty(mt)&&ht[mt]!==bt[mt]&&(ot||(ot={}),ot[mt]=bt[mt])}else ot||(pt||(pt=[]),pt.push(yt,ot)),ot=bt;else yt==="dangerouslySetInnerHTML"?(bt=bt?bt.__html:void 0,ht=ht?ht.__html:void 0,bt!=null&&ht!==bt&&(pt=pt||[]).push(yt,bt)):yt==="children"?typeof bt!="string"&&typeof bt!="number"||(pt=pt||[]).push(yt,""+bt):yt!=="suppressContentEditableWarning"&&yt!=="suppressHydrationWarning"&&(ea.hasOwnProperty(yt)?(bt!=null&&yt==="onScroll"&&D$2("scroll",et),pt||ht===bt||(pt=[])):(pt=pt||[]).push(yt,bt))}ot&&(pt=pt||[]).push("style",ot);var yt=pt;(tt.updateQueue=yt)&&(tt.flags|=4)}};Cj=function(et,tt,ot,dt){ot!==dt&&(tt.flags|=4)};function Dj(et,tt){if(!I$2)switch(et.tailMode){case"hidden":tt=et.tail;for(var ot=null;tt!==null;)tt.alternate!==null&&(ot=tt),tt=tt.sibling;ot===null?et.tail=null:ot.sibling=null;break;case"collapsed":ot=et.tail;for(var dt=null;ot!==null;)ot.alternate!==null&&(dt=ot),ot=ot.sibling;dt===null?tt||et.tail===null?et.tail=null:et.tail.sibling=null:dt.sibling=null}}function S$3(et){var tt=et.alternate!==null&&et.alternate.child===et.child,ot=0,dt=0;if(tt)for(var ft=et.child;ft!==null;)ot|=ft.lanes|ft.childLanes,dt|=ft.subtreeFlags&14680064,dt|=ft.flags&14680064,ft.return=et,ft=ft.sibling;else for(ft=et.child;ft!==null;)ot|=ft.lanes|ft.childLanes,dt|=ft.subtreeFlags,dt|=ft.flags,ft.return=et,ft=ft.sibling;return et.subtreeFlags|=dt,et.childLanes=ot,tt}function Ej(et,tt,ot){var dt=tt.pendingProps;switch(wg(tt),tt.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S$3(tt),null;case 1:return Zf(tt.type)&&$f(),S$3(tt),null;case 3:return dt=tt.stateNode,zh(),E(Wf),E(H$2),Eh(),dt.pendingContext&&(dt.context=dt.pendingContext,dt.pendingContext=null),(et===null||et.child===null)&&(Gg(tt)?tt.flags|=4:et===null||et.memoizedState.isDehydrated&&!(tt.flags&256)||(tt.flags|=1024,zg!==null&&(Fj(zg),zg=null))),Aj(et,tt),S$3(tt),null;case 5:Bh(tt);var ft=xh(wh.current);if(ot=tt.type,et!==null&&tt.stateNode!=null)Bj(et,tt,ot,dt,ft),et.ref!==tt.ref&&(tt.flags|=512,tt.flags|=2097152);else{if(!dt){if(tt.stateNode===null)throw Error(p$2(166));return S$3(tt),null}if(et=xh(uh.current),Gg(tt)){dt=tt.stateNode,ot=tt.type;var pt=tt.memoizedProps;switch(dt[Of]=tt,dt[Pf]=pt,et=(tt.mode&1)!==0,ot){case"dialog":D$2("cancel",dt),D$2("close",dt);break;case"iframe":case"object":case"embed":D$2("load",dt);break;case"video":case"audio":for(ft=0;ft<lf.length;ft++)D$2(lf[ft],dt);break;case"source":D$2("error",dt);break;case"img":case"image":case"link":D$2("error",dt),D$2("load",dt);break;case"details":D$2("toggle",dt);break;case"input":Za(dt,pt),D$2("invalid",dt);break;case"select":dt._wrapperState={wasMultiple:!!pt.multiple},D$2("invalid",dt);break;case"textarea":hb(dt,pt),D$2("invalid",dt)}ub(ot,pt),ft=null;for(var mt in pt)if(pt.hasOwnProperty(mt)){var ht=pt[mt];mt==="children"?typeof ht=="string"?dt.textContent!==ht&&(pt.suppressHydrationWarning!==!0&&Af(dt.textContent,ht,et),ft=["children",ht]):typeof ht=="number"&&dt.textContent!==""+ht&&(pt.suppressHydrationWarning!==!0&&Af(dt.textContent,ht,et),ft=["children",""+ht]):ea.hasOwnProperty(mt)&&ht!=null&&mt==="onScroll"&&D$2("scroll",dt)}switch(ot){case"input":Va(dt),db(dt,pt,!0);break;case"textarea":Va(dt),jb(dt);break;case"select":case"option":break;default:typeof pt.onClick=="function"&&(dt.onclick=Bf)}dt=ft,tt.updateQueue=dt,dt!==null&&(tt.flags|=4)}else{mt=ft.nodeType===9?ft:ft.ownerDocument,et==="http://www.w3.org/1999/xhtml"&&(et=kb(ot)),et==="http://www.w3.org/1999/xhtml"?ot==="script"?(et=mt.createElement("div"),et.innerHTML="<script><\/script>",et=et.removeChild(et.firstChild)):typeof dt.is=="string"?et=mt.createElement(ot,{is:dt.is}):(et=mt.createElement(ot),ot==="select"&&(mt=et,dt.multiple?mt.multiple=!0:dt.size&&(mt.size=dt.size))):et=mt.createElementNS(et,ot),et[Of]=tt,et[Pf]=dt,zj(et,tt,!1,!1),tt.stateNode=et;e:{switch(mt=vb(ot,dt),ot){case"dialog":D$2("cancel",et),D$2("close",et),ft=dt;break;case"iframe":case"object":case"embed":D$2("load",et),ft=dt;break;case"video":case"audio":for(ft=0;ft<lf.length;ft++)D$2(lf[ft],et);ft=dt;break;case"source":D$2("error",et),ft=dt;break;case"img":case"image":case"link":D$2("error",et),D$2("load",et),ft=dt;break;case"details":D$2("toggle",et),ft=dt;break;case"input":Za(et,dt),ft=Ya(et,dt),D$2("invalid",et);break;case"option":ft=dt;break;case"select":et._wrapperState={wasMultiple:!!dt.multiple},ft=A$2({},dt,{value:void 0}),D$2("invalid",et);break;case"textarea":hb(et,dt),ft=gb(et,dt),D$2("invalid",et);break;default:ft=dt}ub(ot,ft),ht=ft;for(pt in ht)if(ht.hasOwnProperty(pt)){var bt=ht[pt];pt==="style"?sb(et,bt):pt==="dangerouslySetInnerHTML"?(bt=bt?bt.__html:void 0,bt!=null&&nb(et,bt)):pt==="children"?typeof bt=="string"?(ot!=="textarea"||bt!=="")&&ob(et,bt):typeof bt=="number"&&ob(et,""+bt):pt!=="suppressContentEditableWarning"&&pt!=="suppressHydrationWarning"&&pt!=="autoFocus"&&(ea.hasOwnProperty(pt)?bt!=null&&pt==="onScroll"&&D$2("scroll",et):bt!=null&&ta(et,pt,bt,mt))}switch(ot){case"input":Va(et),db(et,dt,!1);break;case"textarea":Va(et),jb(et);break;case"option":dt.value!=null&&et.setAttribute("value",""+Sa(dt.value));break;case"select":et.multiple=!!dt.multiple,pt=dt.value,pt!=null?fb(et,!!dt.multiple,pt,!1):dt.defaultValue!=null&&fb(et,!!dt.multiple,dt.defaultValue,!0);break;default:typeof ft.onClick=="function"&&(et.onclick=Bf)}switch(ot){case"button":case"input":case"select":case"textarea":dt=!!dt.autoFocus;break e;case"img":dt=!0;break e;default:dt=!1}}dt&&(tt.flags|=4)}tt.ref!==null&&(tt.flags|=512,tt.flags|=2097152)}return S$3(tt),null;case 6:if(et&&tt.stateNode!=null)Cj(et,tt,et.memoizedProps,dt);else{if(typeof dt!="string"&&tt.stateNode===null)throw Error(p$2(166));if(ot=xh(wh.current),xh(uh.current),Gg(tt)){if(dt=tt.stateNode,ot=tt.memoizedProps,dt[Of]=tt,(pt=dt.nodeValue!==ot)&&(et=xg,et!==null))switch(et.tag){case 3:Af(dt.nodeValue,ot,(et.mode&1)!==0);break;case 5:et.memoizedProps.suppressHydrationWarning!==!0&&Af(dt.nodeValue,ot,(et.mode&1)!==0)}pt&&(tt.flags|=4)}else dt=(ot.nodeType===9?ot:ot.ownerDocument).createTextNode(dt),dt[Of]=tt,tt.stateNode=dt}return S$3(tt),null;case 13:if(E(L$1),dt=tt.memoizedState,et===null||et.memoizedState!==null&&et.memoizedState.dehydrated!==null){if(I$2&&yg!==null&&tt.mode&1&&!(tt.flags&128))Hg(),Ig(),tt.flags|=98560,pt=!1;else if(pt=Gg(tt),dt!==null&&dt.dehydrated!==null){if(et===null){if(!pt)throw Error(p$2(318));if(pt=tt.memoizedState,pt=pt!==null?pt.dehydrated:null,!pt)throw Error(p$2(317));pt[Of]=tt}else Ig(),!(tt.flags&128)&&(tt.memoizedState=null),tt.flags|=4;S$3(tt),pt=!1}else zg!==null&&(Fj(zg),zg=null),pt=!0;if(!pt)return tt.flags&65536?tt:null}return tt.flags&128?(tt.lanes=ot,tt):(dt=dt!==null,dt!==(et!==null&&et.memoizedState!==null)&&dt&&(tt.child.flags|=8192,tt.mode&1&&(et===null||L$1.current&1?T$2===0&&(T$2=3):tj())),tt.updateQueue!==null&&(tt.flags|=4),S$3(tt),null);case 4:return zh(),Aj(et,tt),et===null&&sf(tt.stateNode.containerInfo),S$3(tt),null;case 10:return ah(tt.type._context),S$3(tt),null;case 17:return Zf(tt.type)&&$f(),S$3(tt),null;case 19:if(E(L$1),pt=tt.memoizedState,pt===null)return S$3(tt),null;if(dt=(tt.flags&128)!==0,mt=pt.rendering,mt===null)if(dt)Dj(pt,!1);else{if(T$2!==0||et!==null&&et.flags&128)for(et=tt.child;et!==null;){if(mt=Ch(et),mt!==null){for(tt.flags|=128,Dj(pt,!1),dt=mt.updateQueue,dt!==null&&(tt.updateQueue=dt,tt.flags|=4),tt.subtreeFlags=0,dt=ot,ot=tt.child;ot!==null;)pt=ot,et=dt,pt.flags&=14680066,mt=pt.alternate,mt===null?(pt.childLanes=0,pt.lanes=et,pt.child=null,pt.subtreeFlags=0,pt.memoizedProps=null,pt.memoizedState=null,pt.updateQueue=null,pt.dependencies=null,pt.stateNode=null):(pt.childLanes=mt.childLanes,pt.lanes=mt.lanes,pt.child=mt.child,pt.subtreeFlags=0,pt.deletions=null,pt.memoizedProps=mt.memoizedProps,pt.memoizedState=mt.memoizedState,pt.updateQueue=mt.updateQueue,pt.type=mt.type,et=mt.dependencies,pt.dependencies=et===null?null:{lanes:et.lanes,firstContext:et.firstContext}),ot=ot.sibling;return G$2(L$1,L$1.current&1|2),tt.child}et=et.sibling}pt.tail!==null&&B$1()>Gj&&(tt.flags|=128,dt=!0,Dj(pt,!1),tt.lanes=4194304)}else{if(!dt)if(et=Ch(mt),et!==null){if(tt.flags|=128,dt=!0,ot=et.updateQueue,ot!==null&&(tt.updateQueue=ot,tt.flags|=4),Dj(pt,!0),pt.tail===null&&pt.tailMode==="hidden"&&!mt.alternate&&!I$2)return S$3(tt),null}else 2*B$1()-pt.renderingStartTime>Gj&&ot!==1073741824&&(tt.flags|=128,dt=!0,Dj(pt,!1),tt.lanes=4194304);pt.isBackwards?(mt.sibling=tt.child,tt.child=mt):(ot=pt.last,ot!==null?ot.sibling=mt:tt.child=mt,pt.last=mt)}return pt.tail!==null?(tt=pt.tail,pt.rendering=tt,pt.tail=tt.sibling,pt.renderingStartTime=B$1(),tt.sibling=null,ot=L$1.current,G$2(L$1,dt?ot&1|2:ot&1),tt):(S$3(tt),null);case 22:case 23:return Hj(),dt=tt.memoizedState!==null,et!==null&&et.memoizedState!==null!==dt&&(tt.flags|=8192),dt&&tt.mode&1?fj&1073741824&&(S$3(tt),tt.subtreeFlags&6&&(tt.flags|=8192)):S$3(tt),null;case 24:return null;case 25:return null}throw Error(p$2(156,tt.tag))}function Ij(et,tt){switch(wg(tt),tt.tag){case 1:return Zf(tt.type)&&$f(),et=tt.flags,et&65536?(tt.flags=et&-65537|128,tt):null;case 3:return zh(),E(Wf),E(H$2),Eh(),et=tt.flags,et&65536&&!(et&128)?(tt.flags=et&-65537|128,tt):null;case 5:return Bh(tt),null;case 13:if(E(L$1),et=tt.memoizedState,et!==null&&et.dehydrated!==null){if(tt.alternate===null)throw Error(p$2(340));Ig()}return et=tt.flags,et&65536?(tt.flags=et&-65537|128,tt):null;case 19:return E(L$1),null;case 4:return zh(),null;case 10:return ah(tt.type._context),null;case 22:case 23:return Hj(),null;case 24:return null;default:return null}}var Jj=!1,U$2=!1,Kj=typeof WeakSet=="function"?WeakSet:Set,V$2=null;function Lj(et,tt){var ot=et.ref;if(ot!==null)if(typeof ot=="function")try{ot(null)}catch(dt){W$2(et,tt,dt)}else ot.current=null}function Mj(et,tt,ot){try{ot()}catch(dt){W$2(et,tt,dt)}}var Nj=!1;function Oj(et,tt){if(Cf=dd,et=Me$1(),Ne$1(et)){if("selectionStart"in et)var ot={start:et.selectionStart,end:et.selectionEnd};else e:{ot=(ot=et.ownerDocument)&&ot.defaultView||window;var dt=ot.getSelection&&ot.getSelection();if(dt&&dt.rangeCount!==0){ot=dt.anchorNode;var ft=dt.anchorOffset,pt=dt.focusNode;dt=dt.focusOffset;try{ot.nodeType,pt.nodeType}catch{ot=null;break e}var mt=0,ht=-1,bt=-1,yt=0,xt=0,gt=et,wt=null;t:for(;;){for(var Pt;gt!==ot||ft!==0&&gt.nodeType!==3||(ht=mt+ft),gt!==pt||dt!==0&&gt.nodeType!==3||(bt=mt+dt),gt.nodeType===3&&(mt+=gt.nodeValue.length),(Pt=gt.firstChild)!==null;)wt=gt,gt=Pt;for(;;){if(gt===et)break t;if(wt===ot&&++yt===ft&&(ht=mt),wt===pt&&++xt===dt&&(bt=mt),(Pt=gt.nextSibling)!==null)break;gt=wt,wt=gt.parentNode}gt=Pt}ot=ht===-1||bt===-1?null:{start:ht,end:bt}}else ot=null}ot=ot||{start:0,end:0}}else ot=null;for(Df={focusedElem:et,selectionRange:ot},dd=!1,V$2=tt;V$2!==null;)if(tt=V$2,et=tt.child,(tt.subtreeFlags&1028)!==0&&et!==null)et.return=tt,V$2=et;else for(;V$2!==null;){tt=V$2;try{var St=tt.alternate;if(tt.flags&1024)switch(tt.tag){case 0:case 11:case 15:break;case 1:if(St!==null){var Et=St.memoizedProps,Lt=St.memoizedState,It=tt.stateNode,kt=It.getSnapshotBeforeUpdate(tt.elementType===tt.type?Et:Ci(tt.type,Et),Lt);It.__reactInternalSnapshotBeforeUpdate=kt}break;case 3:var Nt=tt.stateNode.containerInfo;Nt.nodeType===1?Nt.textContent="":Nt.nodeType===9&&Nt.documentElement&&Nt.removeChild(Nt.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p$2(163))}}catch(Ut){W$2(tt,tt.return,Ut)}if(et=tt.sibling,et!==null){et.return=tt.return,V$2=et;break}V$2=tt.return}return St=Nj,Nj=!1,St}function Pj(et,tt,ot){var dt=tt.updateQueue;if(dt=dt!==null?dt.lastEffect:null,dt!==null){var ft=dt=dt.next;do{if((ft.tag&et)===et){var pt=ft.destroy;ft.destroy=void 0,pt!==void 0&&Mj(tt,ot,pt)}ft=ft.next}while(ft!==dt)}}function Qj(et,tt){if(tt=tt.updateQueue,tt=tt!==null?tt.lastEffect:null,tt!==null){var ot=tt=tt.next;do{if((ot.tag&et)===et){var dt=ot.create;ot.destroy=dt()}ot=ot.next}while(ot!==tt)}}function Rj(et){var tt=et.ref;if(tt!==null){var ot=et.stateNode;switch(et.tag){case 5:et=ot;break;default:et=ot}typeof tt=="function"?tt(et):tt.current=et}}function Sj(et){var tt=et.alternate;tt!==null&&(et.alternate=null,Sj(tt)),et.child=null,et.deletions=null,et.sibling=null,et.tag===5&&(tt=et.stateNode,tt!==null&&(delete tt[Of],delete tt[Pf],delete tt[of$1],delete tt[Qf],delete tt[Rf])),et.stateNode=null,et.return=null,et.dependencies=null,et.memoizedProps=null,et.memoizedState=null,et.pendingProps=null,et.stateNode=null,et.updateQueue=null}function Tj(et){return et.tag===5||et.tag===3||et.tag===4}function Uj(et){e:for(;;){for(;et.sibling===null;){if(et.return===null||Tj(et.return))return null;et=et.return}for(et.sibling.return=et.return,et=et.sibling;et.tag!==5&&et.tag!==6&&et.tag!==18;){if(et.flags&2||et.child===null||et.tag===4)continue e;et.child.return=et,et=et.child}if(!(et.flags&2))return et.stateNode}}function Vj(et,tt,ot){var dt=et.tag;if(dt===5||dt===6)et=et.stateNode,tt?ot.nodeType===8?ot.parentNode.insertBefore(et,tt):ot.insertBefore(et,tt):(ot.nodeType===8?(tt=ot.parentNode,tt.insertBefore(et,ot)):(tt=ot,tt.appendChild(et)),ot=ot._reactRootContainer,ot!=null||tt.onclick!==null||(tt.onclick=Bf));else if(dt!==4&&(et=et.child,et!==null))for(Vj(et,tt,ot),et=et.sibling;et!==null;)Vj(et,tt,ot),et=et.sibling}function Wj(et,tt,ot){var dt=et.tag;if(dt===5||dt===6)et=et.stateNode,tt?ot.insertBefore(et,tt):ot.appendChild(et);else if(dt!==4&&(et=et.child,et!==null))for(Wj(et,tt,ot),et=et.sibling;et!==null;)Wj(et,tt,ot),et=et.sibling}var X$2=null,Xj=!1;function Yj(et,tt,ot){for(ot=ot.child;ot!==null;)Zj(et,tt,ot),ot=ot.sibling}function Zj(et,tt,ot){if(lc&&typeof lc.onCommitFiberUnmount=="function")try{lc.onCommitFiberUnmount(kc,ot)}catch{}switch(ot.tag){case 5:U$2||Lj(ot,tt);case 6:var dt=X$2,ft=Xj;X$2=null,Yj(et,tt,ot),X$2=dt,Xj=ft,X$2!==null&&(Xj?(et=X$2,ot=ot.stateNode,et.nodeType===8?et.parentNode.removeChild(ot):et.removeChild(ot)):X$2.removeChild(ot.stateNode));break;case 18:X$2!==null&&(Xj?(et=X$2,ot=ot.stateNode,et.nodeType===8?Kf(et.parentNode,ot):et.nodeType===1&&Kf(et,ot),bd(et)):Kf(X$2,ot.stateNode));break;case 4:dt=X$2,ft=Xj,X$2=ot.stateNode.containerInfo,Xj=!0,Yj(et,tt,ot),X$2=dt,Xj=ft;break;case 0:case 11:case 14:case 15:if(!U$2&&(dt=ot.updateQueue,dt!==null&&(dt=dt.lastEffect,dt!==null))){ft=dt=dt.next;do{var pt=ft,mt=pt.destroy;pt=pt.tag,mt!==void 0&&(pt&2||pt&4)&&Mj(ot,tt,mt),ft=ft.next}while(ft!==dt)}Yj(et,tt,ot);break;case 1:if(!U$2&&(Lj(ot,tt),dt=ot.stateNode,typeof dt.componentWillUnmount=="function"))try{dt.props=ot.memoizedProps,dt.state=ot.memoizedState,dt.componentWillUnmount()}catch(ht){W$2(ot,tt,ht)}Yj(et,tt,ot);break;case 21:Yj(et,tt,ot);break;case 22:ot.mode&1?(U$2=(dt=U$2)||ot.memoizedState!==null,Yj(et,tt,ot),U$2=dt):Yj(et,tt,ot);break;default:Yj(et,tt,ot)}}function ak(et){var tt=et.updateQueue;if(tt!==null){et.updateQueue=null;var ot=et.stateNode;ot===null&&(ot=et.stateNode=new Kj),tt.forEach(function(dt){var ft=bk.bind(null,et,dt);ot.has(dt)||(ot.add(dt),dt.then(ft,ft))})}}function ck(et,tt){var ot=tt.deletions;if(ot!==null)for(var dt=0;dt<ot.length;dt++){var ft=ot[dt];try{var pt=et,mt=tt,ht=mt;e:for(;ht!==null;){switch(ht.tag){case 5:X$2=ht.stateNode,Xj=!1;break e;case 3:X$2=ht.stateNode.containerInfo,Xj=!0;break e;case 4:X$2=ht.stateNode.containerInfo,Xj=!0;break e}ht=ht.return}if(X$2===null)throw Error(p$2(160));Zj(pt,mt,ft),X$2=null,Xj=!1;var bt=ft.alternate;bt!==null&&(bt.return=null),ft.return=null}catch(yt){W$2(ft,tt,yt)}}if(tt.subtreeFlags&12854)for(tt=tt.child;tt!==null;)dk(tt,et),tt=tt.sibling}function dk(et,tt){var ot=et.alternate,dt=et.flags;switch(et.tag){case 0:case 11:case 14:case 15:if(ck(tt,et),ek(et),dt&4){try{Pj(3,et,et.return),Qj(3,et)}catch(Et){W$2(et,et.return,Et)}try{Pj(5,et,et.return)}catch(Et){W$2(et,et.return,Et)}}break;case 1:ck(tt,et),ek(et),dt&512&&ot!==null&&Lj(ot,ot.return);break;case 5:if(ck(tt,et),ek(et),dt&512&&ot!==null&&Lj(ot,ot.return),et.flags&32){var ft=et.stateNode;try{ob(ft,"")}catch(Et){W$2(et,et.return,Et)}}if(dt&4&&(ft=et.stateNode,ft!=null)){var pt=et.memoizedProps,mt=ot!==null?ot.memoizedProps:pt,ht=et.type,bt=et.updateQueue;if(et.updateQueue=null,bt!==null)try{ht==="input"&&pt.type==="radio"&&pt.name!=null&&ab(ft,pt),vb(ht,mt);var yt=vb(ht,pt);for(mt=0;mt<bt.length;mt+=2){var xt=bt[mt],gt=bt[mt+1];xt==="style"?sb(ft,gt):xt==="dangerouslySetInnerHTML"?nb(ft,gt):xt==="children"?ob(ft,gt):ta(ft,xt,gt,yt)}switch(ht){case"input":bb(ft,pt);break;case"textarea":ib(ft,pt);break;case"select":var wt=ft._wrapperState.wasMultiple;ft._wrapperState.wasMultiple=!!pt.multiple;var Pt=pt.value;Pt!=null?fb(ft,!!pt.multiple,Pt,!1):wt!==!!pt.multiple&&(pt.defaultValue!=null?fb(ft,!!pt.multiple,pt.defaultValue,!0):fb(ft,!!pt.multiple,pt.multiple?[]:"",!1))}ft[Pf]=pt}catch(Et){W$2(et,et.return,Et)}}break;case 6:if(ck(tt,et),ek(et),dt&4){if(et.stateNode===null)throw Error(p$2(162));ft=et.stateNode,pt=et.memoizedProps;try{ft.nodeValue=pt}catch(Et){W$2(et,et.return,Et)}}break;case 3:if(ck(tt,et),ek(et),dt&4&&ot!==null&&ot.memoizedState.isDehydrated)try{bd(tt.containerInfo)}catch(Et){W$2(et,et.return,Et)}break;case 4:ck(tt,et),ek(et);break;case 13:ck(tt,et),ek(et),ft=et.child,ft.flags&8192&&(pt=ft.memoizedState!==null,ft.stateNode.isHidden=pt,!pt||ft.alternate!==null&&ft.alternate.memoizedState!==null||(fk=B$1())),dt&4&&ak(et);break;case 22:if(xt=ot!==null&&ot.memoizedState!==null,et.mode&1?(U$2=(yt=U$2)||xt,ck(tt,et),U$2=yt):ck(tt,et),ek(et),dt&8192){if(yt=et.memoizedState!==null,(et.stateNode.isHidden=yt)&&!xt&&et.mode&1)for(V$2=et,xt=et.child;xt!==null;){for(gt=V$2=xt;V$2!==null;){switch(wt=V$2,Pt=wt.child,wt.tag){case 0:case 11:case 14:case 15:Pj(4,wt,wt.return);break;case 1:Lj(wt,wt.return);var St=wt.stateNode;if(typeof St.componentWillUnmount=="function"){dt=wt,ot=wt.return;try{tt=dt,St.props=tt.memoizedProps,St.state=tt.memoizedState,St.componentWillUnmount()}catch(Et){W$2(dt,ot,Et)}}break;case 5:Lj(wt,wt.return);break;case 22:if(wt.memoizedState!==null){gk(gt);continue}}Pt!==null?(Pt.return=wt,V$2=Pt):gk(gt)}xt=xt.sibling}e:for(xt=null,gt=et;;){if(gt.tag===5){if(xt===null){xt=gt;try{ft=gt.stateNode,yt?(pt=ft.style,typeof pt.setProperty=="function"?pt.setProperty("display","none","important"):pt.display="none"):(ht=gt.stateNode,bt=gt.memoizedProps.style,mt=bt!=null&&bt.hasOwnProperty("display")?bt.display:null,ht.style.display=rb("display",mt))}catch(Et){W$2(et,et.return,Et)}}}else if(gt.tag===6){if(xt===null)try{gt.stateNode.nodeValue=yt?"":gt.memoizedProps}catch(Et){W$2(et,et.return,Et)}}else if((gt.tag!==22&&gt.tag!==23||gt.memoizedState===null||gt===et)&&gt.child!==null){gt.child.return=gt,gt=gt.child;continue}if(gt===et)break e;for(;gt.sibling===null;){if(gt.return===null||gt.return===et)break e;xt===gt&&(xt=null),gt=gt.return}xt===gt&&(xt=null),gt.sibling.return=gt.return,gt=gt.sibling}}break;case 19:ck(tt,et),ek(et),dt&4&&ak(et);break;case 21:break;default:ck(tt,et),ek(et)}}function ek(et){var tt=et.flags;if(tt&2){try{e:{for(var ot=et.return;ot!==null;){if(Tj(ot)){var dt=ot;break e}ot=ot.return}throw Error(p$2(160))}switch(dt.tag){case 5:var ft=dt.stateNode;dt.flags&32&&(ob(ft,""),dt.flags&=-33);var pt=Uj(et);Wj(et,pt,ft);break;case 3:case 4:var mt=dt.stateNode.containerInfo,ht=Uj(et);Vj(et,ht,mt);break;default:throw Error(p$2(161))}}catch(bt){W$2(et,et.return,bt)}et.flags&=-3}tt&4096&&(et.flags&=-4097)}function hk(et,tt,ot){V$2=et,ik(et)}function ik(et,tt,ot){for(var dt=(et.mode&1)!==0;V$2!==null;){var ft=V$2,pt=ft.child;if(ft.tag===22&&dt){var mt=ft.memoizedState!==null||Jj;if(!mt){var ht=ft.alternate,bt=ht!==null&&ht.memoizedState!==null||U$2;ht=Jj;var yt=U$2;if(Jj=mt,(U$2=bt)&&!yt)for(V$2=ft;V$2!==null;)mt=V$2,bt=mt.child,mt.tag===22&&mt.memoizedState!==null?jk(ft):bt!==null?(bt.return=mt,V$2=bt):jk(ft);for(;pt!==null;)V$2=pt,ik(pt),pt=pt.sibling;V$2=ft,Jj=ht,U$2=yt}kk(et)}else ft.subtreeFlags&8772&&pt!==null?(pt.return=ft,V$2=pt):kk(et)}}function kk(et){for(;V$2!==null;){var tt=V$2;if(tt.flags&8772){var ot=tt.alternate;try{if(tt.flags&8772)switch(tt.tag){case 0:case 11:case 15:U$2||Qj(5,tt);break;case 1:var dt=tt.stateNode;if(tt.flags&4&&!U$2)if(ot===null)dt.componentDidMount();else{var ft=tt.elementType===tt.type?ot.memoizedProps:Ci(tt.type,ot.memoizedProps);dt.componentDidUpdate(ft,ot.memoizedState,dt.__reactInternalSnapshotBeforeUpdate)}var pt=tt.updateQueue;pt!==null&&sh(tt,pt,dt);break;case 3:var mt=tt.updateQueue;if(mt!==null){if(ot=null,tt.child!==null)switch(tt.child.tag){case 5:ot=tt.child.stateNode;break;case 1:ot=tt.child.stateNode}sh(tt,mt,ot)}break;case 5:var ht=tt.stateNode;if(ot===null&&tt.flags&4){ot=ht;var bt=tt.memoizedProps;switch(tt.type){case"button":case"input":case"select":case"textarea":bt.autoFocus&&ot.focus();break;case"img":bt.src&&(ot.src=bt.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(tt.memoizedState===null){var yt=tt.alternate;if(yt!==null){var xt=yt.memoizedState;if(xt!==null){var gt=xt.dehydrated;gt!==null&&bd(gt)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(p$2(163))}U$2||tt.flags&512&&Rj(tt)}catch(wt){W$2(tt,tt.return,wt)}}if(tt===et){V$2=null;break}if(ot=tt.sibling,ot!==null){ot.return=tt.return,V$2=ot;break}V$2=tt.return}}function gk(et){for(;V$2!==null;){var tt=V$2;if(tt===et){V$2=null;break}var ot=tt.sibling;if(ot!==null){ot.return=tt.return,V$2=ot;break}V$2=tt.return}}function jk(et){for(;V$2!==null;){var tt=V$2;try{switch(tt.tag){case 0:case 11:case 15:var ot=tt.return;try{Qj(4,tt)}catch(bt){W$2(tt,ot,bt)}break;case 1:var dt=tt.stateNode;if(typeof dt.componentDidMount=="function"){var ft=tt.return;try{dt.componentDidMount()}catch(bt){W$2(tt,ft,bt)}}var pt=tt.return;try{Rj(tt)}catch(bt){W$2(tt,pt,bt)}break;case 5:var mt=tt.return;try{Rj(tt)}catch(bt){W$2(tt,mt,bt)}}}catch(bt){W$2(tt,tt.return,bt)}if(tt===et){V$2=null;break}var ht=tt.sibling;if(ht!==null){ht.return=tt.return,V$2=ht;break}V$2=tt.return}}var lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K$1=0,Q$2=null,Y$2=null,Z$3=0,fj=0,ej=Uf(0),T$2=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=1/0,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R$1(){return K$1&6?B$1():Ak!==-1?Ak:Ak=B$1()}function yi(et){return et.mode&1?K$1&2&&Z$3!==0?Z$3&-Z$3:Kg.transition!==null?(Bk===0&&(Bk=yc()),Bk):(et=C$2,et!==0||(et=window.event,et=et===void 0?16:jd(et.type)),et):1}function gi(et,tt,ot,dt){if(50<yk)throw yk=0,zk=null,Error(p$2(185));Ac(et,ot,dt),(!(K$1&2)||et!==Q$2)&&(et===Q$2&&(!(K$1&2)&&(qk|=ot),T$2===4&&Ck(et,Z$3)),Dk(et,dt),ot===1&&K$1===0&&!(tt.mode&1)&&(Gj=B$1()+500,fg&&jg()))}function Dk(et,tt){var ot=et.callbackNode;wc(et,tt);var dt=uc(et,et===Q$2?Z$3:0);if(dt===0)ot!==null&&bc(ot),et.callbackNode=null,et.callbackPriority=0;else if(tt=dt&-dt,et.callbackPriority!==tt){if(ot!=null&&bc(ot),tt===1)et.tag===0?ig(Ek.bind(null,et)):hg(Ek.bind(null,et)),Jf(function(){!(K$1&6)&&jg()}),ot=null;else{switch(Dc(dt)){case 1:ot=fc;break;case 4:ot=gc;break;case 16:ot=hc;break;case 536870912:ot=jc;break;default:ot=hc}ot=Fk(ot,Gk.bind(null,et))}et.callbackPriority=tt,et.callbackNode=ot}}function Gk(et,tt){if(Ak=-1,Bk=0,K$1&6)throw Error(p$2(327));var ot=et.callbackNode;if(Hk()&&et.callbackNode!==ot)return null;var dt=uc(et,et===Q$2?Z$3:0);if(dt===0)return null;if(dt&30||dt&et.expiredLanes||tt)tt=Ik(et,dt);else{tt=dt;var ft=K$1;K$1|=2;var pt=Jk();(Q$2!==et||Z$3!==tt)&&(uk=null,Gj=B$1()+500,Kk(et,tt));do try{Lk();break}catch(ht){Mk(et,ht)}while(!0);$g(),mk.current=pt,K$1=ft,Y$2!==null?tt=0:(Q$2=null,Z$3=0,tt=T$2)}if(tt!==0){if(tt===2&&(ft=xc(et),ft!==0&&(dt=ft,tt=Nk(et,ft))),tt===1)throw ot=pk,Kk(et,0),Ck(et,dt),Dk(et,B$1()),ot;if(tt===6)Ck(et,dt);else{if(ft=et.current.alternate,!(dt&30)&&!Ok(ft)&&(tt=Ik(et,dt),tt===2&&(pt=xc(et),pt!==0&&(dt=pt,tt=Nk(et,pt))),tt===1))throw ot=pk,Kk(et,0),Ck(et,dt),Dk(et,B$1()),ot;switch(et.finishedWork=ft,et.finishedLanes=dt,tt){case 0:case 1:throw Error(p$2(345));case 2:Pk(et,tk,uk);break;case 3:if(Ck(et,dt),(dt&130023424)===dt&&(tt=fk+500-B$1(),10<tt)){if(uc(et,0)!==0)break;if(ft=et.suspendedLanes,(ft&dt)!==dt){R$1(),et.pingedLanes|=et.suspendedLanes&ft;break}et.timeoutHandle=Ff(Pk.bind(null,et,tk,uk),tt);break}Pk(et,tk,uk);break;case 4:if(Ck(et,dt),(dt&4194240)===dt)break;for(tt=et.eventTimes,ft=-1;0<dt;){var mt=31-oc(dt);pt=1<<mt,mt=tt[mt],mt>ft&&(ft=mt),dt&=~pt}if(dt=ft,dt=B$1()-dt,dt=(120>dt?120:480>dt?480:1080>dt?1080:1920>dt?1920:3e3>dt?3e3:4320>dt?4320:1960*lk(dt/1960))-dt,10<dt){et.timeoutHandle=Ff(Pk.bind(null,et,tk,uk),dt);break}Pk(et,tk,uk);break;case 5:Pk(et,tk,uk);break;default:throw Error(p$2(329))}}}return Dk(et,B$1()),et.callbackNode===ot?Gk.bind(null,et):null}function Nk(et,tt){var ot=sk;return et.current.memoizedState.isDehydrated&&(Kk(et,tt).flags|=256),et=Ik(et,tt),et!==2&&(tt=tk,tk=ot,tt!==null&&Fj(tt)),et}function Fj(et){tk===null?tk=et:tk.push.apply(tk,et)}function Ok(et){for(var tt=et;;){if(tt.flags&16384){var ot=tt.updateQueue;if(ot!==null&&(ot=ot.stores,ot!==null))for(var dt=0;dt<ot.length;dt++){var ft=ot[dt],pt=ft.getSnapshot;ft=ft.value;try{if(!He$1(pt(),ft))return!1}catch{return!1}}}if(ot=tt.child,tt.subtreeFlags&16384&&ot!==null)ot.return=tt,tt=ot;else{if(tt===et)break;for(;tt.sibling===null;){if(tt.return===null||tt.return===et)return!0;tt=tt.return}tt.sibling.return=tt.return,tt=tt.sibling}}return!0}function Ck(et,tt){for(tt&=~rk,tt&=~qk,et.suspendedLanes|=tt,et.pingedLanes&=~tt,et=et.expirationTimes;0<tt;){var ot=31-oc(tt),dt=1<<ot;et[ot]=-1,tt&=~dt}}function Ek(et){if(K$1&6)throw Error(p$2(327));Hk();var tt=uc(et,0);if(!(tt&1))return Dk(et,B$1()),null;var ot=Ik(et,tt);if(et.tag!==0&&ot===2){var dt=xc(et);dt!==0&&(tt=dt,ot=Nk(et,dt))}if(ot===1)throw ot=pk,Kk(et,0),Ck(et,tt),Dk(et,B$1()),ot;if(ot===6)throw Error(p$2(345));return et.finishedWork=et.current.alternate,et.finishedLanes=tt,Pk(et,tk,uk),Dk(et,B$1()),null}function Qk(et,tt){var ot=K$1;K$1|=1;try{return et(tt)}finally{K$1=ot,K$1===0&&(Gj=B$1()+500,fg&&jg())}}function Rk(et){wk!==null&&wk.tag===0&&!(K$1&6)&&Hk();var tt=K$1;K$1|=1;var ot=ok.transition,dt=C$2;try{if(ok.transition=null,C$2=1,et)return et()}finally{C$2=dt,ok.transition=ot,K$1=tt,!(K$1&6)&&jg()}}function Hj(){fj=ej.current,E(ej)}function Kk(et,tt){et.finishedWork=null,et.finishedLanes=0;var ot=et.timeoutHandle;if(ot!==-1&&(et.timeoutHandle=-1,Gf(ot)),Y$2!==null)for(ot=Y$2.return;ot!==null;){var dt=ot;switch(wg(dt),dt.tag){case 1:dt=dt.type.childContextTypes,dt!=null&&$f();break;case 3:zh(),E(Wf),E(H$2),Eh();break;case 5:Bh(dt);break;case 4:zh();break;case 13:E(L$1);break;case 19:E(L$1);break;case 10:ah(dt.type._context);break;case 22:case 23:Hj()}ot=ot.return}if(Q$2=et,Y$2=et=Pg(et.current,null),Z$3=fj=tt,T$2=0,pk=null,rk=qk=rh=0,tk=sk=null,fh!==null){for(tt=0;tt<fh.length;tt++)if(ot=fh[tt],dt=ot.interleaved,dt!==null){ot.interleaved=null;var ft=dt.next,pt=ot.pending;if(pt!==null){var mt=pt.next;pt.next=ft,dt.next=mt}ot.pending=dt}fh=null}return et}function Mk(et,tt){do{var ot=Y$2;try{if($g(),Fh.current=Rh,Ih){for(var dt=M$3.memoizedState;dt!==null;){var ft=dt.queue;ft!==null&&(ft.pending=null),dt=dt.next}Ih=!1}if(Hh=0,O$2=N$2=M$3=null,Jh=!1,Kh=0,nk.current=null,ot===null||ot.return===null){T$2=1,pk=tt,Y$2=null;break}e:{var pt=et,mt=ot.return,ht=ot,bt=tt;if(tt=Z$3,ht.flags|=32768,bt!==null&&typeof bt=="object"&&typeof bt.then=="function"){var yt=bt,xt=ht,gt=xt.tag;if(!(xt.mode&1)&&(gt===0||gt===11||gt===15)){var wt=xt.alternate;wt?(xt.updateQueue=wt.updateQueue,xt.memoizedState=wt.memoizedState,xt.lanes=wt.lanes):(xt.updateQueue=null,xt.memoizedState=null)}var Pt=Ui(mt);if(Pt!==null){Pt.flags&=-257,Vi(Pt,mt,ht,pt,tt),Pt.mode&1&&Si(pt,yt,tt),tt=Pt,bt=yt;var St=tt.updateQueue;if(St===null){var Et=new Set;Et.add(bt),tt.updateQueue=Et}else St.add(bt);break e}else{if(!(tt&1)){Si(pt,yt,tt),tj();break e}bt=Error(p$2(426))}}else if(I$2&&ht.mode&1){var Lt=Ui(mt);if(Lt!==null){!(Lt.flags&65536)&&(Lt.flags|=256),Vi(Lt,mt,ht,pt,tt),Jg(Ji(bt,ht));break e}}pt=bt=Ji(bt,ht),T$2!==4&&(T$2=2),sk===null?sk=[pt]:sk.push(pt),pt=mt;do{switch(pt.tag){case 3:pt.flags|=65536,tt&=-tt,pt.lanes|=tt;var It=Ni(pt,bt,tt);ph(pt,It);break e;case 1:ht=bt;var kt=pt.type,Nt=pt.stateNode;if(!(pt.flags&128)&&(typeof kt.getDerivedStateFromError=="function"||Nt!==null&&typeof Nt.componentDidCatch=="function"&&(Ri===null||!Ri.has(Nt)))){pt.flags|=65536,tt&=-tt,pt.lanes|=tt;var Ut=Qi(pt,ht,tt);ph(pt,Ut);break e}}pt=pt.return}while(pt!==null)}Sk(ot)}catch(Ft){tt=Ft,Y$2===ot&&ot!==null&&(Y$2=ot=ot.return);continue}break}while(!0)}function Jk(){var et=mk.current;return mk.current=Rh,et===null?Rh:et}function tj(){(T$2===0||T$2===3||T$2===2)&&(T$2=4),Q$2===null||!(rh&268435455)&&!(qk&268435455)||Ck(Q$2,Z$3)}function Ik(et,tt){var ot=K$1;K$1|=2;var dt=Jk();(Q$2!==et||Z$3!==tt)&&(uk=null,Kk(et,tt));do try{Tk();break}catch(ft){Mk(et,ft)}while(!0);if($g(),K$1=ot,mk.current=dt,Y$2!==null)throw Error(p$2(261));return Q$2=null,Z$3=0,T$2}function Tk(){for(;Y$2!==null;)Uk(Y$2)}function Lk(){for(;Y$2!==null&&!cc();)Uk(Y$2)}function Uk(et){var tt=Vk(et.alternate,et,fj);et.memoizedProps=et.pendingProps,tt===null?Sk(et):Y$2=tt,nk.current=null}function Sk(et){var tt=et;do{var ot=tt.alternate;if(et=tt.return,tt.flags&32768){if(ot=Ij(ot,tt),ot!==null){ot.flags&=32767,Y$2=ot;return}if(et!==null)et.flags|=32768,et.subtreeFlags=0,et.deletions=null;else{T$2=6,Y$2=null;return}}else if(ot=Ej(ot,tt,fj),ot!==null){Y$2=ot;return}if(tt=tt.sibling,tt!==null){Y$2=tt;return}Y$2=tt=et}while(tt!==null);T$2===0&&(T$2=5)}function Pk(et,tt,ot){var dt=C$2,ft=ok.transition;try{ok.transition=null,C$2=1,Wk(et,tt,ot,dt)}finally{ok.transition=ft,C$2=dt}return null}function Wk(et,tt,ot,dt){do Hk();while(wk!==null);if(K$1&6)throw Error(p$2(327));ot=et.finishedWork;var ft=et.finishedLanes;if(ot===null)return null;if(et.finishedWork=null,et.finishedLanes=0,ot===et.current)throw Error(p$2(177));et.callbackNode=null,et.callbackPriority=0;var pt=ot.lanes|ot.childLanes;if(Bc(et,pt),et===Q$2&&(Y$2=Q$2=null,Z$3=0),!(ot.subtreeFlags&2064)&&!(ot.flags&2064)||vk||(vk=!0,Fk(hc,function(){return Hk(),null})),pt=(ot.flags&15990)!==0,ot.subtreeFlags&15990||pt){pt=ok.transition,ok.transition=null;var mt=C$2;C$2=1;var ht=K$1;K$1|=4,nk.current=null,Oj(et,ot),dk(ot,et),Oe$1(Df),dd=!!Cf,Df=Cf=null,et.current=ot,hk(ot),dc(),K$1=ht,C$2=mt,ok.transition=pt}else et.current=ot;if(vk&&(vk=!1,wk=et,xk=ft),pt=et.pendingLanes,pt===0&&(Ri=null),mc(ot.stateNode),Dk(et,B$1()),tt!==null)for(dt=et.onRecoverableError,ot=0;ot<tt.length;ot++)ft=tt[ot],dt(ft.value,{componentStack:ft.stack,digest:ft.digest});if(Oi)throw Oi=!1,et=Pi,Pi=null,et;return xk&1&&et.tag!==0&&Hk(),pt=et.pendingLanes,pt&1?et===zk?yk++:(yk=0,zk=et):yk=0,jg(),null}function Hk(){if(wk!==null){var et=Dc(xk),tt=ok.transition,ot=C$2;try{if(ok.transition=null,C$2=16>et?16:et,wk===null)var dt=!1;else{if(et=wk,wk=null,xk=0,K$1&6)throw Error(p$2(331));var ft=K$1;for(K$1|=4,V$2=et.current;V$2!==null;){var pt=V$2,mt=pt.child;if(V$2.flags&16){var ht=pt.deletions;if(ht!==null){for(var bt=0;bt<ht.length;bt++){var yt=ht[bt];for(V$2=yt;V$2!==null;){var xt=V$2;switch(xt.tag){case 0:case 11:case 15:Pj(8,xt,pt)}var gt=xt.child;if(gt!==null)gt.return=xt,V$2=gt;else for(;V$2!==null;){xt=V$2;var wt=xt.sibling,Pt=xt.return;if(Sj(xt),xt===yt){V$2=null;break}if(wt!==null){wt.return=Pt,V$2=wt;break}V$2=Pt}}}var St=pt.alternate;if(St!==null){var Et=St.child;if(Et!==null){St.child=null;do{var Lt=Et.sibling;Et.sibling=null,Et=Lt}while(Et!==null)}}V$2=pt}}if(pt.subtreeFlags&2064&&mt!==null)mt.return=pt,V$2=mt;else e:for(;V$2!==null;){if(pt=V$2,pt.flags&2048)switch(pt.tag){case 0:case 11:case 15:Pj(9,pt,pt.return)}var It=pt.sibling;if(It!==null){It.return=pt.return,V$2=It;break e}V$2=pt.return}}var kt=et.current;for(V$2=kt;V$2!==null;){mt=V$2;var Nt=mt.child;if(mt.subtreeFlags&2064&&Nt!==null)Nt.return=mt,V$2=Nt;else e:for(mt=kt;V$2!==null;){if(ht=V$2,ht.flags&2048)try{switch(ht.tag){case 0:case 11:case 15:Qj(9,ht)}}catch(Ft){W$2(ht,ht.return,Ft)}if(ht===mt){V$2=null;break e}var Ut=ht.sibling;if(Ut!==null){Ut.return=ht.return,V$2=Ut;break e}V$2=ht.return}}if(K$1=ft,jg(),lc&&typeof lc.onPostCommitFiberRoot=="function")try{lc.onPostCommitFiberRoot(kc,et)}catch{}dt=!0}return dt}finally{C$2=ot,ok.transition=tt}}return!1}function Xk(et,tt,ot){tt=Ji(ot,tt),tt=Ni(et,tt,1),et=nh(et,tt,1),tt=R$1(),et!==null&&(Ac(et,1,tt),Dk(et,tt))}function W$2(et,tt,ot){if(et.tag===3)Xk(et,et,ot);else for(;tt!==null;){if(tt.tag===3){Xk(tt,et,ot);break}else if(tt.tag===1){var dt=tt.stateNode;if(typeof tt.type.getDerivedStateFromError=="function"||typeof dt.componentDidCatch=="function"&&(Ri===null||!Ri.has(dt))){et=Ji(ot,et),et=Qi(tt,et,1),tt=nh(tt,et,1),et=R$1(),tt!==null&&(Ac(tt,1,et),Dk(tt,et));break}}tt=tt.return}}function Ti(et,tt,ot){var dt=et.pingCache;dt!==null&&dt.delete(tt),tt=R$1(),et.pingedLanes|=et.suspendedLanes&ot,Q$2===et&&(Z$3&ot)===ot&&(T$2===4||T$2===3&&(Z$3&130023424)===Z$3&&500>B$1()-fk?Kk(et,0):rk|=ot),Dk(et,tt)}function Yk(et,tt){tt===0&&(et.mode&1?(tt=sc,sc<<=1,!(sc&130023424)&&(sc=4194304)):tt=1);var ot=R$1();et=ih(et,tt),et!==null&&(Ac(et,tt,ot),Dk(et,ot))}function uj(et){var tt=et.memoizedState,ot=0;tt!==null&&(ot=tt.retryLane),Yk(et,ot)}function bk(et,tt){var ot=0;switch(et.tag){case 13:var dt=et.stateNode,ft=et.memoizedState;ft!==null&&(ot=ft.retryLane);break;case 19:dt=et.stateNode;break;default:throw Error(p$2(314))}dt!==null&&dt.delete(tt),Yk(et,ot)}var Vk;Vk=function(et,tt,ot){if(et!==null)if(et.memoizedProps!==tt.pendingProps||Wf.current)dh=!0;else{if(!(et.lanes&ot)&&!(tt.flags&128))return dh=!1,yj(et,tt,ot);dh=!!(et.flags&131072)}else dh=!1,I$2&&tt.flags&1048576&&ug(tt,ng,tt.index);switch(tt.lanes=0,tt.tag){case 2:var dt=tt.type;ij(et,tt),et=tt.pendingProps;var ft=Yf(tt,H$2.current);ch(tt,ot),ft=Nh(null,tt,dt,et,ft,ot);var pt=Sh();return tt.flags|=1,typeof ft=="object"&&ft!==null&&typeof ft.render=="function"&&ft.$$typeof===void 0?(tt.tag=1,tt.memoizedState=null,tt.updateQueue=null,Zf(dt)?(pt=!0,cg(tt)):pt=!1,tt.memoizedState=ft.state!==null&&ft.state!==void 0?ft.state:null,kh(tt),ft.updater=Ei,tt.stateNode=ft,ft._reactInternals=tt,Ii(tt,dt,et,ot),tt=jj(null,tt,dt,!0,pt,ot)):(tt.tag=0,I$2&&pt&&vg(tt),Xi(null,tt,ft,ot),tt=tt.child),tt;case 16:dt=tt.elementType;e:{switch(ij(et,tt),et=tt.pendingProps,ft=dt._init,dt=ft(dt._payload),tt.type=dt,ft=tt.tag=Zk(dt),et=Ci(dt,et),ft){case 0:tt=cj(null,tt,dt,et,ot);break e;case 1:tt=hj(null,tt,dt,et,ot);break e;case 11:tt=Yi(null,tt,dt,et,ot);break e;case 14:tt=$i(null,tt,dt,Ci(dt.type,et),ot);break e}throw Error(p$2(306,dt,""))}return tt;case 0:return dt=tt.type,ft=tt.pendingProps,ft=tt.elementType===dt?ft:Ci(dt,ft),cj(et,tt,dt,ft,ot);case 1:return dt=tt.type,ft=tt.pendingProps,ft=tt.elementType===dt?ft:Ci(dt,ft),hj(et,tt,dt,ft,ot);case 3:e:{if(kj(tt),et===null)throw Error(p$2(387));dt=tt.pendingProps,pt=tt.memoizedState,ft=pt.element,lh(et,tt),qh(tt,dt,null,ot);var mt=tt.memoizedState;if(dt=mt.element,pt.isDehydrated)if(pt={element:dt,isDehydrated:!1,cache:mt.cache,pendingSuspenseBoundaries:mt.pendingSuspenseBoundaries,transitions:mt.transitions},tt.updateQueue.baseState=pt,tt.memoizedState=pt,tt.flags&256){ft=Ji(Error(p$2(423)),tt),tt=lj(et,tt,dt,ot,ft);break e}else if(dt!==ft){ft=Ji(Error(p$2(424)),tt),tt=lj(et,tt,dt,ot,ft);break e}else for(yg=Lf(tt.stateNode.containerInfo.firstChild),xg=tt,I$2=!0,zg=null,ot=Vg(tt,null,dt,ot),tt.child=ot;ot;)ot.flags=ot.flags&-3|4096,ot=ot.sibling;else{if(Ig(),dt===ft){tt=Zi(et,tt,ot);break e}Xi(et,tt,dt,ot)}tt=tt.child}return tt;case 5:return Ah(tt),et===null&&Eg(tt),dt=tt.type,ft=tt.pendingProps,pt=et!==null?et.memoizedProps:null,mt=ft.children,Ef(dt,ft)?mt=null:pt!==null&&Ef(dt,pt)&&(tt.flags|=32),gj(et,tt),Xi(et,tt,mt,ot),tt.child;case 6:return et===null&&Eg(tt),null;case 13:return oj(et,tt,ot);case 4:return yh(tt,tt.stateNode.containerInfo),dt=tt.pendingProps,et===null?tt.child=Ug(tt,null,dt,ot):Xi(et,tt,dt,ot),tt.child;case 11:return dt=tt.type,ft=tt.pendingProps,ft=tt.elementType===dt?ft:Ci(dt,ft),Yi(et,tt,dt,ft,ot);case 7:return Xi(et,tt,tt.pendingProps,ot),tt.child;case 8:return Xi(et,tt,tt.pendingProps.children,ot),tt.child;case 12:return Xi(et,tt,tt.pendingProps.children,ot),tt.child;case 10:e:{if(dt=tt.type._context,ft=tt.pendingProps,pt=tt.memoizedProps,mt=ft.value,G$2(Wg,dt._currentValue),dt._currentValue=mt,pt!==null)if(He$1(pt.value,mt)){if(pt.children===ft.children&&!Wf.current){tt=Zi(et,tt,ot);break e}}else for(pt=tt.child,pt!==null&&(pt.return=tt);pt!==null;){var ht=pt.dependencies;if(ht!==null){mt=pt.child;for(var bt=ht.firstContext;bt!==null;){if(bt.context===dt){if(pt.tag===1){bt=mh(-1,ot&-ot),bt.tag=2;var yt=pt.updateQueue;if(yt!==null){yt=yt.shared;var xt=yt.pending;xt===null?bt.next=bt:(bt.next=xt.next,xt.next=bt),yt.pending=bt}}pt.lanes|=ot,bt=pt.alternate,bt!==null&&(bt.lanes|=ot),bh(pt.return,ot,tt),ht.lanes|=ot;break}bt=bt.next}}else if(pt.tag===10)mt=pt.type===tt.type?null:pt.child;else if(pt.tag===18){if(mt=pt.return,mt===null)throw Error(p$2(341));mt.lanes|=ot,ht=mt.alternate,ht!==null&&(ht.lanes|=ot),bh(mt,ot,tt),mt=pt.sibling}else mt=pt.child;if(mt!==null)mt.return=pt;else for(mt=pt;mt!==null;){if(mt===tt){mt=null;break}if(pt=mt.sibling,pt!==null){pt.return=mt.return,mt=pt;break}mt=mt.return}pt=mt}Xi(et,tt,ft.children,ot),tt=tt.child}return tt;case 9:return ft=tt.type,dt=tt.pendingProps.children,ch(tt,ot),ft=eh(ft),dt=dt(ft),tt.flags|=1,Xi(et,tt,dt,ot),tt.child;case 14:return dt=tt.type,ft=Ci(dt,tt.pendingProps),ft=Ci(dt.type,ft),$i(et,tt,dt,ft,ot);case 15:return bj(et,tt,tt.type,tt.pendingProps,ot);case 17:return dt=tt.type,ft=tt.pendingProps,ft=tt.elementType===dt?ft:Ci(dt,ft),ij(et,tt),tt.tag=1,Zf(dt)?(et=!0,cg(tt)):et=!1,ch(tt,ot),Gi(tt,dt,ft),Ii(tt,dt,ft,ot),jj(null,tt,dt,!0,et,ot);case 19:return xj(et,tt,ot);case 22:return dj(et,tt,ot)}throw Error(p$2(156,tt.tag))};function Fk(et,tt){return ac(et,tt)}function $k(et,tt,ot,dt){this.tag=et,this.key=ot,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=tt,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=dt,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Bg(et,tt,ot,dt){return new $k(et,tt,ot,dt)}function aj(et){return et=et.prototype,!(!et||!et.isReactComponent)}function Zk(et){if(typeof et=="function")return aj(et)?1:0;if(et!=null){if(et=et.$$typeof,et===Da)return 11;if(et===Ga)return 14}return 2}function Pg(et,tt){var ot=et.alternate;return ot===null?(ot=Bg(et.tag,tt,et.key,et.mode),ot.elementType=et.elementType,ot.type=et.type,ot.stateNode=et.stateNode,ot.alternate=et,et.alternate=ot):(ot.pendingProps=tt,ot.type=et.type,ot.flags=0,ot.subtreeFlags=0,ot.deletions=null),ot.flags=et.flags&14680064,ot.childLanes=et.childLanes,ot.lanes=et.lanes,ot.child=et.child,ot.memoizedProps=et.memoizedProps,ot.memoizedState=et.memoizedState,ot.updateQueue=et.updateQueue,tt=et.dependencies,ot.dependencies=tt===null?null:{lanes:tt.lanes,firstContext:tt.firstContext},ot.sibling=et.sibling,ot.index=et.index,ot.ref=et.ref,ot}function Rg(et,tt,ot,dt,ft,pt){var mt=2;if(dt=et,typeof et=="function")aj(et)&&(mt=1);else if(typeof et=="string")mt=5;else e:switch(et){case ya:return Tg(ot.children,ft,pt,tt);case za:mt=8,ft|=8;break;case Aa:return et=Bg(12,ot,tt,ft|2),et.elementType=Aa,et.lanes=pt,et;case Ea:return et=Bg(13,ot,tt,ft),et.elementType=Ea,et.lanes=pt,et;case Fa:return et=Bg(19,ot,tt,ft),et.elementType=Fa,et.lanes=pt,et;case Ia:return pj(ot,ft,pt,tt);default:if(typeof et=="object"&&et!==null)switch(et.$$typeof){case Ba:mt=10;break e;case Ca:mt=9;break e;case Da:mt=11;break e;case Ga:mt=14;break e;case Ha:mt=16,dt=null;break e}throw Error(p$2(130,et==null?et:typeof et,""))}return tt=Bg(mt,ot,tt,ft),tt.elementType=et,tt.type=dt,tt.lanes=pt,tt}function Tg(et,tt,ot,dt){return et=Bg(7,et,dt,tt),et.lanes=ot,et}function pj(et,tt,ot,dt){return et=Bg(22,et,dt,tt),et.elementType=Ia,et.lanes=ot,et.stateNode={isHidden:!1},et}function Qg(et,tt,ot){return et=Bg(6,et,null,tt),et.lanes=ot,et}function Sg(et,tt,ot){return tt=Bg(4,et.children!==null?et.children:[],et.key,tt),tt.lanes=ot,tt.stateNode={containerInfo:et.containerInfo,pendingChildren:null,implementation:et.implementation},tt}function al(et,tt,ot,dt,ft){this.tag=tt,this.containerInfo=et,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zc(0),this.expirationTimes=zc(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zc(0),this.identifierPrefix=dt,this.onRecoverableError=ft,this.mutableSourceEagerHydrationData=null}function bl(et,tt,ot,dt,ft,pt,mt,ht,bt){return et=new al(et,tt,ot,ht,bt),tt===1?(tt=1,pt===!0&&(tt|=8)):tt=0,pt=Bg(3,null,null,tt),et.current=pt,pt.stateNode=et,pt.memoizedState={element:dt,isDehydrated:ot,cache:null,transitions:null,pendingSuspenseBoundaries:null},kh(pt),et}function cl(et,tt,ot){var dt=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:wa,key:dt==null?null:""+dt,children:et,containerInfo:tt,implementation:ot}}function dl(et){if(!et)return Vf;et=et._reactInternals;e:{if(Vb(et)!==et||et.tag!==1)throw Error(p$2(170));var tt=et;do{switch(tt.tag){case 3:tt=tt.stateNode.context;break e;case 1:if(Zf(tt.type)){tt=tt.stateNode.__reactInternalMemoizedMergedChildContext;break e}}tt=tt.return}while(tt!==null);throw Error(p$2(171))}if(et.tag===1){var ot=et.type;if(Zf(ot))return bg(et,ot,tt)}return tt}function el(et,tt,ot,dt,ft,pt,mt,ht,bt){return et=bl(ot,dt,!0,et,ft,pt,mt,ht,bt),et.context=dl(null),ot=et.current,dt=R$1(),ft=yi(ot),pt=mh(dt,ft),pt.callback=tt??null,nh(ot,pt,ft),et.current.lanes=ft,Ac(et,ft,dt),Dk(et,dt),et}function fl$3(et,tt,ot,dt){var ft=tt.current,pt=R$1(),mt=yi(ft);return ot=dl(ot),tt.context===null?tt.context=ot:tt.pendingContext=ot,tt=mh(pt,mt),tt.payload={element:et},dt=dt===void 0?null:dt,dt!==null&&(tt.callback=dt),et=nh(ft,tt,mt),et!==null&&(gi(et,ft,mt,pt),oh(et,ft,mt)),mt}function gl(et){if(et=et.current,!et.child)return null;switch(et.child.tag){case 5:return et.child.stateNode;default:return et.child.stateNode}}function hl(et,tt){if(et=et.memoizedState,et!==null&&et.dehydrated!==null){var ot=et.retryLane;et.retryLane=ot!==0&&ot<tt?ot:tt}}function il(et,tt){hl(et,tt),(et=et.alternate)&&hl(et,tt)}function jl(){return null}var kl=typeof reportError=="function"?reportError:function(et){console.error(et)};function ll(et){this._internalRoot=et}ml.prototype.render=ll.prototype.render=function(et){var tt=this._internalRoot;if(tt===null)throw Error(p$2(409));fl$3(et,tt,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var et=this._internalRoot;if(et!==null){this._internalRoot=null;var tt=et.containerInfo;Rk(function(){fl$3(null,et,null,null)}),tt[uf]=null}};function ml(et){this._internalRoot=et}ml.prototype.unstable_scheduleHydration=function(et){if(et){var tt=Hc();et={blockedOn:null,target:et,priority:tt};for(var ot=0;ot<Qc.length&&tt!==0&&tt<Qc[ot].priority;ot++);Qc.splice(ot,0,et),ot===0&&Vc(et)}};function nl(et){return!(!et||et.nodeType!==1&&et.nodeType!==9&&et.nodeType!==11)}function ol(et){return!(!et||et.nodeType!==1&&et.nodeType!==9&&et.nodeType!==11&&(et.nodeType!==8||et.nodeValue!==" react-mount-point-unstable "))}function pl(){}function ql(et,tt,ot,dt,ft){if(ft){if(typeof dt=="function"){var pt=dt;dt=function(){var yt=gl(mt);pt.call(yt)}}var mt=el(tt,dt,et,0,null,!1,!1,"",pl);return et._reactRootContainer=mt,et[uf]=mt.current,sf(et.nodeType===8?et.parentNode:et),Rk(),mt}for(;ft=et.lastChild;)et.removeChild(ft);if(typeof dt=="function"){var ht=dt;dt=function(){var yt=gl(bt);ht.call(yt)}}var bt=bl(et,0,!1,null,null,!1,!1,"",pl);return et._reactRootContainer=bt,et[uf]=bt.current,sf(et.nodeType===8?et.parentNode:et),Rk(function(){fl$3(tt,bt,ot,dt)}),bt}function rl(et,tt,ot,dt,ft){var pt=ot._reactRootContainer;if(pt){var mt=pt;if(typeof ft=="function"){var ht=ft;ft=function(){var bt=gl(mt);ht.call(bt)}}fl$3(tt,mt,et,ft)}else mt=ql(ot,tt,et,ft,dt);return gl(mt)}Ec=function(et){switch(et.tag){case 3:var tt=et.stateNode;if(tt.current.memoizedState.isDehydrated){var ot=tc(tt.pendingLanes);ot!==0&&(Cc(tt,ot|1),Dk(tt,B$1()),!(K$1&6)&&(Gj=B$1()+500,jg()))}break;case 13:Rk(function(){var dt=ih(et,1);if(dt!==null){var ft=R$1();gi(dt,et,1,ft)}}),il(et,1)}};Fc=function(et){if(et.tag===13){var tt=ih(et,134217728);if(tt!==null){var ot=R$1();gi(tt,et,134217728,ot)}il(et,134217728)}};Gc=function(et){if(et.tag===13){var tt=yi(et),ot=ih(et,tt);if(ot!==null){var dt=R$1();gi(ot,et,tt,dt)}il(et,tt)}};Hc=function(){return C$2};Ic=function(et,tt){var ot=C$2;try{return C$2=et,tt()}finally{C$2=ot}};yb=function(et,tt,ot){switch(tt){case"input":if(bb(et,ot),tt=ot.name,ot.type==="radio"&&tt!=null){for(ot=et;ot.parentNode;)ot=ot.parentNode;for(ot=ot.querySelectorAll("input[name="+JSON.stringify(""+tt)+'][type="radio"]'),tt=0;tt<ot.length;tt++){var dt=ot[tt];if(dt!==et&&dt.form===et.form){var ft=Db(dt);if(!ft)throw Error(p$2(90));Wa(dt),bb(dt,ft)}}}break;case"textarea":ib(et,ot);break;case"select":tt=ot.value,tt!=null&&fb(et,!!ot.multiple,tt,!1)}};Gb=Qk;Hb=Rk;var sl={usingClientEntryPoint:!1,Events:[Cb,ue$2,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(et){return et=Zb(et),et===null?null:et.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||jl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch{}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;reactDom_production_min.createPortal=function(et,tt){var ot=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!nl(tt))throw Error(p$2(200));return cl(et,tt,null,ot)};reactDom_production_min.createRoot=function(et,tt){if(!nl(et))throw Error(p$2(299));var ot=!1,dt="",ft=kl;return tt!=null&&(tt.unstable_strictMode===!0&&(ot=!0),tt.identifierPrefix!==void 0&&(dt=tt.identifierPrefix),tt.onRecoverableError!==void 0&&(ft=tt.onRecoverableError)),tt=bl(et,1,!1,null,null,ot,!1,dt,ft),et[uf]=tt.current,sf(et.nodeType===8?et.parentNode:et),new ll(tt)};reactDom_production_min.findDOMNode=function(et){if(et==null)return null;if(et.nodeType===1)return et;var tt=et._reactInternals;if(tt===void 0)throw typeof et.render=="function"?Error(p$2(188)):(et=Object.keys(et).join(","),Error(p$2(268,et)));return et=Zb(tt),et=et===null?null:et.stateNode,et};reactDom_production_min.flushSync=function(et){return Rk(et)};reactDom_production_min.hydrate=function(et,tt,ot){if(!ol(tt))throw Error(p$2(200));return rl(null,et,tt,!0,ot)};reactDom_production_min.hydrateRoot=function(et,tt,ot){if(!nl(et))throw Error(p$2(405));var dt=ot!=null&&ot.hydratedSources||null,ft=!1,pt="",mt=kl;if(ot!=null&&(ot.unstable_strictMode===!0&&(ft=!0),ot.identifierPrefix!==void 0&&(pt=ot.identifierPrefix),ot.onRecoverableError!==void 0&&(mt=ot.onRecoverableError)),tt=el(tt,null,et,1,ot??null,ft,!1,pt,mt),et[uf]=tt.current,sf(et),dt)for(et=0;et<dt.length;et++)ot=dt[et],ft=ot._getVersion,ft=ft(ot._source),tt.mutableSourceEagerHydrationData==null?tt.mutableSourceEagerHydrationData=[ot,ft]:tt.mutableSourceEagerHydrationData.push(ot,ft);return new ml(tt)};reactDom_production_min.render=function(et,tt,ot){if(!ol(tt))throw Error(p$2(200));return rl(null,et,tt,!1,ot)};reactDom_production_min.unmountComponentAtNode=function(et){if(!ol(et))throw Error(p$2(40));return et._reactRootContainer?(Rk(function(){rl(null,null,et,!1,function(){et._reactRootContainer=null,et[uf]=null})}),!0):!1};reactDom_production_min.unstable_batchedUpdates=Qk;reactDom_production_min.unstable_renderSubtreeIntoContainer=function(et,tt,ot,dt){if(!ol(ot))throw Error(p$2(200));if(et==null||et._reactInternals===void 0)throw Error(p$2(38));return rl(et,tt,ot,!1,dt)};reactDom_production_min.version="18.3.1-next-f1338f8080-20240426";function checkDCE(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(et){console.error(et)}}checkDCE(),reactDom.exports=reactDom_production_min;var reactDomExports=reactDom.exports,m$3=reactDomExports;client.createRoot=m$3.createRoot,client.hydrateRoot=m$3.hydrateRoot;function evaluateThis$5(et){return et("return this")}const xglobal$5=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:evaluateThis$5(Function);function extractGlobal$5(et,tt){return typeof xglobal$5[et]>"u"?tt:xglobal$5[et]}let TextDecoder$7=class{constructor(tt){Ot(this,"__encoding");this.__encoding=tt}decode(tt){let ot="";for(let dt=0,ft=tt.length;dt<ft;dt++)ot+=String.fromCharCode(tt[dt]);return ot}};const TextDecoder$6=extractGlobal$5("TextDecoder",TextDecoder$7);let TextEncoder$c=class{encode(tt){const ot=tt.length,dt=new Uint8Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=tt.charCodeAt(ft);return dt}};const TextEncoder$b=extractGlobal$5("TextEncoder",TextEncoder$c);function isFunction$9(et){return typeof et=="function"}function arrayChunk$1(et,tt){const ot=Math.ceil(et.length/tt);if(ot===1)return[et];const dt=Array(ot);for(let ft=0;ft<ot;ft++){const pt=ft*tt;dt[ft]=et.slice(pt,pt+tt)}return dt}function arrayFlatten$1(et){const tt=et.length;if(tt===0)return[];if(tt===1)return et[0];let ot=0;for(let pt=0;pt<tt;pt++)ot+=et[pt].length;const dt=new Array(ot);let ft=-1;for(let pt=0;pt<tt;pt++){const mt=et[pt];for(let ht=0,bt=mt.length;ht<bt;ht++)dt[++ft]=mt[ht]}return dt}function assert$1(et,tt){if(!et)throw new Error(isFunction$9(tt)?tt():tt)}function assertReturn$1(et,tt){return assert$1(et!=null,tt),et}function assertUnreachable(et){throw new Error(`This codepath should be unreachable. Unhandled input: ${et}`)}function invalidFallback$5(){return Number.NaN}const BigInt$6=extractGlobal$5("BigInt",invalidFallback$5),_0n$6=BigInt$6(0),_1n$8=BigInt$6(1),U8_MAX=BigInt$6(256),U16_MAX=BigInt$6(256*256),U64_MAX=BigInt$6("0x10000000000000000");function u8aToBigInt(et,{isLe:tt=!0,isNegative:ot=!1}={}){tt||(et=et.slice().reverse());const dt=et.length;if(ot&&dt&&et[dt-1]&128){switch(dt){case 0:return BigInt$6(0);case 1:return BigInt$6((et[0]^255)*-1-1);case 2:return BigInt$6((et[0]+(et[1]<<8)^65535)*-1-1);case 4:return BigInt$6((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)*-1-1)}const pt=new DataView(et.buffer,et.byteOffset);if(dt===8)return pt.getBigInt64(0,!0);let mt=BigInt$6(0);const ht=dt%2;for(let bt=dt-2;bt>=ht;bt-=2)mt=mt*U16_MAX+BigInt$6(pt.getUint16(bt,!0)^65535);return ht&&(mt=mt*U8_MAX+BigInt$6(et[0]^255)),mt*-_1n$8-_1n$8}switch(dt){case 0:return BigInt$6(0);case 1:return BigInt$6(et[0]);case 2:return BigInt$6(et[0]+(et[1]<<8));case 4:return BigInt$6(et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216)}const ft=new DataView(et.buffer,et.byteOffset);switch(dt){case 8:return ft.getBigUint64(0,!0);case 16:return ft.getBigUint64(8,!0)*U64_MAX+ft.getBigUint64(0,!0);default:{let pt=BigInt$6(0);const mt=dt%2;for(let ht=dt-2;ht>=mt;ht-=2)pt=pt*U16_MAX+BigInt$6(ft.getUint16(ht,!0));return mt&&(pt=pt*U8_MAX+BigInt$6(et[0])),pt}}}const CHR$9="0123456789abcdef",U8$c=new Uint8Array(256),U16$c=new Uint8Array(256*256);for(let et=0,tt=CHR$9.length;et<tt;et++)U8$c[CHR$9[et].charCodeAt(0)|0]=et|0,et>9&&(U8$c[CHR$9[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$c[tt|ot]=U8$c[et]<<4|U8$c[ot]}function hexToU8a$6(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$c[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}function hexToBigInt(et,{isLe:tt=!1,isNegative:ot=!1}={}){return!et||et==="0x"?BigInt$6(0):u8aToBigInt(hexToU8a$6(et),{isLe:tt,isNegative:ot})}var bn={exports:{}};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$0=getAugmentedNamespace(__viteBrowserExternal$1);bn.exports;(function(et){(function(tt,ot){function dt(Ht,vt){if(!Ht)throw new Error(vt||"Assertion failed")}function ft(Ht,vt){Ht.super_=vt;var Vt=function(){};Vt.prototype=vt.prototype,Ht.prototype=new Vt,Ht.prototype.constructor=Ht}function pt(Ht,vt,Vt){if(pt.isBN(Ht))return Ht;this.negative=0,this.words=null,this.length=0,this.red=null,Ht!==null&&((vt==="le"||vt==="be")&&(Vt=vt,vt=10),this._init(Ht||0,vt||10,Vt||"be"))}typeof tt=="object"?tt.exports=pt:ot.BN=pt,pt.BN=pt,pt.wordSize=26;var mt;try{typeof window<"u"&&typeof window.Buffer<"u"?mt=window.Buffer:mt=require$$0.Buffer}catch{}pt.isBN=function(vt){return vt instanceof pt?!0:vt!==null&&typeof vt=="object"&&vt.constructor.wordSize===pt.wordSize&&Array.isArray(vt.words)},pt.max=function(vt,Vt){return vt.cmp(Vt)>0?vt:Vt},pt.min=function(vt,Vt){return vt.cmp(Vt)<0?vt:Vt},pt.prototype._init=function(vt,Vt,At){if(typeof vt=="number")return this._initNumber(vt,Vt,At);if(typeof vt=="object")return this._initArray(vt,Vt,At);Vt==="hex"&&(Vt=16),dt(Vt===(Vt|0)&&Vt>=2&&Vt<=36),vt=vt.toString().replace(/\s+/g,"");var Bt=0;vt[0]==="-"&&(Bt++,this.negative=1),Bt<vt.length&&(Vt===16?this._parseHex(vt,Bt,At):(this._parseBase(vt,Vt,Bt),At==="le"&&this._initArray(this.toArray(),Vt,At)))},pt.prototype._initNumber=function(vt,Vt,At){vt<0&&(this.negative=1,vt=-vt),vt<67108864?(this.words=[vt&67108863],this.length=1):vt<4503599627370496?(this.words=[vt&67108863,vt/67108864&67108863],this.length=2):(dt(vt<9007199254740992),this.words=[vt&67108863,vt/67108864&67108863,1],this.length=3),At==="le"&&this._initArray(this.toArray(),Vt,At)},pt.prototype._initArray=function(vt,Vt,At){if(dt(typeof vt.length=="number"),vt.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(vt.length/3),this.words=new Array(this.length);for(var Bt=0;Bt<this.length;Bt++)this.words[Bt]=0;var Mt,Ct,Dt=0;if(At==="be")for(Bt=vt.length-1,Mt=0;Bt>=0;Bt-=3)Ct=vt[Bt]|vt[Bt-1]<<8|vt[Bt-2]<<16,this.words[Mt]|=Ct<<Dt&67108863,this.words[Mt+1]=Ct>>>26-Dt&67108863,Dt+=24,Dt>=26&&(Dt-=26,Mt++);else if(At==="le")for(Bt=0,Mt=0;Bt<vt.length;Bt+=3)Ct=vt[Bt]|vt[Bt+1]<<8|vt[Bt+2]<<16,this.words[Mt]|=Ct<<Dt&67108863,this.words[Mt+1]=Ct>>>26-Dt&67108863,Dt+=24,Dt>=26&&(Dt-=26,Mt++);return this._strip()};function ht(Ht,vt){var Vt=Ht.charCodeAt(vt);if(Vt>=48&&Vt<=57)return Vt-48;if(Vt>=65&&Vt<=70)return Vt-55;if(Vt>=97&&Vt<=102)return Vt-87;dt(!1,"Invalid character in "+Ht)}function bt(Ht,vt,Vt){var At=ht(Ht,Vt);return Vt-1>=vt&&(At|=ht(Ht,Vt-1)<<4),At}pt.prototype._parseHex=function(vt,Vt,At){this.length=Math.ceil((vt.length-Vt)/6),this.words=new Array(this.length);for(var Bt=0;Bt<this.length;Bt++)this.words[Bt]=0;var Mt=0,Ct=0,Dt;if(At==="be")for(Bt=vt.length-1;Bt>=Vt;Bt-=2)Dt=bt(vt,Vt,Bt)<<Mt,this.words[Ct]|=Dt&67108863,Mt>=18?(Mt-=18,Ct+=1,this.words[Ct]|=Dt>>>26):Mt+=8;else{var Rt=vt.length-Vt;for(Bt=Rt%2===0?Vt+1:Vt;Bt<vt.length;Bt+=2)Dt=bt(vt,Vt,Bt)<<Mt,this.words[Ct]|=Dt&67108863,Mt>=18?(Mt-=18,Ct+=1,this.words[Ct]|=Dt>>>26):Mt+=8}this._strip()};function yt(Ht,vt,Vt,At){for(var Bt=0,Mt=0,Ct=Math.min(Ht.length,Vt),Dt=vt;Dt<Ct;Dt++){var Rt=Ht.charCodeAt(Dt)-48;Bt*=At,Rt>=49?Mt=Rt-49+10:Rt>=17?Mt=Rt-17+10:Mt=Rt,dt(Rt>=0&&Mt<At,"Invalid character"),Bt+=Mt}return Bt}pt.prototype._parseBase=function(vt,Vt,At){this.words=[0],this.length=1;for(var Bt=0,Mt=1;Mt<=67108863;Mt*=Vt)Bt++;Bt--,Mt=Mt/Vt|0;for(var Ct=vt.length-At,Dt=Ct%Bt,Rt=Math.min(Ct,Ct-Dt)+At,Tt=0,zt=At;zt<Rt;zt+=Bt)Tt=yt(vt,zt,zt+Bt,Vt),this.imuln(Mt),this.words[0]+Tt<67108864?this.words[0]+=Tt:this._iaddn(Tt);if(Dt!==0){var Kt=1;for(Tt=yt(vt,zt,vt.length,Vt),zt=0;zt<Dt;zt++)Kt*=Vt;this.imuln(Kt),this.words[0]+Tt<67108864?this.words[0]+=Tt:this._iaddn(Tt)}this._strip()},pt.prototype.copy=function(vt){vt.words=new Array(this.length);for(var Vt=0;Vt<this.length;Vt++)vt.words[Vt]=this.words[Vt];vt.length=this.length,vt.negative=this.negative,vt.red=this.red};function xt(Ht,vt){Ht.words=vt.words,Ht.length=vt.length,Ht.negative=vt.negative,Ht.red=vt.red}if(pt.prototype._move=function(vt){xt(vt,this)},pt.prototype.clone=function(){var vt=new pt(null);return this.copy(vt),vt},pt.prototype._expand=function(vt){for(;this.length<vt;)this.words[this.length++]=0;return this},pt.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},pt.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{pt.prototype[Symbol.for("nodejs.util.inspect.custom")]=gt}catch{pt.prototype.inspect=gt}else pt.prototype.inspect=gt;function gt(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var wt=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],Pt=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],St=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];pt.prototype.toString=function(vt,Vt){vt=vt||10,Vt=Vt|0||1;var At;if(vt===16||vt==="hex"){At="";for(var Bt=0,Mt=0,Ct=0;Ct<this.length;Ct++){var Dt=this.words[Ct],Rt=((Dt<<Bt|Mt)&16777215).toString(16);Mt=Dt>>>24-Bt&16777215,Bt+=2,Bt>=26&&(Bt-=26,Ct--),Mt!==0||Ct!==this.length-1?At=wt[6-Rt.length]+Rt+At:At=Rt+At}for(Mt!==0&&(At=Mt.toString(16)+At);At.length%Vt!==0;)At="0"+At;return this.negative!==0&&(At="-"+At),At}if(vt===(vt|0)&&vt>=2&&vt<=36){var Tt=Pt[vt],zt=St[vt];At="";var Kt=this.clone();for(Kt.negative=0;!Kt.isZero();){var Jt=Kt.modrn(zt).toString(vt);Kt=Kt.idivn(zt),Kt.isZero()?At=Jt+At:At=wt[Tt-Jt.length]+Jt+At}for(this.isZero()&&(At="0"+At);At.length%Vt!==0;)At="0"+At;return this.negative!==0&&(At="-"+At),At}dt(!1,"Base should be between 2 and 36")},pt.prototype.toNumber=function(){var vt=this.words[0];return this.length===2?vt+=this.words[1]*67108864:this.length===3&&this.words[2]===1?vt+=4503599627370496+this.words[1]*67108864:this.length>2&&dt(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-vt:vt},pt.prototype.toJSON=function(){return this.toString(16,2)},mt&&(pt.prototype.toBuffer=function(vt,Vt){return this.toArrayLike(mt,vt,Vt)}),pt.prototype.toArray=function(vt,Vt){return this.toArrayLike(Array,vt,Vt)};var Et=function(vt,Vt){return vt.allocUnsafe?vt.allocUnsafe(Vt):new vt(Vt)};pt.prototype.toArrayLike=function(vt,Vt,At){this._strip();var Bt=this.byteLength(),Mt=At||Math.max(1,Bt);dt(Bt<=Mt,"byte array longer than desired length"),dt(Mt>0,"Requested array length <= 0");var Ct=Et(vt,Mt),Dt=Vt==="le"?"LE":"BE";return this["_toArrayLike"+Dt](Ct,Bt),Ct},pt.prototype._toArrayLikeLE=function(vt,Vt){for(var At=0,Bt=0,Mt=0,Ct=0;Mt<this.length;Mt++){var Dt=this.words[Mt]<<Ct|Bt;vt[At++]=Dt&255,At<vt.length&&(vt[At++]=Dt>>8&255),At<vt.length&&(vt[At++]=Dt>>16&255),Ct===6?(At<vt.length&&(vt[At++]=Dt>>24&255),Bt=0,Ct=0):(Bt=Dt>>>24,Ct+=2)}if(At<vt.length)for(vt[At++]=Bt;At<vt.length;)vt[At++]=0},pt.prototype._toArrayLikeBE=function(vt,Vt){for(var At=vt.length-1,Bt=0,Mt=0,Ct=0;Mt<this.length;Mt++){var Dt=this.words[Mt]<<Ct|Bt;vt[At--]=Dt&255,At>=0&&(vt[At--]=Dt>>8&255),At>=0&&(vt[At--]=Dt>>16&255),Ct===6?(At>=0&&(vt[At--]=Dt>>24&255),Bt=0,Ct=0):(Bt=Dt>>>24,Ct+=2)}if(At>=0)for(vt[At--]=Bt;At>=0;)vt[At--]=0},Math.clz32?pt.prototype._countBits=function(vt){return 32-Math.clz32(vt)}:pt.prototype._countBits=function(vt){var Vt=vt,At=0;return Vt>=4096&&(At+=13,Vt>>>=13),Vt>=64&&(At+=7,Vt>>>=7),Vt>=8&&(At+=4,Vt>>>=4),Vt>=2&&(At+=2,Vt>>>=2),At+Vt},pt.prototype._zeroBits=function(vt){if(vt===0)return 26;var Vt=vt,At=0;return Vt&8191||(At+=13,Vt>>>=13),Vt&127||(At+=7,Vt>>>=7),Vt&15||(At+=4,Vt>>>=4),Vt&3||(At+=2,Vt>>>=2),Vt&1||At++,At},pt.prototype.bitLength=function(){var vt=this.words[this.length-1],Vt=this._countBits(vt);return(this.length-1)*26+Vt};function Lt(Ht){for(var vt=new Array(Ht.bitLength()),Vt=0;Vt<vt.length;Vt++){var At=Vt/26|0,Bt=Vt%26;vt[Vt]=Ht.words[At]>>>Bt&1}return vt}pt.prototype.zeroBits=function(){if(this.isZero())return 0;for(var vt=0,Vt=0;Vt<this.length;Vt++){var At=this._zeroBits(this.words[Vt]);if(vt+=At,At!==26)break}return vt},pt.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},pt.prototype.toTwos=function(vt){return this.negative!==0?this.abs().inotn(vt).iaddn(1):this.clone()},pt.prototype.fromTwos=function(vt){return this.testn(vt-1)?this.notn(vt).iaddn(1).ineg():this.clone()},pt.prototype.isNeg=function(){return this.negative!==0},pt.prototype.neg=function(){return this.clone().ineg()},pt.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},pt.prototype.iuor=function(vt){for(;this.length<vt.length;)this.words[this.length++]=0;for(var Vt=0;Vt<vt.length;Vt++)this.words[Vt]=this.words[Vt]|vt.words[Vt];return this._strip()},pt.prototype.ior=function(vt){return dt((this.negative|vt.negative)===0),this.iuor(vt)},pt.prototype.or=function(vt){return this.length>vt.length?this.clone().ior(vt):vt.clone().ior(this)},pt.prototype.uor=function(vt){return this.length>vt.length?this.clone().iuor(vt):vt.clone().iuor(this)},pt.prototype.iuand=function(vt){var Vt;this.length>vt.length?Vt=vt:Vt=this;for(var At=0;At<Vt.length;At++)this.words[At]=this.words[At]&vt.words[At];return this.length=Vt.length,this._strip()},pt.prototype.iand=function(vt){return dt((this.negative|vt.negative)===0),this.iuand(vt)},pt.prototype.and=function(vt){return this.length>vt.length?this.clone().iand(vt):vt.clone().iand(this)},pt.prototype.uand=function(vt){return this.length>vt.length?this.clone().iuand(vt):vt.clone().iuand(this)},pt.prototype.iuxor=function(vt){var Vt,At;this.length>vt.length?(Vt=this,At=vt):(Vt=vt,At=this);for(var Bt=0;Bt<At.length;Bt++)this.words[Bt]=Vt.words[Bt]^At.words[Bt];if(this!==Vt)for(;Bt<Vt.length;Bt++)this.words[Bt]=Vt.words[Bt];return this.length=Vt.length,this._strip()},pt.prototype.ixor=function(vt){return dt((this.negative|vt.negative)===0),this.iuxor(vt)},pt.prototype.xor=function(vt){return this.length>vt.length?this.clone().ixor(vt):vt.clone().ixor(this)},pt.prototype.uxor=function(vt){return this.length>vt.length?this.clone().iuxor(vt):vt.clone().iuxor(this)},pt.prototype.inotn=function(vt){dt(typeof vt=="number"&&vt>=0);var Vt=Math.ceil(vt/26)|0,At=vt%26;this._expand(Vt),At>0&&Vt--;for(var Bt=0;Bt<Vt;Bt++)this.words[Bt]=~this.words[Bt]&67108863;return At>0&&(this.words[Bt]=~this.words[Bt]&67108863>>26-At),this._strip()},pt.prototype.notn=function(vt){return this.clone().inotn(vt)},pt.prototype.setn=function(vt,Vt){dt(typeof vt=="number"&&vt>=0);var At=vt/26|0,Bt=vt%26;return this._expand(At+1),Vt?this.words[At]=this.words[At]|1<<Bt:this.words[At]=this.words[At]&~(1<<Bt),this._strip()},pt.prototype.iadd=function(vt){var Vt;if(this.negative!==0&&vt.negative===0)return this.negative=0,Vt=this.isub(vt),this.negative^=1,this._normSign();if(this.negative===0&&vt.negative!==0)return vt.negative=0,Vt=this.isub(vt),vt.negative=1,Vt._normSign();var At,Bt;this.length>vt.length?(At=this,Bt=vt):(At=vt,Bt=this);for(var Mt=0,Ct=0;Ct<Bt.length;Ct++)Vt=(At.words[Ct]|0)+(Bt.words[Ct]|0)+Mt,this.words[Ct]=Vt&67108863,Mt=Vt>>>26;for(;Mt!==0&&Ct<At.length;Ct++)Vt=(At.words[Ct]|0)+Mt,this.words[Ct]=Vt&67108863,Mt=Vt>>>26;if(this.length=At.length,Mt!==0)this.words[this.length]=Mt,this.length++;else if(At!==this)for(;Ct<At.length;Ct++)this.words[Ct]=At.words[Ct];return this},pt.prototype.add=function(vt){var Vt;return vt.negative!==0&&this.negative===0?(vt.negative=0,Vt=this.sub(vt),vt.negative^=1,Vt):vt.negative===0&&this.negative!==0?(this.negative=0,Vt=vt.sub(this),this.negative=1,Vt):this.length>vt.length?this.clone().iadd(vt):vt.clone().iadd(this)},pt.prototype.isub=function(vt){if(vt.negative!==0){vt.negative=0;var Vt=this.iadd(vt);return vt.negative=1,Vt._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(vt),this.negative=1,this._normSign();var At=this.cmp(vt);if(At===0)return this.negative=0,this.length=1,this.words[0]=0,this;var Bt,Mt;At>0?(Bt=this,Mt=vt):(Bt=vt,Mt=this);for(var Ct=0,Dt=0;Dt<Mt.length;Dt++)Vt=(Bt.words[Dt]|0)-(Mt.words[Dt]|0)+Ct,Ct=Vt>>26,this.words[Dt]=Vt&67108863;for(;Ct!==0&&Dt<Bt.length;Dt++)Vt=(Bt.words[Dt]|0)+Ct,Ct=Vt>>26,this.words[Dt]=Vt&67108863;if(Ct===0&&Dt<Bt.length&&Bt!==this)for(;Dt<Bt.length;Dt++)this.words[Dt]=Bt.words[Dt];return this.length=Math.max(this.length,Dt),Bt!==this&&(this.negative=1),this._strip()},pt.prototype.sub=function(vt){return this.clone().isub(vt)};function It(Ht,vt,Vt){Vt.negative=vt.negative^Ht.negative;var At=Ht.length+vt.length|0;Vt.length=At,At=At-1|0;var Bt=Ht.words[0]|0,Mt=vt.words[0]|0,Ct=Bt*Mt,Dt=Ct&67108863,Rt=Ct/67108864|0;Vt.words[0]=Dt;for(var Tt=1;Tt<At;Tt++){for(var zt=Rt>>>26,Kt=Rt&67108863,Jt=Math.min(Tt,vt.length-1),Yt=Math.max(0,Tt-Ht.length+1);Yt<=Jt;Yt++){var $t=Tt-Yt|0;Bt=Ht.words[$t]|0,Mt=vt.words[Yt]|0,Ct=Bt*Mt+Kt,zt+=Ct/67108864|0,Kt=Ct&67108863}Vt.words[Tt]=Kt|0,Rt=zt|0}return Rt!==0?Vt.words[Tt]=Rt|0:Vt.length--,Vt._strip()}var kt=function(vt,Vt,At){var Bt=vt.words,Mt=Vt.words,Ct=At.words,Dt=0,Rt,Tt,zt,Kt=Bt[0]|0,Jt=Kt&8191,Yt=Kt>>>13,$t=Bt[1]|0,tn=$t&8191,en=$t>>>13,sn=Bt[2]|0,rn=sn&8191,nn=sn>>>13,cn=Bt[3]|0,an=cn&8191,on=cn>>>13,Xn=Bt[4]|0,ln=Xn&8191,hn=Xn>>>13,Gn=Bt[5]|0,yn=Gn&8191,xn=Gn>>>13,Wn=Bt[6]|0,dn=Wn&8191,un=Wn>>>13,Zn=Bt[7]|0,fn=Zn&8191,pn=Zn>>>13,qn=Bt[8]|0,mn=qn&8191,gn=qn>>>13,Kn=Bt[9]|0,wn=Kn&8191,Tn=Kn>>>13,hr=Mt[0]|0,Vn=hr&8191,Pn=hr>>>13,br=Mt[1]|0,Sn=br&8191,kn=br>>>13,yr=Mt[2]|0,Nn=yr&8191,En=yr>>>13,xr=Mt[3]|0,On=xr&8191,Mn=xr>>>13,gr=Mt[4]|0,An=gr&8191,In=gr>>>13,vr=Mt[5]|0,Cn=vr&8191,Rn=vr>>>13,wr=Mt[6]|0,Bn=wr&8191,Ln=wr>>>13,Tr=Mt[7]|0,Hn=Tr&8191,zn=Tr>>>13,Vr=Mt[8]|0,Un=Vr&8191,Dn=Vr>>>13,Pr=Mt[9]|0,jn=Pr&8191,Fn=Pr>>>13;At.negative=vt.negative^Vt.negative,At.length=19,Rt=Math.imul(Jt,Vn),Tt=Math.imul(Jt,Pn),Tt=Tt+Math.imul(Yt,Vn)|0,zt=Math.imul(Yt,Pn);var Yn=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(Yn>>>26)|0,Yn&=67108863,Rt=Math.imul(tn,Vn),Tt=Math.imul(tn,Pn),Tt=Tt+Math.imul(en,Vn)|0,zt=Math.imul(en,Pn),Rt=Rt+Math.imul(Jt,Sn)|0,Tt=Tt+Math.imul(Jt,kn)|0,Tt=Tt+Math.imul(Yt,Sn)|0,zt=zt+Math.imul(Yt,kn)|0;var Jn=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(Jn>>>26)|0,Jn&=67108863,Rt=Math.imul(rn,Vn),Tt=Math.imul(rn,Pn),Tt=Tt+Math.imul(nn,Vn)|0,zt=Math.imul(nn,Pn),Rt=Rt+Math.imul(tn,Sn)|0,Tt=Tt+Math.imul(tn,kn)|0,Tt=Tt+Math.imul(en,Sn)|0,zt=zt+Math.imul(en,kn)|0,Rt=Rt+Math.imul(Jt,Nn)|0,Tt=Tt+Math.imul(Jt,En)|0,Tt=Tt+Math.imul(Yt,Nn)|0,zt=zt+Math.imul(Yt,En)|0;var Qn=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(Qn>>>26)|0,Qn&=67108863,Rt=Math.imul(an,Vn),Tt=Math.imul(an,Pn),Tt=Tt+Math.imul(on,Vn)|0,zt=Math.imul(on,Pn),Rt=Rt+Math.imul(rn,Sn)|0,Tt=Tt+Math.imul(rn,kn)|0,Tt=Tt+Math.imul(nn,Sn)|0,zt=zt+Math.imul(nn,kn)|0,Rt=Rt+Math.imul(tn,Nn)|0,Tt=Tt+Math.imul(tn,En)|0,Tt=Tt+Math.imul(en,Nn)|0,zt=zt+Math.imul(en,En)|0,Rt=Rt+Math.imul(Jt,On)|0,Tt=Tt+Math.imul(Jt,Mn)|0,Tt=Tt+Math.imul(Yt,On)|0,zt=zt+Math.imul(Yt,Mn)|0;var $n=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+($n>>>26)|0,$n&=67108863,Rt=Math.imul(ln,Vn),Tt=Math.imul(ln,Pn),Tt=Tt+Math.imul(hn,Vn)|0,zt=Math.imul(hn,Pn),Rt=Rt+Math.imul(an,Sn)|0,Tt=Tt+Math.imul(an,kn)|0,Tt=Tt+Math.imul(on,Sn)|0,zt=zt+Math.imul(on,kn)|0,Rt=Rt+Math.imul(rn,Nn)|0,Tt=Tt+Math.imul(rn,En)|0,Tt=Tt+Math.imul(nn,Nn)|0,zt=zt+Math.imul(nn,En)|0,Rt=Rt+Math.imul(tn,On)|0,Tt=Tt+Math.imul(tn,Mn)|0,Tt=Tt+Math.imul(en,On)|0,zt=zt+Math.imul(en,Mn)|0,Rt=Rt+Math.imul(Jt,An)|0,Tt=Tt+Math.imul(Jt,In)|0,Tt=Tt+Math.imul(Yt,An)|0,zt=zt+Math.imul(Yt,In)|0;var er=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(er>>>26)|0,er&=67108863,Rt=Math.imul(yn,Vn),Tt=Math.imul(yn,Pn),Tt=Tt+Math.imul(xn,Vn)|0,zt=Math.imul(xn,Pn),Rt=Rt+Math.imul(ln,Sn)|0,Tt=Tt+Math.imul(ln,kn)|0,Tt=Tt+Math.imul(hn,Sn)|0,zt=zt+Math.imul(hn,kn)|0,Rt=Rt+Math.imul(an,Nn)|0,Tt=Tt+Math.imul(an,En)|0,Tt=Tt+Math.imul(on,Nn)|0,zt=zt+Math.imul(on,En)|0,Rt=Rt+Math.imul(rn,On)|0,Tt=Tt+Math.imul(rn,Mn)|0,Tt=Tt+Math.imul(nn,On)|0,zt=zt+Math.imul(nn,Mn)|0,Rt=Rt+Math.imul(tn,An)|0,Tt=Tt+Math.imul(tn,In)|0,Tt=Tt+Math.imul(en,An)|0,zt=zt+Math.imul(en,In)|0,Rt=Rt+Math.imul(Jt,Cn)|0,Tt=Tt+Math.imul(Jt,Rn)|0,Tt=Tt+Math.imul(Yt,Cn)|0,zt=zt+Math.imul(Yt,Rn)|0;var tr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(tr>>>26)|0,tr&=67108863,Rt=Math.imul(dn,Vn),Tt=Math.imul(dn,Pn),Tt=Tt+Math.imul(un,Vn)|0,zt=Math.imul(un,Pn),Rt=Rt+Math.imul(yn,Sn)|0,Tt=Tt+Math.imul(yn,kn)|0,Tt=Tt+Math.imul(xn,Sn)|0,zt=zt+Math.imul(xn,kn)|0,Rt=Rt+Math.imul(ln,Nn)|0,Tt=Tt+Math.imul(ln,En)|0,Tt=Tt+Math.imul(hn,Nn)|0,zt=zt+Math.imul(hn,En)|0,Rt=Rt+Math.imul(an,On)|0,Tt=Tt+Math.imul(an,Mn)|0,Tt=Tt+Math.imul(on,On)|0,zt=zt+Math.imul(on,Mn)|0,Rt=Rt+Math.imul(rn,An)|0,Tt=Tt+Math.imul(rn,In)|0,Tt=Tt+Math.imul(nn,An)|0,zt=zt+Math.imul(nn,In)|0,Rt=Rt+Math.imul(tn,Cn)|0,Tt=Tt+Math.imul(tn,Rn)|0,Tt=Tt+Math.imul(en,Cn)|0,zt=zt+Math.imul(en,Rn)|0,Rt=Rt+Math.imul(Jt,Bn)|0,Tt=Tt+Math.imul(Jt,Ln)|0,Tt=Tt+Math.imul(Yt,Bn)|0,zt=zt+Math.imul(Yt,Ln)|0;var nr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(nr>>>26)|0,nr&=67108863,Rt=Math.imul(fn,Vn),Tt=Math.imul(fn,Pn),Tt=Tt+Math.imul(pn,Vn)|0,zt=Math.imul(pn,Pn),Rt=Rt+Math.imul(dn,Sn)|0,Tt=Tt+Math.imul(dn,kn)|0,Tt=Tt+Math.imul(un,Sn)|0,zt=zt+Math.imul(un,kn)|0,Rt=Rt+Math.imul(yn,Nn)|0,Tt=Tt+Math.imul(yn,En)|0,Tt=Tt+Math.imul(xn,Nn)|0,zt=zt+Math.imul(xn,En)|0,Rt=Rt+Math.imul(ln,On)|0,Tt=Tt+Math.imul(ln,Mn)|0,Tt=Tt+Math.imul(hn,On)|0,zt=zt+Math.imul(hn,Mn)|0,Rt=Rt+Math.imul(an,An)|0,Tt=Tt+Math.imul(an,In)|0,Tt=Tt+Math.imul(on,An)|0,zt=zt+Math.imul(on,In)|0,Rt=Rt+Math.imul(rn,Cn)|0,Tt=Tt+Math.imul(rn,Rn)|0,Tt=Tt+Math.imul(nn,Cn)|0,zt=zt+Math.imul(nn,Rn)|0,Rt=Rt+Math.imul(tn,Bn)|0,Tt=Tt+Math.imul(tn,Ln)|0,Tt=Tt+Math.imul(en,Bn)|0,zt=zt+Math.imul(en,Ln)|0,Rt=Rt+Math.imul(Jt,Hn)|0,Tt=Tt+Math.imul(Jt,zn)|0,Tt=Tt+Math.imul(Yt,Hn)|0,zt=zt+Math.imul(Yt,zn)|0;var rr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(rr>>>26)|0,rr&=67108863,Rt=Math.imul(mn,Vn),Tt=Math.imul(mn,Pn),Tt=Tt+Math.imul(gn,Vn)|0,zt=Math.imul(gn,Pn),Rt=Rt+Math.imul(fn,Sn)|0,Tt=Tt+Math.imul(fn,kn)|0,Tt=Tt+Math.imul(pn,Sn)|0,zt=zt+Math.imul(pn,kn)|0,Rt=Rt+Math.imul(dn,Nn)|0,Tt=Tt+Math.imul(dn,En)|0,Tt=Tt+Math.imul(un,Nn)|0,zt=zt+Math.imul(un,En)|0,Rt=Rt+Math.imul(yn,On)|0,Tt=Tt+Math.imul(yn,Mn)|0,Tt=Tt+Math.imul(xn,On)|0,zt=zt+Math.imul(xn,Mn)|0,Rt=Rt+Math.imul(ln,An)|0,Tt=Tt+Math.imul(ln,In)|0,Tt=Tt+Math.imul(hn,An)|0,zt=zt+Math.imul(hn,In)|0,Rt=Rt+Math.imul(an,Cn)|0,Tt=Tt+Math.imul(an,Rn)|0,Tt=Tt+Math.imul(on,Cn)|0,zt=zt+Math.imul(on,Rn)|0,Rt=Rt+Math.imul(rn,Bn)|0,Tt=Tt+Math.imul(rn,Ln)|0,Tt=Tt+Math.imul(nn,Bn)|0,zt=zt+Math.imul(nn,Ln)|0,Rt=Rt+Math.imul(tn,Hn)|0,Tt=Tt+Math.imul(tn,zn)|0,Tt=Tt+Math.imul(en,Hn)|0,zt=zt+Math.imul(en,zn)|0,Rt=Rt+Math.imul(Jt,Un)|0,Tt=Tt+Math.imul(Jt,Dn)|0,Tt=Tt+Math.imul(Yt,Un)|0,zt=zt+Math.imul(Yt,Dn)|0;var ar=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(ar>>>26)|0,ar&=67108863,Rt=Math.imul(wn,Vn),Tt=Math.imul(wn,Pn),Tt=Tt+Math.imul(Tn,Vn)|0,zt=Math.imul(Tn,Pn),Rt=Rt+Math.imul(mn,Sn)|0,Tt=Tt+Math.imul(mn,kn)|0,Tt=Tt+Math.imul(gn,Sn)|0,zt=zt+Math.imul(gn,kn)|0,Rt=Rt+Math.imul(fn,Nn)|0,Tt=Tt+Math.imul(fn,En)|0,Tt=Tt+Math.imul(pn,Nn)|0,zt=zt+Math.imul(pn,En)|0,Rt=Rt+Math.imul(dn,On)|0,Tt=Tt+Math.imul(dn,Mn)|0,Tt=Tt+Math.imul(un,On)|0,zt=zt+Math.imul(un,Mn)|0,Rt=Rt+Math.imul(yn,An)|0,Tt=Tt+Math.imul(yn,In)|0,Tt=Tt+Math.imul(xn,An)|0,zt=zt+Math.imul(xn,In)|0,Rt=Rt+Math.imul(ln,Cn)|0,Tt=Tt+Math.imul(ln,Rn)|0,Tt=Tt+Math.imul(hn,Cn)|0,zt=zt+Math.imul(hn,Rn)|0,Rt=Rt+Math.imul(an,Bn)|0,Tt=Tt+Math.imul(an,Ln)|0,Tt=Tt+Math.imul(on,Bn)|0,zt=zt+Math.imul(on,Ln)|0,Rt=Rt+Math.imul(rn,Hn)|0,Tt=Tt+Math.imul(rn,zn)|0,Tt=Tt+Math.imul(nn,Hn)|0,zt=zt+Math.imul(nn,zn)|0,Rt=Rt+Math.imul(tn,Un)|0,Tt=Tt+Math.imul(tn,Dn)|0,Tt=Tt+Math.imul(en,Un)|0,zt=zt+Math.imul(en,Dn)|0,Rt=Rt+Math.imul(Jt,jn)|0,Tt=Tt+Math.imul(Jt,Fn)|0,Tt=Tt+Math.imul(Yt,jn)|0,zt=zt+Math.imul(Yt,Fn)|0;var ir=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(ir>>>26)|0,ir&=67108863,Rt=Math.imul(wn,Sn),Tt=Math.imul(wn,kn),Tt=Tt+Math.imul(Tn,Sn)|0,zt=Math.imul(Tn,kn),Rt=Rt+Math.imul(mn,Nn)|0,Tt=Tt+Math.imul(mn,En)|0,Tt=Tt+Math.imul(gn,Nn)|0,zt=zt+Math.imul(gn,En)|0,Rt=Rt+Math.imul(fn,On)|0,Tt=Tt+Math.imul(fn,Mn)|0,Tt=Tt+Math.imul(pn,On)|0,zt=zt+Math.imul(pn,Mn)|0,Rt=Rt+Math.imul(dn,An)|0,Tt=Tt+Math.imul(dn,In)|0,Tt=Tt+Math.imul(un,An)|0,zt=zt+Math.imul(un,In)|0,Rt=Rt+Math.imul(yn,Cn)|0,Tt=Tt+Math.imul(yn,Rn)|0,Tt=Tt+Math.imul(xn,Cn)|0,zt=zt+Math.imul(xn,Rn)|0,Rt=Rt+Math.imul(ln,Bn)|0,Tt=Tt+Math.imul(ln,Ln)|0,Tt=Tt+Math.imul(hn,Bn)|0,zt=zt+Math.imul(hn,Ln)|0,Rt=Rt+Math.imul(an,Hn)|0,Tt=Tt+Math.imul(an,zn)|0,Tt=Tt+Math.imul(on,Hn)|0,zt=zt+Math.imul(on,zn)|0,Rt=Rt+Math.imul(rn,Un)|0,Tt=Tt+Math.imul(rn,Dn)|0,Tt=Tt+Math.imul(nn,Un)|0,zt=zt+Math.imul(nn,Dn)|0,Rt=Rt+Math.imul(tn,jn)|0,Tt=Tt+Math.imul(tn,Fn)|0,Tt=Tt+Math.imul(en,jn)|0,zt=zt+Math.imul(en,Fn)|0;var or=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(or>>>26)|0,or&=67108863,Rt=Math.imul(wn,Nn),Tt=Math.imul(wn,En),Tt=Tt+Math.imul(Tn,Nn)|0,zt=Math.imul(Tn,En),Rt=Rt+Math.imul(mn,On)|0,Tt=Tt+Math.imul(mn,Mn)|0,Tt=Tt+Math.imul(gn,On)|0,zt=zt+Math.imul(gn,Mn)|0,Rt=Rt+Math.imul(fn,An)|0,Tt=Tt+Math.imul(fn,In)|0,Tt=Tt+Math.imul(pn,An)|0,zt=zt+Math.imul(pn,In)|0,Rt=Rt+Math.imul(dn,Cn)|0,Tt=Tt+Math.imul(dn,Rn)|0,Tt=Tt+Math.imul(un,Cn)|0,zt=zt+Math.imul(un,Rn)|0,Rt=Rt+Math.imul(yn,Bn)|0,Tt=Tt+Math.imul(yn,Ln)|0,Tt=Tt+Math.imul(xn,Bn)|0,zt=zt+Math.imul(xn,Ln)|0,Rt=Rt+Math.imul(ln,Hn)|0,Tt=Tt+Math.imul(ln,zn)|0,Tt=Tt+Math.imul(hn,Hn)|0,zt=zt+Math.imul(hn,zn)|0,Rt=Rt+Math.imul(an,Un)|0,Tt=Tt+Math.imul(an,Dn)|0,Tt=Tt+Math.imul(on,Un)|0,zt=zt+Math.imul(on,Dn)|0,Rt=Rt+Math.imul(rn,jn)|0,Tt=Tt+Math.imul(rn,Fn)|0,Tt=Tt+Math.imul(nn,jn)|0,zt=zt+Math.imul(nn,Fn)|0;var sr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(sr>>>26)|0,sr&=67108863,Rt=Math.imul(wn,On),Tt=Math.imul(wn,Mn),Tt=Tt+Math.imul(Tn,On)|0,zt=Math.imul(Tn,Mn),Rt=Rt+Math.imul(mn,An)|0,Tt=Tt+Math.imul(mn,In)|0,Tt=Tt+Math.imul(gn,An)|0,zt=zt+Math.imul(gn,In)|0,Rt=Rt+Math.imul(fn,Cn)|0,Tt=Tt+Math.imul(fn,Rn)|0,Tt=Tt+Math.imul(pn,Cn)|0,zt=zt+Math.imul(pn,Rn)|0,Rt=Rt+Math.imul(dn,Bn)|0,Tt=Tt+Math.imul(dn,Ln)|0,Tt=Tt+Math.imul(un,Bn)|0,zt=zt+Math.imul(un,Ln)|0,Rt=Rt+Math.imul(yn,Hn)|0,Tt=Tt+Math.imul(yn,zn)|0,Tt=Tt+Math.imul(xn,Hn)|0,zt=zt+Math.imul(xn,zn)|0,Rt=Rt+Math.imul(ln,Un)|0,Tt=Tt+Math.imul(ln,Dn)|0,Tt=Tt+Math.imul(hn,Un)|0,zt=zt+Math.imul(hn,Dn)|0,Rt=Rt+Math.imul(an,jn)|0,Tt=Tt+Math.imul(an,Fn)|0,Tt=Tt+Math.imul(on,jn)|0,zt=zt+Math.imul(on,Fn)|0;var cr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(cr>>>26)|0,cr&=67108863,Rt=Math.imul(wn,An),Tt=Math.imul(wn,In),Tt=Tt+Math.imul(Tn,An)|0,zt=Math.imul(Tn,In),Rt=Rt+Math.imul(mn,Cn)|0,Tt=Tt+Math.imul(mn,Rn)|0,Tt=Tt+Math.imul(gn,Cn)|0,zt=zt+Math.imul(gn,Rn)|0,Rt=Rt+Math.imul(fn,Bn)|0,Tt=Tt+Math.imul(fn,Ln)|0,Tt=Tt+Math.imul(pn,Bn)|0,zt=zt+Math.imul(pn,Ln)|0,Rt=Rt+Math.imul(dn,Hn)|0,Tt=Tt+Math.imul(dn,zn)|0,Tt=Tt+Math.imul(un,Hn)|0,zt=zt+Math.imul(un,zn)|0,Rt=Rt+Math.imul(yn,Un)|0,Tt=Tt+Math.imul(yn,Dn)|0,Tt=Tt+Math.imul(xn,Un)|0,zt=zt+Math.imul(xn,Dn)|0,Rt=Rt+Math.imul(ln,jn)|0,Tt=Tt+Math.imul(ln,Fn)|0,Tt=Tt+Math.imul(hn,jn)|0,zt=zt+Math.imul(hn,Fn)|0;var ur=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(ur>>>26)|0,ur&=67108863,Rt=Math.imul(wn,Cn),Tt=Math.imul(wn,Rn),Tt=Tt+Math.imul(Tn,Cn)|0,zt=Math.imul(Tn,Rn),Rt=Rt+Math.imul(mn,Bn)|0,Tt=Tt+Math.imul(mn,Ln)|0,Tt=Tt+Math.imul(gn,Bn)|0,zt=zt+Math.imul(gn,Ln)|0,Rt=Rt+Math.imul(fn,Hn)|0,Tt=Tt+Math.imul(fn,zn)|0,Tt=Tt+Math.imul(pn,Hn)|0,zt=zt+Math.imul(pn,zn)|0,Rt=Rt+Math.imul(dn,Un)|0,Tt=Tt+Math.imul(dn,Dn)|0,Tt=Tt+Math.imul(un,Un)|0,zt=zt+Math.imul(un,Dn)|0,Rt=Rt+Math.imul(yn,jn)|0,Tt=Tt+Math.imul(yn,Fn)|0,Tt=Tt+Math.imul(xn,jn)|0,zt=zt+Math.imul(xn,Fn)|0;var lr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(lr>>>26)|0,lr&=67108863,Rt=Math.imul(wn,Bn),Tt=Math.imul(wn,Ln),Tt=Tt+Math.imul(Tn,Bn)|0,zt=Math.imul(Tn,Ln),Rt=Rt+Math.imul(mn,Hn)|0,Tt=Tt+Math.imul(mn,zn)|0,Tt=Tt+Math.imul(gn,Hn)|0,zt=zt+Math.imul(gn,zn)|0,Rt=Rt+Math.imul(fn,Un)|0,Tt=Tt+Math.imul(fn,Dn)|0,Tt=Tt+Math.imul(pn,Un)|0,zt=zt+Math.imul(pn,Dn)|0,Rt=Rt+Math.imul(dn,jn)|0,Tt=Tt+Math.imul(dn,Fn)|0,Tt=Tt+Math.imul(un,jn)|0,zt=zt+Math.imul(un,Fn)|0;var dr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(dr>>>26)|0,dr&=67108863,Rt=Math.imul(wn,Hn),Tt=Math.imul(wn,zn),Tt=Tt+Math.imul(Tn,Hn)|0,zt=Math.imul(Tn,zn),Rt=Rt+Math.imul(mn,Un)|0,Tt=Tt+Math.imul(mn,Dn)|0,Tt=Tt+Math.imul(gn,Un)|0,zt=zt+Math.imul(gn,Dn)|0,Rt=Rt+Math.imul(fn,jn)|0,Tt=Tt+Math.imul(fn,Fn)|0,Tt=Tt+Math.imul(pn,jn)|0,zt=zt+Math.imul(pn,Fn)|0;var fr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(fr>>>26)|0,fr&=67108863,Rt=Math.imul(wn,Un),Tt=Math.imul(wn,Dn),Tt=Tt+Math.imul(Tn,Un)|0,zt=Math.imul(Tn,Dn),Rt=Rt+Math.imul(mn,jn)|0,Tt=Tt+Math.imul(mn,Fn)|0,Tt=Tt+Math.imul(gn,jn)|0,zt=zt+Math.imul(gn,Fn)|0;var pr=(Dt+Rt|0)+((Tt&8191)<<13)|0;Dt=(zt+(Tt>>>13)|0)+(pr>>>26)|0,pr&=67108863,Rt=Math.imul(wn,jn),Tt=Math.imul(wn,Fn),Tt=Tt+Math.imul(Tn,jn)|0,zt=Math.imul(Tn,Fn);var mr=(Dt+Rt|0)+((Tt&8191)<<13)|0;return Dt=(zt+(Tt>>>13)|0)+(mr>>>26)|0,mr&=67108863,Ct[0]=Yn,Ct[1]=Jn,Ct[2]=Qn,Ct[3]=$n,Ct[4]=er,Ct[5]=tr,Ct[6]=nr,Ct[7]=rr,Ct[8]=ar,Ct[9]=ir,Ct[10]=or,Ct[11]=sr,Ct[12]=cr,Ct[13]=ur,Ct[14]=lr,Ct[15]=dr,Ct[16]=fr,Ct[17]=pr,Ct[18]=mr,Dt!==0&&(Ct[19]=Dt,At.length++),At};Math.imul||(kt=It);function Nt(Ht,vt,Vt){Vt.negative=vt.negative^Ht.negative,Vt.length=Ht.length+vt.length;for(var At=0,Bt=0,Mt=0;Mt<Vt.length-1;Mt++){var Ct=Bt;Bt=0;for(var Dt=At&67108863,Rt=Math.min(Mt,vt.length-1),Tt=Math.max(0,Mt-Ht.length+1);Tt<=Rt;Tt++){var zt=Mt-Tt,Kt=Ht.words[zt]|0,Jt=vt.words[Tt]|0,Yt=Kt*Jt,$t=Yt&67108863;Ct=Ct+(Yt/67108864|0)|0,$t=$t+Dt|0,Dt=$t&67108863,Ct=Ct+($t>>>26)|0,Bt+=Ct>>>26,Ct&=67108863}Vt.words[Mt]=Dt,At=Ct,Ct=Bt}return At!==0?Vt.words[Mt]=At:Vt.length--,Vt._strip()}function Ut(Ht,vt,Vt){return Nt(Ht,vt,Vt)}pt.prototype.mulTo=function(vt,Vt){var At,Bt=this.length+vt.length;return this.length===10&&vt.length===10?At=kt(this,vt,Vt):Bt<63?At=It(this,vt,Vt):Bt<1024?At=Nt(this,vt,Vt):At=Ut(this,vt,Vt),At},pt.prototype.mul=function(vt){var Vt=new pt(null);return Vt.words=new Array(this.length+vt.length),this.mulTo(vt,Vt)},pt.prototype.mulf=function(vt){var Vt=new pt(null);return Vt.words=new Array(this.length+vt.length),Ut(this,vt,Vt)},pt.prototype.imul=function(vt){return this.clone().mulTo(vt,this)},pt.prototype.imuln=function(vt){var Vt=vt<0;Vt&&(vt=-vt),dt(typeof vt=="number"),dt(vt<67108864);for(var At=0,Bt=0;Bt<this.length;Bt++){var Mt=(this.words[Bt]|0)*vt,Ct=(Mt&67108863)+(At&67108863);At>>=26,At+=Mt/67108864|0,At+=Ct>>>26,this.words[Bt]=Ct&67108863}return At!==0&&(this.words[Bt]=At,this.length++),Vt?this.ineg():this},pt.prototype.muln=function(vt){return this.clone().imuln(vt)},pt.prototype.sqr=function(){return this.mul(this)},pt.prototype.isqr=function(){return this.imul(this.clone())},pt.prototype.pow=function(vt){var Vt=Lt(vt);if(Vt.length===0)return new pt(1);for(var At=this,Bt=0;Bt<Vt.length&&Vt[Bt]===0;Bt++,At=At.sqr());if(++Bt<Vt.length)for(var Mt=At.sqr();Bt<Vt.length;Bt++,Mt=Mt.sqr())Vt[Bt]!==0&&(At=At.mul(Mt));return At},pt.prototype.iushln=function(vt){dt(typeof vt=="number"&&vt>=0);var Vt=vt%26,At=(vt-Vt)/26,Bt=67108863>>>26-Vt<<26-Vt,Mt;if(Vt!==0){var Ct=0;for(Mt=0;Mt<this.length;Mt++){var Dt=this.words[Mt]&Bt,Rt=(this.words[Mt]|0)-Dt<<Vt;this.words[Mt]=Rt|Ct,Ct=Dt>>>26-Vt}Ct&&(this.words[Mt]=Ct,this.length++)}if(At!==0){for(Mt=this.length-1;Mt>=0;Mt--)this.words[Mt+At]=this.words[Mt];for(Mt=0;Mt<At;Mt++)this.words[Mt]=0;this.length+=At}return this._strip()},pt.prototype.ishln=function(vt){return dt(this.negative===0),this.iushln(vt)},pt.prototype.iushrn=function(vt,Vt,At){dt(typeof vt=="number"&&vt>=0);var Bt;Vt?Bt=(Vt-Vt%26)/26:Bt=0;var Mt=vt%26,Ct=Math.min((vt-Mt)/26,this.length),Dt=67108863^67108863>>>Mt<<Mt,Rt=At;if(Bt-=Ct,Bt=Math.max(0,Bt),Rt){for(var Tt=0;Tt<Ct;Tt++)Rt.words[Tt]=this.words[Tt];Rt.length=Ct}if(Ct!==0)if(this.length>Ct)for(this.length-=Ct,Tt=0;Tt<this.length;Tt++)this.words[Tt]=this.words[Tt+Ct];else this.words[0]=0,this.length=1;var zt=0;for(Tt=this.length-1;Tt>=0&&(zt!==0||Tt>=Bt);Tt--){var Kt=this.words[Tt]|0;this.words[Tt]=zt<<26-Mt|Kt>>>Mt,zt=Kt&Dt}return Rt&&zt!==0&&(Rt.words[Rt.length++]=zt),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},pt.prototype.ishrn=function(vt,Vt,At){return dt(this.negative===0),this.iushrn(vt,Vt,At)},pt.prototype.shln=function(vt){return this.clone().ishln(vt)},pt.prototype.ushln=function(vt){return this.clone().iushln(vt)},pt.prototype.shrn=function(vt){return this.clone().ishrn(vt)},pt.prototype.ushrn=function(vt){return this.clone().iushrn(vt)},pt.prototype.testn=function(vt){dt(typeof vt=="number"&&vt>=0);var Vt=vt%26,At=(vt-Vt)/26,Bt=1<<Vt;if(this.length<=At)return!1;var Mt=this.words[At];return!!(Mt&Bt)},pt.prototype.imaskn=function(vt){dt(typeof vt=="number"&&vt>=0);var Vt=vt%26,At=(vt-Vt)/26;if(dt(this.negative===0,"imaskn works only with positive numbers"),this.length<=At)return this;if(Vt!==0&&At++,this.length=Math.min(At,this.length),Vt!==0){var Bt=67108863^67108863>>>Vt<<Vt;this.words[this.length-1]&=Bt}return this._strip()},pt.prototype.maskn=function(vt){return this.clone().imaskn(vt)},pt.prototype.iaddn=function(vt){return dt(typeof vt=="number"),dt(vt<67108864),vt<0?this.isubn(-vt):this.negative!==0?this.length===1&&(this.words[0]|0)<=vt?(this.words[0]=vt-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(vt),this.negative=1,this):this._iaddn(vt)},pt.prototype._iaddn=function(vt){this.words[0]+=vt;for(var Vt=0;Vt<this.length&&this.words[Vt]>=67108864;Vt++)this.words[Vt]-=67108864,Vt===this.length-1?this.words[Vt+1]=1:this.words[Vt+1]++;return this.length=Math.max(this.length,Vt+1),this},pt.prototype.isubn=function(vt){if(dt(typeof vt=="number"),dt(vt<67108864),vt<0)return this.iaddn(-vt);if(this.negative!==0)return this.negative=0,this.iaddn(vt),this.negative=1,this;if(this.words[0]-=vt,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var Vt=0;Vt<this.length&&this.words[Vt]<0;Vt++)this.words[Vt]+=67108864,this.words[Vt+1]-=1;return this._strip()},pt.prototype.addn=function(vt){return this.clone().iaddn(vt)},pt.prototype.subn=function(vt){return this.clone().isubn(vt)},pt.prototype.iabs=function(){return this.negative=0,this},pt.prototype.abs=function(){return this.clone().iabs()},pt.prototype._ishlnsubmul=function(vt,Vt,At){var Bt=vt.length+At,Mt;this._expand(Bt);var Ct,Dt=0;for(Mt=0;Mt<vt.length;Mt++){Ct=(this.words[Mt+At]|0)+Dt;var Rt=(vt.words[Mt]|0)*Vt;Ct-=Rt&67108863,Dt=(Ct>>26)-(Rt/67108864|0),this.words[Mt+At]=Ct&67108863}for(;Mt<this.length-At;Mt++)Ct=(this.words[Mt+At]|0)+Dt,Dt=Ct>>26,this.words[Mt+At]=Ct&67108863;if(Dt===0)return this._strip();for(dt(Dt===-1),Dt=0,Mt=0;Mt<this.length;Mt++)Ct=-(this.words[Mt]|0)+Dt,Dt=Ct>>26,this.words[Mt]=Ct&67108863;return this.negative=1,this._strip()},pt.prototype._wordDiv=function(vt,Vt){var At=this.length-vt.length,Bt=this.clone(),Mt=vt,Ct=Mt.words[Mt.length-1]|0,Dt=this._countBits(Ct);At=26-Dt,At!==0&&(Mt=Mt.ushln(At),Bt.iushln(At),Ct=Mt.words[Mt.length-1]|0);var Rt=Bt.length-Mt.length,Tt;if(Vt!=="mod"){Tt=new pt(null),Tt.length=Rt+1,Tt.words=new Array(Tt.length);for(var zt=0;zt<Tt.length;zt++)Tt.words[zt]=0}var Kt=Bt.clone()._ishlnsubmul(Mt,1,Rt);Kt.negative===0&&(Bt=Kt,Tt&&(Tt.words[Rt]=1));for(var Jt=Rt-1;Jt>=0;Jt--){var Yt=(Bt.words[Mt.length+Jt]|0)*67108864+(Bt.words[Mt.length+Jt-1]|0);for(Yt=Math.min(Yt/Ct|0,67108863),Bt._ishlnsubmul(Mt,Yt,Jt);Bt.negative!==0;)Yt--,Bt.negative=0,Bt._ishlnsubmul(Mt,1,Jt),Bt.isZero()||(Bt.negative^=1);Tt&&(Tt.words[Jt]=Yt)}return Tt&&Tt._strip(),Bt._strip(),Vt!=="div"&&At!==0&&Bt.iushrn(At),{div:Tt||null,mod:Bt}},pt.prototype.divmod=function(vt,Vt,At){if(dt(!vt.isZero()),this.isZero())return{div:new pt(0),mod:new pt(0)};var Bt,Mt,Ct;return this.negative!==0&&vt.negative===0?(Ct=this.neg().divmod(vt,Vt),Vt!=="mod"&&(Bt=Ct.div.neg()),Vt!=="div"&&(Mt=Ct.mod.neg(),At&&Mt.negative!==0&&Mt.iadd(vt)),{div:Bt,mod:Mt}):this.negative===0&&vt.negative!==0?(Ct=this.divmod(vt.neg(),Vt),Vt!=="mod"&&(Bt=Ct.div.neg()),{div:Bt,mod:Ct.mod}):this.negative&vt.negative?(Ct=this.neg().divmod(vt.neg(),Vt),Vt!=="div"&&(Mt=Ct.mod.neg(),At&&Mt.negative!==0&&Mt.isub(vt)),{div:Ct.div,mod:Mt}):vt.length>this.length||this.cmp(vt)<0?{div:new pt(0),mod:this}:vt.length===1?Vt==="div"?{div:this.divn(vt.words[0]),mod:null}:Vt==="mod"?{div:null,mod:new pt(this.modrn(vt.words[0]))}:{div:this.divn(vt.words[0]),mod:new pt(this.modrn(vt.words[0]))}:this._wordDiv(vt,Vt)},pt.prototype.div=function(vt){return this.divmod(vt,"div",!1).div},pt.prototype.mod=function(vt){return this.divmod(vt,"mod",!1).mod},pt.prototype.umod=function(vt){return this.divmod(vt,"mod",!0).mod},pt.prototype.divRound=function(vt){var Vt=this.divmod(vt);if(Vt.mod.isZero())return Vt.div;var At=Vt.div.negative!==0?Vt.mod.isub(vt):Vt.mod,Bt=vt.ushrn(1),Mt=vt.andln(1),Ct=At.cmp(Bt);return Ct<0||Mt===1&&Ct===0?Vt.div:Vt.div.negative!==0?Vt.div.isubn(1):Vt.div.iaddn(1)},pt.prototype.modrn=function(vt){var Vt=vt<0;Vt&&(vt=-vt),dt(vt<=67108863);for(var At=(1<<26)%vt,Bt=0,Mt=this.length-1;Mt>=0;Mt--)Bt=(At*Bt+(this.words[Mt]|0))%vt;return Vt?-Bt:Bt},pt.prototype.modn=function(vt){return this.modrn(vt)},pt.prototype.idivn=function(vt){var Vt=vt<0;Vt&&(vt=-vt),dt(vt<=67108863);for(var At=0,Bt=this.length-1;Bt>=0;Bt--){var Mt=(this.words[Bt]|0)+At*67108864;this.words[Bt]=Mt/vt|0,At=Mt%vt}return this._strip(),Vt?this.ineg():this},pt.prototype.divn=function(vt){return this.clone().idivn(vt)},pt.prototype.egcd=function(vt){dt(vt.negative===0),dt(!vt.isZero());var Vt=this,At=vt.clone();Vt.negative!==0?Vt=Vt.umod(vt):Vt=Vt.clone();for(var Bt=new pt(1),Mt=new pt(0),Ct=new pt(0),Dt=new pt(1),Rt=0;Vt.isEven()&&At.isEven();)Vt.iushrn(1),At.iushrn(1),++Rt;for(var Tt=At.clone(),zt=Vt.clone();!Vt.isZero();){for(var Kt=0,Jt=1;!(Vt.words[0]&Jt)&&Kt<26;++Kt,Jt<<=1);if(Kt>0)for(Vt.iushrn(Kt);Kt-- >0;)(Bt.isOdd()||Mt.isOdd())&&(Bt.iadd(Tt),Mt.isub(zt)),Bt.iushrn(1),Mt.iushrn(1);for(var Yt=0,$t=1;!(At.words[0]&$t)&&Yt<26;++Yt,$t<<=1);if(Yt>0)for(At.iushrn(Yt);Yt-- >0;)(Ct.isOdd()||Dt.isOdd())&&(Ct.iadd(Tt),Dt.isub(zt)),Ct.iushrn(1),Dt.iushrn(1);Vt.cmp(At)>=0?(Vt.isub(At),Bt.isub(Ct),Mt.isub(Dt)):(At.isub(Vt),Ct.isub(Bt),Dt.isub(Mt))}return{a:Ct,b:Dt,gcd:At.iushln(Rt)}},pt.prototype._invmp=function(vt){dt(vt.negative===0),dt(!vt.isZero());var Vt=this,At=vt.clone();Vt.negative!==0?Vt=Vt.umod(vt):Vt=Vt.clone();for(var Bt=new pt(1),Mt=new pt(0),Ct=At.clone();Vt.cmpn(1)>0&&At.cmpn(1)>0;){for(var Dt=0,Rt=1;!(Vt.words[0]&Rt)&&Dt<26;++Dt,Rt<<=1);if(Dt>0)for(Vt.iushrn(Dt);Dt-- >0;)Bt.isOdd()&&Bt.iadd(Ct),Bt.iushrn(1);for(var Tt=0,zt=1;!(At.words[0]&zt)&&Tt<26;++Tt,zt<<=1);if(Tt>0)for(At.iushrn(Tt);Tt-- >0;)Mt.isOdd()&&Mt.iadd(Ct),Mt.iushrn(1);Vt.cmp(At)>=0?(Vt.isub(At),Bt.isub(Mt)):(At.isub(Vt),Mt.isub(Bt))}var Kt;return Vt.cmpn(1)===0?Kt=Bt:Kt=Mt,Kt.cmpn(0)<0&&Kt.iadd(vt),Kt},pt.prototype.gcd=function(vt){if(this.isZero())return vt.abs();if(vt.isZero())return this.abs();var Vt=this.clone(),At=vt.clone();Vt.negative=0,At.negative=0;for(var Bt=0;Vt.isEven()&&At.isEven();Bt++)Vt.iushrn(1),At.iushrn(1);do{for(;Vt.isEven();)Vt.iushrn(1);for(;At.isEven();)At.iushrn(1);var Mt=Vt.cmp(At);if(Mt<0){var Ct=Vt;Vt=At,At=Ct}else if(Mt===0||At.cmpn(1)===0)break;Vt.isub(At)}while(!0);return At.iushln(Bt)},pt.prototype.invm=function(vt){return this.egcd(vt).a.umod(vt)},pt.prototype.isEven=function(){return(this.words[0]&1)===0},pt.prototype.isOdd=function(){return(this.words[0]&1)===1},pt.prototype.andln=function(vt){return this.words[0]&vt},pt.prototype.bincn=function(vt){dt(typeof vt=="number");var Vt=vt%26,At=(vt-Vt)/26,Bt=1<<Vt;if(this.length<=At)return this._expand(At+1),this.words[At]|=Bt,this;for(var Mt=Bt,Ct=At;Mt!==0&&Ct<this.length;Ct++){var Dt=this.words[Ct]|0;Dt+=Mt,Mt=Dt>>>26,Dt&=67108863,this.words[Ct]=Dt}return Mt!==0&&(this.words[Ct]=Mt,this.length++),this},pt.prototype.isZero=function(){return this.length===1&&this.words[0]===0},pt.prototype.cmpn=function(vt){var Vt=vt<0;if(this.negative!==0&&!Vt)return-1;if(this.negative===0&&Vt)return 1;this._strip();var At;if(this.length>1)At=1;else{Vt&&(vt=-vt),dt(vt<=67108863,"Number is too big");var Bt=this.words[0]|0;At=Bt===vt?0:Bt<vt?-1:1}return this.negative!==0?-At|0:At},pt.prototype.cmp=function(vt){if(this.negative!==0&&vt.negative===0)return-1;if(this.negative===0&&vt.negative!==0)return 1;var Vt=this.ucmp(vt);return this.negative!==0?-Vt|0:Vt},pt.prototype.ucmp=function(vt){if(this.length>vt.length)return 1;if(this.length<vt.length)return-1;for(var Vt=0,At=this.length-1;At>=0;At--){var Bt=this.words[At]|0,Mt=vt.words[At]|0;if(Bt!==Mt){Bt<Mt?Vt=-1:Bt>Mt&&(Vt=1);break}}return Vt},pt.prototype.gtn=function(vt){return this.cmpn(vt)===1},pt.prototype.gt=function(vt){return this.cmp(vt)===1},pt.prototype.gten=function(vt){return this.cmpn(vt)>=0},pt.prototype.gte=function(vt){return this.cmp(vt)>=0},pt.prototype.ltn=function(vt){return this.cmpn(vt)===-1},pt.prototype.lt=function(vt){return this.cmp(vt)===-1},pt.prototype.lten=function(vt){return this.cmpn(vt)<=0},pt.prototype.lte=function(vt){return this.cmp(vt)<=0},pt.prototype.eqn=function(vt){return this.cmpn(vt)===0},pt.prototype.eq=function(vt){return this.cmp(vt)===0},pt.red=function(vt){return new Gt(vt)},pt.prototype.toRed=function(vt){return dt(!this.red,"Already a number in reduction context"),dt(this.negative===0,"red works only with positives"),vt.convertTo(this)._forceRed(vt)},pt.prototype.fromRed=function(){return dt(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},pt.prototype._forceRed=function(vt){return this.red=vt,this},pt.prototype.forceRed=function(vt){return dt(!this.red,"Already a number in reduction context"),this._forceRed(vt)},pt.prototype.redAdd=function(vt){return dt(this.red,"redAdd works only with red numbers"),this.red.add(this,vt)},pt.prototype.redIAdd=function(vt){return dt(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,vt)},pt.prototype.redSub=function(vt){return dt(this.red,"redSub works only with red numbers"),this.red.sub(this,vt)},pt.prototype.redISub=function(vt){return dt(this.red,"redISub works only with red numbers"),this.red.isub(this,vt)},pt.prototype.redShl=function(vt){return dt(this.red,"redShl works only with red numbers"),this.red.shl(this,vt)},pt.prototype.redMul=function(vt){return dt(this.red,"redMul works only with red numbers"),this.red._verify2(this,vt),this.red.mul(this,vt)},pt.prototype.redIMul=function(vt){return dt(this.red,"redMul works only with red numbers"),this.red._verify2(this,vt),this.red.imul(this,vt)},pt.prototype.redSqr=function(){return dt(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},pt.prototype.redISqr=function(){return dt(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},pt.prototype.redSqrt=function(){return dt(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},pt.prototype.redInvm=function(){return dt(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},pt.prototype.redNeg=function(){return dt(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},pt.prototype.redPow=function(vt){return dt(this.red&&!vt.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,vt)};var Ft={k256:null,p224:null,p192:null,p25519:null};function jt(Ht,vt){this.name=Ht,this.p=new pt(vt,16),this.n=this.p.bitLength(),this.k=new pt(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}jt.prototype._tmp=function(){var vt=new pt(null);return vt.words=new Array(Math.ceil(this.n/13)),vt},jt.prototype.ireduce=function(vt){var Vt=vt,At;do this.split(Vt,this.tmp),Vt=this.imulK(Vt),Vt=Vt.iadd(this.tmp),At=Vt.bitLength();while(At>this.n);var Bt=At<this.n?-1:Vt.ucmp(this.p);return Bt===0?(Vt.words[0]=0,Vt.length=1):Bt>0?Vt.isub(this.p):Vt.strip!==void 0?Vt.strip():Vt._strip(),Vt},jt.prototype.split=function(vt,Vt){vt.iushrn(this.n,0,Vt)},jt.prototype.imulK=function(vt){return vt.imul(this.k)};function Xt(){jt.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}ft(Xt,jt),Xt.prototype.split=function(vt,Vt){for(var At=4194303,Bt=Math.min(vt.length,9),Mt=0;Mt<Bt;Mt++)Vt.words[Mt]=vt.words[Mt];if(Vt.length=Bt,vt.length<=9){vt.words[0]=0,vt.length=1;return}var Ct=vt.words[9];for(Vt.words[Vt.length++]=Ct&At,Mt=10;Mt<vt.length;Mt++){var Dt=vt.words[Mt]|0;vt.words[Mt-10]=(Dt&At)<<4|Ct>>>22,Ct=Dt}Ct>>>=22,vt.words[Mt-10]=Ct,Ct===0&&vt.length>10?vt.length-=10:vt.length-=9},Xt.prototype.imulK=function(vt){vt.words[vt.length]=0,vt.words[vt.length+1]=0,vt.length+=2;for(var Vt=0,At=0;At<vt.length;At++){var Bt=vt.words[At]|0;Vt+=Bt*977,vt.words[At]=Vt&67108863,Vt=Bt*64+(Vt/67108864|0)}return vt.words[vt.length-1]===0&&(vt.length--,vt.words[vt.length-1]===0&&vt.length--),vt};function Wt(){jt.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}ft(Wt,jt);function qt(){jt.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}ft(qt,jt);function Zt(){jt.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}ft(Zt,jt),Zt.prototype.imulK=function(vt){for(var Vt=0,At=0;At<vt.length;At++){var Bt=(vt.words[At]|0)*19+Vt,Mt=Bt&67108863;Bt>>>=26,vt.words[At]=Mt,Vt=Bt}return Vt!==0&&(vt.words[vt.length++]=Vt),vt},pt._prime=function(vt){if(Ft[vt])return Ft[vt];var Vt;if(vt==="k256")Vt=new Xt;else if(vt==="p224")Vt=new Wt;else if(vt==="p192")Vt=new qt;else if(vt==="p25519")Vt=new Zt;else throw new Error("Unknown prime "+vt);return Ft[vt]=Vt,Vt};function Gt(Ht){if(typeof Ht=="string"){var vt=pt._prime(Ht);this.m=vt.p,this.prime=vt}else dt(Ht.gtn(1),"modulus must be greater than 1"),this.m=Ht,this.prime=null}Gt.prototype._verify1=function(vt){dt(vt.negative===0,"red works only with positives"),dt(vt.red,"red works only with red numbers")},Gt.prototype._verify2=function(vt,Vt){dt((vt.negative|Vt.negative)===0,"red works only with positives"),dt(vt.red&&vt.red===Vt.red,"red works only with red numbers")},Gt.prototype.imod=function(vt){return this.prime?this.prime.ireduce(vt)._forceRed(this):(xt(vt,vt.umod(this.m)._forceRed(this)),vt)},Gt.prototype.neg=function(vt){return vt.isZero()?vt.clone():this.m.sub(vt)._forceRed(this)},Gt.prototype.add=function(vt,Vt){this._verify2(vt,Vt);var At=vt.add(Vt);return At.cmp(this.m)>=0&&At.isub(this.m),At._forceRed(this)},Gt.prototype.iadd=function(vt,Vt){this._verify2(vt,Vt);var At=vt.iadd(Vt);return At.cmp(this.m)>=0&&At.isub(this.m),At},Gt.prototype.sub=function(vt,Vt){this._verify2(vt,Vt);var At=vt.sub(Vt);return At.cmpn(0)<0&&At.iadd(this.m),At._forceRed(this)},Gt.prototype.isub=function(vt,Vt){this._verify2(vt,Vt);var At=vt.isub(Vt);return At.cmpn(0)<0&&At.iadd(this.m),At},Gt.prototype.shl=function(vt,Vt){return this._verify1(vt),this.imod(vt.ushln(Vt))},Gt.prototype.imul=function(vt,Vt){return this._verify2(vt,Vt),this.imod(vt.imul(Vt))},Gt.prototype.mul=function(vt,Vt){return this._verify2(vt,Vt),this.imod(vt.mul(Vt))},Gt.prototype.isqr=function(vt){return this.imul(vt,vt.clone())},Gt.prototype.sqr=function(vt){return this.mul(vt,vt)},Gt.prototype.sqrt=function(vt){if(vt.isZero())return vt.clone();var Vt=this.m.andln(3);if(dt(Vt%2===1),Vt===3){var At=this.m.add(new pt(1)).iushrn(2);return this.pow(vt,At)}for(var Bt=this.m.subn(1),Mt=0;!Bt.isZero()&&Bt.andln(1)===0;)Mt++,Bt.iushrn(1);dt(!Bt.isZero());var Ct=new pt(1).toRed(this),Dt=Ct.redNeg(),Rt=this.m.subn(1).iushrn(1),Tt=this.m.bitLength();for(Tt=new pt(2*Tt*Tt).toRed(this);this.pow(Tt,Rt).cmp(Dt)!==0;)Tt.redIAdd(Dt);for(var zt=this.pow(Tt,Bt),Kt=this.pow(vt,Bt.addn(1).iushrn(1)),Jt=this.pow(vt,Bt),Yt=Mt;Jt.cmp(Ct)!==0;){for(var $t=Jt,tn=0;$t.cmp(Ct)!==0;tn++)$t=$t.redSqr();dt(tn<Yt);var en=this.pow(zt,new pt(1).iushln(Yt-tn-1));Kt=Kt.redMul(en),zt=en.redSqr(),Jt=Jt.redMul(zt),Yt=tn}return Kt},Gt.prototype.invm=function(vt){var Vt=vt._invmp(this.m);return Vt.negative!==0?(Vt.negative=0,this.imod(Vt).redNeg()):this.imod(Vt)},Gt.prototype.pow=function(vt,Vt){if(Vt.isZero())return new pt(1).toRed(this);if(Vt.cmpn(1)===0)return vt.clone();var At=4,Bt=new Array(1<<At);Bt[0]=new pt(1).toRed(this),Bt[1]=vt;for(var Mt=2;Mt<Bt.length;Mt++)Bt[Mt]=this.mul(Bt[Mt-1],vt);var Ct=Bt[0],Dt=0,Rt=0,Tt=Vt.bitLength()%26;for(Tt===0&&(Tt=26),Mt=Vt.length-1;Mt>=0;Mt--){for(var zt=Vt.words[Mt],Kt=Tt-1;Kt>=0;Kt--){var Jt=zt>>Kt&1;if(Ct!==Bt[0]&&(Ct=this.sqr(Ct)),Jt===0&&Dt===0){Rt=0;continue}Dt<<=1,Dt|=Jt,Rt++,!(Rt!==At&&(Mt!==0||Kt!==0))&&(Ct=this.mul(Ct,Bt[Dt]),Rt=0,Dt=0)}Tt=26}return Ct},Gt.prototype.convertTo=function(vt){var Vt=vt.umod(this.m);return Vt===vt?Vt.clone():Vt},Gt.prototype.convertFrom=function(vt){var Vt=vt.clone();return Vt.red=null,Vt},pt.mont=function(vt){return new Qt(vt)};function Qt(Ht){Gt.call(this,Ht),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new pt(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}ft(Qt,Gt),Qt.prototype.convertTo=function(vt){return this.imod(vt.ushln(this.shift))},Qt.prototype.convertFrom=function(vt){var Vt=this.imod(vt.mul(this.rinv));return Vt.red=null,Vt},Qt.prototype.imul=function(vt,Vt){if(vt.isZero()||Vt.isZero())return vt.words[0]=0,vt.length=1,vt;var At=vt.imul(Vt),Bt=At.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),Mt=At.isub(Bt).iushrn(this.shift),Ct=Mt;return Mt.cmp(this.m)>=0?Ct=Mt.isub(this.m):Mt.cmpn(0)<0&&(Ct=Mt.iadd(this.m)),Ct._forceRed(this)},Qt.prototype.mul=function(vt,Vt){if(vt.isZero()||Vt.isZero())return new pt(0)._forceRed(this);var At=vt.mul(Vt),Bt=At.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),Mt=At.isub(Bt).iushrn(this.shift),Ct=Mt;return Mt.cmp(this.m)>=0?Ct=Mt.isub(this.m):Mt.cmpn(0)<0&&(Ct=Mt.iadd(this.m)),Ct._forceRed(this)},Qt.prototype.invm=function(vt){var Vt=this.imod(vt._invmp(this.m).mul(this.r2));return Vt._forceRed(this)}})(et,commonjsGlobal)})(bn);var bnExports=bn.exports;const BN=getDefaultExportFromCjs(bnExports);function isBn$2(et){return BN.isBN(et)}const REGEX_HEX_PREFIXED$6=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX$4=/^[\da-fA-F]+$/;function isHex$6(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED$6.test(et))&&(tt===-1?et.length%2===0:et.length===2+Math.ceil(tt/4))}function isObject$7(et){return!!et&&typeof et=="object"}function isOn$4(...et){return tt=>(isObject$7(tt)||isFunction$9(tt))&&et.every(ot=>isFunction$9(tt[ot]))}function isOnFunction(...et){return tt=>isFunction$9(tt)&&et.every(ot=>isFunction$9(tt[ot]))}function isOnObject$3(...et){return tt=>isObject$7(tt)&&et.every(ot=>isFunction$9(tt[ot]))}const isToBigInt$4=isOn$4("toBigInt"),isToBn$5=isOn$4("toBn");function nToBigInt(et){return typeof et=="bigint"?et:et?isHex$6(et)?hexToBigInt(et.toString()):isBn$2(et)?BigInt$6(et.toString()):isToBigInt$4(et)?et.toBigInt():isToBn$5(et)?BigInt$6(et.toBn().toString()):BigInt$6(et):BigInt$6(0)}const hasBigInt$2=typeof BigInt$6=="function"&&typeof BigInt$6.asIntN=="function",hasBuffer$5=typeof xglobal$5.Buffer=="function"&&typeof xglobal$5.Buffer.isBuffer=="function";xglobal$5.process;function isBuffer$5(et){return hasBuffer$5&&!!et&&isFunction$9(et.readDoubleLE)&&xglobal$5.Buffer.isBuffer(et)}function isU8a$5(et){return(et&&et.constructor)===Uint8Array||et instanceof Uint8Array}const encoder$5=new TextEncoder$b;function stringToU8a$5(et){return et?encoder$5.encode(et.toString()):new Uint8Array}function u8aToU8a$5(et){return isU8a$5(et)?isBuffer$5(et)?new Uint8Array(et):et:isHex$6(et)?hexToU8a$6(et):Array.isArray(et)?new Uint8Array(et):stringToU8a$5(et)}function u8aConcat$3(...et){const tt=et.length,ot=new Array(tt);let dt=0;for(let ft=0;ft<tt;ft++)ot[ft]=u8aToU8a$5(et[ft]),dt+=ot[ft].length;return u8aConcatStrict$4(ot,dt)}function u8aConcatStrict$4(et,tt=0){const ot=et.length;let dt=0;if(!tt)for(let pt=0;pt<ot;pt++)tt+=et[pt].length;const ft=new Uint8Array(tt);for(let pt=0;pt<ot;pt++)ft.set(et[pt],dt),dt+=et[pt].length;return ft}function u8aEmpty(et){const tt=et.length|0;for(let ot=0;ot<tt;ot++)if(et[ot]|0)return!1;return!0}function u8aEq$2(et,tt){const ot=u8aToU8a$5(et),dt=u8aToU8a$5(tt);if(ot.length===dt.length){const ft=new DataView(ot.buffer,ot.byteOffset),pt=new DataView(dt.buffer,dt.byteOffset),mt=ot.length%4|0,ht=ot.length-mt|0;for(let bt=0;bt<ht;bt+=4)if(ft.getUint32(bt)!==pt.getUint32(bt))return!1;for(let bt=ht,yt=ot.length;bt<yt;bt++)if(ot[bt]!==dt[bt])return!1;return!0}return!1}function u8aFixLength(et,tt=-1,ot=!1){const dt=Math.ceil(tt/8);if(tt===-1||et.length===dt)return et;if(et.length>dt)return et.subarray(0,dt);const ft=new Uint8Array(dt);return ft.set(et,ot?0:dt-et.length),ft}function u8aToBn$1(et,{isLe:tt=!0,isNegative:ot=!1}={}){tt||(et=et.slice().reverse());const dt=et.length;if(ot&&dt&&et[dt-1]&128)switch(dt){case 0:return new BN(0);case 1:return new BN((et[0]^255)*-1-1);case 2:return new BN((et[0]+(et[1]<<8)^65535)*-1-1);case 3:return new BN((et[0]+(et[1]<<8)+(et[2]<<16)^16777215)*-1-1);case 4:return new BN((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)*-1-1);case 5:return new BN(((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)+(et[4]^255)*4294967296)*-1-1);case 6:return new BN(((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)+(et[4]+(et[5]<<8)^65535)*4294967296)*-1-1);default:return new BN(et,"le").fromTwos(dt*8)}switch(dt){case 0:return new BN(0);case 1:return new BN(et[0]);case 2:return new BN(et[0]+(et[1]<<8));case 3:return new BN(et[0]+(et[1]<<8)+(et[2]<<16));case 4:return new BN(et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216);case 5:return new BN(et[0]+(et[1]<<8)+(et[2]<<16)+(et[3]+(et[4]<<8))*16777216);case 6:return new BN(et[0]+(et[1]<<8)+(et[2]<<16)+(et[3]+(et[4]<<8)+(et[5]<<16))*16777216);default:return new BN(et,"le")}}const U8$b=new Array(256),U16$b=new Array(256*256);for(let et=0;et<256;et++)U8$b[et]=et.toString(16).padStart(2,"0");for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$b[tt|ot]=U8$b[et]+U8$b[ot]}function hex$5(et,tt){const ot=et.length%2|0,dt=et.length-ot|0;for(let ft=0;ft<dt;ft+=2)tt+=U16$b[et[ft]<<8|et[ft+1]];return ot&&(tt+=U8$b[et[dt]|0]),tt}function u8aToHex$5(et,tt=-1,ot=!0){const dt=ot?"0x":"";if(et!=null&&et.length){if(tt>0){const ft=Math.ceil(tt/8);if(et.length>ft)return`${hex$5(et.subarray(0,ft/2),dt)}…${hex$5(et.subarray(et.length-ft/2),"")}`}}else return dt;return hex$5(et,dt)}const decoder$3=new TextDecoder$6("utf-8");function u8aToString$3(et){return et?decoder$3.decode(et):""}const U8A_WRAP_ETHEREUM=u8aToU8a$5(`Ethereum Signed Message:
`),U8A_WRAP_PREFIX=u8aToU8a$5("<Bytes>"),U8A_WRAP_POSTFIX=u8aToU8a$5("</Bytes>"),WRAP_LEN=U8A_WRAP_PREFIX.length+U8A_WRAP_POSTFIX.length;function u8aIsWrapped(et,tt){return et.length>=WRAP_LEN&&u8aEq$2(et.subarray(0,U8A_WRAP_PREFIX.length),U8A_WRAP_PREFIX)&&u8aEq$2(et.slice(-U8A_WRAP_POSTFIX.length),U8A_WRAP_POSTFIX)||tt&&et.length>=U8A_WRAP_ETHEREUM.length&&u8aEq$2(et.subarray(0,U8A_WRAP_ETHEREUM.length),U8A_WRAP_ETHEREUM)}function u8aUnwrapBytes(et){const tt=u8aToU8a$5(et);return u8aIsWrapped(tt,!1)?tt.subarray(U8A_WRAP_PREFIX.length,tt.length-U8A_WRAP_POSTFIX.length):tt}function u8aWrapBytes(et){const tt=u8aToU8a$5(et);return u8aIsWrapped(tt,!0)?tt:u8aConcatStrict$4([U8A_WRAP_PREFIX,tt,U8A_WRAP_POSTFIX])}const DIV=BigInt$6(256),NEG_MASK=BigInt$6(255);function toU8a(et,tt,ot){const dt=[],ft=ot&&et<_0n$6;for(ft&&(et=(et+_1n$8)*-_1n$8);et!==_0n$6;){const pt=et%DIV,mt=Number(ft?pt^NEG_MASK:pt);tt?dt.push(mt):dt.unshift(mt),et=(et-pt)/DIV}return Uint8Array.from(dt)}function nToU8a(et,{bitLength:tt=-1,isLe:ot=!0,isNegative:dt=!1}={}){const ft=nToBigInt(et);if(ft===_0n$6)return tt===-1?new Uint8Array(1):new Uint8Array(Math.ceil((tt||0)/8));const pt=toU8a(ft,ot,dt);if(tt===-1)return pt;const mt=Math.ceil((tt||0)/8),ht=new Uint8Array(mt);return dt&&ht.fill(255),ht.set(pt,ot?0:mt-pt.length),ht}function hexStripPrefix$4(et){if(!et||et==="0x")return"";if(REGEX_HEX_PREFIXED$6.test(et))return et.substring(2);if(REGEX_HEX_NOPREFIX$4.test(et))return et;throw new Error(`Expected hex value to convert, found '${et}'`)}function hexToBn$4(et,{isLe:tt=!1,isNegative:ot=!1}={}){if(!et||et==="0x")return new BN(0);const dt=hexStripPrefix$4(et),ft=new BN(dt,16,tt?"le":"be");return ot?ft.fromTwos(dt.length*4):ft}const BN_ZERO$1=new BN(0),BN_ONE$2=new BN(1),BN_TWO$1=new BN(2),BN_BILLION$2=new BN(1e9);BN_BILLION$2.mul(BN_BILLION$2);function isBigInt$6(et){return typeof et=="bigint"}function bnToBn$4(et){return et?BN.isBN(et)?et:isHex$6(et)?hexToBn$4(et.toString()):isBigInt$6(et)?new BN(et.toString()):isToBn$5(et)?et.toBn():isToBigInt$4(et)?new BN(et.toBigInt().toString()):new BN(et):new BN(0)}const DEFAULT_OPTS$2={bitLength:-1,isLe:!0,isNegative:!1};function bnToU8a$2(et,{bitLength:tt=-1,isLe:ot=!0,isNegative:dt=!1}=DEFAULT_OPTS$2){const ft=bnToBn$4(et),pt=Math.ceil(tt===-1?ft.bitLength()/8:(tt||0)/8);if(!et)return tt===-1?new Uint8Array(1):new Uint8Array(pt);const mt=new Uint8Array(pt),ht=dt?ft.toTwos(pt*8):ft;return mt.set(ht.toArray(ot?"le":"be",pt),0),mt}const MAX_U8$1=BN_TWO$1.pow(new BN(6)).isub(BN_ONE$2),MAX_U16$1=BN_TWO$1.pow(new BN(14)).isub(BN_ONE$2),MAX_U32$1=BN_TWO$1.pow(new BN(30)).isub(BN_ONE$2),BL_16$1={bitLength:16},BL_32$1={bitLength:32};function compactToU8a$1(et){const tt=bnToBn$4(et);if(tt.lte(MAX_U8$1))return new Uint8Array([tt.toNumber()<<2]);if(tt.lte(MAX_U16$1))return bnToU8a$2(tt.shln(2).iadd(BN_ONE$2),BL_16$1);if(tt.lte(MAX_U32$1))return bnToU8a$2(tt.shln(2).iadd(BN_TWO$1),BL_32$1);const ot=bnToU8a$2(tt);let dt=ot.length;for(;ot[dt-1]===0;)dt--;if(dt<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return u8aConcatStrict$4([new Uint8Array([(dt-4<<2)+3]),ot.subarray(0,dt)])}function compactAddLength$1(et){return u8aConcatStrict$4([compactToU8a$1(et.length),et])}function compactFromU8a$1(et){const tt=u8aToU8a$5(et);switch(tt[0]&3){case 0:return[1,new BN(tt[0]>>>2)];case 1:return[2,new BN(tt[0]+(tt[1]<<8)>>>2)];case 2:return[4,new BN(tt[0]+(tt[1]<<8)+(tt[2]<<16)+tt[3]*16777216>>>2)];default:{const ot=(tt[0]>>>2)+5;switch(ot){case 5:return[5,new BN(tt[1]+(tt[2]<<8)+(tt[3]<<16)+tt[4]*16777216)];case 6:return[6,new BN(tt[1]+(tt[2]<<8)+(tt[3]<<16)+(tt[4]+(tt[5]<<8))*16777216)];case 7:return[7,new BN(tt[1]+(tt[2]<<8)+(tt[3]<<16)+(tt[4]+(tt[5]<<8)+(tt[6]<<16))*16777216)];default:return[ot,u8aToBn$1(tt.subarray(1,ot))]}}}}function compactStripLength$1(et){const[tt,ot]=compactFromU8a$1(et),dt=tt+ot.toNumber();return[dt,et.subarray(tt,dt)]}function isBoolean$1(et){return typeof et=="boolean"}const NUMBER_REGEX$1=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function formatDecimal$1(et,tt=","){const ot=et[0].startsWith("-"),dt=ot?et.substring(1).match(NUMBER_REGEX$1):et.match(NUMBER_REGEX$1);return dt?`${ot?"-":""}${dt.join(tt)}`:et}function getSeparator$1(et){return{decimal:.1.toLocaleString(et,{useGrouping:!1}).charAt(1),thousand:1e3.toLocaleString(et,{useGrouping:!0}).replace(/\d/g,"").charAt(0)}}const SI_MID$1=8,SI$1=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function findSi$1(et){for(let tt=0,ot=SI$1.length;tt<ot;tt++)if(SI$1[tt].value===et)return SI$1[tt];return SI$1[SI_MID$1]}function calcSi$1(et,tt,ot){if(ot)return findSi$1(ot);const dt=SI_MID$1-1+Math.ceil((et.length-tt)/3);return SI$1[dt]||SI$1[dt<0?0:SI$1.length-1]}const DEFAULT_DECIMALS$1=0,DEFAULT_UNIT$1=SI$1[SI_MID$1].text;let defaultDecimals$1=DEFAULT_DECIMALS$1,defaultUnit$1=DEFAULT_UNIT$1;function _formatBalance$1(et,{decimals:tt=defaultDecimals$1,forceUnit:ot,locale:dt="en",withAll:ft=!1,withSi:pt=!0,withSiFull:mt=!1,withUnit:ht=!0,withZero:bt=!0}={}){let yt=bnToBn$4(et).toString();if(yt.length===0||yt==="0")return"0";let xt="";yt[0].startsWith("-")&&(xt="-",yt=yt.substring(1));const gt=calcSi$1(yt,tt,ot),wt=yt.length-(tt+gt.power),Pt=wt<=0?"0":yt.substring(0,wt);let St=yt.padStart(wt<0?tt:1,"0").substring(wt<0?0:wt).padEnd(ft?Math.max(tt,4):4,"0").substring(0,ft?Math.max(4,tt+gt.power):4);if(!bt){let Nt=St.length-1;do St[Nt]==="0"&&Nt--;while(St[Nt]==="0");St=St.substring(0,Nt+1)}const Et=isBoolean$1(ht)?SI$1[SI_MID$1].text:ht,Lt=pt||mt?gt.value==="-"?ht?` ${Et}`:"":` ${mt?`${gt.text}${ht?" ":""}`:gt.value}${ht?Et:""}`:"",{decimal:It,thousand:kt}=getSeparator$1(dt);return`${xt}${formatDecimal$1(Pt,kt)}${St&&`${It}${St}`}${Lt}`}const formatBalance$2=_formatBalance$1;formatBalance$2.calcSi=(et,tt=defaultDecimals$1)=>calcSi$1(et,tt);formatBalance$2.findSi=findSi$1;formatBalance$2.getDefaults=()=>({decimals:defaultDecimals$1,unit:defaultUnit$1});formatBalance$2.getOptions=(et=defaultDecimals$1)=>SI$1.filter(({power:tt})=>tt<0?et+tt>=0:!0);formatBalance$2.setDefaults=({decimals:et,unit:tt})=>{defaultDecimals$1=(Array.isArray(et)?et[0]:et)??defaultDecimals$1,defaultUnit$1=(Array.isArray(tt)?tt[0]:tt)??defaultUnit$1,SI$1[SI_MID$1].text=defaultUnit$1};function zeroPad$2(et){return et.toString().padStart(2,"0")}function formatDate$2(et){const tt=et.getFullYear().toString(),ot=zeroPad$2(et.getMonth()+1),dt=zeroPad$2(et.getDate()),ft=zeroPad$2(et.getHours()),pt=zeroPad$2(et.getMinutes()),mt=zeroPad$2(et.getSeconds());return`${tt}-${ot}-${dt} ${ft}:${pt}:${mt}`}function formatNumber$1(et,{locale:tt="en"}={}){const{thousand:ot}=getSeparator$1(tt);return formatDecimal$1(bnToBn$4(et).toString(),ot)}function isString$3(et){return typeof et=="string"||et instanceof String}const isClass=isOnFunction("isPrototypeOf","hasOwnProperty");function isChildClass(et,tt){return isClass(tt)&&isClass(et)?et===tt||et.isPrototypeOf(tt):!1}const checkCodec$1=isOnObject$3("toHex","toHuman","toU8a"),checkRegistry$1=isOnObject$3("get");function isCodec$1(et){return checkCodec$1(et)&&checkRegistry$1(et.registry)}const isCompact$1=isOnObject$3("toBigInt","toBn","toNumber","unwrap");function replacer$3(et,tt){return isBigInt$6(tt)?tt.toString():tt}function stringify$4(et,tt){return JSON.stringify(et,replacer$3,tt)}function isNull$2(et){return et===null}function isNumber$3(et){return typeof et=="number"}function isUndefined$5(et){return et===void 0}function lazyMethod$2(et,tt,ot,dt,ft=0){const pt=dt?dt(tt,ft):tt.toString();let mt;Object.defineProperty(et,pt,{configurable:!0,enumerable:!0,get:function(){if(mt===void 0){mt=ot(tt,ft,this);try{Object.defineProperty(this,pt,{value:mt})}catch{}}return mt}})}function lazyMethods$1(et,tt,ot,dt){for(let ft=0,pt=tt.length;ft<pt;ft++)lazyMethod$2(et,tt[ft],ot,dt,ft);return et}function identity$3(et){return et}function noop$3(){}const logTo$2={debug:"log",error:"error",log:"log",warn:"warn"};function formatOther$2(et){if(et&&isObject$7(et)&&et.constructor===Object){const tt={};for(const[ot,dt]of Object.entries(et))tt[ot]=loggerFormat$2(dt);return tt}return et}function loggerFormat$2(et){return Array.isArray(et)?et.map(loggerFormat$2):isBn$2(et)?et.toString():isU8a$5(et)||isBuffer$5(et)?u8aToHex$5(u8aToU8a$5(et)):formatOther$2(et)}function formatWithLength$2(et){return tt=>{if(et<=0)return tt;const ot=`${tt}`;return ot.length<et?tt:`${ot.substring(0,et)} ...`}}function apply$2(et,tt,ot,dt=-1){if(ot.length===1&&isFunction$9(ot[0])){const ft=ot[0]();return apply$2(et,tt,Array.isArray(ft)?ft:[ft],dt)}console[logTo$2[et]](formatDate$2(new Date),tt,...ot.map(loggerFormat$2).map(formatWithLength$2(dt)))}function isDebugOn$2(et,tt){return!!et&&(et==="*"||tt===et||et.endsWith("*")&&tt.startsWith(et.slice(0,-1)))}function isDebugOff$2(et,tt){return!!et&&et.startsWith("-")&&(tt===et.slice(1)||et.endsWith("*")&&tt.startsWith(et.slice(1,-1)))}function getDebugFlag$2(et,tt){let ot=!1;for(const dt of et)isDebugOn$2(dt,tt)?ot=!0:isDebugOff$2(dt,tt)&&(ot=!1);return ot}function parseEnv$2(et){var ot,dt,ft,pt;const tt=parseInt(((dt=(ot=xglobal$5.process)==null?void 0:ot.env)==null?void 0:dt.DEBUG_MAX)||"-1",10);return[getDebugFlag$2((((pt=(ft=xglobal$5.process)==null?void 0:ft.env)==null?void 0:pt.DEBUG)||"").toLowerCase().split(","),et),isNaN(tt)?-1:tt]}function logger$2(et){const tt=`${et.toUpperCase()}:`.padStart(16),[ot,dt]=parseEnv$2(et.toLowerCase());return{debug:ot?(...ft)=>apply$2("debug",tt,ft,dt):noop$3,error:(...ft)=>apply$2("error",tt,ft),log:(...ft)=>apply$2("log",tt,ft),noop:noop$3,warn:(...ft)=>apply$2("warn",tt,ft)}}function nextTick$1(et,tt){setTimeout(()=>{Promise.resolve().then(()=>{et()}).catch(ot=>{console.error(ot)})},0)}function objectClear(et){const tt=Object.keys(et);for(let ot=0,dt=tt.length;ot<dt;ot++)delete et[tt[ot]];return et}function objectSpread$4(et,...tt){const ot=new Set(["__proto__","constructor","prototype"]);for(let dt=0,ft=tt.length;dt<ft;dt++){const pt=tt[dt];if(pt)if(typeof pt.entries=="function")for(const[mt,ht]of pt.entries())ot.has(mt)||(et[mt]=ht);else{const mt=Object.create(null);for(const[ht,bt]of Object.entries(pt))ot.has(ht)||(mt[ht]=bt);Object.assign(et,mt)}}return et}function objectProperty$1(et,tt,ot,dt,ft=0){const pt=tt;pt in et||Object.defineProperty(et,pt,{enumerable:!0,get:function(){return ot(tt,ft,this)}})}function objectProperties$1(et,tt,ot,dt){for(let ft=0,pt=tt.length;ft<pt;ft++)objectProperty$1(et,tt[ft],ot,dt,ft)}const CC_TO_UP$1=new Array(256),CC_TO_LO$1=new Array(256);for(let et=0,tt=CC_TO_UP$1.length;et<tt;et++)CC_TO_LO$1[et]=String.fromCharCode(et).toLowerCase(),CC_TO_UP$1[et]=String.fromCharCode(et).toUpperCase();function formatAllCaps$1(et){return et.slice(0,et.length-1).toLowerCase()+CC_TO_UP$1[et.charCodeAt(et.length-1)]}function converter$2(et){return tt=>{const ot=tt.replace(/[-_., ]+/g," ").trim().split(" ");let dt="";for(let ft=0,pt=ot.length;ft<pt;ft++){const mt=ot[ft];dt+=et(/^[\dA-Z]+$/.test(mt)?mt.toLowerCase():mt.replace(/^[\dA-Z]{2,}[^a-z]/,formatAllCaps$1),ft)}return dt}}const stringCamelCase$1=converter$2((et,tt)=>(tt?CC_TO_UP$1[et.charCodeAt(0)]:CC_TO_LO$1[et.charCodeAt(0)])+et.slice(1)),stringPascalCase$1=converter$2(et=>CC_TO_UP$1[et.charCodeAt(0)]+et.slice(1));function converter$1(et){return tt=>tt?et[tt.charCodeAt(0)]+tt.slice(1):""}const stringUpperFirst=converter$1(CC_TO_UP$1),packageInfo$3={name:"@polkadot/api",path:import.meta&&import.meta.url?new URL(import.meta.url).pathname.substring(0,new URL(import.meta.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"16.0.1"},crypto$3=xglobal$5.crypto;function getRandomValues$2(et){return crypto$3.getRandomValues(et)}const DEFAULT_CRYPTO$2={getRandomValues:getRandomValues$2},DEFAULT_SELF$2={crypto:DEFAULT_CRYPTO$2};let Wbg$2=class{constructor(tt){Ot(this,"__internal__bridge");Ot(this,"abort",()=>{throw new Error("abort")});Ot(this,"__wbindgen_is_undefined",tt=>this.__internal__bridge.getObject(tt)===void 0);Ot(this,"__wbindgen_throw",(tt,ot)=>{throw new Error(this.__internal__bridge.getString(tt,ot))});Ot(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(DEFAULT_SELF$2));Ot(this,"__wbg_require_604837428532a733",(tt,ot)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(tt,ot)}`)});Ot(this,"__wbg_crypto_968f1772287e2df0",tt=>this.__internal__bridge.addObject(DEFAULT_CRYPTO$2));Ot(this,"__wbg_getRandomValues_a3d34b4fee3c2869",tt=>this.__internal__bridge.addObject(DEFAULT_CRYPTO$2.getRandomValues));Ot(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(tt,ot,dt)=>{DEFAULT_CRYPTO$2.getRandomValues(this.__internal__bridge.getU8a(ot,dt))});Ot(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(tt,ot,dt)=>{throw new Error("randomFillsync is not available")});Ot(this,"__wbindgen_object_drop_ref",tt=>{this.__internal__bridge.takeObject(tt)});this.__internal__bridge=tt}},Bridge$2=class{constructor(tt){Ot(this,"__internal__createWasm");Ot(this,"__internal__heap");Ot(this,"__internal__wbg");Ot(this,"__internal__cachegetInt32");Ot(this,"__internal__cachegetUint8");Ot(this,"__internal__heapNext");Ot(this,"__internal__wasm");Ot(this,"__internal__wasmError");Ot(this,"__internal__wasmPromise");Ot(this,"__internal__type");this.__internal__createWasm=tt,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new Wbg$2(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(tt){(!this.__internal__wasmPromise||tt)&&(this.__internal__wasmPromise=(tt||this.__internal__createWasm)(this.__internal__wbg));const{error:ot,type:dt,wasm:ft}=await this.__internal__wasmPromise;return this.__internal__type=dt,this.__internal__wasm=ft,this.__internal__wasmError=ot,this.__internal__wasm}getObject(tt){return this.__internal__heap[tt]}dropObject(tt){tt<36||(this.__internal__heap[tt]=this.__internal__heapNext,this.__internal__heapNext=tt)}takeObject(tt){const ot=this.getObject(tt);return this.dropObject(tt),ot}addObject(tt){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const ot=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[ot],this.__internal__heap[ot]=tt,ot}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(tt,ot){return this.getUint8().subarray(tt/1,tt/1+ot)}getString(tt,ot){return u8aToString$3(this.getU8a(tt,ot))}allocU8a(tt){const ot=this.__internal__wasm.__wbindgen_malloc(tt.length*1);return this.getUint8().set(tt,ot/1),[ot,tt.length]}allocString(tt){return this.allocU8a(stringToU8a$5(tt))}resultU8a(){const tt=this.getInt32()[2],ot=this.getInt32()[8/4+1],dt=this.getU8a(tt,ot).slice();return this.__internal__wasm.__wbindgen_free(tt,ot*1),dt}resultString(){return u8aToString$3(this.resultU8a())}};function createWasmFn$2(et,tt,ot){return async dt=>{const ft={error:null,type:"none",wasm:null};try{if(tt!=null&&tt.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const pt=await WebAssembly.instantiate(tt,{wbg:dt});ft.wasm=pt.instance.exports,ft.type="wasm"}catch(pt){ft.error=`FATAL: Unable to initialize @polkadot/wasm-${et}:: ${pt.message}`,console.error(ft.error)}return ft}}const CHR$8="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",map$4=new Array(256);for(let et=0,tt=CHR$8.length;et<tt;et++)map$4[CHR$8.charCodeAt(et)]=et;function base64Decode$3(et,tt){let ot=0,dt=0,ft=-1;for(let pt=0,mt=tt.length-1;ft!==mt;pt++)ot=ot<<6|map$4[et.charCodeAt(pt)],(dt+=6)>=8&&(tt[++ft]=ot>>>(dt-=8)&255);return tt}const u8$3=Uint8Array,u16$3=Uint16Array,u32$4=Uint32Array,clim$2=new u8$3([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),fleb$2=new u8$3([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb$2=new u8$3([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb$2=(et,tt)=>{const ot=new u16$3(31);for(let ft=0;ft<31;++ft)ot[ft]=tt+=1<<et[ft-1];const dt=new u32$4(ot[30]);for(let ft=1;ft<30;++ft)for(let pt=ot[ft];pt<ot[ft+1];++pt)dt[pt]=pt-ot[ft]<<5|ft;return[ot,dt]},[fl$2,revfl$2]=freb$2(fleb$2,2);fl$2[28]=258,revfl$2[258]=28;const[fd$2]=freb$2(fdeb$2,0),rev$2=new u16$3(32768);for(let et=0;et<32768;++et){let tt=(et&43690)>>>1|(et&21845)<<1;tt=(tt&52428)>>>2|(tt&13107)<<2,tt=(tt&61680)>>>4|(tt&3855)<<4,rev$2[et]=((tt&65280)>>>8|(tt&255)<<8)>>>1}const hMap$2=(et,tt,ot)=>{const dt=et.length;let ft=0;const pt=new u16$3(tt);for(;ft<dt;++ft)et[ft]&&++pt[et[ft]-1];const mt=new u16$3(tt);for(ft=1;ft<tt;++ft)mt[ft]=mt[ft-1]+pt[ft-1]<<1;let ht;{ht=new u16$3(1<<tt);const bt=15-tt;for(ft=0;ft<dt;++ft)if(et[ft]){const yt=ft<<4|et[ft],xt=tt-et[ft];let gt=mt[et[ft]-1]++<<xt;for(const wt=gt|(1<<xt)-1;gt<=wt;++gt)ht[rev$2[gt]>>bt]=yt}}return ht},flt$2=new u8$3(288);for(let et=0;et<144;++et)flt$2[et]=8;for(let et=144;et<256;++et)flt$2[et]=9;for(let et=256;et<280;++et)flt$2[et]=7;for(let et=280;et<288;++et)flt$2[et]=8;const fdt$2=new u8$3(32);for(let et=0;et<32;++et)fdt$2[et]=5;const flrm$2=hMap$2(flt$2,9),fdrm$2=hMap$2(fdt$2,5),bits$2=(et,tt,ot)=>{const dt=tt>>>3;return(et[dt]|et[dt+1]<<8)>>>(tt&7)&ot},bits16$2=(et,tt)=>{const ot=tt>>>3;return(et[ot]|et[ot+1]<<8|et[ot+2]<<16)>>>(tt&7)},shft$2=et=>(et>>>3)+(et&7&&1),slc$2=(et,tt,ot)=>{(ot==null||ot>et.length)&&(ot=et.length);const dt=new(et instanceof u16$3?u16$3:et instanceof u32$4?u32$4:u8$3)(ot-tt);return dt.set(et.subarray(tt,ot)),dt},max$2=et=>{let tt=et[0];for(let ot=1,dt=et.length;ot<dt;++ot)et[ot]>tt&&(tt=et[ot]);return tt},inflt$2=(et,tt,ot)=>{const dt=!ot||ot.i;ot||(ot={});const ft=et.length,pt=!tt||!dt;tt||(tt=new u8$3(ft*3));const mt=Et=>{let Lt=tt.length;if(Et>Lt){const It=new u8$3(Math.max(Lt<<1,Et));It.set(tt),tt=It}};let ht=ot.f||0,bt=ot.p||0,yt=ot.b||0,xt=ot.l,gt=ot.d,wt=ot.m,Pt=ot.n;if(ht&&!xt)return tt;const St=ft<<3;do{if(!xt){ot.f=ht=bits$2(et,bt,1);const kt=bits$2(et,bt+1,3);if(bt+=3,kt)if(kt==1)xt=flrm$2,gt=fdrm$2,wt=9,Pt=5;else if(kt==2){const Nt=bits$2(et,bt,31)+257,Ut=bits$2(et,bt+10,15)+4,Ft=Nt+bits$2(et,bt+5,31)+1;bt+=14;const jt=new u8$3(Ft),Xt=new u8$3(19);for(let Ht=0;Ht<Ut;++Ht)Xt[clim$2[Ht]]=bits$2(et,bt+Ht*3,7);bt+=Ut*3;const Wt=max$2(Xt),qt=(1<<Wt)-1;if(!dt&&bt+Ft*(Wt+7)>St)break;const Zt=hMap$2(Xt,Wt);for(let Ht=0;Ht<Ft;){const vt=Zt[bits$2(et,bt,qt)];bt+=vt&15;const Vt=vt>>>4;if(Vt<16)jt[Ht++]=Vt;else{let At=0,Bt=0;for(Vt==16?(Bt=3+bits$2(et,bt,3),bt+=2,At=jt[Ht-1]):Vt==17?(Bt=3+bits$2(et,bt,7),bt+=3):Vt==18&&(Bt=11+bits$2(et,bt,127),bt+=7);Bt--;)jt[Ht++]=At}}const Gt=jt.subarray(0,Nt),Qt=jt.subarray(Nt);wt=max$2(Gt),Pt=max$2(Qt),xt=hMap$2(Gt,wt),gt=hMap$2(Qt,Pt)}else throw"invalid block type";else{const Nt=shft$2(bt)+4,Ut=et[Nt-4]|et[Nt-3]<<8,Ft=Nt+Ut;if(Ft>ft){if(dt)throw"unexpected EOF";break}pt&&mt(yt+Ut),tt.set(et.subarray(Nt,Ft),yt),ot.b=yt+=Ut,ot.p=bt=Ft<<3;continue}if(bt>St)throw"unexpected EOF"}pt&&mt(yt+131072);const Et=(1<<wt)-1,Lt=(1<<Pt)-1,It=wt+Pt+18;for(;dt||bt+It<St;){const kt=xt[bits16$2(et,bt)&Et],Nt=kt>>>4;if(bt+=kt&15,bt>St)throw"unexpected EOF";if(!kt)throw"invalid length/literal";if(Nt<256)tt[yt++]=Nt;else if(Nt==256){xt=void 0;break}else{let Ut=Nt-254;if(Nt>264){const qt=Nt-257,Zt=fleb$2[qt];Ut=bits$2(et,bt,(1<<Zt)-1)+fl$2[qt],bt+=Zt}const Ft=gt[bits16$2(et,bt)&Lt],jt=Ft>>>4;if(!Ft)throw"invalid distance";bt+=Ft&15;let Xt=fd$2[jt];if(jt>3){const qt=fdeb$2[jt];Xt+=bits16$2(et,bt)&(1<<qt)-1,bt+=qt}if(bt>St)throw"unexpected EOF";pt&&mt(yt+131072);const Wt=yt+Ut;for(;yt<Wt;yt+=4)tt[yt]=tt[yt-Xt],tt[yt+1]=tt[yt+1-Xt],tt[yt+2]=tt[yt+2-Xt],tt[yt+3]=tt[yt+3-Xt];yt=Wt}}ot.l=xt,ot.p=bt,ot.b=yt,xt&&(ht=1,ot.m=wt,ot.d=gt,ot.n=Pt)}while(!ht);return yt==tt.length?tt:slc$2(tt,0,yt)},zlv$2=et=>{if((et[0]&15)!=8||et[0]>>>4>7||(et[0]<<8|et[1])%31)throw"invalid zlib data";if(et[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function unzlibSync$2(et,tt){return inflt$2((zlv$2(et),et.subarray(2,-4)),tt)}var lenIn$2=171008,lenOut$2=339468,bytes_1$2="";const wasmBytes$2=unzlibSync$2(base64Decode$3(bytes_1$2,new Uint8Array(lenIn$2)),new Uint8Array(lenOut$2)),createWasm$2=createWasmFn$2("crypto",wasmBytes$2),bridge$2=new Bridge$2(createWasm$2);async function initBridge(et){return bridge$2.init(et)}function withWasm$2(et){return(...tt)=>{if(!bridge$2.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return et(bridge$2.wasm,...tt)}}const bip39ToEntropy=withWasm$2((et,tt)=>(et.ext_bip39_to_entropy(8,...bridge$2.allocString(tt)),bridge$2.resultU8a())),bip39ToMiniSecret=withWasm$2((et,tt,ot)=>(et.ext_bip39_to_mini_secret(8,...bridge$2.allocString(tt),...bridge$2.allocString(ot)),bridge$2.resultU8a())),bip39ToSeed=withWasm$2((et,tt,ot)=>(et.ext_bip39_to_seed(8,...bridge$2.allocString(tt),...bridge$2.allocString(ot)),bridge$2.resultU8a())),bip39Validate=withWasm$2((et,tt)=>et.ext_bip39_validate(...bridge$2.allocString(tt))!==0),ed25519KeypairFromSeed=withWasm$2((et,tt)=>(et.ext_ed_from_seed(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),ed25519Sign$1=withWasm$2((et,tt,ot,dt)=>(et.ext_ed_sign(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),...bridge$2.allocU8a(dt)),bridge$2.resultU8a())),ed25519Verify$1=withWasm$2((et,tt,ot,dt)=>et.ext_ed_verify(...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),...bridge$2.allocU8a(dt))!==0),secp256k1FromSeed=withWasm$2((et,tt)=>(et.ext_secp_from_seed(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),secp256k1Compress$1=withWasm$2((et,tt)=>(et.ext_secp_pub_compress(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),secp256k1Expand$3=withWasm$2((et,tt)=>(et.ext_secp_pub_expand(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),secp256k1Recover$1=withWasm$2((et,tt,ot,dt)=>(et.ext_secp_recover(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),dt),bridge$2.resultU8a())),secp256k1Sign$1=withWasm$2((et,tt,ot)=>(et.ext_secp_sign(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot)),bridge$2.resultU8a())),sr25519DeriveKeypairHard=withWasm$2((et,tt,ot)=>(et.ext_sr_derive_keypair_hard(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot)),bridge$2.resultU8a())),sr25519DeriveKeypairSoft=withWasm$2((et,tt,ot)=>(et.ext_sr_derive_keypair_soft(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot)),bridge$2.resultU8a())),sr25519KeypairFromSeed=withWasm$2((et,tt)=>(et.ext_sr_from_seed(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),sr25519Sign$1=withWasm$2((et,tt,ot,dt)=>(et.ext_sr_sign(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),...bridge$2.allocU8a(dt)),bridge$2.resultU8a())),sr25519Verify$1=withWasm$2((et,tt,ot,dt)=>et.ext_sr_verify(...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),...bridge$2.allocU8a(dt))!==0),vrfSign=withWasm$2((et,tt,ot,dt,ft)=>(et.ext_vrf_sign(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),...bridge$2.allocU8a(dt),...bridge$2.allocU8a(ft)),bridge$2.resultU8a())),vrfVerify=withWasm$2((et,tt,ot,dt,ft,pt)=>et.ext_vrf_verify(...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),...bridge$2.allocU8a(dt),...bridge$2.allocU8a(ft),...bridge$2.allocU8a(pt))!==0),blake2b$3=withWasm$2((et,tt,ot,dt)=>(et.ext_blake2b(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),dt),bridge$2.resultU8a())),hmacSha256=withWasm$2((et,tt,ot)=>(et.ext_hmac_sha256(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot)),bridge$2.resultU8a())),hmacSha512=withWasm$2((et,tt,ot)=>(et.ext_hmac_sha512(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot)),bridge$2.resultU8a())),keccak256$1=withWasm$2((et,tt)=>(et.ext_keccak256(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),keccak512$1=withWasm$2((et,tt)=>(et.ext_keccak512(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),pbkdf2$1=withWasm$2((et,tt,ot,dt)=>(et.ext_pbkdf2(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),dt),bridge$2.resultU8a())),scrypt$1=withWasm$2((et,tt,ot,dt,ft,pt)=>(et.ext_scrypt(8,...bridge$2.allocU8a(tt),...bridge$2.allocU8a(ot),dt,ft,pt),bridge$2.resultU8a())),sha256$1=withWasm$2((et,tt)=>(et.ext_sha256(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),sha512$1=withWasm$2((et,tt)=>(et.ext_sha512(8,...bridge$2.allocU8a(tt)),bridge$2.resultU8a())),twox=withWasm$2((et,tt,ot)=>(et.ext_twox(8,...bridge$2.allocU8a(tt),ot),bridge$2.resultU8a()));function isReady$2(){return!!bridge$2.wasm}async function waitReady(){try{return!!await initBridge()}catch{return!1}}function cryptoWaitReady(){return waitReady().then(()=>{if(!isReady$2())throw new Error("Unable to initialize @polkadot/util-crypto");return!0}).catch(()=>!1)}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function isBytes$4(et){return et instanceof Uint8Array||ArrayBuffer.isView(et)&&et.constructor.name==="Uint8Array"}function abytes$1(et,...tt){if(!isBytes$4(et))throw new Error("Uint8Array expected");if(tt.length>0&&!tt.includes(et.length))throw new Error("Uint8Array expected of length "+tt+", got length="+et.length)}function isArrayOf$1(et,tt){return Array.isArray(tt)?tt.length===0?!0:et?tt.every(ot=>typeof ot=="string"):tt.every(ot=>Number.isSafeInteger(ot)):!1}function astr$1(et,tt){if(typeof tt!="string")throw new Error(`${et}: string expected`);return!0}function anumber$1(et){if(!Number.isSafeInteger(et))throw new Error(`invalid integer: ${et}`)}function aArr$1(et){if(!Array.isArray(et))throw new Error("array expected")}function astrArr$1(et,tt){if(!isArrayOf$1(!0,tt))throw new Error(`${et}: array of strings expected`)}function anumArr$1(et,tt){if(!isArrayOf$1(!1,tt))throw new Error(`${et}: array of numbers expected`)}function chain$3(...et){const tt=pt=>pt,ot=(pt,mt)=>ht=>pt(mt(ht)),dt=et.map(pt=>pt.encode).reduceRight(ot,tt),ft=et.map(pt=>pt.decode).reduce(ot,tt);return{encode:dt,decode:ft}}function alphabet$2(et){const tt=typeof et=="string"?et.split(""):et,ot=tt.length;astrArr$1("alphabet",tt);const dt=new Map(tt.map((ft,pt)=>[ft,pt]));return{encode:ft=>(aArr$1(ft),ft.map(pt=>{if(!Number.isSafeInteger(pt)||pt<0||pt>=ot)throw new Error(`alphabet.encode: digit index outside alphabet "${pt}". Allowed: ${et}`);return tt[pt]})),decode:ft=>(aArr$1(ft),ft.map(pt=>{astr$1("alphabet.decode",pt);const mt=dt.get(pt);if(mt===void 0)throw new Error(`Unknown letter: "${pt}". Allowed: ${et}`);return mt}))}}function join$2(et=""){return astr$1("join",et),{encode:tt=>(astrArr$1("join.decode",tt),tt.join(et)),decode:tt=>(astr$1("join.decode",tt),tt.split(et))}}function padding(et,tt="="){return anumber$1(et),astr$1("padding",tt),{encode(ot){for(astrArr$1("padding.encode",ot);ot.length*et%8;)ot.push(tt);return ot},decode(ot){astrArr$1("padding.decode",ot);let dt=ot.length;if(dt*et%8)throw new Error("padding: invalid, string should have whole number of bytes");for(;dt>0&&ot[dt-1]===tt;dt--)if((dt-1)*et%8===0)throw new Error("padding: invalid, string has too much padding");return ot.slice(0,dt)}}}function convertRadix$2(et,tt,ot){if(tt<2)throw new Error(`convertRadix: invalid from=${tt}, base cannot be less than 2`);if(ot<2)throw new Error(`convertRadix: invalid to=${ot}, base cannot be less than 2`);if(aArr$1(et),!et.length)return[];let dt=0;const ft=[],pt=Array.from(et,ht=>{if(anumber$1(ht),ht<0||ht>=tt)throw new Error(`invalid integer: ${ht}`);return ht}),mt=pt.length;for(;;){let ht=0,bt=!0;for(let yt=dt;yt<mt;yt++){const xt=pt[yt],gt=tt*ht,wt=gt+xt;if(!Number.isSafeInteger(wt)||gt/tt!==ht||wt-xt!==gt)throw new Error("convertRadix: carry overflow");const Pt=wt/ot;ht=wt%ot;const St=Math.floor(Pt);if(pt[yt]=St,!Number.isSafeInteger(St)||St*ot+ht!==wt)throw new Error("convertRadix: carry overflow");if(bt)St?bt=!1:dt=yt;else continue}if(ft.push(ht),bt)break}for(let ht=0;ht<et.length-1&&et[ht]===0;ht++)ft.push(0);return ft.reverse()}const gcd=(et,tt)=>tt===0?et:gcd(tt,et%tt),radix2carry=(et,tt)=>et+(tt-gcd(et,tt)),powers=(()=>{let et=[];for(let tt=0;tt<40;tt++)et.push(2**tt);return et})();function convertRadix2(et,tt,ot,dt){if(aArr$1(et),tt<=0||tt>32)throw new Error(`convertRadix2: wrong from=${tt}`);if(ot<=0||ot>32)throw new Error(`convertRadix2: wrong to=${ot}`);if(radix2carry(tt,ot)>32)throw new Error(`convertRadix2: carry overflow from=${tt} to=${ot} carryBits=${radix2carry(tt,ot)}`);let ft=0,pt=0;const mt=powers[tt],ht=powers[ot]-1,bt=[];for(const yt of et){if(anumber$1(yt),yt>=mt)throw new Error(`convertRadix2: invalid data word=${yt} from=${tt}`);if(ft=ft<<tt|yt,pt+tt>32)throw new Error(`convertRadix2: carry overflow pos=${pt} from=${tt}`);for(pt+=tt;pt>=ot;pt-=ot)bt.push((ft>>pt-ot&ht)>>>0);const xt=powers[pt];if(xt===void 0)throw new Error("invalid carry");ft&=xt-1}if(ft=ft<<ot-pt&ht,!dt&&pt>=tt)throw new Error("Excess padding");if(!dt&&ft>0)throw new Error(`Non-zero padding: ${ft}`);return dt&&pt>0&&bt.push(ft>>>0),bt}function radix$2(et){anumber$1(et);const tt=2**8;return{encode:ot=>{if(!isBytes$4(ot))throw new Error("radix.encode input should be Uint8Array");return convertRadix$2(Array.from(ot),tt,et)},decode:ot=>(anumArr$1("radix.decode",ot),Uint8Array.from(convertRadix$2(ot,et,tt)))}}function radix2(et,tt=!1){if(anumber$1(et),et<=0||et>32)throw new Error("radix2: bits should be in (0..32]");if(radix2carry(8,et)>32||radix2carry(et,8)>32)throw new Error("radix2: carry overflow");return{encode:ot=>{if(!isBytes$4(ot))throw new Error("radix2.encode input should be Uint8Array");return convertRadix2(Array.from(ot),8,et,!tt)},decode:ot=>(anumArr$1("radix2.decode",ot),Uint8Array.from(convertRadix2(ot,et,8,tt)))}}const hasBase64Builtin=typeof Uint8Array.from([]).toBase64=="function"&&typeof Uint8Array.fromBase64=="function",base64=hasBase64Builtin?{encode(et){return abytes$1(et),et.toBase64()},decode(et){return astr$1("base64",et),Uint8Array.fromBase64(et,{lastChunkHandling:"strict"})}}:chain$3(radix2(6),alphabet$2("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),padding(6),join$2("")),genBase58$2=et=>chain$3(radix$2(58),alphabet$2(et),join$2("")),base58$2=genBase58$2("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function createDecode$2({coder:et,ipfs:tt},ot){return(dt,ft)=>(ot(dt,ft),et.decode(tt&&ft?dt.substring(1):dt))}function createEncode$1({coder:et,ipfs:tt}){return(ot,dt)=>{const ft=et.encode(u8aToU8a$5(ot));return tt&&dt?`${tt}${ft}`:ft}}function createValidate$2({chars:et,ipfs:tt,type:ot,withPadding:dt}){return(ft,pt)=>{if(typeof ft!="string")throw new Error(`Expected ${ot} string input`);if(tt&&pt&&!ft.startsWith(tt))throw new Error(`Expected ipfs-compatible ${ot} to start with '${tt}'`);for(let mt=pt?1:0,ht=ft.length;mt<ht;mt++)if(!et.includes(ft[mt]))if(dt&&ft[mt]==="="){if(mt!==ht-1){if(ft[mt+1]!=="=")throw new Error(`Invalid ${ot} padding sequence "${ft[mt]}${ft[mt+1]}" at index ${mt}`)}}else throw new Error(`Invalid ${ot} character "${ft[mt]}" (0x${ft.charCodeAt(mt).toString(16)}) at index ${mt}`);return!0}}const config$4={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:base58$2,ipfs:"z",type:"base58"},base58Validate$2=createValidate$2(config$4),base58Decode$2=createDecode$2(config$4,base58Validate$2),base58Encode$1=createEncode$1(config$4);function number(et){if(!Number.isSafeInteger(et)||et<0)throw new Error(`positive integer expected, not ${et}`)}function isBytes$3(et){return et instanceof Uint8Array||et!=null&&typeof et=="object"&&et.constructor.name==="Uint8Array"}function bytes(et,...tt){if(!isBytes$3(et))throw new Error("Uint8Array expected");if(tt.length>0&&!tt.includes(et.length))throw new Error(`Uint8Array expected of length ${tt}, not of length=${et.length}`)}function hash$1(et){if(typeof et!="function"||typeof et.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number(et.outputLen),number(et.blockLen)}function exists(et,tt=!0){if(et.destroyed)throw new Error("Hash instance has been destroyed");if(tt&&et.finished)throw new Error("Hash#digest() has already been called")}function output(et,tt){bytes(et);const ot=tt.outputLen;if(et.length<ot)throw new Error(`digestInto() expects output buffer of length at least ${ot}`)}const crypto$2=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u32$3=et=>new Uint32Array(et.buffer,et.byteOffset,Math.floor(et.byteLength/4)),createView=et=>new DataView(et.buffer,et.byteOffset,et.byteLength),rotr=(et,tt)=>et<<32-tt|et>>>tt,rotl$1=(et,tt)=>et<<tt|et>>>32-tt>>>0,isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68,byteSwap=et=>et<<24&4278190080|et<<8&16711680|et>>>8&65280|et>>>24&255,byteSwapIfBE=isLE?et=>et:et=>byteSwap(et);function byteSwap32(et){for(let tt=0;tt<et.length;tt++)et[tt]=byteSwap(et[tt])}function utf8ToBytes$1(et){if(typeof et!="string")throw new Error(`utf8ToBytes expected string, got ${typeof et}`);return new Uint8Array(new TextEncoder().encode(et))}function toBytes(et){return typeof et=="string"&&(et=utf8ToBytes$1(et)),bytes(et),et}function concatBytes$1(...et){let tt=0;for(let dt=0;dt<et.length;dt++){const ft=et[dt];bytes(ft),tt+=ft.length}const ot=new Uint8Array(tt);for(let dt=0,ft=0;dt<et.length;dt++){const pt=et[dt];ot.set(pt,ft),ft+=pt.length}return ot}class Hash{clone(){return this._cloneInto()}}const toStr={}.toString;function checkOpts(et,tt){if(tt!==void 0&&toStr.call(tt)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(et,tt)}function wrapConstructor(et){const tt=dt=>et().update(toBytes(dt)).digest(),ot=et();return tt.outputLen=ot.outputLen,tt.blockLen=ot.blockLen,tt.create=()=>et(),tt}function wrapConstructorWithOpts(et){const tt=(dt,ft)=>et(ft).update(toBytes(dt)).digest(),ot=et({});return tt.outputLen=ot.outputLen,tt.blockLen=ot.blockLen,tt.create=dt=>et(dt),tt}function randomBytes(et=32){if(crypto$2&&typeof crypto$2.getRandomValues=="function")return crypto$2.getRandomValues(new Uint8Array(et));throw new Error("crypto.getRandomValues must be defined")}const SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class BLAKE extends Hash{constructor(tt,ot,dt={},ft,pt,mt){if(super(),this.blockLen=tt,this.outputLen=ot,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,number(tt),number(ot),number(ft),ot<0||ot>ft)throw new Error("outputLen bigger than keyLen");if(dt.key!==void 0&&(dt.key.length<1||dt.key.length>ft))throw new Error(`key must be up 1..${ft} byte long or undefined`);if(dt.salt!==void 0&&dt.salt.length!==pt)throw new Error(`salt must be ${pt} byte long or undefined`);if(dt.personalization!==void 0&&dt.personalization.length!==mt)throw new Error(`personalization must be ${mt} byte long or undefined`);this.buffer32=u32$3(this.buffer=new Uint8Array(tt))}update(tt){exists(this);const{blockLen:ot,buffer:dt,buffer32:ft}=this;tt=toBytes(tt);const pt=tt.length,mt=tt.byteOffset,ht=tt.buffer;for(let bt=0;bt<pt;){this.pos===ot&&(isLE||byteSwap32(ft),this.compress(ft,0,!1),isLE||byteSwap32(ft),this.pos=0);const yt=Math.min(ot-this.pos,pt-bt),xt=mt+bt;if(yt===ot&&!(xt%4)&&bt+yt<pt){const gt=new Uint32Array(ht,xt,Math.floor((pt-bt)/4));isLE||byteSwap32(gt);for(let wt=0;bt+ot<pt;wt+=ft.length,bt+=ot)this.length+=ot,this.compress(gt,wt,!1);isLE||byteSwap32(gt);continue}dt.set(tt.subarray(bt,bt+yt),this.pos),this.pos+=yt,this.length+=yt,bt+=yt}return this}digestInto(tt){exists(this),output(tt,this);const{pos:ot,buffer32:dt}=this;this.finished=!0,this.buffer.subarray(ot).fill(0),isLE||byteSwap32(dt),this.compress(dt,0,!0),isLE||byteSwap32(dt);const ft=u32$3(tt);this.get().forEach((pt,mt)=>ft[mt]=byteSwapIfBE(pt))}digest(){const{buffer:tt,outputLen:ot}=this;this.digestInto(tt);const dt=tt.slice(0,ot);return this.destroy(),dt}_cloneInto(tt){const{buffer:ot,length:dt,finished:ft,destroyed:pt,outputLen:mt,pos:ht}=this;return tt||(tt=new this.constructor({dkLen:mt})),tt.set(...this.get()),tt.length=dt,tt.finished=ft,tt.destroyed=pt,tt.outputLen=mt,tt.buffer.set(ot),tt.pos=ht,tt}}const U32_MASK64=BigInt(2**32-1),_32n$1=BigInt(32);function fromBig(et,tt=!1){return tt?{h:Number(et&U32_MASK64),l:Number(et>>_32n$1&U32_MASK64)}:{h:Number(et>>_32n$1&U32_MASK64)|0,l:Number(et&U32_MASK64)|0}}function split(et,tt=!1){let ot=new Uint32Array(et.length),dt=new Uint32Array(et.length);for(let ft=0;ft<et.length;ft++){const{h:pt,l:mt}=fromBig(et[ft],tt);[ot[ft],dt[ft]]=[pt,mt]}return[ot,dt]}const toBig=(et,tt)=>BigInt(et>>>0)<<_32n$1|BigInt(tt>>>0),shrSH=(et,tt,ot)=>et>>>ot,shrSL=(et,tt,ot)=>et<<32-ot|tt>>>ot,rotrSH=(et,tt,ot)=>et>>>ot|tt<<32-ot,rotrSL=(et,tt,ot)=>et<<32-ot|tt>>>ot,rotrBH=(et,tt,ot)=>et<<64-ot|tt>>>ot-32,rotrBL=(et,tt,ot)=>et>>>ot-32|tt<<64-ot,rotr32H=(et,tt)=>tt,rotr32L=(et,tt)=>et,rotlSH=(et,tt,ot)=>et<<ot|tt>>>32-ot,rotlSL=(et,tt,ot)=>tt<<ot|et>>>32-ot,rotlBH=(et,tt,ot)=>tt<<ot-32|et>>>64-ot,rotlBL=(et,tt,ot)=>et<<ot-32|tt>>>64-ot;function add(et,tt,ot,dt){const ft=(tt>>>0)+(dt>>>0);return{h:et+ot+(ft/2**32|0)|0,l:ft|0}}const add3L=(et,tt,ot)=>(et>>>0)+(tt>>>0)+(ot>>>0),add3H=(et,tt,ot,dt)=>tt+ot+dt+(et/2**32|0)|0,add4L=(et,tt,ot,dt)=>(et>>>0)+(tt>>>0)+(ot>>>0)+(dt>>>0),add4H=(et,tt,ot,dt,ft)=>tt+ot+dt+ft+(et/2**32|0)|0,add5L=(et,tt,ot,dt,ft)=>(et>>>0)+(tt>>>0)+(ot>>>0)+(dt>>>0)+(ft>>>0),add5H=(et,tt,ot,dt,ft,pt)=>tt+ot+dt+ft+pt+(et/2**32|0)|0,u64$1={fromBig,split,toBig,shrSH,shrSL,rotrSH,rotrSL,rotrBH,rotrBL,rotr32H,rotr32L,rotlSH,rotlSL,rotlBH,rotlBL,add,add3L,add3H,add4L,add4H,add5H,add5L},B2B_IV=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),BBUF=new Uint32Array(32);function G1b(et,tt,ot,dt,ft,pt){const mt=ft[pt],ht=ft[pt+1];let bt=BBUF[2*et],yt=BBUF[2*et+1],xt=BBUF[2*tt],gt=BBUF[2*tt+1],wt=BBUF[2*ot],Pt=BBUF[2*ot+1],St=BBUF[2*dt],Et=BBUF[2*dt+1],Lt=u64$1.add3L(bt,xt,mt);yt=u64$1.add3H(Lt,yt,gt,ht),bt=Lt|0,{Dh:Et,Dl:St}={Dh:Et^yt,Dl:St^bt},{Dh:Et,Dl:St}={Dh:u64$1.rotr32H(Et,St),Dl:u64$1.rotr32L(Et,St)},{h:Pt,l:wt}=u64$1.add(Pt,wt,Et,St),{Bh:gt,Bl:xt}={Bh:gt^Pt,Bl:xt^wt},{Bh:gt,Bl:xt}={Bh:u64$1.rotrSH(gt,xt,24),Bl:u64$1.rotrSL(gt,xt,24)},BBUF[2*et]=bt,BBUF[2*et+1]=yt,BBUF[2*tt]=xt,BBUF[2*tt+1]=gt,BBUF[2*ot]=wt,BBUF[2*ot+1]=Pt,BBUF[2*dt]=St,BBUF[2*dt+1]=Et}function G2b(et,tt,ot,dt,ft,pt){const mt=ft[pt],ht=ft[pt+1];let bt=BBUF[2*et],yt=BBUF[2*et+1],xt=BBUF[2*tt],gt=BBUF[2*tt+1],wt=BBUF[2*ot],Pt=BBUF[2*ot+1],St=BBUF[2*dt],Et=BBUF[2*dt+1],Lt=u64$1.add3L(bt,xt,mt);yt=u64$1.add3H(Lt,yt,gt,ht),bt=Lt|0,{Dh:Et,Dl:St}={Dh:Et^yt,Dl:St^bt},{Dh:Et,Dl:St}={Dh:u64$1.rotrSH(Et,St,16),Dl:u64$1.rotrSL(Et,St,16)},{h:Pt,l:wt}=u64$1.add(Pt,wt,Et,St),{Bh:gt,Bl:xt}={Bh:gt^Pt,Bl:xt^wt},{Bh:gt,Bl:xt}={Bh:u64$1.rotrBH(gt,xt,63),Bl:u64$1.rotrBL(gt,xt,63)},BBUF[2*et]=bt,BBUF[2*et+1]=yt,BBUF[2*tt]=xt,BBUF[2*tt+1]=gt,BBUF[2*ot]=wt,BBUF[2*ot+1]=Pt,BBUF[2*dt]=St,BBUF[2*dt+1]=Et}class BLAKE2b extends BLAKE{constructor(tt={}){super(128,tt.dkLen===void 0?64:tt.dkLen,tt,64,16,16),this.v0l=B2B_IV[0]|0,this.v0h=B2B_IV[1]|0,this.v1l=B2B_IV[2]|0,this.v1h=B2B_IV[3]|0,this.v2l=B2B_IV[4]|0,this.v2h=B2B_IV[5]|0,this.v3l=B2B_IV[6]|0,this.v3h=B2B_IV[7]|0,this.v4l=B2B_IV[8]|0,this.v4h=B2B_IV[9]|0,this.v5l=B2B_IV[10]|0,this.v5h=B2B_IV[11]|0,this.v6l=B2B_IV[12]|0,this.v6h=B2B_IV[13]|0,this.v7l=B2B_IV[14]|0,this.v7h=B2B_IV[15]|0;const ot=tt.key?tt.key.length:0;if(this.v0l^=this.outputLen|ot<<8|65536|1<<24,tt.salt){const dt=u32$3(toBytes(tt.salt));this.v4l^=byteSwapIfBE(dt[0]),this.v4h^=byteSwapIfBE(dt[1]),this.v5l^=byteSwapIfBE(dt[2]),this.v5h^=byteSwapIfBE(dt[3])}if(tt.personalization){const dt=u32$3(toBytes(tt.personalization));this.v6l^=byteSwapIfBE(dt[0]),this.v6h^=byteSwapIfBE(dt[1]),this.v7l^=byteSwapIfBE(dt[2]),this.v7h^=byteSwapIfBE(dt[3])}if(tt.key){const dt=new Uint8Array(this.blockLen);dt.set(toBytes(tt.key)),this.update(dt)}}get(){let{v0l:tt,v0h:ot,v1l:dt,v1h:ft,v2l:pt,v2h:mt,v3l:ht,v3h:bt,v4l:yt,v4h:xt,v5l:gt,v5h:wt,v6l:Pt,v6h:St,v7l:Et,v7h:Lt}=this;return[tt,ot,dt,ft,pt,mt,ht,bt,yt,xt,gt,wt,Pt,St,Et,Lt]}set(tt,ot,dt,ft,pt,mt,ht,bt,yt,xt,gt,wt,Pt,St,Et,Lt){this.v0l=tt|0,this.v0h=ot|0,this.v1l=dt|0,this.v1h=ft|0,this.v2l=pt|0,this.v2h=mt|0,this.v3l=ht|0,this.v3h=bt|0,this.v4l=yt|0,this.v4h=xt|0,this.v5l=gt|0,this.v5h=wt|0,this.v6l=Pt|0,this.v6h=St|0,this.v7l=Et|0,this.v7h=Lt|0}compress(tt,ot,dt){this.get().forEach((bt,yt)=>BBUF[yt]=bt),BBUF.set(B2B_IV,16);let{h:ft,l:pt}=u64$1.fromBig(BigInt(this.length));BBUF[24]=B2B_IV[8]^pt,BBUF[25]=B2B_IV[9]^ft,dt&&(BBUF[28]=~BBUF[28],BBUF[29]=~BBUF[29]);let mt=0;const ht=SIGMA;for(let bt=0;bt<12;bt++)G1b(0,4,8,12,tt,ot+2*ht[mt++]),G2b(0,4,8,12,tt,ot+2*ht[mt++]),G1b(1,5,9,13,tt,ot+2*ht[mt++]),G2b(1,5,9,13,tt,ot+2*ht[mt++]),G1b(2,6,10,14,tt,ot+2*ht[mt++]),G2b(2,6,10,14,tt,ot+2*ht[mt++]),G1b(3,7,11,15,tt,ot+2*ht[mt++]),G2b(3,7,11,15,tt,ot+2*ht[mt++]),G1b(0,5,10,15,tt,ot+2*ht[mt++]),G2b(0,5,10,15,tt,ot+2*ht[mt++]),G1b(1,6,11,12,tt,ot+2*ht[mt++]),G2b(1,6,11,12,tt,ot+2*ht[mt++]),G1b(2,7,8,13,tt,ot+2*ht[mt++]),G2b(2,7,8,13,tt,ot+2*ht[mt++]),G1b(3,4,9,14,tt,ot+2*ht[mt++]),G2b(3,4,9,14,tt,ot+2*ht[mt++]);this.v0l^=BBUF[0]^BBUF[16],this.v0h^=BBUF[1]^BBUF[17],this.v1l^=BBUF[2]^BBUF[18],this.v1h^=BBUF[3]^BBUF[19],this.v2l^=BBUF[4]^BBUF[20],this.v2h^=BBUF[5]^BBUF[21],this.v3l^=BBUF[6]^BBUF[22],this.v3h^=BBUF[7]^BBUF[23],this.v4l^=BBUF[8]^BBUF[24],this.v4h^=BBUF[9]^BBUF[25],this.v5l^=BBUF[10]^BBUF[26],this.v5h^=BBUF[11]^BBUF[27],this.v6l^=BBUF[12]^BBUF[28],this.v6h^=BBUF[13]^BBUF[29],this.v7l^=BBUF[14]^BBUF[30],this.v7h^=BBUF[15]^BBUF[31],BBUF.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const blake2b$2=wrapConstructorWithOpts(et=>new BLAKE2b(et));function createAsHex(et){return(...tt)=>u8aToHex$5(et(...tt))}function createBitHasher(et,tt){return(ot,dt)=>tt(ot,et,dt)}function createDualHasher$1(et,tt){return(ot,dt=256,ft)=>{const pt=u8aToU8a$5(ot);return!hasBigInt$2||!ft&&isReady$2()?et[dt](pt):tt[dt](pt)}}function blake2AsU8a$2(et,tt=256,ot,dt){const ft=Math.ceil(tt/8),pt=u8aToU8a$5(et);return!hasBigInt$2||!dt&&isReady$2()?blake2b$3(pt,u8aToU8a$5(ot),ft):ot?blake2b$2(pt,{dkLen:ft,key:ot}):blake2b$2(pt,{dkLen:ft})}const blake2AsHex=createAsHex(blake2AsU8a$2),SS58_PREFIX$2=stringToU8a$5("SS58PRE");function sshash$2(et){return blake2AsU8a$2(u8aConcat$3(SS58_PREFIX$2,et),512)}function checkAddressChecksum$2(et){const tt=et[0]&64?2:1,ot=tt===1?et[0]:(et[0]&63)<<2|et[1]>>6|(et[1]&63)<<8,dt=[34+tt,35+tt].includes(et.length),ft=et.length-(dt?2:1),pt=sshash$2(et.subarray(0,ft));return[(et[0]&128)===0&&![46,47].includes(et[0])&&(dt?et[et.length-2]===pt[0]&&et[et.length-1]===pt[1]:et[et.length-1]===pt[0]),ft,tt,ot]}const knownSubstrate$3=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"autonomys",displayName:"Autonomys",symbols:["AI3"],decimals:[18],standardAccount:"*25519",website:"https://autonomys.xyz"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],knownGenesis$3={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],encointer:["0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],frequency:["0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],integritee:["0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da","0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],peaq:["0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polimec:["0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vara:["0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},knownIcon$3={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},knownLedger$3={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,bittensor:354,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,encointer:434,enjin:1155,equilibrium:99999997,frequency:2091,genshiro:99999996,hydradx:354,integritee:2015,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,peaq:3338,pendulum:354,phala:354,picasso:434,polimec:3344,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vara:4976,vtb:694,xxnetwork:1955,zeitgeist:354},knownTestnet$3={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},UNSORTED$3=[0,2,42],TESTNETS$3=["testnet"];function toExpanded$3(et){var ft,pt;const tt=et.network||"",ot=tt.replace(/_/g,"-").split("-"),dt=et;return dt.slip44=knownLedger$3[tt],dt.hasLedgerSupport=!!dt.slip44,dt.genesisHash=knownGenesis$3[tt]||[],dt.icon=knownIcon$3[tt]||"substrate",dt.isTestnet=!!knownTestnet$3[tt]||TESTNETS$3.includes(ot[ot.length-1]),dt.isIgnored=dt.isTestnet||!(et.standardAccount&&((ft=et.decimals)!=null&&ft.length)&&((pt=et.symbols)!=null&&pt.length))&&et.prefix!==42,dt}function filterSelectable$3({genesisHash:et,prefix:tt}){return!!et.length||tt===42}function filterAvailable$3(et){return!et.isIgnored&&!!et.network}function sortNetworks$3(et,tt){const ot=UNSORTED$3.includes(et.prefix),dt=UNSORTED$3.includes(tt.prefix);return ot===dt?ot?0:et.displayName.localeCompare(tt.displayName):ot?-1:1}const allNetworks$3=knownSubstrate$3.map(toExpanded$3),availableNetworks$3=allNetworks$3.filter(filterAvailable$3).sort(sortNetworks$3);availableNetworks$3.filter(filterSelectable$3);const defaults$3={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:availableNetworks$3.map(({prefix:et})=>et),prefix:42};function decodeAddress$2(et,tt,ot=-1){if(!et)throw new Error("Invalid empty address passed");if(isU8a$5(et)||isHex$6(et))return u8aToU8a$5(et);try{const dt=base58Decode$2(et);if(!defaults$3.allowedEncodedLengths.includes(dt.length))throw new Error("Invalid decoded address length");const[ft,pt,mt,ht]=checkAddressChecksum$2(dt);if(!ft&&!tt)throw new Error("Invalid decoded address checksum");if(ot!==-1&&ot!==ht)throw new Error(`Expected ss58Format ${ot}, received ${ht}`);return dt.slice(mt,pt)}catch(dt){throw new Error(`Decoding ${et}: ${dt.message}`)}}const BN_BE_OPTS={isLe:!1},BN_LE_OPTS={isLe:!0},BN_BE_32_OPTS={bitLength:32,isLe:!1},BN_LE_32_OPTS={bitLength:32,isLe:!0},BN_BE_256_OPTS$1={bitLength:256,isLe:!1},BN_LE_256_OPTS={bitLength:256,isLe:!0},RE_NUMBER=/^\d+$/,JUNCTION_ID_LEN=32;class DeriveJunction{constructor(){Ot(this,"__internal__chainCode",new Uint8Array(32));Ot(this,"__internal__isHard",!1)}static from(tt){const ot=new DeriveJunction,[dt,ft]=tt.startsWith("/")?[tt.substring(1),!0]:[tt,!1];return ot.soft(RE_NUMBER.test(dt)?new BN(dt,10):dt),ft?ot.harden():ot}get chainCode(){return this.__internal__chainCode}get isHard(){return this.__internal__isHard}get isSoft(){return!this.__internal__isHard}hard(tt){return this.soft(tt).harden()}harden(){return this.__internal__isHard=!0,this}soft(tt){return isNumber$3(tt)||isBn$2(tt)||isBigInt$6(tt)?this.soft(bnToU8a$2(tt,BN_LE_256_OPTS)):isHex$6(tt)?this.soft(hexToU8a$6(tt)):isString$3(tt)?this.soft(compactAddLength$1(stringToU8a$5(tt))):tt.length>JUNCTION_ID_LEN?this.soft(blake2AsU8a$2(tt)):(this.__internal__chainCode.fill(0),this.__internal__chainCode.set(tt,0),this)}soften(){return this.__internal__isHard=!1,this}}const RE_JUNCTION=/\/(\/?)([^/]+)/g;function keyExtractPath(et){const tt=et.match(RE_JUNCTION),ot=[];let dt="";if(tt){dt=tt.join("");for(const ft of tt)ot.push(DeriveJunction.from(ft.substring(1)))}if(dt!==et)throw new Error(`Re-constructed path "${dt}" does not match input`);return{parts:tt,path:ot}}const RE_CAPTURE=/^((0x[a-fA-F0-9]+|[\p{L}\d]+(?: [\p{L}\d]+)*))((\/\/?[^/]+)*)(\/\/\/(.*))?$/u;function keyExtractSuri(et){const ot=et.normalize("NFC").match(RE_CAPTURE);if(ot===null)throw new Error("Unable to match provided value to a secret URI");const[,dt,,ft,,,pt]=ot,{path:mt}=keyExtractPath(ft);return{derivePath:ft,password:pt,path:mt,phrase:dt}}const HDKD$1=compactAddLength$1(stringToU8a$5("Secp256k1HDKD"));function secp256k1DeriveHard(et,tt){if(!isU8a$5(tt)||tt.length!==32)throw new Error("Invalid chainCode passed to derive");return blake2AsU8a$2(u8aConcat$3(HDKD$1,et,tt),256)}function setBigUint64(et,tt,ot,dt){if(typeof et.setBigUint64=="function")return et.setBigUint64(tt,ot,dt);const ft=BigInt(32),pt=BigInt(4294967295),mt=Number(ot>>ft&pt),ht=Number(ot&pt),bt=dt?4:0,yt=dt?0:4;et.setUint32(tt+bt,mt,dt),et.setUint32(tt+yt,ht,dt)}const Chi=(et,tt,ot)=>et&tt^~et&ot,Maj=(et,tt,ot)=>et&tt^et&ot^tt&ot;class HashMD extends Hash{constructor(tt,ot,dt,ft){super(),this.blockLen=tt,this.outputLen=ot,this.padOffset=dt,this.isLE=ft,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(tt),this.view=createView(this.buffer)}update(tt){exists(this);const{view:ot,buffer:dt,blockLen:ft}=this;tt=toBytes(tt);const pt=tt.length;for(let mt=0;mt<pt;){const ht=Math.min(ft-this.pos,pt-mt);if(ht===ft){const bt=createView(tt);for(;ft<=pt-mt;mt+=ft)this.process(bt,mt);continue}dt.set(tt.subarray(mt,mt+ht),this.pos),this.pos+=ht,mt+=ht,this.pos===ft&&(this.process(ot,0),this.pos=0)}return this.length+=tt.length,this.roundClean(),this}digestInto(tt){exists(this),output(tt,this),this.finished=!0;const{buffer:ot,view:dt,blockLen:ft,isLE:pt}=this;let{pos:mt}=this;ot[mt++]=128,this.buffer.subarray(mt).fill(0),this.padOffset>ft-mt&&(this.process(dt,0),mt=0);for(let gt=mt;gt<ft;gt++)ot[gt]=0;setBigUint64(dt,ft-8,BigInt(this.length*8),pt),this.process(dt,0);const ht=createView(tt),bt=this.outputLen;if(bt%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const yt=bt/4,xt=this.get();if(yt>xt.length)throw new Error("_sha2: outputLen bigger than state");for(let gt=0;gt<yt;gt++)ht.setUint32(4*gt,xt[gt],pt)}digest(){const{buffer:tt,outputLen:ot}=this;this.digestInto(tt);const dt=tt.slice(0,ot);return this.destroy(),dt}_cloneInto(tt){tt||(tt=new this.constructor),tt.set(...this.get());const{blockLen:ot,buffer:dt,length:ft,finished:pt,destroyed:mt,pos:ht}=this;return tt.length=ft,tt.pos=ht,tt.finished=pt,tt.destroyed=mt,ft%ot&&tt.buffer.set(dt),tt}}const SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),SHA256_IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends HashMD{constructor(){super(64,32,8,!1),this.A=SHA256_IV[0]|0,this.B=SHA256_IV[1]|0,this.C=SHA256_IV[2]|0,this.D=SHA256_IV[3]|0,this.E=SHA256_IV[4]|0,this.F=SHA256_IV[5]|0,this.G=SHA256_IV[6]|0,this.H=SHA256_IV[7]|0}get(){const{A:tt,B:ot,C:dt,D:ft,E:pt,F:mt,G:ht,H:bt}=this;return[tt,ot,dt,ft,pt,mt,ht,bt]}set(tt,ot,dt,ft,pt,mt,ht,bt){this.A=tt|0,this.B=ot|0,this.C=dt|0,this.D=ft|0,this.E=pt|0,this.F=mt|0,this.G=ht|0,this.H=bt|0}process(tt,ot){for(let gt=0;gt<16;gt++,ot+=4)SHA256_W[gt]=tt.getUint32(ot,!1);for(let gt=16;gt<64;gt++){const wt=SHA256_W[gt-15],Pt=SHA256_W[gt-2],St=rotr(wt,7)^rotr(wt,18)^wt>>>3,Et=rotr(Pt,17)^rotr(Pt,19)^Pt>>>10;SHA256_W[gt]=Et+SHA256_W[gt-7]+St+SHA256_W[gt-16]|0}let{A:dt,B:ft,C:pt,D:mt,E:ht,F:bt,G:yt,H:xt}=this;for(let gt=0;gt<64;gt++){const wt=rotr(ht,6)^rotr(ht,11)^rotr(ht,25),Pt=xt+wt+Chi(ht,bt,yt)+SHA256_K[gt]+SHA256_W[gt]|0,Et=(rotr(dt,2)^rotr(dt,13)^rotr(dt,22))+Maj(dt,ft,pt)|0;xt=yt,yt=bt,bt=ht,ht=mt+Pt|0,mt=pt,pt=ft,ft=dt,dt=Pt+Et|0}dt=dt+this.A|0,ft=ft+this.B|0,pt=pt+this.C|0,mt=mt+this.D|0,ht=ht+this.E|0,bt=bt+this.F|0,yt=yt+this.G|0,xt=xt+this.H|0,this.set(dt,ft,pt,mt,ht,bt,yt,xt)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const sha256=wrapConstructor(()=>new SHA256);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$5=BigInt(0),_1n$7=BigInt(1),_2n$5=BigInt(2);function isBytes$2(et){return et instanceof Uint8Array||et!=null&&typeof et=="object"&&et.constructor.name==="Uint8Array"}function abytes(et){if(!isBytes$2(et))throw new Error("Uint8Array expected")}const hexes=Array.from({length:256},(et,tt)=>tt.toString(16).padStart(2,"0"));function bytesToHex(et){abytes(et);let tt="";for(let ot=0;ot<et.length;ot++)tt+=hexes[et[ot]];return tt}function numberToHexUnpadded(et){const tt=et.toString(16);return tt.length&1?`0${tt}`:tt}function hexToNumber(et){if(typeof et!="string")throw new Error("hex string expected, got "+typeof et);return BigInt(et===""?"0":`0x${et}`)}const asciis={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function asciiToBase16(et){if(et>=asciis._0&&et<=asciis._9)return et-asciis._0;if(et>=asciis._A&&et<=asciis._F)return et-(asciis._A-10);if(et>=asciis._a&&et<=asciis._f)return et-(asciis._a-10)}function hexToBytes(et){if(typeof et!="string")throw new Error("hex string expected, got "+typeof et);const tt=et.length,ot=tt/2;if(tt%2)throw new Error("padded hex string expected, got unpadded hex of length "+tt);const dt=new Uint8Array(ot);for(let ft=0,pt=0;ft<ot;ft++,pt+=2){const mt=asciiToBase16(et.charCodeAt(pt)),ht=asciiToBase16(et.charCodeAt(pt+1));if(mt===void 0||ht===void 0){const bt=et[pt]+et[pt+1];throw new Error('hex string expected, got non-hex character "'+bt+'" at index '+pt)}dt[ft]=mt*16+ht}return dt}function bytesToNumberBE(et){return hexToNumber(bytesToHex(et))}function bytesToNumberLE(et){return abytes(et),hexToNumber(bytesToHex(Uint8Array.from(et).reverse()))}function numberToBytesBE(et,tt){return hexToBytes(et.toString(16).padStart(tt*2,"0"))}function numberToBytesLE(et,tt){return numberToBytesBE(et,tt).reverse()}function numberToVarBytesBE(et){return hexToBytes(numberToHexUnpadded(et))}function ensureBytes(et,tt,ot){let dt;if(typeof tt=="string")try{dt=hexToBytes(tt)}catch(pt){throw new Error(`${et} must be valid hex string, got "${tt}". Cause: ${pt}`)}else if(isBytes$2(tt))dt=Uint8Array.from(tt);else throw new Error(`${et} must be hex string or Uint8Array`);const ft=dt.length;if(typeof ot=="number"&&ft!==ot)throw new Error(`${et} expected ${ot} bytes, got ${ft}`);return dt}function concatBytes(...et){let tt=0;for(let dt=0;dt<et.length;dt++){const ft=et[dt];abytes(ft),tt+=ft.length}const ot=new Uint8Array(tt);for(let dt=0,ft=0;dt<et.length;dt++){const pt=et[dt];ot.set(pt,ft),ft+=pt.length}return ot}function equalBytes(et,tt){if(et.length!==tt.length)return!1;let ot=0;for(let dt=0;dt<et.length;dt++)ot|=et[dt]^tt[dt];return ot===0}function utf8ToBytes(et){if(typeof et!="string")throw new Error(`utf8ToBytes expected string, got ${typeof et}`);return new Uint8Array(new TextEncoder().encode(et))}function bitLen(et){let tt;for(tt=0;et>_0n$5;et>>=_1n$7,tt+=1);return tt}function bitGet(et,tt){return et>>BigInt(tt)&_1n$7}function bitSet(et,tt,ot){return et|(ot?_1n$7:_0n$5)<<BigInt(tt)}const bitMask=et=>(_2n$5<<BigInt(et-1))-_1n$7,u8n=et=>new Uint8Array(et),u8fr=et=>Uint8Array.from(et);function createHmacDrbg(et,tt,ot){if(typeof et!="number"||et<2)throw new Error("hashLen must be a number");if(typeof tt!="number"||tt<2)throw new Error("qByteLen must be a number");if(typeof ot!="function")throw new Error("hmacFn must be a function");let dt=u8n(et),ft=u8n(et),pt=0;const mt=()=>{dt.fill(1),ft.fill(0),pt=0},ht=(...gt)=>ot(ft,dt,...gt),bt=(gt=u8n())=>{ft=ht(u8fr([0]),gt),dt=ht(),gt.length!==0&&(ft=ht(u8fr([1]),gt),dt=ht())},yt=()=>{if(pt++>=1e3)throw new Error("drbg: tried 1000 values");let gt=0;const wt=[];for(;gt<tt;){dt=ht();const Pt=dt.slice();wt.push(Pt),gt+=dt.length}return concatBytes(...wt)};return(gt,wt)=>{mt(),bt(gt);let Pt;for(;!(Pt=wt(yt()));)bt();return mt(),Pt}}const validatorFns={bigint:et=>typeof et=="bigint",function:et=>typeof et=="function",boolean:et=>typeof et=="boolean",string:et=>typeof et=="string",stringOrUint8Array:et=>typeof et=="string"||isBytes$2(et),isSafeInteger:et=>Number.isSafeInteger(et),array:et=>Array.isArray(et),field:(et,tt)=>tt.Fp.isValid(et),hash:et=>typeof et=="function"&&Number.isSafeInteger(et.outputLen)};function validateObject(et,tt,ot={}){const dt=(ft,pt,mt)=>{const ht=validatorFns[pt];if(typeof ht!="function")throw new Error(`Invalid validator "${pt}", expected function`);const bt=et[ft];if(!(mt&&bt===void 0)&&!ht(bt,et))throw new Error(`Invalid param ${String(ft)}=${bt} (${typeof bt}), expected ${pt}`)};for(const[ft,pt]of Object.entries(tt))dt(ft,pt,!1);for(const[ft,pt]of Object.entries(ot))dt(ft,pt,!0);return et}const ut$1=Object.freeze(Object.defineProperty({__proto__:null,abytes,bitGet,bitLen,bitMask,bitSet,bytesToHex,bytesToNumberBE,bytesToNumberLE,concatBytes,createHmacDrbg,ensureBytes,equalBytes,hexToBytes,hexToNumber,isBytes:isBytes$2,numberToBytesBE,numberToBytesLE,numberToHexUnpadded,numberToVarBytesBE,utf8ToBytes,validateObject},Symbol.toStringTag,{value:"Module"}));/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$4=BigInt(0),_1n$6=BigInt(1),_2n$4=BigInt(2),_3n$1=BigInt(3),_4n=BigInt(4),_5n$1=BigInt(5),_8n$1=BigInt(8);BigInt(9);BigInt(16);function mod(et,tt){const ot=et%tt;return ot>=_0n$4?ot:tt+ot}function pow(et,tt,ot){if(ot<=_0n$4||tt<_0n$4)throw new Error("Expected power/modulo > 0");if(ot===_1n$6)return _0n$4;let dt=_1n$6;for(;tt>_0n$4;)tt&_1n$6&&(dt=dt*et%ot),et=et*et%ot,tt>>=_1n$6;return dt}function pow2(et,tt,ot){let dt=et;for(;tt-- >_0n$4;)dt*=dt,dt%=ot;return dt}function invert(et,tt){if(et===_0n$4||tt<=_0n$4)throw new Error(`invert: expected positive integers, got n=${et} mod=${tt}`);let ot=mod(et,tt),dt=tt,ft=_0n$4,pt=_1n$6;for(;ot!==_0n$4;){const ht=dt/ot,bt=dt%ot,yt=ft-pt*ht;dt=ot,ot=bt,ft=pt,pt=yt}if(dt!==_1n$6)throw new Error("invert: does not exist");return mod(ft,tt)}function tonelliShanks(et){const tt=(et-_1n$6)/_2n$4;let ot,dt,ft;for(ot=et-_1n$6,dt=0;ot%_2n$4===_0n$4;ot/=_2n$4,dt++);for(ft=_2n$4;ft<et&&pow(ft,tt,et)!==et-_1n$6;ft++);if(dt===1){const mt=(et+_1n$6)/_4n;return function(bt,yt){const xt=bt.pow(yt,mt);if(!bt.eql(bt.sqr(xt),yt))throw new Error("Cannot find square root");return xt}}const pt=(ot+_1n$6)/_2n$4;return function(ht,bt){if(ht.pow(bt,tt)===ht.neg(ht.ONE))throw new Error("Cannot find square root");let yt=dt,xt=ht.pow(ht.mul(ht.ONE,ft),ot),gt=ht.pow(bt,pt),wt=ht.pow(bt,ot);for(;!ht.eql(wt,ht.ONE);){if(ht.eql(wt,ht.ZERO))return ht.ZERO;let Pt=1;for(let Et=ht.sqr(wt);Pt<yt&&!ht.eql(Et,ht.ONE);Pt++)Et=ht.sqr(Et);const St=ht.pow(xt,_1n$6<<BigInt(yt-Pt-1));xt=ht.sqr(St),gt=ht.mul(gt,St),wt=ht.mul(wt,xt),yt=Pt}return gt}}function FpSqrt(et){if(et%_4n===_3n$1){const tt=(et+_1n$6)/_4n;return function(dt,ft){const pt=dt.pow(ft,tt);if(!dt.eql(dt.sqr(pt),ft))throw new Error("Cannot find square root");return pt}}if(et%_8n$1===_5n$1){const tt=(et-_5n$1)/_8n$1;return function(dt,ft){const pt=dt.mul(ft,_2n$4),mt=dt.pow(pt,tt),ht=dt.mul(ft,mt),bt=dt.mul(dt.mul(ht,_2n$4),mt),yt=dt.mul(ht,dt.sub(bt,dt.ONE));if(!dt.eql(dt.sqr(yt),ft))throw new Error("Cannot find square root");return yt}}return tonelliShanks(et)}const isNegativeLE=(et,tt)=>(mod(et,tt)&_1n$6)===_1n$6,FIELD_FIELDS=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function validateField(et){const tt={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},ot=FIELD_FIELDS.reduce((dt,ft)=>(dt[ft]="function",dt),tt);return validateObject(et,ot)}function FpPow(et,tt,ot){if(ot<_0n$4)throw new Error("Expected power > 0");if(ot===_0n$4)return et.ONE;if(ot===_1n$6)return tt;let dt=et.ONE,ft=tt;for(;ot>_0n$4;)ot&_1n$6&&(dt=et.mul(dt,ft)),ft=et.sqr(ft),ot>>=_1n$6;return dt}function FpInvertBatch(et,tt){const ot=new Array(tt.length),dt=tt.reduce((pt,mt,ht)=>et.is0(mt)?pt:(ot[ht]=pt,et.mul(pt,mt)),et.ONE),ft=et.inv(dt);return tt.reduceRight((pt,mt,ht)=>et.is0(mt)?pt:(ot[ht]=et.mul(pt,ot[ht]),et.mul(pt,mt)),ft),ot}function nLength(et,tt){const ot=tt!==void 0?tt:et.toString(2).length,dt=Math.ceil(ot/8);return{nBitLength:ot,nByteLength:dt}}function Field(et,tt,ot=!1,dt={}){if(et<=_0n$4)throw new Error(`Expected Field ORDER > 0, got ${et}`);const{nBitLength:ft,nByteLength:pt}=nLength(et,tt);if(pt>2048)throw new Error("Field lengths over 2048 bytes are not supported");const mt=FpSqrt(et),ht=Object.freeze({ORDER:et,BITS:ft,BYTES:pt,MASK:bitMask(ft),ZERO:_0n$4,ONE:_1n$6,create:bt=>mod(bt,et),isValid:bt=>{if(typeof bt!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof bt}`);return _0n$4<=bt&&bt<et},is0:bt=>bt===_0n$4,isOdd:bt=>(bt&_1n$6)===_1n$6,neg:bt=>mod(-bt,et),eql:(bt,yt)=>bt===yt,sqr:bt=>mod(bt*bt,et),add:(bt,yt)=>mod(bt+yt,et),sub:(bt,yt)=>mod(bt-yt,et),mul:(bt,yt)=>mod(bt*yt,et),pow:(bt,yt)=>FpPow(ht,bt,yt),div:(bt,yt)=>mod(bt*invert(yt,et),et),sqrN:bt=>bt*bt,addN:(bt,yt)=>bt+yt,subN:(bt,yt)=>bt-yt,mulN:(bt,yt)=>bt*yt,inv:bt=>invert(bt,et),sqrt:dt.sqrt||(bt=>mt(ht,bt)),invertBatch:bt=>FpInvertBatch(ht,bt),cmov:(bt,yt,xt)=>xt?yt:bt,toBytes:bt=>ot?numberToBytesLE(bt,pt):numberToBytesBE(bt,pt),fromBytes:bt=>{if(bt.length!==pt)throw new Error(`Fp.fromBytes: expected ${pt}, got ${bt.length}`);return ot?bytesToNumberLE(bt):bytesToNumberBE(bt)}});return Object.freeze(ht)}function FpSqrtEven(et,tt){if(!et.isOdd)throw new Error("Field doesn't have isOdd");const ot=et.sqrt(tt);return et.isOdd(ot)?et.neg(ot):ot}function getFieldBytesLength(et){if(typeof et!="bigint")throw new Error("field order must be bigint");const tt=et.toString(2).length;return Math.ceil(tt/8)}function getMinHashLength(et){const tt=getFieldBytesLength(et);return tt+Math.ceil(tt/2)}function mapHashToField(et,tt,ot=!1){const dt=et.length,ft=getFieldBytesLength(tt),pt=getMinHashLength(tt);if(dt<16||dt<pt||dt>1024)throw new Error(`expected ${pt}-1024 bytes of input, got ${dt}`);const mt=ot?bytesToNumberBE(et):bytesToNumberLE(et),ht=mod(mt,tt-_1n$6)+_1n$6;return ot?numberToBytesLE(ht,ft):numberToBytesBE(ht,ft)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$3=BigInt(0),_1n$5=BigInt(1);function wNAF(et,tt){const ot=(ft,pt)=>{const mt=pt.negate();return ft?mt:pt},dt=ft=>{const pt=Math.ceil(tt/ft)+1,mt=2**(ft-1);return{windows:pt,windowSize:mt}};return{constTimeNegate:ot,unsafeLadder(ft,pt){let mt=et.ZERO,ht=ft;for(;pt>_0n$3;)pt&_1n$5&&(mt=mt.add(ht)),ht=ht.double(),pt>>=_1n$5;return mt},precomputeWindow(ft,pt){const{windows:mt,windowSize:ht}=dt(pt),bt=[];let yt=ft,xt=yt;for(let gt=0;gt<mt;gt++){xt=yt,bt.push(xt);for(let wt=1;wt<ht;wt++)xt=xt.add(yt),bt.push(xt);yt=xt.double()}return bt},wNAF(ft,pt,mt){const{windows:ht,windowSize:bt}=dt(ft);let yt=et.ZERO,xt=et.BASE;const gt=BigInt(2**ft-1),wt=2**ft,Pt=BigInt(ft);for(let St=0;St<ht;St++){const Et=St*bt;let Lt=Number(mt&gt);mt>>=Pt,Lt>bt&&(Lt-=wt,mt+=_1n$5);const It=Et,kt=Et+Math.abs(Lt)-1,Nt=St%2!==0,Ut=Lt<0;Lt===0?xt=xt.add(ot(Nt,pt[It])):yt=yt.add(ot(Ut,pt[kt]))}return{p:yt,f:xt}},wNAFCached(ft,pt,mt,ht){const bt=ft._WINDOW_SIZE||1;let yt=pt.get(ft);return yt||(yt=this.precomputeWindow(ft,bt),bt!==1&&pt.set(ft,ht(yt))),this.wNAF(bt,yt,mt)}}}function validateBasic(et){return validateField(et.Fp),validateObject(et,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(et.n,et.nBitLength),...et,p:et.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function validatePointOpts(et){const tt=validateBasic(et);validateObject(tt,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:ot,Fp:dt,a:ft}=tt;if(ot){if(!dt.eql(ft,dt.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof ot!="object"||typeof ot.beta!="bigint"||typeof ot.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...tt})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut$1,DER={Err:class extends Error{constructor(tt=""){super(tt)}},_parseInt(et){const{Err:tt}=DER;if(et.length<2||et[0]!==2)throw new tt("Invalid signature integer tag");const ot=et[1],dt=et.subarray(2,ot+2);if(!ot||dt.length!==ot)throw new tt("Invalid signature integer: wrong length");if(dt[0]&128)throw new tt("Invalid signature integer: negative");if(dt[0]===0&&!(dt[1]&128))throw new tt("Invalid signature integer: unnecessary leading zero");return{d:b2n(dt),l:et.subarray(ot+2)}},toSig(et){const{Err:tt}=DER,ot=typeof et=="string"?h2b(et):et;abytes(ot);let dt=ot.length;if(dt<2||ot[0]!=48)throw new tt("Invalid signature tag");if(ot[1]!==dt-2)throw new tt("Invalid signature: incorrect length");const{d:ft,l:pt}=DER._parseInt(ot.subarray(2)),{d:mt,l:ht}=DER._parseInt(pt);if(ht.length)throw new tt("Invalid signature: left bytes after parsing");return{r:ft,s:mt}},hexFromSig(et){const tt=yt=>Number.parseInt(yt[0],16)&8?"00"+yt:yt,ot=yt=>{const xt=yt.toString(16);return xt.length&1?`0${xt}`:xt},dt=tt(ot(et.s)),ft=tt(ot(et.r)),pt=dt.length/2,mt=ft.length/2,ht=ot(pt),bt=ot(mt);return`30${ot(mt+pt+4)}02${bt}${ft}02${ht}${dt}`}},_0n$2=BigInt(0),_1n$4=BigInt(1);BigInt(2);const _3n=BigInt(3);BigInt(4);function weierstrassPoints(et){const tt=validatePointOpts(et),{Fp:ot}=tt,dt=tt.toBytes||((St,Et,Lt)=>{const It=Et.toAffine();return concatBytes(Uint8Array.from([4]),ot.toBytes(It.x),ot.toBytes(It.y))}),ft=tt.fromBytes||(St=>{const Et=St.subarray(1),Lt=ot.fromBytes(Et.subarray(0,ot.BYTES)),It=ot.fromBytes(Et.subarray(ot.BYTES,2*ot.BYTES));return{x:Lt,y:It}});function pt(St){const{a:Et,b:Lt}=tt,It=ot.sqr(St),kt=ot.mul(It,St);return ot.add(ot.add(kt,ot.mul(St,Et)),Lt)}if(!ot.eql(ot.sqr(tt.Gy),pt(tt.Gx)))throw new Error("bad generator point: equation left != right");function mt(St){return typeof St=="bigint"&&_0n$2<St&&St<tt.n}function ht(St){if(!mt(St))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function bt(St){const{allowedPrivateKeyLengths:Et,nByteLength:Lt,wrapPrivateKey:It,n:kt}=tt;if(Et&&typeof St!="bigint"){if(isBytes$2(St)&&(St=bytesToHex(St)),typeof St!="string"||!Et.includes(St.length))throw new Error("Invalid key");St=St.padStart(Lt*2,"0")}let Nt;try{Nt=typeof St=="bigint"?St:bytesToNumberBE(ensureBytes("private key",St,Lt))}catch{throw new Error(`private key must be ${Lt} bytes, hex or bigint, not ${typeof St}`)}return It&&(Nt=mod(Nt,kt)),ht(Nt),Nt}const yt=new Map;function xt(St){if(!(St instanceof gt))throw new Error("ProjectivePoint expected")}class gt{constructor(Et,Lt,It){if(this.px=Et,this.py=Lt,this.pz=It,Et==null||!ot.isValid(Et))throw new Error("x required");if(Lt==null||!ot.isValid(Lt))throw new Error("y required");if(It==null||!ot.isValid(It))throw new Error("z required")}static fromAffine(Et){const{x:Lt,y:It}=Et||{};if(!Et||!ot.isValid(Lt)||!ot.isValid(It))throw new Error("invalid affine point");if(Et instanceof gt)throw new Error("projective point not allowed");const kt=Nt=>ot.eql(Nt,ot.ZERO);return kt(Lt)&&kt(It)?gt.ZERO:new gt(Lt,It,ot.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(Et){const Lt=ot.invertBatch(Et.map(It=>It.pz));return Et.map((It,kt)=>It.toAffine(Lt[kt])).map(gt.fromAffine)}static fromHex(Et){const Lt=gt.fromAffine(ft(ensureBytes("pointHex",Et)));return Lt.assertValidity(),Lt}static fromPrivateKey(Et){return gt.BASE.multiply(bt(Et))}_setWindowSize(Et){this._WINDOW_SIZE=Et,yt.delete(this)}assertValidity(){if(this.is0()){if(tt.allowInfinityPoint&&!ot.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:Et,y:Lt}=this.toAffine();if(!ot.isValid(Et)||!ot.isValid(Lt))throw new Error("bad point: x or y not FE");const It=ot.sqr(Lt),kt=pt(Et);if(!ot.eql(It,kt))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:Et}=this.toAffine();if(ot.isOdd)return!ot.isOdd(Et);throw new Error("Field doesn't support isOdd")}equals(Et){xt(Et);const{px:Lt,py:It,pz:kt}=this,{px:Nt,py:Ut,pz:Ft}=Et,jt=ot.eql(ot.mul(Lt,Ft),ot.mul(Nt,kt)),Xt=ot.eql(ot.mul(It,Ft),ot.mul(Ut,kt));return jt&&Xt}negate(){return new gt(this.px,ot.neg(this.py),this.pz)}double(){const{a:Et,b:Lt}=tt,It=ot.mul(Lt,_3n),{px:kt,py:Nt,pz:Ut}=this;let Ft=ot.ZERO,jt=ot.ZERO,Xt=ot.ZERO,Wt=ot.mul(kt,kt),qt=ot.mul(Nt,Nt),Zt=ot.mul(Ut,Ut),Gt=ot.mul(kt,Nt);return Gt=ot.add(Gt,Gt),Xt=ot.mul(kt,Ut),Xt=ot.add(Xt,Xt),Ft=ot.mul(Et,Xt),jt=ot.mul(It,Zt),jt=ot.add(Ft,jt),Ft=ot.sub(qt,jt),jt=ot.add(qt,jt),jt=ot.mul(Ft,jt),Ft=ot.mul(Gt,Ft),Xt=ot.mul(It,Xt),Zt=ot.mul(Et,Zt),Gt=ot.sub(Wt,Zt),Gt=ot.mul(Et,Gt),Gt=ot.add(Gt,Xt),Xt=ot.add(Wt,Wt),Wt=ot.add(Xt,Wt),Wt=ot.add(Wt,Zt),Wt=ot.mul(Wt,Gt),jt=ot.add(jt,Wt),Zt=ot.mul(Nt,Ut),Zt=ot.add(Zt,Zt),Wt=ot.mul(Zt,Gt),Ft=ot.sub(Ft,Wt),Xt=ot.mul(Zt,qt),Xt=ot.add(Xt,Xt),Xt=ot.add(Xt,Xt),new gt(Ft,jt,Xt)}add(Et){xt(Et);const{px:Lt,py:It,pz:kt}=this,{px:Nt,py:Ut,pz:Ft}=Et;let jt=ot.ZERO,Xt=ot.ZERO,Wt=ot.ZERO;const qt=tt.a,Zt=ot.mul(tt.b,_3n);let Gt=ot.mul(Lt,Nt),Qt=ot.mul(It,Ut),Ht=ot.mul(kt,Ft),vt=ot.add(Lt,It),Vt=ot.add(Nt,Ut);vt=ot.mul(vt,Vt),Vt=ot.add(Gt,Qt),vt=ot.sub(vt,Vt),Vt=ot.add(Lt,kt);let At=ot.add(Nt,Ft);return Vt=ot.mul(Vt,At),At=ot.add(Gt,Ht),Vt=ot.sub(Vt,At),At=ot.add(It,kt),jt=ot.add(Ut,Ft),At=ot.mul(At,jt),jt=ot.add(Qt,Ht),At=ot.sub(At,jt),Wt=ot.mul(qt,Vt),jt=ot.mul(Zt,Ht),Wt=ot.add(jt,Wt),jt=ot.sub(Qt,Wt),Wt=ot.add(Qt,Wt),Xt=ot.mul(jt,Wt),Qt=ot.add(Gt,Gt),Qt=ot.add(Qt,Gt),Ht=ot.mul(qt,Ht),Vt=ot.mul(Zt,Vt),Qt=ot.add(Qt,Ht),Ht=ot.sub(Gt,Ht),Ht=ot.mul(qt,Ht),Vt=ot.add(Vt,Ht),Gt=ot.mul(Qt,Vt),Xt=ot.add(Xt,Gt),Gt=ot.mul(At,Vt),jt=ot.mul(vt,jt),jt=ot.sub(jt,Gt),Gt=ot.mul(vt,Qt),Wt=ot.mul(At,Wt),Wt=ot.add(Wt,Gt),new gt(jt,Xt,Wt)}subtract(Et){return this.add(Et.negate())}is0(){return this.equals(gt.ZERO)}wNAF(Et){return Pt.wNAFCached(this,yt,Et,Lt=>{const It=ot.invertBatch(Lt.map(kt=>kt.pz));return Lt.map((kt,Nt)=>kt.toAffine(It[Nt])).map(gt.fromAffine)})}multiplyUnsafe(Et){const Lt=gt.ZERO;if(Et===_0n$2)return Lt;if(ht(Et),Et===_1n$4)return this;const{endo:It}=tt;if(!It)return Pt.unsafeLadder(this,Et);let{k1neg:kt,k1:Nt,k2neg:Ut,k2:Ft}=It.splitScalar(Et),jt=Lt,Xt=Lt,Wt=this;for(;Nt>_0n$2||Ft>_0n$2;)Nt&_1n$4&&(jt=jt.add(Wt)),Ft&_1n$4&&(Xt=Xt.add(Wt)),Wt=Wt.double(),Nt>>=_1n$4,Ft>>=_1n$4;return kt&&(jt=jt.negate()),Ut&&(Xt=Xt.negate()),Xt=new gt(ot.mul(Xt.px,It.beta),Xt.py,Xt.pz),jt.add(Xt)}multiply(Et){ht(Et);let Lt=Et,It,kt;const{endo:Nt}=tt;if(Nt){const{k1neg:Ut,k1:Ft,k2neg:jt,k2:Xt}=Nt.splitScalar(Lt);let{p:Wt,f:qt}=this.wNAF(Ft),{p:Zt,f:Gt}=this.wNAF(Xt);Wt=Pt.constTimeNegate(Ut,Wt),Zt=Pt.constTimeNegate(jt,Zt),Zt=new gt(ot.mul(Zt.px,Nt.beta),Zt.py,Zt.pz),It=Wt.add(Zt),kt=qt.add(Gt)}else{const{p:Ut,f:Ft}=this.wNAF(Lt);It=Ut,kt=Ft}return gt.normalizeZ([It,kt])[0]}multiplyAndAddUnsafe(Et,Lt,It){const kt=gt.BASE,Nt=(Ft,jt)=>jt===_0n$2||jt===_1n$4||!Ft.equals(kt)?Ft.multiplyUnsafe(jt):Ft.multiply(jt),Ut=Nt(this,Lt).add(Nt(Et,It));return Ut.is0()?void 0:Ut}toAffine(Et){const{px:Lt,py:It,pz:kt}=this,Nt=this.is0();Et==null&&(Et=Nt?ot.ONE:ot.inv(kt));const Ut=ot.mul(Lt,Et),Ft=ot.mul(It,Et),jt=ot.mul(kt,Et);if(Nt)return{x:ot.ZERO,y:ot.ZERO};if(!ot.eql(jt,ot.ONE))throw new Error("invZ was invalid");return{x:Ut,y:Ft}}isTorsionFree(){const{h:Et,isTorsionFree:Lt}=tt;if(Et===_1n$4)return!0;if(Lt)return Lt(gt,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:Et,clearCofactor:Lt}=tt;return Et===_1n$4?this:Lt?Lt(gt,this):this.multiplyUnsafe(tt.h)}toRawBytes(Et=!0){return this.assertValidity(),dt(gt,this,Et)}toHex(Et=!0){return bytesToHex(this.toRawBytes(Et))}}gt.BASE=new gt(tt.Gx,tt.Gy,ot.ONE),gt.ZERO=new gt(ot.ZERO,ot.ONE,ot.ZERO);const wt=tt.nBitLength,Pt=wNAF(gt,tt.endo?Math.ceil(wt/2):wt);return{CURVE:tt,ProjectivePoint:gt,normPrivateKeyToScalar:bt,weierstrassEquation:pt,isWithinCurveOrder:mt}}function validateOpts$1(et){const tt=validateBasic(et);return validateObject(tt,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...tt})}function weierstrass(et){const tt=validateOpts$1(et),{Fp:ot,n:dt}=tt,ft=ot.BYTES+1,pt=2*ot.BYTES+1;function mt(Vt){return _0n$2<Vt&&Vt<ot.ORDER}function ht(Vt){return mod(Vt,dt)}function bt(Vt){return invert(Vt,dt)}const{ProjectivePoint:yt,normPrivateKeyToScalar:xt,weierstrassEquation:gt,isWithinCurveOrder:wt}=weierstrassPoints({...tt,toBytes(Vt,At,Bt){const Mt=At.toAffine(),Ct=ot.toBytes(Mt.x),Dt=concatBytes;return Bt?Dt(Uint8Array.from([At.hasEvenY()?2:3]),Ct):Dt(Uint8Array.from([4]),Ct,ot.toBytes(Mt.y))},fromBytes(Vt){const At=Vt.length,Bt=Vt[0],Mt=Vt.subarray(1);if(At===ft&&(Bt===2||Bt===3)){const Ct=bytesToNumberBE(Mt);if(!mt(Ct))throw new Error("Point is not on curve");const Dt=gt(Ct);let Rt;try{Rt=ot.sqrt(Dt)}catch(Kt){const Jt=Kt instanceof Error?": "+Kt.message:"";throw new Error("Point is not on curve"+Jt)}const Tt=(Rt&_1n$4)===_1n$4;return(Bt&1)===1!==Tt&&(Rt=ot.neg(Rt)),{x:Ct,y:Rt}}else if(At===pt&&Bt===4){const Ct=ot.fromBytes(Mt.subarray(0,ot.BYTES)),Dt=ot.fromBytes(Mt.subarray(ot.BYTES,2*ot.BYTES));return{x:Ct,y:Dt}}else throw new Error(`Point of length ${At} was invalid. Expected ${ft} compressed bytes or ${pt} uncompressed bytes`)}}),Pt=Vt=>bytesToHex(numberToBytesBE(Vt,tt.nByteLength));function St(Vt){const At=dt>>_1n$4;return Vt>At}function Et(Vt){return St(Vt)?ht(-Vt):Vt}const Lt=(Vt,At,Bt)=>bytesToNumberBE(Vt.slice(At,Bt));class It{constructor(At,Bt,Mt){this.r=At,this.s=Bt,this.recovery=Mt,this.assertValidity()}static fromCompact(At){const Bt=tt.nByteLength;return At=ensureBytes("compactSignature",At,Bt*2),new It(Lt(At,0,Bt),Lt(At,Bt,2*Bt))}static fromDER(At){const{r:Bt,s:Mt}=DER.toSig(ensureBytes("DER",At));return new It(Bt,Mt)}assertValidity(){if(!wt(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!wt(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(At){return new It(this.r,this.s,At)}recoverPublicKey(At){const{r:Bt,s:Mt,recovery:Ct}=this,Dt=Xt(ensureBytes("msgHash",At));if(Ct==null||![0,1,2,3].includes(Ct))throw new Error("recovery id invalid");const Rt=Ct===2||Ct===3?Bt+tt.n:Bt;if(Rt>=ot.ORDER)throw new Error("recovery id 2 or 3 invalid");const Tt=Ct&1?"03":"02",zt=yt.fromHex(Tt+Pt(Rt)),Kt=bt(Rt),Jt=ht(-Dt*Kt),Yt=ht(Mt*Kt),$t=yt.BASE.multiplyAndAddUnsafe(zt,Jt,Yt);if(!$t)throw new Error("point at infinify");return $t.assertValidity(),$t}hasHighS(){return St(this.s)}normalizeS(){return this.hasHighS()?new It(this.r,ht(-this.s),this.recovery):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return Pt(this.r)+Pt(this.s)}}const kt={isValidPrivateKey(Vt){try{return xt(Vt),!0}catch{return!1}},normPrivateKeyToScalar:xt,randomPrivateKey:()=>{const Vt=getMinHashLength(tt.n);return mapHashToField(tt.randomBytes(Vt),tt.n)},precompute(Vt=8,At=yt.BASE){return At._setWindowSize(Vt),At.multiply(BigInt(3)),At}};function Nt(Vt,At=!0){return yt.fromPrivateKey(Vt).toRawBytes(At)}function Ut(Vt){const At=isBytes$2(Vt),Bt=typeof Vt=="string",Mt=(At||Bt)&&Vt.length;return At?Mt===ft||Mt===pt:Bt?Mt===2*ft||Mt===2*pt:Vt instanceof yt}function Ft(Vt,At,Bt=!0){if(Ut(Vt))throw new Error("first arg must be private key");if(!Ut(At))throw new Error("second arg must be public key");return yt.fromHex(At).multiply(xt(Vt)).toRawBytes(Bt)}const jt=tt.bits2int||function(Vt){const At=bytesToNumberBE(Vt),Bt=Vt.length*8-tt.nBitLength;return Bt>0?At>>BigInt(Bt):At},Xt=tt.bits2int_modN||function(Vt){return ht(jt(Vt))},Wt=bitMask(tt.nBitLength);function qt(Vt){if(typeof Vt!="bigint")throw new Error("bigint expected");if(!(_0n$2<=Vt&&Vt<Wt))throw new Error(`bigint expected < 2^${tt.nBitLength}`);return numberToBytesBE(Vt,tt.nByteLength)}function Zt(Vt,At,Bt=Gt){if(["recovered","canonical"].some(en=>en in Bt))throw new Error("sign() legacy options not supported");const{hash:Mt,randomBytes:Ct}=tt;let{lowS:Dt,prehash:Rt,extraEntropy:Tt}=Bt;Dt==null&&(Dt=!0),Vt=ensureBytes("msgHash",Vt),Rt&&(Vt=ensureBytes("prehashed msgHash",Mt(Vt)));const zt=Xt(Vt),Kt=xt(At),Jt=[qt(Kt),qt(zt)];if(Tt!=null&&Tt!==!1){const en=Tt===!0?Ct(ot.BYTES):Tt;Jt.push(ensureBytes("extraEntropy",en))}const Yt=concatBytes(...Jt),$t=zt;function tn(en){const sn=jt(en);if(!wt(sn))return;const rn=bt(sn),nn=yt.BASE.multiply(sn).toAffine(),cn=ht(nn.x);if(cn===_0n$2)return;const an=ht(rn*ht($t+cn*Kt));if(an===_0n$2)return;let on=(nn.x===cn?0:2)|Number(nn.y&_1n$4),Xn=an;return Dt&&St(an)&&(Xn=Et(an),on^=1),new It(cn,Xn,on)}return{seed:Yt,k2sig:tn}}const Gt={lowS:tt.lowS,prehash:!1},Qt={lowS:tt.lowS,prehash:!1};function Ht(Vt,At,Bt=Gt){const{seed:Mt,k2sig:Ct}=Zt(Vt,At,Bt),Dt=tt;return createHmacDrbg(Dt.hash.outputLen,Dt.nByteLength,Dt.hmac)(Mt,Ct)}yt.BASE._setWindowSize(8);function vt(Vt,At,Bt,Mt=Qt){var nn;const Ct=Vt;if(At=ensureBytes("msgHash",At),Bt=ensureBytes("publicKey",Bt),"strict"in Mt)throw new Error("options.strict was renamed to lowS");const{lowS:Dt,prehash:Rt}=Mt;let Tt,zt;try{if(typeof Ct=="string"||isBytes$2(Ct))try{Tt=It.fromDER(Ct)}catch(cn){if(!(cn instanceof DER.Err))throw cn;Tt=It.fromCompact(Ct)}else if(typeof Ct=="object"&&typeof Ct.r=="bigint"&&typeof Ct.s=="bigint"){const{r:cn,s:an}=Ct;Tt=new It(cn,an)}else throw new Error("PARSE");zt=yt.fromHex(Bt)}catch(cn){if(cn.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(Dt&&Tt.hasHighS())return!1;Rt&&(At=tt.hash(At));const{r:Kt,s:Jt}=Tt,Yt=Xt(At),$t=bt(Jt),tn=ht(Yt*$t),en=ht(Kt*$t),sn=(nn=yt.BASE.multiplyAndAddUnsafe(zt,tn,en))==null?void 0:nn.toAffine();return sn?ht(sn.x)===Kt:!1}return{CURVE:tt,getPublicKey:Nt,getSharedSecret:Ft,sign:Ht,verify:vt,ProjectivePoint:yt,Signature:It,utils:kt}}class HMAC extends Hash{constructor(tt,ot){super(),this.finished=!1,this.destroyed=!1,hash$1(tt);const dt=toBytes(ot);if(this.iHash=tt.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const ft=this.blockLen,pt=new Uint8Array(ft);pt.set(dt.length>ft?tt.create().update(dt).digest():dt);for(let mt=0;mt<pt.length;mt++)pt[mt]^=54;this.iHash.update(pt),this.oHash=tt.create();for(let mt=0;mt<pt.length;mt++)pt[mt]^=106;this.oHash.update(pt),pt.fill(0)}update(tt){return exists(this),this.iHash.update(tt),this}digestInto(tt){exists(this),bytes(tt,this.outputLen),this.finished=!0,this.iHash.digestInto(tt),this.oHash.update(tt),this.oHash.digestInto(tt),this.destroy()}digest(){const tt=new Uint8Array(this.oHash.outputLen);return this.digestInto(tt),tt}_cloneInto(tt){tt||(tt=Object.create(Object.getPrototypeOf(this),{}));const{oHash:ot,iHash:dt,finished:ft,destroyed:pt,blockLen:mt,outputLen:ht}=this;return tt=tt,tt.finished=ft,tt.destroyed=pt,tt.blockLen=mt,tt.outputLen=ht,tt.oHash=ot._cloneInto(tt.oHash),tt.iHash=dt._cloneInto(tt.iHash),tt}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(et,tt,ot)=>new HMAC(et,tt).update(ot).digest();hmac.create=(et,tt)=>new HMAC(et,tt);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function getHash(et){return{hash:et,hmac:(tt,...ot)=>hmac(et,tt,concatBytes$1(...ot)),randomBytes}}function createCurve(et,tt){const ot=dt=>weierstrass({...et,...getHash(dt)});return Object.freeze({...ot(tt),create:ot})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const secp256k1P=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),secp256k1N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),_1n$3=BigInt(1),_2n$3=BigInt(2),divNearest=(et,tt)=>(et+tt/_2n$3)/tt;function sqrtMod(et){const tt=secp256k1P,ot=BigInt(3),dt=BigInt(6),ft=BigInt(11),pt=BigInt(22),mt=BigInt(23),ht=BigInt(44),bt=BigInt(88),yt=et*et*et%tt,xt=yt*yt*et%tt,gt=pow2(xt,ot,tt)*xt%tt,wt=pow2(gt,ot,tt)*xt%tt,Pt=pow2(wt,_2n$3,tt)*yt%tt,St=pow2(Pt,ft,tt)*Pt%tt,Et=pow2(St,pt,tt)*St%tt,Lt=pow2(Et,ht,tt)*Et%tt,It=pow2(Lt,bt,tt)*Lt%tt,kt=pow2(It,ht,tt)*Et%tt,Nt=pow2(kt,ot,tt)*xt%tt,Ut=pow2(Nt,mt,tt)*St%tt,Ft=pow2(Ut,dt,tt)*yt%tt,jt=pow2(Ft,_2n$3,tt);if(!Fp$1.eql(Fp$1.sqr(jt),et))throw new Error("Cannot find square root");return jt}const Fp$1=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod}),secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp:Fp$1,n:secp256k1N,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:et=>{const tt=secp256k1N,ot=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),dt=-_1n$3*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),ft=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),pt=ot,mt=BigInt("0x100000000000000000000000000000000"),ht=divNearest(pt*et,tt),bt=divNearest(-dt*et,tt);let yt=mod(et-ht*ot-bt*ft,tt),xt=mod(-ht*dt-bt*pt,tt);const gt=yt>mt,wt=xt>mt;if(gt&&(yt=tt-yt),wt&&(xt=tt-xt),yt>mt||xt>mt)throw new Error("splitScalar: Endomorphism failed, k="+et);return{k1neg:gt,k1:yt,k2neg:wt,k2:xt}}}},sha256);BigInt(0);secp256k1.ProjectivePoint;function secp256k1PairFromSeed(et,tt){if(et.length!==32)throw new Error("Expected valid 32-byte private key as a seed");if(!hasBigInt$2||!tt&&isReady$2()){const ot=secp256k1FromSeed(et),dt=ot.slice(32);if(u8aEmpty(dt))throw new Error("Invalid publicKey generated from WASM interface");return{publicKey:dt,secretKey:ot.slice(0,32)}}return{publicKey:secp256k1.getPublicKey(et,!0),secretKey:et}}function createSeedDeriveFn(et,tt){return(ot,{chainCode:dt,isHard:ft})=>{if(!ft)throw new Error("A soft key was found in the path and is not supported");return et(tt(ot.secretKey.subarray(0,32),dt))}}const keyHdkdEcdsa=createSeedDeriveFn(secp256k1PairFromSeed,secp256k1DeriveHard),HDKD=compactAddLength$1(stringToU8a$5("Ed25519HDKD"));function ed25519DeriveHard(et,tt){if(!isU8a$5(tt)||tt.length!==32)throw new Error("Invalid chainCode passed to derive");return blake2AsU8a$2(u8aConcat$3(HDKD,et,tt))}function randomAsU8a(et=32){return getRandomValues$2(new Uint8Array(et))}const[SHA512_Kh,SHA512_Kl]=u64$1.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(et=>BigInt(et))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends HashMD{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:tt,Al:ot,Bh:dt,Bl:ft,Ch:pt,Cl:mt,Dh:ht,Dl:bt,Eh:yt,El:xt,Fh:gt,Fl:wt,Gh:Pt,Gl:St,Hh:Et,Hl:Lt}=this;return[tt,ot,dt,ft,pt,mt,ht,bt,yt,xt,gt,wt,Pt,St,Et,Lt]}set(tt,ot,dt,ft,pt,mt,ht,bt,yt,xt,gt,wt,Pt,St,Et,Lt){this.Ah=tt|0,this.Al=ot|0,this.Bh=dt|0,this.Bl=ft|0,this.Ch=pt|0,this.Cl=mt|0,this.Dh=ht|0,this.Dl=bt|0,this.Eh=yt|0,this.El=xt|0,this.Fh=gt|0,this.Fl=wt|0,this.Gh=Pt|0,this.Gl=St|0,this.Hh=Et|0,this.Hl=Lt|0}process(tt,ot){for(let Nt=0;Nt<16;Nt++,ot+=4)SHA512_W_H[Nt]=tt.getUint32(ot),SHA512_W_L[Nt]=tt.getUint32(ot+=4);for(let Nt=16;Nt<80;Nt++){const Ut=SHA512_W_H[Nt-15]|0,Ft=SHA512_W_L[Nt-15]|0,jt=u64$1.rotrSH(Ut,Ft,1)^u64$1.rotrSH(Ut,Ft,8)^u64$1.shrSH(Ut,Ft,7),Xt=u64$1.rotrSL(Ut,Ft,1)^u64$1.rotrSL(Ut,Ft,8)^u64$1.shrSL(Ut,Ft,7),Wt=SHA512_W_H[Nt-2]|0,qt=SHA512_W_L[Nt-2]|0,Zt=u64$1.rotrSH(Wt,qt,19)^u64$1.rotrBH(Wt,qt,61)^u64$1.shrSH(Wt,qt,6),Gt=u64$1.rotrSL(Wt,qt,19)^u64$1.rotrBL(Wt,qt,61)^u64$1.shrSL(Wt,qt,6),Qt=u64$1.add4L(Xt,Gt,SHA512_W_L[Nt-7],SHA512_W_L[Nt-16]),Ht=u64$1.add4H(Qt,jt,Zt,SHA512_W_H[Nt-7],SHA512_W_H[Nt-16]);SHA512_W_H[Nt]=Ht|0,SHA512_W_L[Nt]=Qt|0}let{Ah:dt,Al:ft,Bh:pt,Bl:mt,Ch:ht,Cl:bt,Dh:yt,Dl:xt,Eh:gt,El:wt,Fh:Pt,Fl:St,Gh:Et,Gl:Lt,Hh:It,Hl:kt}=this;for(let Nt=0;Nt<80;Nt++){const Ut=u64$1.rotrSH(gt,wt,14)^u64$1.rotrSH(gt,wt,18)^u64$1.rotrBH(gt,wt,41),Ft=u64$1.rotrSL(gt,wt,14)^u64$1.rotrSL(gt,wt,18)^u64$1.rotrBL(gt,wt,41),jt=gt&Pt^~gt&Et,Xt=wt&St^~wt&Lt,Wt=u64$1.add5L(kt,Ft,Xt,SHA512_Kl[Nt],SHA512_W_L[Nt]),qt=u64$1.add5H(Wt,It,Ut,jt,SHA512_Kh[Nt],SHA512_W_H[Nt]),Zt=Wt|0,Gt=u64$1.rotrSH(dt,ft,28)^u64$1.rotrBH(dt,ft,34)^u64$1.rotrBH(dt,ft,39),Qt=u64$1.rotrSL(dt,ft,28)^u64$1.rotrBL(dt,ft,34)^u64$1.rotrBL(dt,ft,39),Ht=dt&pt^dt&ht^pt&ht,vt=ft&mt^ft&bt^mt&bt;It=Et|0,kt=Lt|0,Et=Pt|0,Lt=St|0,Pt=gt|0,St=wt|0,{h:gt,l:wt}=u64$1.add(yt|0,xt|0,qt|0,Zt|0),yt=ht|0,xt=bt|0,ht=pt|0,bt=mt|0,pt=dt|0,mt=ft|0;const Vt=u64$1.add3L(Zt,Qt,vt);dt=u64$1.add3H(Vt,qt,Gt,Ht),ft=Vt|0}({h:dt,l:ft}=u64$1.add(this.Ah|0,this.Al|0,dt|0,ft|0)),{h:pt,l:mt}=u64$1.add(this.Bh|0,this.Bl|0,pt|0,mt|0),{h:ht,l:bt}=u64$1.add(this.Ch|0,this.Cl|0,ht|0,bt|0),{h:yt,l:xt}=u64$1.add(this.Dh|0,this.Dl|0,yt|0,xt|0),{h:gt,l:wt}=u64$1.add(this.Eh|0,this.El|0,gt|0,wt|0),{h:Pt,l:St}=u64$1.add(this.Fh|0,this.Fl|0,Pt|0,St|0),{h:Et,l:Lt}=u64$1.add(this.Gh|0,this.Gl|0,Et|0,Lt|0),{h:It,l:kt}=u64$1.add(this.Hh|0,this.Hl|0,It|0,kt|0),this.set(dt,ft,pt,mt,ht,bt,yt,xt,gt,wt,Pt,St,Et,Lt,It,kt)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const sha512=wrapConstructor(()=>new SHA512);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$1=BigInt(0),_1n$2=BigInt(1),_2n$2=BigInt(2),_8n=BigInt(8),VERIFY_DEFAULT={zip215:!0};function validateOpts(et){const tt=validateBasic(et);return validateObject(et,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...tt})}function twistedEdwards(et){const tt=validateOpts(et),{Fp:ot,n:dt,prehash:ft,hash:pt,randomBytes:mt,nByteLength:ht,h:bt}=tt,yt=_2n$2<<BigInt(ht*8)-_1n$2,xt=ot.create,gt=tt.uvRatio||((Mt,Ct)=>{try{return{isValid:!0,value:ot.sqrt(Mt*ot.inv(Ct))}}catch{return{isValid:!1,value:_0n$1}}}),wt=tt.adjustScalarBytes||(Mt=>Mt),Pt=tt.domain||((Mt,Ct,Dt)=>{if(Ct.length||Dt)throw new Error("Contexts/pre-hash are not supported");return Mt}),St=Mt=>typeof Mt=="bigint"&&_0n$1<Mt,Et=(Mt,Ct)=>St(Mt)&&St(Ct)&&Mt<Ct,Lt=Mt=>Mt===_0n$1||Et(Mt,yt);function It(Mt,Ct){if(Et(Mt,Ct))return Mt;throw new Error(`Expected valid scalar < ${Ct}, got ${typeof Mt} ${Mt}`)}function kt(Mt){return Mt===_0n$1?Mt:It(Mt,dt)}const Nt=new Map;function Ut(Mt){if(!(Mt instanceof Ft))throw new Error("ExtendedPoint expected")}class Ft{constructor(Ct,Dt,Rt,Tt){if(this.ex=Ct,this.ey=Dt,this.ez=Rt,this.et=Tt,!Lt(Ct))throw new Error("x required");if(!Lt(Dt))throw new Error("y required");if(!Lt(Rt))throw new Error("z required");if(!Lt(Tt))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(Ct){if(Ct instanceof Ft)throw new Error("extended point not allowed");const{x:Dt,y:Rt}=Ct||{};if(!Lt(Dt)||!Lt(Rt))throw new Error("invalid affine point");return new Ft(Dt,Rt,_1n$2,xt(Dt*Rt))}static normalizeZ(Ct){const Dt=ot.invertBatch(Ct.map(Rt=>Rt.ez));return Ct.map((Rt,Tt)=>Rt.toAffine(Dt[Tt])).map(Ft.fromAffine)}_setWindowSize(Ct){this._WINDOW_SIZE=Ct,Nt.delete(this)}assertValidity(){const{a:Ct,d:Dt}=tt;if(this.is0())throw new Error("bad point: ZERO");const{ex:Rt,ey:Tt,ez:zt,et:Kt}=this,Jt=xt(Rt*Rt),Yt=xt(Tt*Tt),$t=xt(zt*zt),tn=xt($t*$t),en=xt(Jt*Ct),sn=xt($t*xt(en+Yt)),rn=xt(tn+xt(Dt*xt(Jt*Yt)));if(sn!==rn)throw new Error("bad point: equation left != right (1)");const nn=xt(Rt*Tt),cn=xt(zt*Kt);if(nn!==cn)throw new Error("bad point: equation left != right (2)")}equals(Ct){Ut(Ct);const{ex:Dt,ey:Rt,ez:Tt}=this,{ex:zt,ey:Kt,ez:Jt}=Ct,Yt=xt(Dt*Jt),$t=xt(zt*Tt),tn=xt(Rt*Jt),en=xt(Kt*Tt);return Yt===$t&&tn===en}is0(){return this.equals(Ft.ZERO)}negate(){return new Ft(xt(-this.ex),this.ey,this.ez,xt(-this.et))}double(){const{a:Ct}=tt,{ex:Dt,ey:Rt,ez:Tt}=this,zt=xt(Dt*Dt),Kt=xt(Rt*Rt),Jt=xt(_2n$2*xt(Tt*Tt)),Yt=xt(Ct*zt),$t=Dt+Rt,tn=xt(xt($t*$t)-zt-Kt),en=Yt+Kt,sn=en-Jt,rn=Yt-Kt,nn=xt(tn*sn),cn=xt(en*rn),an=xt(tn*rn),on=xt(sn*en);return new Ft(nn,cn,on,an)}add(Ct){Ut(Ct);const{a:Dt,d:Rt}=tt,{ex:Tt,ey:zt,ez:Kt,et:Jt}=this,{ex:Yt,ey:$t,ez:tn,et:en}=Ct;if(Dt===BigInt(-1)){const Wn=xt((zt-Tt)*($t+Yt)),dn=xt((zt+Tt)*($t-Yt)),un=xt(dn-Wn);if(un===_0n$1)return this.double();const Zn=xt(Kt*_2n$2*en),fn=xt(Jt*_2n$2*tn),pn=fn+Zn,qn=dn+Wn,mn=fn-Zn,gn=xt(pn*un),Kn=xt(qn*mn),wn=xt(pn*mn),Tn=xt(un*qn);return new Ft(gn,Kn,Tn,wn)}const sn=xt(Tt*Yt),rn=xt(zt*$t),nn=xt(Jt*Rt*en),cn=xt(Kt*tn),an=xt((Tt+zt)*(Yt+$t)-sn-rn),on=cn-nn,Xn=cn+nn,ln=xt(rn-Dt*sn),hn=xt(an*on),Gn=xt(Xn*ln),yn=xt(an*ln),xn=xt(on*Xn);return new Ft(hn,Gn,xn,yn)}subtract(Ct){return this.add(Ct.negate())}wNAF(Ct){return Wt.wNAFCached(this,Nt,Ct,Ft.normalizeZ)}multiply(Ct){const{p:Dt,f:Rt}=this.wNAF(It(Ct,dt));return Ft.normalizeZ([Dt,Rt])[0]}multiplyUnsafe(Ct){let Dt=kt(Ct);return Dt===_0n$1?Xt:this.equals(Xt)||Dt===_1n$2?this:this.equals(jt)?this.wNAF(Dt).p:Wt.unsafeLadder(this,Dt)}isSmallOrder(){return this.multiplyUnsafe(bt).is0()}isTorsionFree(){return Wt.unsafeLadder(this,dt).is0()}toAffine(Ct){const{ex:Dt,ey:Rt,ez:Tt}=this,zt=this.is0();Ct==null&&(Ct=zt?_8n:ot.inv(Tt));const Kt=xt(Dt*Ct),Jt=xt(Rt*Ct),Yt=xt(Tt*Ct);if(zt)return{x:_0n$1,y:_1n$2};if(Yt!==_1n$2)throw new Error("invZ was invalid");return{x:Kt,y:Jt}}clearCofactor(){const{h:Ct}=tt;return Ct===_1n$2?this:this.multiplyUnsafe(Ct)}static fromHex(Ct,Dt=!1){const{d:Rt,a:Tt}=tt,zt=ot.BYTES;Ct=ensureBytes("pointHex",Ct,zt);const Kt=Ct.slice(),Jt=Ct[zt-1];Kt[zt-1]=Jt&-129;const Yt=bytesToNumberLE(Kt);Yt===_0n$1||(Dt?It(Yt,yt):It(Yt,ot.ORDER));const $t=xt(Yt*Yt),tn=xt($t-_1n$2),en=xt(Rt*$t-Tt);let{isValid:sn,value:rn}=gt(tn,en);if(!sn)throw new Error("Point.fromHex: invalid y coordinate");const nn=(rn&_1n$2)===_1n$2,cn=(Jt&128)!==0;if(!Dt&&rn===_0n$1&&cn)throw new Error("Point.fromHex: x=0 and x_0=1");return cn!==nn&&(rn=xt(-rn)),Ft.fromAffine({x:rn,y:Yt})}static fromPrivateKey(Ct){return Gt(Ct).point}toRawBytes(){const{x:Ct,y:Dt}=this.toAffine(),Rt=numberToBytesLE(Dt,ot.BYTES);return Rt[Rt.length-1]|=Ct&_1n$2?128:0,Rt}toHex(){return bytesToHex(this.toRawBytes())}}Ft.BASE=new Ft(tt.Gx,tt.Gy,_1n$2,xt(tt.Gx*tt.Gy)),Ft.ZERO=new Ft(_0n$1,_1n$2,_1n$2,_0n$1);const{BASE:jt,ZERO:Xt}=Ft,Wt=wNAF(Ft,ht*8);function qt(Mt){return mod(Mt,dt)}function Zt(Mt){return qt(bytesToNumberLE(Mt))}function Gt(Mt){const Ct=ht;Mt=ensureBytes("private key",Mt,Ct);const Dt=ensureBytes("hashed private key",pt(Mt),2*Ct),Rt=wt(Dt.slice(0,Ct)),Tt=Dt.slice(Ct,2*Ct),zt=Zt(Rt),Kt=jt.multiply(zt),Jt=Kt.toRawBytes();return{head:Rt,prefix:Tt,scalar:zt,point:Kt,pointBytes:Jt}}function Qt(Mt){return Gt(Mt).pointBytes}function Ht(Mt=new Uint8Array,...Ct){const Dt=concatBytes(...Ct);return Zt(pt(Pt(Dt,ensureBytes("context",Mt),!!ft)))}function vt(Mt,Ct,Dt={}){Mt=ensureBytes("message",Mt),ft&&(Mt=ft(Mt));const{prefix:Rt,scalar:Tt,pointBytes:zt}=Gt(Ct),Kt=Ht(Dt.context,Rt,Mt),Jt=jt.multiply(Kt).toRawBytes(),Yt=Ht(Dt.context,Jt,zt,Mt),$t=qt(Kt+Yt*Tt);kt($t);const tn=concatBytes(Jt,numberToBytesLE($t,ot.BYTES));return ensureBytes("result",tn,ht*2)}const Vt=VERIFY_DEFAULT;function At(Mt,Ct,Dt,Rt=Vt){const{context:Tt,zip215:zt}=Rt,Kt=ot.BYTES;Mt=ensureBytes("signature",Mt,2*Kt),Ct=ensureBytes("message",Ct),ft&&(Ct=ft(Ct));const Jt=bytesToNumberLE(Mt.slice(Kt,2*Kt));let Yt,$t,tn;try{Yt=Ft.fromHex(Dt,zt),$t=Ft.fromHex(Mt.slice(0,Kt),zt),tn=jt.multiplyUnsafe(Jt)}catch{return!1}if(!zt&&Yt.isSmallOrder())return!1;const en=Ht(Tt,$t.toRawBytes(),Yt.toRawBytes(),Ct);return $t.add(Yt.multiplyUnsafe(en)).subtract(tn).clearCofactor().equals(Ft.ZERO)}return jt._setWindowSize(8),{CURVE:tt,getPublicKey:Qt,sign:vt,verify:At,ExtendedPoint:Ft,utils:{getExtendedPublicKey:Gt,randomPrivateKey:()=>mt(ot.BYTES),precompute(Mt=8,Ct=Ft.BASE){return Ct._setWindowSize(Mt),Ct.multiply(BigInt(3)),Ct}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const ED25519_P=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),ED25519_SQRT_M1=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt(0);const _1n$1=BigInt(1),_2n$1=BigInt(2),_5n=BigInt(5),_10n=BigInt(10),_20n=BigInt(20),_40n=BigInt(40),_80n=BigInt(80);function ed25519_pow_2_252_3(et){const tt=ED25519_P,dt=et*et%tt*et%tt,ft=pow2(dt,_2n$1,tt)*dt%tt,pt=pow2(ft,_1n$1,tt)*et%tt,mt=pow2(pt,_5n,tt)*pt%tt,ht=pow2(mt,_10n,tt)*mt%tt,bt=pow2(ht,_20n,tt)*ht%tt,yt=pow2(bt,_40n,tt)*bt%tt,xt=pow2(yt,_80n,tt)*yt%tt,gt=pow2(xt,_80n,tt)*yt%tt,wt=pow2(gt,_10n,tt)*mt%tt;return{pow_p_5_8:pow2(wt,_2n$1,tt)*et%tt,b2:dt}}function adjustScalarBytes(et){return et[0]&=248,et[31]&=127,et[31]|=64,et}function uvRatio(et,tt){const ot=ED25519_P,dt=mod(tt*tt*tt,ot),ft=mod(dt*dt*tt,ot),pt=ed25519_pow_2_252_3(et*ft).pow_p_5_8;let mt=mod(et*dt*pt,ot);const ht=mod(tt*mt*mt,ot),bt=mt,yt=mod(mt*ED25519_SQRT_M1,ot),xt=ht===et,gt=ht===mod(-et,ot),wt=ht===mod(-et*ED25519_SQRT_M1,ot);return xt&&(mt=bt),(gt||wt)&&(mt=yt),isNegativeLE(mt,ot)&&(mt=mod(-mt,ot)),{isValid:xt||gt,value:mt}}const Fp=Field(ED25519_P,void 0,!0),ed25519Defaults={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:sha512,randomBytes,adjustScalarBytes,uvRatio},ed25519=twistedEdwards(ed25519Defaults);function ed25519_domain(et,tt,ot){if(tt.length>255)throw new Error("Context is too big");return concatBytes$1(utf8ToBytes$1("SigEd25519 no Ed25519 collisions"),new Uint8Array([ot?1:0,tt.length]),tt,et)}({...ed25519Defaults});({...ed25519Defaults});const ELL2_C1=(Fp.ORDER+BigInt(3))/BigInt(8);Fp.pow(_2n$1,ELL2_C1);Fp.sqrt(Fp.neg(Fp.ONE));(Fp.ORDER-BigInt(5))/BigInt(8);BigInt(486662);FpSqrtEven(Fp,Fp.neg(BigInt(486664)));BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235");BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578");BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838");BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function ed25519PairFromSeed(et,tt){if(!hasBigInt$2||!tt&&isReady$2()){const dt=ed25519KeypairFromSeed(et);return{publicKey:dt.slice(32),secretKey:dt.slice(0,64)}}const ot=ed25519.getPublicKey(et);return{publicKey:ot,secretKey:u8aConcatStrict$4([et,ot])}}function ed25519Sign(et,{publicKey:tt,secretKey:ot},dt){if(ot){if(!tt)throw new Error("Expected a valid publicKey")}else throw new Error("Expected a valid secretKey");const ft=u8aToU8a$5(et),pt=ot.subarray(0,32);return!hasBigInt$2||!dt&&isReady$2()?ed25519Sign$1(tt,pt,ft):ed25519.sign(ft,pt)}function ed25519Verify(et,tt,ot,dt){const ft=u8aToU8a$5(et),pt=u8aToU8a$5(ot),mt=u8aToU8a$5(tt);if(pt.length!==32)throw new Error(`Invalid publicKey, received ${pt.length}, expected 32`);if(mt.length!==64)throw new Error(`Invalid signature, received ${mt.length} bytes, expected 64`);try{return!hasBigInt$2||!dt&&isReady$2()?ed25519Verify$1(mt,ft,pt):ed25519.verify(mt,ft,pt)}catch{return!1}}const keyHdkdEd25519=createSeedDeriveFn(ed25519PairFromSeed,ed25519DeriveHard),SEC_LEN=64,PUB_LEN=32,TOT_LEN=SEC_LEN+PUB_LEN;function sr25519PairFromU8a(et){const tt=u8aToU8a$5(et);if(tt.length!==TOT_LEN)throw new Error(`Expected keypair with ${TOT_LEN} bytes, found ${tt.length}`);return{publicKey:tt.slice(SEC_LEN,TOT_LEN),secretKey:tt.slice(0,SEC_LEN)}}function sr25519KeypairToU8a({publicKey:et,secretKey:tt}){return u8aConcat$3(tt,et).slice()}function createDeriveFn(et){return(tt,ot)=>{if(!isU8a$5(ot)||ot.length!==32)throw new Error("Invalid chainCode passed to derive");return sr25519PairFromU8a(et(sr25519KeypairToU8a(tt),ot))}}const sr25519DeriveHard=createDeriveFn(sr25519DeriveKeypairHard),sr25519DeriveSoft=createDeriveFn(sr25519DeriveKeypairSoft);function keyHdkdSr25519(et,{chainCode:tt,isSoft:ot}){return ot?sr25519DeriveSoft(et,tt):sr25519DeriveHard(et,tt)}const generators={ecdsa:keyHdkdEcdsa,ed25519:keyHdkdEd25519,ethereum:keyHdkdEcdsa,sr25519:keyHdkdSr25519};function keyFromPath(et,tt,ot){const dt=generators[ot];let ft=et;for(const pt of tt)ft=dt(ft,pt);return ft}function sr25519PairFromSeed(et){const tt=u8aToU8a$5(et);if(tt.length!==32)throw new Error(`Expected a seed matching 32 bytes, found ${tt.length}`);return sr25519PairFromU8a(sr25519KeypairFromSeed(tt))}function sr25519Sign(et,{publicKey:tt,secretKey:ot}){if((tt==null?void 0:tt.length)!==32)throw new Error("Expected a valid publicKey, 32-bytes");if((ot==null?void 0:ot.length)!==64)throw new Error("Expected a valid secretKey, 64-bytes");return sr25519Sign$1(tt,ot,u8aToU8a$5(et))}function sr25519Verify(et,tt,ot){const dt=u8aToU8a$5(ot),ft=u8aToU8a$5(tt);if(dt.length!==32)throw new Error(`Invalid publicKey, received ${dt.length} bytes, expected 32`);if(ft.length!==64)throw new Error(`Invalid signature, received ${ft.length} bytes, expected 64`);return sr25519Verify$1(ft,u8aToU8a$5(et),dt)}const EMPTY_U8A$2=new Uint8Array;function sr25519VrfSign(et,{secretKey:tt},ot=EMPTY_U8A$2,dt=EMPTY_U8A$2){if((tt==null?void 0:tt.length)!==64)throw new Error("Invalid secretKey, expected 64-bytes");return vrfSign(tt,u8aToU8a$5(ot),u8aToU8a$5(et),u8aToU8a$5(dt))}const EMPTY_U8A$1=new Uint8Array;function sr25519VrfVerify(et,tt,ot,dt=EMPTY_U8A$1,ft=EMPTY_U8A$1){const pt=u8aToU8a$5(ot),mt=u8aToU8a$5(tt);if(pt.length!==32)throw new Error("Invalid publicKey, expected 32-bytes");if(mt.length!==96)throw new Error("Invalid vrfSign output, expected 96 bytes");return vrfVerify(pt,u8aToU8a$5(dt),u8aToU8a$5(et),u8aToU8a$5(ft),mt)}function encodeAddress$1(et,tt=defaults$3.prefix){const ot=decodeAddress$2(et);if(tt<0||tt>16383||[46,47].includes(tt))throw new Error("Out of range ss58Format specified");if(!defaults$3.allowedDecodedLengths.includes(ot.length))throw new Error(`Expected a valid key to convert, with length ${defaults$3.allowedDecodedLengths.join(", ")}`);const dt=u8aConcat$3(tt<64?[tt]:[(tt&252)>>2|64,tt>>8|(tt&3)<<6],ot);return base58Encode$1(u8aConcat$3(dt,sshash$2(dt).subarray(0,[32,33].includes(ot.length)?2:1)))}const SHA3_PI=[],SHA3_ROTL=[],_SHA3_IOTA=[],_0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_7n$1=BigInt(7),_256n$1=BigInt(256),_0x71n=BigInt(113);for(let et=0,tt=_1n,ot=1,dt=0;et<24;et++){[ot,dt]=[dt,(2*ot+3*dt)%5],SHA3_PI.push(2*(5*dt+ot)),SHA3_ROTL.push((et+1)*(et+2)/2%64);let ft=_0n;for(let pt=0;pt<7;pt++)tt=(tt<<_1n^(tt>>_7n$1)*_0x71n)%_256n$1,tt&_2n&&(ft^=_1n<<(_1n<<BigInt(pt))-_1n);_SHA3_IOTA.push(ft)}const[SHA3_IOTA_H,SHA3_IOTA_L]=split(_SHA3_IOTA,!0),rotlH=(et,tt,ot)=>ot>32?rotlBH(et,tt,ot):rotlSH(et,tt,ot),rotlL=(et,tt,ot)=>ot>32?rotlBL(et,tt,ot):rotlSL(et,tt,ot);function keccakP(et,tt=24){const ot=new Uint32Array(10);for(let dt=24-tt;dt<24;dt++){for(let mt=0;mt<10;mt++)ot[mt]=et[mt]^et[mt+10]^et[mt+20]^et[mt+30]^et[mt+40];for(let mt=0;mt<10;mt+=2){const ht=(mt+8)%10,bt=(mt+2)%10,yt=ot[bt],xt=ot[bt+1],gt=rotlH(yt,xt,1)^ot[ht],wt=rotlL(yt,xt,1)^ot[ht+1];for(let Pt=0;Pt<50;Pt+=10)et[mt+Pt]^=gt,et[mt+Pt+1]^=wt}let ft=et[2],pt=et[3];for(let mt=0;mt<24;mt++){const ht=SHA3_ROTL[mt],bt=rotlH(ft,pt,ht),yt=rotlL(ft,pt,ht),xt=SHA3_PI[mt];ft=et[xt],pt=et[xt+1],et[xt]=bt,et[xt+1]=yt}for(let mt=0;mt<50;mt+=10){for(let ht=0;ht<10;ht++)ot[ht]=et[mt+ht];for(let ht=0;ht<10;ht++)et[mt+ht]^=~ot[(ht+2)%10]&ot[(ht+4)%10]}et[0]^=SHA3_IOTA_H[dt],et[1]^=SHA3_IOTA_L[dt]}ot.fill(0)}class Keccak extends Hash{constructor(tt,ot,dt,ft=!1,pt=24){if(super(),this.blockLen=tt,this.suffix=ot,this.outputLen=dt,this.enableXOF=ft,this.rounds=pt,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,number(dt),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32$3(this.state)}keccak(){isLE||byteSwap32(this.state32),keccakP(this.state32,this.rounds),isLE||byteSwap32(this.state32),this.posOut=0,this.pos=0}update(tt){exists(this);const{blockLen:ot,state:dt}=this;tt=toBytes(tt);const ft=tt.length;for(let pt=0;pt<ft;){const mt=Math.min(ot-this.pos,ft-pt);for(let ht=0;ht<mt;ht++)dt[this.pos++]^=tt[pt++];this.pos===ot&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:tt,suffix:ot,pos:dt,blockLen:ft}=this;tt[dt]^=ot,ot&128&&dt===ft-1&&this.keccak(),tt[ft-1]^=128,this.keccak()}writeInto(tt){exists(this,!1),bytes(tt),this.finish();const ot=this.state,{blockLen:dt}=this;for(let ft=0,pt=tt.length;ft<pt;){this.posOut>=dt&&this.keccak();const mt=Math.min(dt-this.posOut,pt-ft);tt.set(ot.subarray(this.posOut,this.posOut+mt),ft),this.posOut+=mt,ft+=mt}return tt}xofInto(tt){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(tt)}xof(tt){return number(tt),this.xofInto(new Uint8Array(tt))}digestInto(tt){if(output(tt,this),this.finished)throw new Error("digest() was already called");return this.writeInto(tt),this.destroy(),tt}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(tt){const{blockLen:ot,suffix:dt,outputLen:ft,rounds:pt,enableXOF:mt}=this;return tt||(tt=new Keccak(ot,dt,ft,mt,pt)),tt.state32.set(this.state32),tt.pos=this.pos,tt.posOut=this.posOut,tt.finished=this.finished,tt.rounds=pt,tt.suffix=dt,tt.outputLen=ft,tt.enableXOF=mt,tt.destroyed=this.destroyed,tt}}const gen=(et,tt,ot)=>wrapConstructor(()=>new Keccak(tt,et,ot)),keccak_256=gen(1,136,256/8),keccak_512=gen(1,72,512/8),keccakAsU8a$1=createDualHasher$1({256:keccak256$1,512:keccak512$1},{256:keccak_256,512:keccak_512});function hasher(et,tt,ot){return et==="keccak"?keccakAsU8a$1(tt,void 0,ot):blake2AsU8a$2(tt,void 0,void 0,ot)}const config$3={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:base64,type:"base64",withPadding:!0},base64Validate=createValidate$2(config$3),base64Decode$2=createDecode$2(config$3,base64Validate),base64Encode=createEncode$1(config$3);function secp256k1Compress(et,tt){if(![33,65].includes(et.length))throw new Error(`Invalid publicKey provided, received ${et.length} bytes input`);return et.length===33?et:!hasBigInt$2||isReady$2()?secp256k1Compress$1(et):secp256k1.ProjectivePoint.fromHex(et).toRawBytes(!0)}function secp256k1Expand$2(et,tt){if(![33,65].includes(et.length))throw new Error(`Invalid publicKey provided, received ${et.length} bytes input`);if(et.length===65)return et.subarray(1);if(!hasBigInt$2||isReady$2())return secp256k1Expand$3(et).subarray(1);const{px:ot,py:dt}=secp256k1.ProjectivePoint.fromHex(et);return u8aConcat$3(bnToU8a$2(ot,BN_BE_256_OPTS$1),bnToU8a$2(dt,BN_BE_256_OPTS$1))}function secp256k1Recover(et,tt,ot,dt="blake2",ft){const pt=u8aToU8a$5(tt).subarray(0,64),mt=u8aToU8a$5(et),ht=!hasBigInt$2||isReady$2()?secp256k1Recover$1(mt,pt,ot):secp256k1.Signature.fromCompact(pt).addRecoveryBit(ot).recoverPublicKey(mt).toRawBytes();if(!ht)throw new Error("Unable to recover publicKey from signature");return dt==="keccak"?secp256k1Expand$2(ht):secp256k1Compress(ht)}function secp256k1Sign(et,{secretKey:tt},ot="blake2",dt){if((tt==null?void 0:tt.length)!==32)throw new Error("Expected valid secp256k1 secretKey, 32-bytes");const ft=hasher(ot,et,dt);if(!hasBigInt$2||isReady$2())return secp256k1Sign$1(ft,tt);const pt=secp256k1.sign(ft,tt,{lowS:!0});return u8aConcat$3(bnToU8a$2(pt.r,BN_BE_256_OPTS$1),bnToU8a$2(pt.s,BN_BE_256_OPTS$1),new Uint8Array([pt.recovery||0]))}const N$1="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),N_BI=BigInt$6(`0x${N$1}`),N_BN=new BN(N$1,"hex");function addBi(et,tt){let ot=u8aToBigInt(tt,BN_BE_OPTS);if(ot>=N_BI)throw new Error("Tweak parameter is out of range");if(ot+=u8aToBigInt(et,BN_BE_OPTS),ot>=N_BI&&(ot-=N_BI),ot===_0n$6)throw new Error("Invalid resulting private key");return nToU8a(ot,BN_BE_256_OPTS$1)}function addBn(et,tt){const ot=new BN(tt);if(ot.cmp(N_BN)>=0)throw new Error("Tweak parameter is out of range");if(ot.iadd(new BN(et)),ot.cmp(N_BN)>=0&&ot.isub(N_BN),ot.isZero())throw new Error("Invalid resulting private key");return bnToU8a$2(ot,BN_BE_256_OPTS$1)}function secp256k1PrivateKeyTweakAdd(et,tt,ot){if(!isU8a$5(et)||et.length!==32)throw new Error("Expected seckey to be an Uint8Array with length 32");if(!isU8a$5(tt)||tt.length!==32)throw new Error("Expected tweak to be an Uint8Array with length 32");return!hasBigInt$2||ot?addBn(et,tt):addBi(et,tt)}function secp256k1Verify(et,tt,ot,dt="blake2",ft){const pt=u8aToU8a$5(tt);if(pt.length!==65)throw new Error(`Expected signature with 65 bytes, ${pt.length} found instead`);const mt=secp256k1Recover(hasher(dt,et),pt,pt[64],dt),ht=hasher(dt,mt,ft),bt=u8aToU8a$5(ot);return u8aEq$2(mt,bt)||(dt==="keccak"?u8aEq$2(ht.slice(-20),bt.slice(-20)):u8aEq$2(ht,bt))}function getH160$1(et){return[33,65].includes(et.length)&&(et=keccakAsU8a$1(secp256k1Expand$2(et))),et.slice(-20)}function ethereumEncode$1(et){if(!et)return"0x";const tt=u8aToU8a$5(et);if(![20,32,33,65].includes(tt.length))throw new Error(`Invalid address or publicKey provided, received ${tt.length} bytes input`);const ot=u8aToHex$5(getH160$1(tt),-1,!1),dt=u8aToHex$5(keccakAsU8a$1(ot),-1,!1);let ft="";for(let pt=0;pt<40;pt++)ft=`${ft}${parseInt(dt[pt],16)>7?ot[pt].toUpperCase():ot[pt]}`;return`0x${ft}`}function isInvalidChar(et,tt){return et!==(tt>7?et.toUpperCase():et.toLowerCase())}function isEthereumChecksum(et){const tt=et.replace("0x",""),ot=u8aToHex$5(keccakAsU8a$1(tt.toLowerCase()),-1,!1);for(let dt=0;dt<40;dt++)if(isInvalidChar(tt[dt],parseInt(ot[dt],16)))return!1;return!0}function isEthereumAddress(et){return!et||et.length!==42||!isHex$6(et)?!1:/^(0x)?[0-9a-f]{40}$/.test(et)||/^(0x)?[0-9A-F]{40}$/.test(et)?!0:isEthereumChecksum(et)}const JS_HASH={256:sha256,512:sha512},WA_MHAC={256:hmacSha256,512:hmacSha512};function hmacShaAsU8a(et,tt,ot=256,dt){const ft=u8aToU8a$5(et);return!hasBigInt$2||isReady$2()?WA_MHAC[ot](ft,tt):hmac(JS_HASH[ot],ft,tt)}const HARDENED=2147483648;function hdValidatePath(et){if(!et.startsWith("m/"))return!1;const tt=et.split("/").slice(1);for(const ot of tt){const dt=/^\d+'?$/.test(ot)?parseInt(ot.replace(/'$/,""),10):Number.NaN;if(isNaN(dt)||dt>=HARDENED||dt<0)return!1}return!0}const MASTER_SECRET=stringToU8a$5("Bitcoin seed");function createCoded(et,tt){return{chainCode:tt,publicKey:secp256k1PairFromSeed(et).publicKey,secretKey:et}}function deriveChild(et,tt){const ot=bnToU8a$2(tt,BN_BE_32_OPTS),dt=tt>=HARDENED?u8aConcat$3(new Uint8Array(1),et.secretKey,ot):u8aConcat$3(et.publicKey,ot);try{const ft=hmacShaAsU8a(et.chainCode,dt,512);return createCoded(secp256k1PrivateKeyTweakAdd(et.secretKey,ft.slice(0,32)),ft.slice(32))}catch{return deriveChild(et,tt+1)}}function hdEthereum(et,tt=""){const ot=hmacShaAsU8a(MASTER_SECRET,et,512);let dt=createCoded(ot.slice(0,32),ot.slice(32));if(!tt||tt==="m"||tt==="M"||tt==="m'"||tt==="M'")return dt;if(!hdValidatePath(tt))throw new Error("Invalid derivation path");const ft=tt.split("/").slice(1);for(const pt of ft)dt=deriveChild(dt,parseInt(pt,10)+(pt.length>1&&pt.endsWith("'")?HARDENED:0));return dt}function pbkdf2Init(et,tt,ot,dt){hash$1(et);const ft=checkOpts({dkLen:32,asyncTick:10},dt),{c:pt,dkLen:mt,asyncTick:ht}=ft;if(number(pt),number(mt),number(ht),pt<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const bt=toBytes(tt),yt=toBytes(ot),xt=new Uint8Array(mt),gt=hmac.create(et,bt),wt=gt._cloneInto().update(yt);return{c:pt,dkLen:mt,asyncTick:ht,DK:xt,PRF:gt,PRFSalt:wt}}function pbkdf2Output(et,tt,ot,dt,ft){return et.destroy(),tt.destroy(),dt&&dt.destroy(),ft.fill(0),ot}function pbkdf2(et,tt,ot,dt){const{c:ft,dkLen:pt,DK:mt,PRF:ht,PRFSalt:bt}=pbkdf2Init(et,tt,ot,dt);let yt;const xt=new Uint8Array(4),gt=createView(xt),wt=new Uint8Array(ht.outputLen);for(let Pt=1,St=0;St<pt;Pt++,St+=ht.outputLen){const Et=mt.subarray(St,St+ht.outputLen);gt.setInt32(0,Pt,!1),(yt=bt._cloneInto(yt)).update(xt).digestInto(wt),Et.set(wt.subarray(0,Et.length));for(let Lt=1;Lt<ft;Lt++){ht._cloneInto(yt).update(wt).digestInto(wt);for(let It=0;It<Et.length;It++)Et[It]^=wt[It]}}return pbkdf2Output(ht,bt,mt,yt,wt)}function pbkdf2Encode(et,tt=randomAsU8a(),ot=2048,dt){const ft=u8aToU8a$5(et),pt=u8aToU8a$5(tt);return{password:!hasBigInt$2||isReady$2()?pbkdf2$1(ft,pt,ot):pbkdf2(sha512,ft,pt,{c:ot,dkLen:64}),rounds:ot,salt:tt}}const shaAsU8a=createDualHasher$1({256:sha256$1,512:sha512$1},{256:sha256,512:sha512}),sha256AsU8a=createBitHasher(256,shaAsU8a),DEFAULT_WORDLIST="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|"),INVALID_MNEMONIC="Invalid mnemonic",INVALID_ENTROPY="Invalid entropy",INVALID_CHECKSUM="Invalid mnemonic checksum";function normalize(et){return(et||"").normalize("NFKD")}function binaryToByte(et){return parseInt(et,2)}function bytesToBinary(et){return et.map(tt=>tt.toString(2).padStart(8,"0")).join("")}function deriveChecksumBits(et){return bytesToBinary(Array.from(sha256AsU8a(et))).slice(0,et.length*8/32)}function mnemonicToSeedSync(et,tt){return pbkdf2Encode(stringToU8a$5(normalize(et)),stringToU8a$5(`mnemonic${normalize(tt)}`)).password}function mnemonicToEntropy$1(et,tt=DEFAULT_WORDLIST){const ot=normalize(et).split(" ");if(ot.length%3!==0)throw new Error(INVALID_MNEMONIC);const dt=ot.map(xt=>{const gt=tt.indexOf(xt);if(gt===-1)throw new Error(INVALID_MNEMONIC);return gt.toString(2).padStart(11,"0")}).join(""),ft=Math.floor(dt.length/33)*32,pt=dt.slice(0,ft),mt=dt.slice(ft),ht=pt.match(/(.{1,8})/g),bt=ht==null?void 0:ht.map(binaryToByte);if(!bt||bt.length%4!==0||bt.length<16||bt.length>32)throw new Error(INVALID_ENTROPY);const yt=u8aToU8a$5(bt);if(deriveChecksumBits(yt)!==mt)throw new Error(INVALID_CHECKSUM);return yt}function validateMnemonic(et,tt){try{mnemonicToEntropy$1(et,tt)}catch{return!1}return!0}function mnemonicToEntropy(et,tt,ot){return!hasBigInt$2||!tt&&!ot&&isReady$2()?bip39ToEntropy(et):mnemonicToEntropy$1(et,tt)}function mnemonicValidate(et,tt,ot){return!hasBigInt$2||!tt&&!ot&&isReady$2()?bip39Validate(et):validateMnemonic(et,tt)}function mnemonicToLegacySeed(et,tt="",ot,dt=32){if(mnemonicValidate(et)){if(![32,64].includes(dt))throw new Error(`Invalid seed length ${dt}, expected 32 or 64`)}else throw new Error("Invalid bip39 mnemonic specified");return dt===32?!hasBigInt$2||isReady$2()?bip39ToSeed(et,tt):mnemonicToSeedSync(et,tt).subarray(0,32):mnemonicToSeedSync(et,tt)}function mnemonicToMiniSecret(et,tt="",ot,dt){if(mnemonicValidate(et,ot,dt)){if(!ot&&!dt&&isReady$2())return bip39ToMiniSecret(et,tt)}else throw new Error("Invalid bip39 mnemonic specified");const ft=mnemonicToEntropy(et,ot),pt=stringToU8a$5(`mnemonic${tt}`);return pbkdf2Encode(ft,pt).password.slice(0,32)}function L32(et,tt){return et<<tt|et>>>32-tt}function ld32(et,tt){let ot=et[tt+3]&255;return ot=ot<<8|et[tt+2]&255,ot=ot<<8|et[tt+1]&255,ot<<8|et[tt+0]&255}function st32(et,tt,ot){for(let dt=0;dt<4;dt++)et[tt+dt]=ot&255,ot>>>=8}function vn(et,tt,ot,dt,ft){let pt=0;for(let mt=0;mt<ft;mt++)pt|=et[tt+mt]^ot[dt+mt];return(1&pt-1>>>8)-1}function core(et,tt,ot,dt,ft){const pt=new Uint32Array(16),mt=new Uint32Array(16),ht=new Uint32Array(16),bt=new Uint32Array(4);let yt,xt,gt;for(yt=0;yt<4;yt++)mt[5*yt]=ld32(dt,4*yt),mt[1+yt]=ld32(ot,4*yt),mt[6+yt]=ld32(tt,4*yt),mt[11+yt]=ld32(ot,16+4*yt);for(yt=0;yt<16;yt++)ht[yt]=mt[yt];for(yt=0;yt<20;yt++){for(xt=0;xt<4;xt++){for(gt=0;gt<4;gt++)bt[gt]=mt[(5*xt+4*gt)%16];for(bt[1]^=L32(bt[0]+bt[3]|0,7),bt[2]^=L32(bt[1]+bt[0]|0,9),bt[3]^=L32(bt[2]+bt[1]|0,13),bt[0]^=L32(bt[3]+bt[2]|0,18),gt=0;gt<4;gt++)pt[4*xt+(xt+gt)%4]=bt[gt]}for(gt=0;gt<16;gt++)mt[gt]=pt[gt]}if(ft){for(yt=0;yt<16;yt++)mt[yt]=mt[yt]+ht[yt]|0;for(yt=0;yt<4;yt++)mt[5*yt]=mt[5*yt]-ld32(dt,4*yt)|0,mt[6+yt]=mt[6+yt]-ld32(tt,4*yt)|0;for(yt=0;yt<4;yt++)st32(et,4*yt,mt[5*yt]),st32(et,16+4*yt,mt[6+yt])}else for(yt=0;yt<16;yt++)st32(et,4*yt,mt[yt]+ht[yt]|0)}const sigma=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function crypto_stream_salsa20_xor(et,tt,ot,dt,ft,pt,mt){const ht=new Uint8Array(16),bt=new Uint8Array(64);let yt,xt;if(!ft)return 0;for(xt=0;xt<16;xt++)ht[xt]=0;for(xt=0;xt<8;xt++)ht[xt]=pt[xt];for(;ft>=64;){for(core(bt,ht,mt,sigma,!1),xt=0;xt<64;xt++)et[tt+xt]=(ot?ot[dt+xt]:0)^bt[xt];for(yt=1,xt=8;xt<16;xt++)yt=yt+(ht[xt]&255)|0,ht[xt]=yt&255,yt>>>=8;ft-=64,tt+=64,ot&&(dt+=64)}if(ft>0)for(core(bt,ht,mt,sigma,!1),xt=0;xt<ft;xt++)et[tt+xt]=(ot?ot[dt+xt]:0)^bt[xt];return 0}function crypto_stream_xor(et,tt,ot,dt,ft,pt,mt){const ht=new Uint8Array(32);return core(ht,pt,mt,sigma,!0),crypto_stream_salsa20_xor(et,tt,ot,dt,ft,pt.subarray(16),ht)}function add1305(et,tt){let ot=0;for(let dt=0;dt<17;dt++)ot=ot+(et[dt]+tt[dt]|0)|0,et[dt]=ot&255,ot>>>=8}const minusp=new Uint32Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252]);function crypto_onetimeauth(et,tt,ot,dt,ft,pt){let mt,ht,bt;const yt=new Uint32Array(17),xt=new Uint32Array(17),gt=new Uint32Array(17),wt=new Uint32Array(17),Pt=new Uint32Array(17);for(ht=0;ht<17;ht++)xt[ht]=gt[ht]=0;for(ht=0;ht<16;ht++)xt[ht]=pt[ht];for(xt[3]&=15,xt[4]&=252,xt[7]&=15,xt[8]&=252,xt[11]&=15,xt[12]&=252,xt[15]&=15;ft>0;){for(ht=0;ht<17;ht++)wt[ht]=0;for(ht=0;ht<16&&ht<ft;++ht)wt[ht]=ot[dt+ht];for(wt[ht]=1,dt+=ht,ft-=ht,add1305(gt,wt),mt=0;mt<17;mt++)for(yt[mt]=0,ht=0;ht<17;ht++)yt[mt]=yt[mt]+gt[ht]*(ht<=mt?xt[mt-ht]:320*xt[mt+17-ht]|0)|0|0;for(mt=0;mt<17;mt++)gt[mt]=yt[mt];for(bt=0,ht=0;ht<16;ht++)bt=bt+gt[ht]|0,gt[ht]=bt&255,bt>>>=8;for(bt=bt+gt[16]|0,gt[16]=bt&3,bt=5*(bt>>>2)|0,ht=0;ht<16;ht++)bt=bt+gt[ht]|0,gt[ht]=bt&255,bt>>>=8;bt=bt+gt[16]|0,gt[16]=bt}for(ht=0;ht<17;ht++)Pt[ht]=gt[ht];add1305(gt,minusp);const St=-(gt[16]>>>7)|0;for(ht=0;ht<17;ht++)gt[ht]^=St&(Pt[ht]^gt[ht]);for(ht=0;ht<16;ht++)wt[ht]=pt[ht+16];for(wt[16]=0,add1305(gt,wt),ht=0;ht<16;ht++)et[tt+ht]=gt[ht];return 0}function crypto_onetimeauth_verify(et,tt,ot,dt,ft,pt){const mt=new Uint8Array(16);return crypto_onetimeauth(mt,0,ot,dt,ft,pt),vn(et,tt,mt,0,16)}function crypto_secretbox(et,tt,ot,dt,ft){if(ot<32)return-1;crypto_stream_xor(et,0,tt,0,ot,dt,ft),crypto_onetimeauth(et,16,et,32,ot-32,et);for(let pt=0;pt<16;pt++)et[pt]=0;return 0}function crypto_secretbox_open(et,tt,ot,dt,ft){const pt=new Uint8Array(32);if(ot<32||(crypto_stream_xor(pt,0,null,0,32,dt,ft),crypto_onetimeauth_verify(tt,16,tt,32,ot-32,pt)!==0))return-1;crypto_stream_xor(et,0,tt,0,ot,dt,ft);for(let mt=0;mt<32;mt++)et[mt]=0;return 0}const crypto_secretbox_KEYBYTES=32,crypto_secretbox_NONCEBYTES=24,crypto_secretbox_ZEROBYTES=32,crypto_secretbox_BOXZEROBYTES=16;function checkLengths(et,tt){if(et.length!==crypto_secretbox_KEYBYTES)throw new Error("bad key size");if(tt.length!==crypto_secretbox_NONCEBYTES)throw new Error("bad nonce size")}function checkArrayTypes(...et){for(let tt=0,ot=et.length;tt<ot;tt++)if(!(et[tt]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function naclSecretbox(et,tt,ot){checkArrayTypes(et,tt,ot),checkLengths(ot,tt);const dt=new Uint8Array(crypto_secretbox_ZEROBYTES+et.length),ft=new Uint8Array(dt.length);for(let pt=0;pt<et.length;pt++)dt[pt+crypto_secretbox_ZEROBYTES]=et[pt];return crypto_secretbox(ft,dt,dt.length,tt,ot),ft.subarray(crypto_secretbox_BOXZEROBYTES)}function naclSecretboxOpen(et,tt,ot){checkArrayTypes(et,tt,ot),checkLengths(ot,tt);const dt=new Uint8Array(crypto_secretbox_BOXZEROBYTES+et.length),ft=new Uint8Array(dt.length);for(let pt=0;pt<et.length;pt++)dt[pt+crypto_secretbox_BOXZEROBYTES]=et[pt];return dt.length<32||crypto_secretbox_open(ft,dt,dt.length,tt,ot)!==0?null:ft.subarray(crypto_secretbox_ZEROBYTES)}function naclDecrypt(et,tt,ot){return naclSecretboxOpen(et,tt,ot)}function naclEncrypt(et,tt,ot=randomAsU8a(24)){return{encrypted:naclSecretbox(et,ot,tt),nonce:ot}}function XorAndSalsa(et,tt,ot,dt,ft,pt){let mt=et[tt++]^ot[dt++],ht=et[tt++]^ot[dt++],bt=et[tt++]^ot[dt++],yt=et[tt++]^ot[dt++],xt=et[tt++]^ot[dt++],gt=et[tt++]^ot[dt++],wt=et[tt++]^ot[dt++],Pt=et[tt++]^ot[dt++],St=et[tt++]^ot[dt++],Et=et[tt++]^ot[dt++],Lt=et[tt++]^ot[dt++],It=et[tt++]^ot[dt++],kt=et[tt++]^ot[dt++],Nt=et[tt++]^ot[dt++],Ut=et[tt++]^ot[dt++],Ft=et[tt++]^ot[dt++],jt=mt,Xt=ht,Wt=bt,qt=yt,Zt=xt,Gt=gt,Qt=wt,Ht=Pt,vt=St,Vt=Et,At=Lt,Bt=It,Mt=kt,Ct=Nt,Dt=Ut,Rt=Ft;for(let Tt=0;Tt<8;Tt+=2)Zt^=rotl$1(jt+Mt|0,7),vt^=rotl$1(Zt+jt|0,9),Mt^=rotl$1(vt+Zt|0,13),jt^=rotl$1(Mt+vt|0,18),Vt^=rotl$1(Gt+Xt|0,7),Ct^=rotl$1(Vt+Gt|0,9),Xt^=rotl$1(Ct+Vt|0,13),Gt^=rotl$1(Xt+Ct|0,18),Dt^=rotl$1(At+Qt|0,7),Wt^=rotl$1(Dt+At|0,9),Qt^=rotl$1(Wt+Dt|0,13),At^=rotl$1(Qt+Wt|0,18),qt^=rotl$1(Rt+Bt|0,7),Ht^=rotl$1(qt+Rt|0,9),Bt^=rotl$1(Ht+qt|0,13),Rt^=rotl$1(Bt+Ht|0,18),Xt^=rotl$1(jt+qt|0,7),Wt^=rotl$1(Xt+jt|0,9),qt^=rotl$1(Wt+Xt|0,13),jt^=rotl$1(qt+Wt|0,18),Qt^=rotl$1(Gt+Zt|0,7),Ht^=rotl$1(Qt+Gt|0,9),Zt^=rotl$1(Ht+Qt|0,13),Gt^=rotl$1(Zt+Ht|0,18),Bt^=rotl$1(At+Vt|0,7),vt^=rotl$1(Bt+At|0,9),Vt^=rotl$1(vt+Bt|0,13),At^=rotl$1(Vt+vt|0,18),Mt^=rotl$1(Rt+Dt|0,7),Ct^=rotl$1(Mt+Rt|0,9),Dt^=rotl$1(Ct+Mt|0,13),Rt^=rotl$1(Dt+Ct|0,18);ft[pt++]=mt+jt|0,ft[pt++]=ht+Xt|0,ft[pt++]=bt+Wt|0,ft[pt++]=yt+qt|0,ft[pt++]=xt+Zt|0,ft[pt++]=gt+Gt|0,ft[pt++]=wt+Qt|0,ft[pt++]=Pt+Ht|0,ft[pt++]=St+vt|0,ft[pt++]=Et+Vt|0,ft[pt++]=Lt+At|0,ft[pt++]=It+Bt|0,ft[pt++]=kt+Mt|0,ft[pt++]=Nt+Ct|0,ft[pt++]=Ut+Dt|0,ft[pt++]=Ft+Rt|0}function BlockMix(et,tt,ot,dt,ft){let pt=dt+0,mt=dt+16*ft;for(let ht=0;ht<16;ht++)ot[mt+ht]=et[tt+(2*ft-1)*16+ht];for(let ht=0;ht<ft;ht++,pt+=16,tt+=16)XorAndSalsa(ot,mt,et,tt,ot,pt),ht>0&&(mt+=16),XorAndSalsa(ot,pt,et,tt+=16,ot,mt)}function scryptInit(et,tt,ot){const dt=checkOpts({dkLen:32,asyncTick:10,maxmem:1073742848},ot),{N:ft,r:pt,p:mt,dkLen:ht,asyncTick:bt,maxmem:yt,onProgress:xt}=dt;if(number(ft),number(pt),number(mt),number(ht),number(bt),number(yt),xt!==void 0&&typeof xt!="function")throw new Error("progressCb should be function");const gt=128*pt,wt=gt/4;if(ft<=1||ft&ft-1||ft>=2**(gt/8)||ft>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(mt<0||mt>(2**32-1)*32/gt)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(ht<0||ht>(2**32-1)*32)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const Pt=gt*(ft+mt);if(Pt>yt)throw new Error(`Scrypt: parameters too large, ${Pt} (128 * r * (N + p)) > ${yt} (maxmem)`);const St=pbkdf2(sha256,et,tt,{c:1,dkLen:gt*mt}),Et=u32$3(St),Lt=u32$3(new Uint8Array(gt*ft)),It=u32$3(new Uint8Array(gt));let kt=()=>{};if(xt){const Nt=2*ft*mt,Ut=Math.max(Math.floor(Nt/1e4),1);let Ft=0;kt=()=>{Ft++,xt&&(!(Ft%Ut)||Ft===Nt)&&xt(Ft/Nt)}}return{N:ft,r:pt,p:mt,dkLen:ht,blockSize32:wt,V:Lt,B32:Et,B:St,tmp:It,blockMixCb:kt,asyncTick:bt}}function scryptOutput(et,tt,ot,dt,ft){const pt=pbkdf2(sha256,et,ot,{c:1,dkLen:tt});return ot.fill(0),dt.fill(0),ft.fill(0),pt}function scrypt(et,tt,ot){const{N:dt,r:ft,p:pt,dkLen:mt,blockSize32:ht,V:bt,B32:yt,B:xt,tmp:gt,blockMixCb:wt}=scryptInit(et,tt,ot);isLE||byteSwap32(yt);for(let Pt=0;Pt<pt;Pt++){const St=ht*Pt;for(let Et=0;Et<ht;Et++)bt[Et]=yt[St+Et];for(let Et=0,Lt=0;Et<dt-1;Et++)BlockMix(bt,Lt,bt,Lt+=ht,ft),wt();BlockMix(bt,(dt-1)*ht,yt,St,ft),wt();for(let Et=0;Et<dt;Et++){const Lt=yt[St+ht-16]%dt;for(let It=0;It<ht;It++)gt[It]=yt[St+It]^bt[Lt*ht+It];BlockMix(gt,0,yt,St,ft),wt()}}return isLE||byteSwap32(yt),scryptOutput(et,mt,xt,bt,gt)}const DEFAULT_PARAMS={N:32768,p:1,r:8};function scryptEncode(et,tt=randomAsU8a(),ot=DEFAULT_PARAMS,dt){const ft=u8aToU8a$5(et);return{params:ot,password:!hasBigInt$2||isReady$2()?scrypt$1(ft,tt,Math.log2(ot.N),ot.r,ot.p):scrypt(ft,tt,objectSpread$4({dkLen:64},ot)),salt:tt}}function scryptFromU8a(et){const tt=et.subarray(0,32),ot=u8aToBn$1(et.subarray(32,36),BN_LE_OPTS).toNumber(),dt=u8aToBn$1(et.subarray(36,40),BN_LE_OPTS).toNumber(),ft=u8aToBn$1(et.subarray(40,44),BN_LE_OPTS).toNumber();if(ot!==DEFAULT_PARAMS.N||dt!==DEFAULT_PARAMS.p||ft!==DEFAULT_PARAMS.r)throw new Error("Invalid injected scrypt params found");return{params:{N:ot,p:dt,r:ft},salt:tt}}function scryptToU8a(et,{N:tt,p:ot,r:dt}){return u8aConcat$3(et,bnToU8a$2(tt,BN_LE_32_OPTS),bnToU8a$2(ot,BN_LE_32_OPTS),bnToU8a$2(dt,BN_LE_32_OPTS))}const ENCODING=["scrypt","xsalsa20-poly1305"],ENCODING_NONE=["none"],ENCODING_VERSION="3",NONCE_LENGTH=24,SCRYPT_LENGTH=32+3*4;function jsonDecryptData(et,tt,ot=ENCODING){if(et){if(ot.includes("xsalsa20-poly1305")&&!tt)throw new Error("Password required to decode encrypted data")}else throw new Error("No encrypted data available to decode");let dt=et;if(tt){let ft;if(ot.includes("scrypt")){const{params:pt,salt:mt}=scryptFromU8a(et);ft=scryptEncode(tt,mt,pt).password,et=et.subarray(SCRYPT_LENGTH)}else ft=stringToU8a$5(tt);dt=naclDecrypt(et.subarray(NONCE_LENGTH),et.subarray(0,NONCE_LENGTH),u8aFixLength(ft,256,!0))}if(!dt)throw new Error("Unable to decode using the supplied passphrase");return dt}function jsonEncryptFormat(et,tt,ot){return{encoded:base64Encode(et),encoding:{content:tt,type:ot?ENCODING:ENCODING_NONE,version:ENCODING_VERSION}}}const secp256k1VerifyHasher=et=>(tt,ot,dt)=>secp256k1Verify(tt,ot,dt,et),VERIFIERS_ECDSA=[["ecdsa",secp256k1VerifyHasher("blake2")],["ethereum",secp256k1VerifyHasher("keccak")]],VERIFIERS=[["ed25519",ed25519Verify],["sr25519",sr25519Verify]];function verifyDetect(et,{message:tt,publicKey:ot,signature:dt},ft=[...VERIFIERS,...VERIFIERS_ECDSA]){return et.isValid=ft.some(([pt,mt])=>{try{if(mt(tt,dt,ot))return et.crypto=pt,!0}catch{}return!1}),et}function verifyMultisig(et,{message:tt,publicKey:ot,signature:dt}){if(![0,1,2].includes(dt[0])||![65,66].includes(dt.length))throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${dt[0]}`);return dt.length===66?et=verifyDetect(et,{message:tt,publicKey:ot,signature:dt.subarray(1)},VERIFIERS_ECDSA):(et=verifyDetect(et,{message:tt,publicKey:ot,signature:dt.subarray(1)},VERIFIERS),et.isValid||(et=verifyDetect(et,{message:tt,publicKey:ot,signature:dt},VERIFIERS_ECDSA)),et.isValid||(et.crypto="none")),et}function getVerifyFn(et){return[0,1,2].includes(et[0])&&[65,66].includes(et.length)?verifyMultisig:verifyDetect}function signatureVerify(et,tt,ot){const dt=u8aToU8a$5(tt);if(![64,65,66].includes(dt.length))throw new Error(`Invalid signature length, expected [64..66] bytes, found ${dt.length}`);const ft=decodeAddress$2(ot),pt={message:u8aToU8a$5(et),publicKey:ft,signature:dt},mt={crypto:"none",isValid:!1,isWrapped:u8aIsWrapped(pt.message,!0),publicKey:ft},ht=u8aIsWrapped(pt.message,!1),bt=getVerifyFn(dt);return bt(mt,pt),mt.crypto!=="none"||mt.isWrapped&&!ht?mt:(pt.message=ht?u8aUnwrapBytes(pt.message):u8aWrapBytes(pt.message),bt(mt,pt))}const P64_1=BigInt$6("11400714785074694791"),P64_2=BigInt$6("14029467366897019727"),P64_3=BigInt$6("1609587929392839161"),P64_4=BigInt$6("9650029242287828579"),P64_5=BigInt$6("2870177450012600261"),U64=BigInt$6("0xffffffffffffffff"),_7n=BigInt$6(7),_11n=BigInt$6(11),_12n=BigInt$6(12),_16n=BigInt$6(16),_18n=BigInt$6(18),_23n=BigInt$6(23),_27n=BigInt$6(27),_29n=BigInt$6(29),_31n=BigInt$6(31),_32n=BigInt$6(32),_33n=BigInt$6(33),_64n=BigInt$6(64),_256n=BigInt$6(256);function rotl(et,tt){const ot=et&U64;return(ot<<tt|ot>>_64n-tt)&U64}function fromU8a(et,tt,ot){const dt=new Array(ot);let ft=0;for(let mt=0;mt<ot;mt++,ft+=2)dt[mt]=BigInt$6(et[tt+ft]|et[tt+1+ft]<<8);let pt=_0n$6;for(let mt=ot-1;mt>=0;mt--)pt=(pt<<_16n)+dt[mt];return pt}function init(et,tt){const ot={seed:et,u8a:new Uint8Array(32),u8asize:0,v1:et+P64_1+P64_2,v2:et+P64_2,v3:et,v4:et-P64_1};if(tt.length<32)return ot.u8a.set(tt),ot.u8asize=tt.length,ot;const dt=tt.length-32;let ft=0;if(dt>=0){const pt=mt=>P64_1*rotl(mt+P64_2*fromU8a(tt,ft,4),_31n);do ot.v1=pt(ot.v1),ft+=8,ot.v2=pt(ot.v2),ft+=8,ot.v3=pt(ot.v3),ft+=8,ot.v4=pt(ot.v4),ft+=8;while(ft<=dt)}return ft<tt.length&&(ot.u8a.set(tt.subarray(ft,tt.length)),ot.u8asize=tt.length-ft),ot}function xxhash64(et,tt){const{seed:ot,u8a:dt,u8asize:ft,v1:pt,v2:mt,v3:ht,v4:bt}=init(BigInt$6(tt),et);let yt=0,xt=U64&BigInt$6(et.length)+(et.length>=32?((((rotl(pt,_1n$8)+rotl(mt,_7n)+rotl(ht,_12n)+rotl(bt,_18n)^P64_1*rotl(pt*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(mt*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(ht*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(bt*P64_2,_31n))*P64_1+P64_4:ot+P64_5);for(;yt<=ft-8;)xt=U64&P64_4+P64_1*rotl(xt^P64_1*rotl(P64_2*fromU8a(dt,yt,4),_31n),_27n),yt+=8;for(yt+4<=ft&&(xt=U64&P64_3+P64_2*rotl(xt^P64_1*fromU8a(dt,yt,2),_23n),yt+=4);yt<ft;)xt=U64&P64_1*rotl(xt^P64_5*BigInt$6(dt[yt++]),_11n);xt=U64&P64_2*(xt^xt>>_33n),xt=U64&P64_3*(xt^xt>>_29n),xt=U64&(xt^xt>>_32n);const gt=new Uint8Array(8);for(let wt=7;wt>=0;wt--)gt[wt]=Number(xt%_256n),xt=xt/_256n;return gt}function xxhashAsU8a(et,tt=64,ot){const dt=Math.ceil(tt/64),ft=u8aToU8a$5(et);if(!hasBigInt$2||!ot&&isReady$2())return twox(ft,dt);const pt=new Uint8Array(dt*8);for(let mt=0;mt<dt;mt++)pt.set(xxhash64(ft,mt).reverse(),mt*8);return pt}const PAIR_DIV=new Uint8Array([161,35,3,33,0]),PAIR_HDR=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),PUB_LENGTH=32,SEC_LENGTH=64,SEED_LENGTH=32,SEED_OFFSET=PAIR_HDR.length;function decodePair(et,tt,ot){const dt=Array.isArray(ot)||ot===void 0?ot:[ot],ft=jsonDecryptData(tt,et,dt),pt=ft.subarray(0,PAIR_HDR.length);if(!u8aEq$2(pt,PAIR_HDR))throw new Error("Invalid encoding header found in body");let mt=ft.subarray(SEED_OFFSET,SEED_OFFSET+SEC_LENGTH),ht=SEED_OFFSET+SEC_LENGTH,bt=ft.subarray(ht,ht+PAIR_DIV.length);if(!u8aEq$2(bt,PAIR_DIV)&&(ht=SEED_OFFSET+SEED_LENGTH,mt=ft.subarray(SEED_OFFSET,ht),bt=ft.subarray(ht,ht+PAIR_DIV.length),!u8aEq$2(bt,PAIR_DIV)))throw new Error("Invalid encoding divider found in body");const yt=ht+PAIR_DIV.length;return{publicKey:ft.subarray(yt,yt+PUB_LENGTH),secretKey:mt}}function encodePair({publicKey:et,secretKey:tt},ot){if(!tt)throw new Error("Expected a valid secretKey to be passed to encode");const dt=u8aConcat$3(PAIR_HDR,tt,PAIR_DIV,et);if(!ot)return dt;const{params:ft,password:pt,salt:mt}=scryptEncode(ot),{encrypted:ht,nonce:bt}=naclEncrypt(dt,pt.subarray(0,32));return u8aConcat$3(scryptToU8a(mt,ft),bt,ht)}function pairToJson(et,{address:tt,meta:ot},dt,ft){return objectSpread$4(jsonEncryptFormat(dt,["pkcs8",et],ft),{address:tt,meta:ot})}const SIG_TYPE_NONE=new Uint8Array,TYPE_FROM_SEED={ecdsa:secp256k1PairFromSeed,ed25519:ed25519PairFromSeed,ethereum:secp256k1PairFromSeed,sr25519:sr25519PairFromSeed},TYPE_PREFIX={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},TYPE_SIGNATURE={ecdsa:(et,tt)=>secp256k1Sign(et,tt,"blake2"),ed25519:ed25519Sign,ethereum:(et,tt)=>secp256k1Sign(et,tt,"keccak"),sr25519:sr25519Sign},TYPE_ADDRESS={ecdsa:et=>et.length>32?blake2AsU8a$2(et):et,ed25519:et=>et,ethereum:et=>et.length===20?et:keccakAsU8a$1(secp256k1Expand$2(et)),sr25519:et=>et};function isLocked(et){return!et||u8aEmpty(et)}function vrfHash(et,tt,ot){return blake2AsU8a$2(u8aConcat$3(tt||"",ot||"",et))}function createPair({toSS58:et,type:tt},{publicKey:ot,secretKey:dt},ft={},pt=null,mt){const ht=(xt,gt)=>{const wt=decodePair(xt,gt||pt,mt);if(wt.secretKey.length===64)ot=wt.publicKey,dt=wt.secretKey;else{const Pt=TYPE_FROM_SEED[tt](wt.secretKey);ot=Pt.publicKey,dt=Pt.secretKey}},bt=xt=>(isLocked(dt)&&pt&&ht(xt,pt),pt=encodePair({publicKey:ot,secretKey:dt},xt),mt=void 0,pt),yt=()=>{const xt=TYPE_ADDRESS[tt](ot);return tt==="ethereum"?ethereumEncode$1(xt):et(xt)};return{get address(){return yt()},get addressRaw(){const xt=TYPE_ADDRESS[tt](ot);return tt==="ethereum"?xt.slice(-20):xt},get isLocked(){return isLocked(dt)},get meta(){return ft},get publicKey(){return ot},get type(){return tt},decodePkcs8:ht,derive:(xt,gt)=>{if(tt==="ethereum")throw new Error("Unable to derive on this keypair");if(isLocked(dt))throw new Error("Cannot derive on a locked keypair");const{path:wt}=keyExtractPath(xt),Pt=keyFromPath({publicKey:ot,secretKey:dt},wt,tt);return createPair({toSS58:et,type:tt},Pt,gt,null)},encodePkcs8:xt=>bt(xt),lock:()=>{dt=new Uint8Array},setMeta:xt=>{ft=objectSpread$4({},ft,xt)},sign:(xt,gt={})=>{if(isLocked(dt))throw new Error("Cannot sign with a locked key pair");return u8aConcat$3(gt.withType?TYPE_PREFIX[tt]:SIG_TYPE_NONE,TYPE_SIGNATURE[tt](u8aToU8a$5(xt),{publicKey:ot,secretKey:dt}))},toJson:xt=>{const gt=["ecdsa","ethereum"].includes(tt)?ot.length===20?u8aToHex$5(ot):u8aToHex$5(secp256k1Compress(ot)):yt();return pairToJson(tt,{address:gt,meta:ft},bt(xt),!!xt)},unlock:xt=>ht(xt),verify:(xt,gt,wt)=>signatureVerify(xt,gt,TYPE_ADDRESS[tt](u8aToU8a$5(wt))).isValid,vrfSign:(xt,gt,wt)=>{if(isLocked(dt))throw new Error("Cannot sign with a locked key pair");if(tt==="sr25519")return sr25519VrfSign(xt,{secretKey:dt},gt,wt);const Pt=TYPE_SIGNATURE[tt](u8aToU8a$5(xt),{publicKey:ot,secretKey:dt});return u8aConcat$3(vrfHash(Pt,gt,wt),Pt)},vrfVerify:(xt,gt,wt,Pt,St)=>tt==="sr25519"?sr25519VrfVerify(xt,gt,ot,Pt,St):signatureVerify(xt,u8aConcat$3(TYPE_PREFIX[tt],gt.subarray(32)),TYPE_ADDRESS[tt](u8aToU8a$5(wt))).isValid&&u8aEq$2(gt.subarray(0,32),vrfHash(gt.subarray(32),Pt,St))}}const DEV_PHRASE="bottom drive obey lake curtain smoke basket hold race lonely fit walk";class Pairs{constructor(){Ot(this,"__internal__map",{})}add(tt){return this.__internal__map[decodeAddress$2(tt.address).toString()]=tt,tt}all(){return Object.values(this.__internal__map)}get(tt){const ot=this.__internal__map[decodeAddress$2(tt).toString()];if(!ot)throw new Error(`Unable to retrieve keypair '${isU8a$5(tt)||isHex$6(tt)?u8aToHex$5(u8aToU8a$5(tt)):tt}'`);return ot}remove(tt){delete this.__internal__map[decodeAddress$2(tt).toString()]}}const PairFromSeed={ecdsa:et=>secp256k1PairFromSeed(et),ed25519:et=>ed25519PairFromSeed(et),ethereum:et=>secp256k1PairFromSeed(et),sr25519:et=>sr25519PairFromSeed(et)};function pairToPublic({publicKey:et}){return et}class Keyring{constructor(tt={}){Ot(this,"__internal__pairs");Ot(this,"__internal__type");Ot(this,"__internal__ss58");Ot(this,"decodeAddress",decodeAddress$2);Ot(this,"encodeAddress",(tt,ot)=>this.type==="ethereum"?ethereumEncode$1(tt):encodeAddress$1(tt,ot??this.__internal__ss58));if(tt.type=tt.type||"ed25519",!["ecdsa","ethereum","ed25519","sr25519"].includes(tt.type||"undefined"))throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${tt.type||"unknown"}`);this.__internal__pairs=new Pairs,this.__internal__ss58=tt.ss58Format,this.__internal__type=tt.type}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return this.__internal__type}addPair(tt){return this.__internal__pairs.add(tt)}addFromAddress(tt,ot={},dt=null,ft=this.type,pt,mt){const ht=this.decodeAddress(tt,pt);return this.addPair(createPair({toSS58:this.encodeAddress,type:ft},{publicKey:ht,secretKey:new Uint8Array},ot,dt,mt))}addFromJson(tt,ot){return this.addPair(this.createFromJson(tt,ot))}addFromMnemonic(tt,ot={},dt=this.type,ft){return this.addFromUri(tt,ot,dt,ft)}addFromPair(tt,ot={},dt=this.type){return this.addPair(this.createFromPair(tt,ot,dt))}addFromSeed(tt,ot={},dt=this.type){return this.addPair(createPair({toSS58:this.encodeAddress,type:dt},PairFromSeed[dt](tt),ot,null))}addFromUri(tt,ot={},dt=this.type,ft){return this.addPair(this.createFromUri(tt,ot,dt,ft))}createFromJson({address:tt,encoded:ot,encoding:{content:dt,type:ft,version:pt},meta:mt},ht){if(pt==="3"&&dt[0]!=="pkcs8")throw new Error(`Unable to decode non-pkcs8 type, [${dt.join(",")}] found}`);const bt=pt==="0"||!Array.isArray(dt)?this.type:dt[1],yt=Array.isArray(ft)?ft:[ft];if(!["ed25519","sr25519","ecdsa","ethereum"].includes(bt))throw new Error(`Unknown crypto type ${bt}`);const xt=isHex$6(tt)?hexToU8a$6(tt):this.decodeAddress(tt,ht),gt=isHex$6(ot)?hexToU8a$6(ot):base64Decode$2(ot);return createPair({toSS58:this.encodeAddress,type:bt},{publicKey:xt,secretKey:new Uint8Array},mt,gt,yt)}createFromPair(tt,ot={},dt=this.type){return createPair({toSS58:this.encodeAddress,type:dt},tt,ot,null)}createFromUri(tt,ot={},dt=this.type,ft){const pt=tt.startsWith("//")?`${DEV_PHRASE}${tt}`:tt,{derivePath:mt,password:ht,path:bt,phrase:yt}=keyExtractSuri(pt);let xt;const gt=isHex$6(yt,256);if(gt)xt=hexToU8a$6(yt);else{const Pt=yt.split(" ");if([12,15,18,21,24].includes(Pt.length))xt=dt==="ethereum"?mnemonicToLegacySeed(yt,"",!1,64):mnemonicToMiniSecret(yt,ht,ft);else{if(yt.length>32)throw new Error("specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes");xt=stringToU8a$5(yt.padEnd(32))}}const wt=dt==="ethereum"?gt?PairFromSeed[dt](xt):hdEthereum(xt,mt.substring(1)):keyFromPath(PairFromSeed[dt](xt),bt,dt);return createPair({toSS58:this.encodeAddress,type:dt},wt,ot,null)}getPair(tt){return this.__internal__pairs.get(tt)}getPairs(){return this.__internal__pairs.all()}getPublicKeys(){return this.__internal__pairs.all().map(pairToPublic)}removePair(tt){this.__internal__pairs.remove(tt)}setSS58Format(tt){this.__internal__ss58=tt}toJson(tt,ot){return this.__internal__pairs.get(tt).toJson(ot)}}const UNKNOWN=-99999;function extend(et,tt,ot){Object.defineProperty(et,tt,{configurable:!0,enumerable:!1,value:ot})}class RpcError extends Error{constructor(ot="",dt=UNKNOWN,ft){super();Ot(this,"code");Ot(this,"data");Ot(this,"message");Ot(this,"name");Ot(this,"stack");if(extend(this,"message",String(ot)),extend(this,"name",this.constructor.name),extend(this,"data",ft),extend(this,"code",dt),isFunction$9(Error.captureStackTrace))Error.captureStackTrace(this,this.constructor);else{const{stack:pt}=new Error(ot);pt&&extend(this,"stack",pt)}}}Ot(RpcError,"CODES",{ASSERT:-90009,INVALID_JSONRPC:-99998,METHOD_NOT_FOUND:-32601,UNKNOWN});function formatErrorData(et){if(isUndefined$5(et))return"";const tt=`: ${isString$3(et)?et.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):stringify$4(et)}`;return tt.length<=256?tt:`${tt.substring(0,255)}…`}function checkError(et){if(et){const{code:tt,data:ot,message:dt}=et;throw new RpcError(`${tt}: ${dt}${formatErrorData(ot)}`,tt,ot)}}class RpcCoder{constructor(){Ot(this,"__internal__id",0)}decodeResponse(tt){if(!tt||tt.jsonrpc!=="2.0")throw new Error("Invalid jsonrpc field in decoded object");const ot=!isUndefined$5(tt.params)&&!isUndefined$5(tt.method);if(!isNumber$3(tt.id)&&(!ot||!isNumber$3(tt.params.subscription)&&!isString$3(tt.params.subscription)))throw new Error("Invalid id field in decoded object");if(checkError(tt.error),tt.result===void 0&&!ot)throw new Error("No result found in jsonrpc response");return ot?(checkError(tt.params.error),tt.params.result):tt.result}encodeJson(tt,ot){const[dt,ft]=this.encodeObject(tt,ot);return[dt,stringify$4(ft)]}encodeObject(tt,ot){const dt=++this.__internal__id;return[dt,{id:dt,jsonrpc:"2.0",method:tt,params:ot}]}}const HTTP_URL="http://127.0.0.1:9933",WS_URL$1="ws://127.0.0.1:9944",defaults$2={HTTP_URL,WS_URL:WS_URL$1},DEFAULT_CAPACITY$1=1024,DEFAULT_TTL$1=3e4;let LRUNode$1=class{constructor(tt,ot){Ot(this,"key");Ot(this,"__internal__expires");Ot(this,"__internal__ttl");Ot(this,"createdAt");Ot(this,"next");Ot(this,"prev");this.key=tt,this.__internal__ttl=ot,this.__internal__expires=Date.now()+ot,this.createdAt=Date.now(),this.next=this.prev=this}refresh(){this.__internal__expires=Date.now()+this.__internal__ttl}get expiry(){return this.__internal__expires}},LRUCache$1=class{constructor(tt=DEFAULT_CAPACITY$1,ot=DEFAULT_TTL$1){Ot(this,"capacity");Ot(this,"__internal__data",new Map);Ot(this,"__internal__refs",new Map);Ot(this,"__internal__length",0);Ot(this,"__internal__head");Ot(this,"__internal__tail");Ot(this,"__internal__ttl");this.capacity=tt,this.__internal__ttl=ot,this.__internal__head=this.__internal__tail=new LRUNode$1("<empty>",ot)}get ttl(){return this.__internal__ttl}get length(){return this.__internal__length}get lengthData(){return this.__internal__data.size}get lengthRefs(){return this.__internal__refs.size}entries(){const tt=this.keys(),ot=tt.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++){const pt=tt[ft];dt[ft]=[pt,this.__internal__data.get(pt)]}return dt}keys(){const tt=[];if(this.__internal__length){let ot=this.__internal__head;for(;ot!==this.__internal__tail;)tt.push(ot.key),ot=ot.next;tt.push(ot.key)}return tt}get(tt){const ot=this.__internal__data.get(tt);return ot?(this.__internal__toHead(tt),this.__internal__evictTTL(),ot):(this.__internal__evictTTL(),null)}set(tt,ot){if(this.__internal__data.has(tt))this.__internal__toHead(tt);else{const dt=new LRUNode$1(tt,this.__internal__ttl);this.__internal__refs.set(dt.key,dt),this.length===0?this.__internal__head=this.__internal__tail=dt:(this.__internal__head.prev=dt,dt.next=this.__internal__head,this.__internal__head=dt),this.__internal__length===this.capacity?(this.__internal__data.delete(this.__internal__tail.key),this.__internal__refs.delete(this.__internal__tail.key),this.__internal__tail=this.__internal__tail.prev,this.__internal__tail.next=this.__internal__head):this.__internal__length+=1}this.__internal__evictTTL(),this.__internal__data.set(tt,ot)}__internal__evictTTL(){for(;this.__internal__tail.expiry&&this.__internal__tail.expiry<Date.now()&&this.__internal__length>0;)this.__internal__refs.delete(this.__internal__tail.key),this.__internal__data.delete(this.__internal__tail.key),this.__internal__length-=1,this.__internal__tail=this.__internal__tail.prev,this.__internal__tail.next=this.__internal__head;this.__internal__length===0&&(this.__internal__head=this.__internal__tail=new LRUNode$1("<empty>",this.__internal__ttl))}__internal__toHead(tt){const ot=this.__internal__refs.get(tt);ot&&ot!==this.__internal__head&&(ot.refresh(),ot.prev.next=ot.next,ot.next.prev=ot.prev,ot.next=this.__internal__head,this.__internal__head.prev=ot,this.__internal__head=ot)}};var eventemitter3={exports:{}};(function(et){var tt=Object.prototype.hasOwnProperty,ot="~";function dt(){}Object.create&&(dt.prototype=Object.create(null),new dt().__proto__||(ot=!1));function ft(bt,yt,xt){this.fn=bt,this.context=yt,this.once=xt||!1}function pt(bt,yt,xt,gt,wt){if(typeof xt!="function")throw new TypeError("The listener must be a function");var Pt=new ft(xt,gt||bt,wt),St=ot?ot+yt:yt;return bt._events[St]?bt._events[St].fn?bt._events[St]=[bt._events[St],Pt]:bt._events[St].push(Pt):(bt._events[St]=Pt,bt._eventsCount++),bt}function mt(bt,yt){--bt._eventsCount===0?bt._events=new dt:delete bt._events[yt]}function ht(){this._events=new dt,this._eventsCount=0}ht.prototype.eventNames=function(){var yt=[],xt,gt;if(this._eventsCount===0)return yt;for(gt in xt=this._events)tt.call(xt,gt)&&yt.push(ot?gt.slice(1):gt);return Object.getOwnPropertySymbols?yt.concat(Object.getOwnPropertySymbols(xt)):yt},ht.prototype.listeners=function(yt){var xt=ot?ot+yt:yt,gt=this._events[xt];if(!gt)return[];if(gt.fn)return[gt.fn];for(var wt=0,Pt=gt.length,St=new Array(Pt);wt<Pt;wt++)St[wt]=gt[wt].fn;return St},ht.prototype.listenerCount=function(yt){var xt=ot?ot+yt:yt,gt=this._events[xt];return gt?gt.fn?1:gt.length:0},ht.prototype.emit=function(yt,xt,gt,wt,Pt,St){var Et=ot?ot+yt:yt;if(!this._events[Et])return!1;var Lt=this._events[Et],It=arguments.length,kt,Nt;if(Lt.fn){switch(Lt.once&&this.removeListener(yt,Lt.fn,void 0,!0),It){case 1:return Lt.fn.call(Lt.context),!0;case 2:return Lt.fn.call(Lt.context,xt),!0;case 3:return Lt.fn.call(Lt.context,xt,gt),!0;case 4:return Lt.fn.call(Lt.context,xt,gt,wt),!0;case 5:return Lt.fn.call(Lt.context,xt,gt,wt,Pt),!0;case 6:return Lt.fn.call(Lt.context,xt,gt,wt,Pt,St),!0}for(Nt=1,kt=new Array(It-1);Nt<It;Nt++)kt[Nt-1]=arguments[Nt];Lt.fn.apply(Lt.context,kt)}else{var Ut=Lt.length,Ft;for(Nt=0;Nt<Ut;Nt++)switch(Lt[Nt].once&&this.removeListener(yt,Lt[Nt].fn,void 0,!0),It){case 1:Lt[Nt].fn.call(Lt[Nt].context);break;case 2:Lt[Nt].fn.call(Lt[Nt].context,xt);break;case 3:Lt[Nt].fn.call(Lt[Nt].context,xt,gt);break;case 4:Lt[Nt].fn.call(Lt[Nt].context,xt,gt,wt);break;default:if(!kt)for(Ft=1,kt=new Array(It-1);Ft<It;Ft++)kt[Ft-1]=arguments[Ft];Lt[Nt].fn.apply(Lt[Nt].context,kt)}}return!0},ht.prototype.on=function(yt,xt,gt){return pt(this,yt,xt,gt,!1)},ht.prototype.once=function(yt,xt,gt){return pt(this,yt,xt,gt,!0)},ht.prototype.removeListener=function(yt,xt,gt,wt){var Pt=ot?ot+yt:yt;if(!this._events[Pt])return this;if(!xt)return mt(this,Pt),this;var St=this._events[Pt];if(St.fn)St.fn===xt&&(!wt||St.once)&&(!gt||St.context===gt)&&mt(this,Pt);else{for(var Et=0,Lt=[],It=St.length;Et<It;Et++)(St[Et].fn!==xt||wt&&!St[Et].once||gt&&St[Et].context!==gt)&&Lt.push(St[Et]);Lt.length?this._events[Pt]=Lt.length===1?Lt[0]:Lt:mt(this,Pt)}return this},ht.prototype.removeAllListeners=function(yt){var xt;return yt?(xt=ot?ot+yt:yt,this._events[xt]&&mt(this,xt)):(this._events=new dt,this._eventsCount=0),this},ht.prototype.off=ht.prototype.removeListener,ht.prototype.addListener=ht.prototype.on,ht.prefixed=ot,ht.EventEmitter=ht,et.exports=ht})(eventemitter3);var eventemitter3Exports=eventemitter3.exports;const EventEmitter=getDefaultExportFromCjs(eventemitter3Exports),WebSocket=xglobal$5.WebSocket,known={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};function getWSErrorString(et){if(et>=0&&et<=999)return"(Unused)";if(et>=1016){if(et<=1999)return"(For WebSocket standard)";if(et<=2999)return"(For WebSocket extensions)";if(et<=3999)return"(For libraries and frameworks)";if(et<=4999)return"(For applications)"}return known[et]||"(Unknown)"}const ALIASES={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},RETRY_DELAY=2500,DEFAULT_TIMEOUT_MS=60*1e3,TIMEOUT_INTERVAL=5e3,l$d=logger$2("api-ws");function eraseRecord(et,tt){Object.keys(et).forEach(ot=>{tt&&tt(et[ot]),delete et[ot]})}function defaultEndpointStats(){return{bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}}class WsProvider{constructor(tt=defaults$2.WS_URL,ot=RETRY_DELAY,dt={},ft,pt,mt){Ot(this,"__internal__callCache");Ot(this,"__internal__coder");Ot(this,"__internal__endpoints");Ot(this,"__internal__headers");Ot(this,"__internal__eventemitter");Ot(this,"__internal__handlers",{});Ot(this,"__internal__isReadyPromise");Ot(this,"__internal__stats");Ot(this,"__internal__waitingForId",{});Ot(this,"__internal__cacheCapacity");Ot(this,"__internal__autoConnectMs");Ot(this,"__internal__endpointIndex");Ot(this,"__internal__endpointStats");Ot(this,"__internal__isConnected",!1);Ot(this,"__internal__subscriptions",{});Ot(this,"__internal__timeoutId",null);Ot(this,"__internal__websocket");Ot(this,"__internal__timeout");Ot(this,"__internal__emit",(tt,...ot)=>{this.__internal__eventemitter.emit(tt,...ot)});Ot(this,"__internal__onSocketClose",tt=>{const ot=new Error(`disconnected from ${this.endpoint}: ${tt.code}:: ${tt.reason||getWSErrorString(tt.code)}`);this.__internal__autoConnectMs>0&&l$d.error(ot.message),this.__internal__isConnected=!1,this.__internal__websocket&&(this.__internal__websocket.onclose=null,this.__internal__websocket.onerror=null,this.__internal__websocket.onmessage=null,this.__internal__websocket.onopen=null,this.__internal__websocket=null),this.__internal__timeoutId&&(clearInterval(this.__internal__timeoutId),this.__internal__timeoutId=null),eraseRecord(this.__internal__handlers,dt=>{try{dt.callback(ot,void 0)}catch(ft){l$d.error(ft)}}),eraseRecord(this.__internal__waitingForId),this.__internal__endpointStats=defaultEndpointStats(),this.__internal__emit("disconnected"),this.__internal__autoConnectMs>0&&setTimeout(()=>{this.connectWithRetry().catch(noop$3)},this.__internal__autoConnectMs)});Ot(this,"__internal__onSocketError",tt=>{l$d.debug(()=>["socket error",tt]),this.__internal__emit("error",tt)});Ot(this,"__internal__onSocketMessage",tt=>{l$d.debug(()=>["received",tt.data]);const ot=tt.data.length;this.__internal__endpointStats.bytesRecv+=ot,this.__internal__stats.total.bytesRecv+=ot;const dt=JSON.parse(tt.data);return isUndefined$5(dt.method)?this.__internal__onSocketMessageResult(dt):this.__internal__onSocketMessageSubscribe(dt)});Ot(this,"__internal__onSocketMessageResult",tt=>{const ot=this.__internal__handlers[tt.id];if(!ot){l$d.debug(()=>`Unable to find handler for id=${tt.id}`);return}try{const{method:dt,params:ft,subscription:pt}=ot,mt=this.__internal__coder.decodeResponse(tt);if(ot.callback(null,mt),pt){const ht=`${pt.type}::${mt}`;this.__internal__subscriptions[ht]=objectSpread$4({},pt,{method:dt,params:ft}),this.__internal__waitingForId[ht]&&this.__internal__onSocketMessageSubscribe(this.__internal__waitingForId[ht])}}catch(dt){this.__internal__endpointStats.errors++,this.__internal__stats.total.errors++,ot.callback(dt,void 0)}delete this.__internal__handlers[tt.id]});Ot(this,"__internal__onSocketMessageSubscribe",tt=>{if(!tt.method)throw new Error("No method found in JSONRPC response");const dt=`${ALIASES[tt.method]||tt.method}::${tt.params.subscription}`,ft=this.__internal__subscriptions[dt];if(!ft){this.__internal__waitingForId[dt]=tt,l$d.debug(()=>`Unable to find handler for subscription=${dt}`);return}delete this.__internal__waitingForId[dt];try{const pt=this.__internal__coder.decodeResponse(tt);ft.callback(null,pt)}catch(pt){this.__internal__endpointStats.errors++,this.__internal__stats.total.errors++,ft.callback(pt,void 0)}});Ot(this,"__internal__onSocketOpen",()=>{if(this.__internal__websocket===null)throw new Error("WebSocket cannot be null in onOpen");return l$d.debug(()=>["connected to",this.endpoint]),this.__internal__isConnected=!0,this.__internal__resubscribe(),this.__internal__emit("connected"),!0});Ot(this,"__internal__resubscribe",()=>{const tt=this.__internal__subscriptions;this.__internal__subscriptions={},Promise.all(Object.keys(tt).map(async ot=>{const{callback:dt,method:ft,params:pt,type:mt}=tt[ot];if(!mt.startsWith("author_"))try{await this.subscribe(mt,ft,pt,dt)}catch(ht){l$d.error(ht)}})).catch(l$d.error)});Ot(this,"__internal__timeoutHandlers",()=>{const tt=Date.now(),ot=Object.keys(this.__internal__handlers);for(let dt=0,ft=ot.length;dt<ft;dt++){const pt=this.__internal__handlers[ot[dt]];if(tt-pt.start>this.__internal__timeout){try{pt.callback(new Error(`No response received from RPC endpoint in ${this.__internal__timeout/1e3}s`),void 0)}catch{}this.__internal__endpointStats.timeout++,this.__internal__stats.total.timeout++,delete this.__internal__handlers[ot[dt]]}}});const ht=Array.isArray(tt)?tt:[tt];if(ht.length===0)throw new Error("WsProvider requires at least one Endpoint");ht.forEach(bt=>{if(!/^(wss|ws):\/\//.test(bt))throw new Error(`Endpoint should start with 'ws://', received '${bt}'`)}),this.__internal__callCache=new LRUCache$1(pt||DEFAULT_CAPACITY$1,mt||DEFAULT_TTL$1),this.__internal__cacheCapacity=pt||DEFAULT_CAPACITY$1,this.__internal__eventemitter=new EventEmitter,this.__internal__autoConnectMs=ot||0,this.__internal__coder=new RpcCoder,this.__internal__endpointIndex=-1,this.__internal__endpoints=ht,this.__internal__headers=dt,this.__internal__websocket=null,this.__internal__stats={active:{requests:0,subscriptions:0},total:defaultEndpointStats()},this.__internal__endpointStats=defaultEndpointStats(),this.__internal__timeout=ft||DEFAULT_TIMEOUT_MS,ot&&ot>0&&this.connectWithRetry().catch(noop$3),this.__internal__isReadyPromise=new Promise(bt=>{this.__internal__eventemitter.once("connected",()=>{bt(this)})})}get hasSubscriptions(){return!0}get isClonable(){return!0}get isConnected(){return this.__internal__isConnected}get isReady(){return this.__internal__isReadyPromise}get endpoint(){return this.__internal__endpoints[this.__internal__endpointIndex]}clone(){return new WsProvider(this.__internal__endpoints)}selectEndpointIndex(tt){return(this.__internal__endpointIndex+1)%tt.length}async connect(){if(this.__internal__websocket)throw new Error("WebSocket is already connected");try{this.__internal__endpointIndex=this.selectEndpointIndex(this.__internal__endpoints),this.__internal__websocket=typeof xglobal$5.WebSocket<"u"&&isChildClass(xglobal$5.WebSocket,WebSocket)?new WebSocket(this.endpoint):new WebSocket(this.endpoint,void 0,{headers:this.__internal__headers}),this.__internal__websocket&&(this.__internal__websocket.onclose=this.__internal__onSocketClose,this.__internal__websocket.onerror=this.__internal__onSocketError,this.__internal__websocket.onmessage=this.__internal__onSocketMessage,this.__internal__websocket.onopen=this.__internal__onSocketOpen),this.__internal__timeoutId=setInterval(()=>this.__internal__timeoutHandlers(),TIMEOUT_INTERVAL)}catch(tt){throw l$d.error(tt),this.__internal__emit("error",tt),tt}}async connectWithRetry(){if(this.__internal__autoConnectMs>0)try{await this.connect()}catch{setTimeout(()=>{this.connectWithRetry().catch(noop$3)},this.__internal__autoConnectMs)}}async disconnect(){this.__internal__autoConnectMs=0;try{this.__internal__websocket&&this.__internal__websocket.close(1e3)}catch(tt){throw l$d.error(tt),this.__internal__emit("error",tt),tt}}get stats(){return{active:{requests:Object.keys(this.__internal__handlers).length,subscriptions:Object.keys(this.__internal__subscriptions).length},total:this.__internal__stats.total}}get endpointStats(){return this.__internal__endpointStats}on(tt,ot){return this.__internal__eventemitter.on(tt,ot),()=>{this.__internal__eventemitter.removeListener(tt,ot)}}send(tt,ot,dt,ft){this.__internal__endpointStats.requests++,this.__internal__stats.total.requests++;const[pt,mt]=this.__internal__coder.encodeJson(tt,ot);if(this.__internal__cacheCapacity===0)return this.__internal__send(pt,mt,tt,ot,ft);const ht=dt?`${tt}::${stringify$4(ot)}`:"";let bt=dt?this.__internal__callCache.get(ht):null;return bt?(this.__internal__endpointStats.cached++,this.__internal__stats.total.cached++):(bt=this.__internal__send(pt,mt,tt,ot,ft),dt&&this.__internal__callCache.set(ht,bt)),bt}async __internal__send(tt,ot,dt,ft,pt){return new Promise((mt,ht)=>{try{if(!this.isConnected||this.__internal__websocket===null)throw new Error("WebSocket is not connected");const bt=(xt,gt)=>{xt?ht(xt):mt(gt)};l$d.debug(()=>["calling",dt,ot]),this.__internal__handlers[tt]={callback:bt,method:dt,params:ft,start:Date.now(),subscription:pt};const yt=ot.length;this.__internal__endpointStats.bytesSent+=yt,this.__internal__stats.total.bytesSent+=yt,this.__internal__websocket.send(ot)}catch(bt){this.__internal__endpointStats.errors++,this.__internal__stats.total.errors++;const yt=bt,xt=`
Failed WS Request: ${JSON.stringify({method:dt,params:ft})}`;yt.message=`${yt.message}${xt}`,ht(yt)}})}subscribe(tt,ot,dt,ft){return this.__internal__endpointStats.subscriptions++,this.__internal__stats.total.subscriptions++,this.send(ot,dt,!1,{callback:ft,type:tt})}async unsubscribe(tt,ot,dt){const ft=`${tt}::${dt}`;if(isUndefined$5(this.__internal__subscriptions[ft]))return l$d.debug(()=>`Unable to find active subscription=${ft}`),!1;delete this.__internal__subscriptions[ft];try{return this.isConnected&&!isNull$2(this.__internal__websocket)?this.send(ot,[dt]):!0}catch{return!1}}}var extendStatics=function(et,tt){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(ot,dt){ot.__proto__=dt}||function(ot,dt){for(var ft in dt)Object.prototype.hasOwnProperty.call(dt,ft)&&(ot[ft]=dt[ft])},extendStatics(et,tt)};function __extends(et,tt){if(typeof tt!="function"&&tt!==null)throw new TypeError("Class extends value "+String(tt)+" is not a constructor or null");extendStatics(et,tt);function ot(){this.constructor=et}et.prototype=tt===null?Object.create(tt):(ot.prototype=tt.prototype,new ot)}function __awaiter(et,tt,ot,dt){function ft(pt){return pt instanceof ot?pt:new ot(function(mt){mt(pt)})}return new(ot||(ot=Promise))(function(pt,mt){function ht(xt){try{yt(dt.next(xt))}catch(gt){mt(gt)}}function bt(xt){try{yt(dt.throw(xt))}catch(gt){mt(gt)}}function yt(xt){xt.done?pt(xt.value):ft(xt.value).then(ht,bt)}yt((dt=dt.apply(et,tt||[])).next())})}function __generator(et,tt){var ot={label:0,sent:function(){if(pt[0]&1)throw pt[1];return pt[1]},trys:[],ops:[]},dt,ft,pt,mt;return mt={next:ht(0),throw:ht(1),return:ht(2)},typeof Symbol=="function"&&(mt[Symbol.iterator]=function(){return this}),mt;function ht(yt){return function(xt){return bt([yt,xt])}}function bt(yt){if(dt)throw new TypeError("Generator is already executing.");for(;mt&&(mt=0,yt[0]&&(ot=0)),ot;)try{if(dt=1,ft&&(pt=yt[0]&2?ft.return:yt[0]?ft.throw||((pt=ft.return)&&pt.call(ft),0):ft.next)&&!(pt=pt.call(ft,yt[1])).done)return pt;switch(ft=0,pt&&(yt=[yt[0]&2,pt.value]),yt[0]){case 0:case 1:pt=yt;break;case 4:return ot.label++,{value:yt[1],done:!1};case 5:ot.label++,ft=yt[1],yt=[0];continue;case 7:yt=ot.ops.pop(),ot.trys.pop();continue;default:if(pt=ot.trys,!(pt=pt.length>0&&pt[pt.length-1])&&(yt[0]===6||yt[0]===2)){ot=0;continue}if(yt[0]===3&&(!pt||yt[1]>pt[0]&&yt[1]<pt[3])){ot.label=yt[1];break}if(yt[0]===6&&ot.label<pt[1]){ot.label=pt[1],pt=yt;break}if(pt&&ot.label<pt[2]){ot.label=pt[2],ot.ops.push(yt);break}pt[2]&&ot.ops.pop(),ot.trys.pop();continue}yt=tt.call(et,ot)}catch(xt){yt=[6,xt],ft=0}finally{dt=pt=0}if(yt[0]&5)throw yt[1];return{value:yt[0]?yt[1]:void 0,done:!0}}}function __values(et){var tt=typeof Symbol=="function"&&Symbol.iterator,ot=tt&&et[tt],dt=0;if(ot)return ot.call(et);if(et&&typeof et.length=="number")return{next:function(){return et&&dt>=et.length&&(et=void 0),{value:et&&et[dt++],done:!et}}};throw new TypeError(tt?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(et,tt){var ot=typeof Symbol=="function"&&et[Symbol.iterator];if(!ot)return et;var dt=ot.call(et),ft,pt=[],mt;try{for(;(tt===void 0||tt-- >0)&&!(ft=dt.next()).done;)pt.push(ft.value)}catch(ht){mt={error:ht}}finally{try{ft&&!ft.done&&(ot=dt.return)&&ot.call(dt)}finally{if(mt)throw mt.error}}return pt}function __spreadArray$1(et,tt,ot){if(ot||arguments.length===2)for(var dt=0,ft=tt.length,pt;dt<ft;dt++)(pt||!(dt in tt))&&(pt||(pt=Array.prototype.slice.call(tt,0,dt)),pt[dt]=tt[dt]);return et.concat(pt||Array.prototype.slice.call(tt))}function __await(et){return this instanceof __await?(this.v=et,this):new __await(et)}function __asyncGenerator(et,tt,ot){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var dt=ot.apply(et,tt||[]),ft,pt=[];return ft={},mt("next"),mt("throw"),mt("return"),ft[Symbol.asyncIterator]=function(){return this},ft;function mt(wt){dt[wt]&&(ft[wt]=function(Pt){return new Promise(function(St,Et){pt.push([wt,Pt,St,Et])>1||ht(wt,Pt)})})}function ht(wt,Pt){try{bt(dt[wt](Pt))}catch(St){gt(pt[0][3],St)}}function bt(wt){wt.value instanceof __await?Promise.resolve(wt.value.v).then(yt,xt):gt(pt[0][2],wt)}function yt(wt){ht("next",wt)}function xt(wt){ht("throw",wt)}function gt(wt,Pt){wt(Pt),pt.shift(),pt.length&&ht(pt[0][0],pt[0][1])}}function __asyncValues(et){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var tt=et[Symbol.asyncIterator],ot;return tt?tt.call(et):(et=typeof __values=="function"?__values(et):et[Symbol.iterator](),ot={},dt("next"),dt("throw"),dt("return"),ot[Symbol.asyncIterator]=function(){return this},ot);function dt(pt){ot[pt]=et[pt]&&function(mt){return new Promise(function(ht,bt){mt=et[pt](mt),ft(ht,bt,mt.done,mt.value)})}}function ft(pt,mt,ht,bt){Promise.resolve(bt).then(function(yt){pt({value:yt,done:ht})},mt)}}typeof SuppressedError=="function"&&SuppressedError;function isFunction$8(et){return typeof et=="function"}function createErrorClass(et){var tt=function(dt){Error.call(dt),dt.stack=new Error().stack},ot=et(tt);return ot.prototype=Object.create(Error.prototype),ot.prototype.constructor=ot,ot}var UnsubscriptionError=createErrorClass(function(et){return function(ot){et(this),this.message=ot?ot.length+` errors occurred during unsubscription:
`+ot.map(function(dt,ft){return ft+1+") "+dt.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=ot}});function arrRemove(et,tt){if(et){var ot=et.indexOf(tt);0<=ot&&et.splice(ot,1)}}var Subscription=function(){function et(tt){this.initialTeardown=tt,this.closed=!1,this._parentage=null,this._finalizers=null}return et.prototype.unsubscribe=function(){var tt,ot,dt,ft,pt;if(!this.closed){this.closed=!0;var mt=this._parentage;if(mt)if(this._parentage=null,Array.isArray(mt))try{for(var ht=__values(mt),bt=ht.next();!bt.done;bt=ht.next()){var yt=bt.value;yt.remove(this)}}catch(Et){tt={error:Et}}finally{try{bt&&!bt.done&&(ot=ht.return)&&ot.call(ht)}finally{if(tt)throw tt.error}}else mt.remove(this);var xt=this.initialTeardown;if(isFunction$8(xt))try{xt()}catch(Et){pt=Et instanceof UnsubscriptionError?Et.errors:[Et]}var gt=this._finalizers;if(gt){this._finalizers=null;try{for(var wt=__values(gt),Pt=wt.next();!Pt.done;Pt=wt.next()){var St=Pt.value;try{execFinalizer(St)}catch(Et){pt=pt??[],Et instanceof UnsubscriptionError?pt=__spreadArray$1(__spreadArray$1([],__read(pt)),__read(Et.errors)):pt.push(Et)}}}catch(Et){dt={error:Et}}finally{try{Pt&&!Pt.done&&(ft=wt.return)&&ft.call(wt)}finally{if(dt)throw dt.error}}}if(pt)throw new UnsubscriptionError(pt)}},et.prototype.add=function(tt){var ot;if(tt&&tt!==this)if(this.closed)execFinalizer(tt);else{if(tt instanceof et){if(tt.closed||tt._hasParent(this))return;tt._addParent(this)}(this._finalizers=(ot=this._finalizers)!==null&&ot!==void 0?ot:[]).push(tt)}},et.prototype._hasParent=function(tt){var ot=this._parentage;return ot===tt||Array.isArray(ot)&&ot.includes(tt)},et.prototype._addParent=function(tt){var ot=this._parentage;this._parentage=Array.isArray(ot)?(ot.push(tt),ot):ot?[ot,tt]:tt},et.prototype._removeParent=function(tt){var ot=this._parentage;ot===tt?this._parentage=null:Array.isArray(ot)&&arrRemove(ot,tt)},et.prototype.remove=function(tt){var ot=this._finalizers;ot&&arrRemove(ot,tt),tt instanceof et&&tt._removeParent(this)},et.EMPTY=function(){var tt=new et;return tt.closed=!0,tt}(),et}(),EMPTY_SUBSCRIPTION=Subscription.EMPTY;function isSubscription(et){return et instanceof Subscription||et&&"closed"in et&&isFunction$8(et.remove)&&isFunction$8(et.add)&&isFunction$8(et.unsubscribe)}function execFinalizer(et){isFunction$8(et)?et():et.unsubscribe()}var config$2={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},timeoutProvider={setTimeout:function(et,tt){for(var ot=[],dt=2;dt<arguments.length;dt++)ot[dt-2]=arguments[dt];return setTimeout.apply(void 0,__spreadArray$1([et,tt],__read(ot)))},clearTimeout:function(et){var tt=timeoutProvider.delegate;return((tt==null?void 0:tt.clearTimeout)||clearTimeout)(et)},delegate:void 0};function reportUnhandledError(et){timeoutProvider.setTimeout(function(){throw et})}function noop$2(){}function errorContext(et){et()}var Subscriber=function(et){__extends(tt,et);function tt(ot){var dt=et.call(this)||this;return dt.isStopped=!1,ot?(dt.destination=ot,isSubscription(ot)&&ot.add(dt)):dt.destination=EMPTY_OBSERVER,dt}return tt.create=function(ot,dt,ft){return new SafeSubscriber(ot,dt,ft)},tt.prototype.next=function(ot){this.isStopped||this._next(ot)},tt.prototype.error=function(ot){this.isStopped||(this.isStopped=!0,this._error(ot))},tt.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},tt.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,et.prototype.unsubscribe.call(this),this.destination=null)},tt.prototype._next=function(ot){this.destination.next(ot)},tt.prototype._error=function(ot){try{this.destination.error(ot)}finally{this.unsubscribe()}},tt.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},tt}(Subscription),_bind=Function.prototype.bind;function bind$2(et,tt){return _bind.call(et,tt)}var ConsumerObserver=function(){function et(tt){this.partialObserver=tt}return et.prototype.next=function(tt){var ot=this.partialObserver;if(ot.next)try{ot.next(tt)}catch(dt){handleUnhandledError(dt)}},et.prototype.error=function(tt){var ot=this.partialObserver;if(ot.error)try{ot.error(tt)}catch(dt){handleUnhandledError(dt)}else handleUnhandledError(tt)},et.prototype.complete=function(){var tt=this.partialObserver;if(tt.complete)try{tt.complete()}catch(ot){handleUnhandledError(ot)}},et}(),SafeSubscriber=function(et){__extends(tt,et);function tt(ot,dt,ft){var pt=et.call(this)||this,mt;if(isFunction$8(ot)||!ot)mt={next:ot??void 0,error:dt??void 0,complete:ft??void 0};else{var ht;pt&&config$2.useDeprecatedNextContext?(ht=Object.create(ot),ht.unsubscribe=function(){return pt.unsubscribe()},mt={next:ot.next&&bind$2(ot.next,ht),error:ot.error&&bind$2(ot.error,ht),complete:ot.complete&&bind$2(ot.complete,ht)}):mt=ot}return pt.destination=new ConsumerObserver(mt),pt}return tt}(Subscriber);function handleUnhandledError(et){reportUnhandledError(et)}function defaultErrorHandler(et){throw et}var EMPTY_OBSERVER={closed:!0,next:noop$2,error:defaultErrorHandler,complete:noop$2},observable=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function identity$2(et){return et}function pipeFromArray(et){return et.length===0?identity$2:et.length===1?et[0]:function(ot){return et.reduce(function(dt,ft){return ft(dt)},ot)}}var Observable=function(){function et(tt){tt&&(this._subscribe=tt)}return et.prototype.lift=function(tt){var ot=new et;return ot.source=this,ot.operator=tt,ot},et.prototype.subscribe=function(tt,ot,dt){var ft=this,pt=isSubscriber(tt)?tt:new SafeSubscriber(tt,ot,dt);return errorContext(function(){var mt=ft,ht=mt.operator,bt=mt.source;pt.add(ht?ht.call(pt,bt):bt?ft._subscribe(pt):ft._trySubscribe(pt))}),pt},et.prototype._trySubscribe=function(tt){try{return this._subscribe(tt)}catch(ot){tt.error(ot)}},et.prototype.forEach=function(tt,ot){var dt=this;return ot=getPromiseCtor(ot),new ot(function(ft,pt){var mt=new SafeSubscriber({next:function(ht){try{tt(ht)}catch(bt){pt(bt),mt.unsubscribe()}},error:pt,complete:ft});dt.subscribe(mt)})},et.prototype._subscribe=function(tt){var ot;return(ot=this.source)===null||ot===void 0?void 0:ot.subscribe(tt)},et.prototype[observable]=function(){return this},et.prototype.pipe=function(){for(var tt=[],ot=0;ot<arguments.length;ot++)tt[ot]=arguments[ot];return pipeFromArray(tt)(this)},et.prototype.toPromise=function(tt){var ot=this;return tt=getPromiseCtor(tt),new tt(function(dt,ft){var pt;ot.subscribe(function(mt){return pt=mt},function(mt){return ft(mt)},function(){return dt(pt)})})},et.create=function(tt){return new et(tt)},et}();function getPromiseCtor(et){var tt;return(tt=et??config$2.Promise)!==null&&tt!==void 0?tt:Promise}function isObserver(et){return et&&isFunction$8(et.next)&&isFunction$8(et.error)&&isFunction$8(et.complete)}function isSubscriber(et){return et&&et instanceof Subscriber||isObserver(et)&&isSubscription(et)}function hasLift(et){return isFunction$8(et==null?void 0:et.lift)}function operate(et){return function(tt){if(hasLift(tt))return tt.lift(function(ot){try{return et(ot,this)}catch(dt){this.error(dt)}});throw new TypeError("Unable to lift unknown Observable type")}}function createOperatorSubscriber(et,tt,ot,dt,ft){return new OperatorSubscriber(et,tt,ot,dt,ft)}var OperatorSubscriber=function(et){__extends(tt,et);function tt(ot,dt,ft,pt,mt,ht){var bt=et.call(this,ot)||this;return bt.onFinalize=mt,bt.shouldUnsubscribe=ht,bt._next=dt?function(yt){try{dt(yt)}catch(xt){ot.error(xt)}}:et.prototype._next,bt._error=pt?function(yt){try{pt(yt)}catch(xt){ot.error(xt)}finally{this.unsubscribe()}}:et.prototype._error,bt._complete=ft?function(){try{ft()}catch(yt){ot.error(yt)}finally{this.unsubscribe()}}:et.prototype._complete,bt}return tt.prototype.unsubscribe=function(){var ot;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var dt=this.closed;et.prototype.unsubscribe.call(this),!dt&&((ot=this.onFinalize)===null||ot===void 0||ot.call(this))}},tt}(Subscriber);function refCount(){return operate(function(et,tt){var ot=null;et._refCount++;var dt=createOperatorSubscriber(tt,void 0,void 0,void 0,function(){if(!et||et._refCount<=0||0<--et._refCount){ot=null;return}var ft=et._connection,pt=ot;ot=null,ft&&(!pt||ft===pt)&&ft.unsubscribe(),tt.unsubscribe()});et.subscribe(dt),dt.closed||(ot=et.connect())})}var ConnectableObservable=function(et){__extends(tt,et);function tt(ot,dt){var ft=et.call(this)||this;return ft.source=ot,ft.subjectFactory=dt,ft._subject=null,ft._refCount=0,ft._connection=null,hasLift(ot)&&(ft.lift=ot.lift),ft}return tt.prototype._subscribe=function(ot){return this.getSubject().subscribe(ot)},tt.prototype.getSubject=function(){var ot=this._subject;return(!ot||ot.isStopped)&&(this._subject=this.subjectFactory()),this._subject},tt.prototype._teardown=function(){this._refCount=0;var ot=this._connection;this._subject=this._connection=null,ot==null||ot.unsubscribe()},tt.prototype.connect=function(){var ot=this,dt=this._connection;if(!dt){dt=this._connection=new Subscription;var ft=this.getSubject();dt.add(this.source.subscribe(createOperatorSubscriber(ft,void 0,function(){ot._teardown(),ft.complete()},function(pt){ot._teardown(),ft.error(pt)},function(){return ot._teardown()}))),dt.closed&&(this._connection=null,dt=Subscription.EMPTY)}return dt},tt.prototype.refCount=function(){return refCount()(this)},tt}(Observable),ObjectUnsubscribedError=createErrorClass(function(et){return function(){et(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),Subject=function(et){__extends(tt,et);function tt(){var ot=et.call(this)||this;return ot.closed=!1,ot.currentObservers=null,ot.observers=[],ot.isStopped=!1,ot.hasError=!1,ot.thrownError=null,ot}return tt.prototype.lift=function(ot){var dt=new AnonymousSubject(this,this);return dt.operator=ot,dt},tt.prototype._throwIfClosed=function(){if(this.closed)throw new ObjectUnsubscribedError},tt.prototype.next=function(ot){var dt=this;errorContext(function(){var ft,pt;if(dt._throwIfClosed(),!dt.isStopped){dt.currentObservers||(dt.currentObservers=Array.from(dt.observers));try{for(var mt=__values(dt.currentObservers),ht=mt.next();!ht.done;ht=mt.next()){var bt=ht.value;bt.next(ot)}}catch(yt){ft={error:yt}}finally{try{ht&&!ht.done&&(pt=mt.return)&&pt.call(mt)}finally{if(ft)throw ft.error}}}})},tt.prototype.error=function(ot){var dt=this;errorContext(function(){if(dt._throwIfClosed(),!dt.isStopped){dt.hasError=dt.isStopped=!0,dt.thrownError=ot;for(var ft=dt.observers;ft.length;)ft.shift().error(ot)}})},tt.prototype.complete=function(){var ot=this;errorContext(function(){if(ot._throwIfClosed(),!ot.isStopped){ot.isStopped=!0;for(var dt=ot.observers;dt.length;)dt.shift().complete()}})},tt.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(tt.prototype,"observed",{get:function(){var ot;return((ot=this.observers)===null||ot===void 0?void 0:ot.length)>0},enumerable:!1,configurable:!0}),tt.prototype._trySubscribe=function(ot){return this._throwIfClosed(),et.prototype._trySubscribe.call(this,ot)},tt.prototype._subscribe=function(ot){return this._throwIfClosed(),this._checkFinalizedStatuses(ot),this._innerSubscribe(ot)},tt.prototype._innerSubscribe=function(ot){var dt=this,ft=this,pt=ft.hasError,mt=ft.isStopped,ht=ft.observers;return pt||mt?EMPTY_SUBSCRIPTION:(this.currentObservers=null,ht.push(ot),new Subscription(function(){dt.currentObservers=null,arrRemove(ht,ot)}))},tt.prototype._checkFinalizedStatuses=function(ot){var dt=this,ft=dt.hasError,pt=dt.thrownError,mt=dt.isStopped;ft?ot.error(pt):mt&&ot.complete()},tt.prototype.asObservable=function(){var ot=new Observable;return ot.source=this,ot},tt.create=function(ot,dt){return new AnonymousSubject(ot,dt)},tt}(Observable),AnonymousSubject=function(et){__extends(tt,et);function tt(ot,dt){var ft=et.call(this)||this;return ft.destination=ot,ft.source=dt,ft}return tt.prototype.next=function(ot){var dt,ft;(ft=(dt=this.destination)===null||dt===void 0?void 0:dt.next)===null||ft===void 0||ft.call(dt,ot)},tt.prototype.error=function(ot){var dt,ft;(ft=(dt=this.destination)===null||dt===void 0?void 0:dt.error)===null||ft===void 0||ft.call(dt,ot)},tt.prototype.complete=function(){var ot,dt;(dt=(ot=this.destination)===null||ot===void 0?void 0:ot.complete)===null||dt===void 0||dt.call(ot)},tt.prototype._subscribe=function(ot){var dt,ft;return(ft=(dt=this.source)===null||dt===void 0?void 0:dt.subscribe(ot))!==null&&ft!==void 0?ft:EMPTY_SUBSCRIPTION},tt}(Subject),BehaviorSubject=function(et){__extends(tt,et);function tt(ot){var dt=et.call(this)||this;return dt._value=ot,dt}return Object.defineProperty(tt.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),tt.prototype._subscribe=function(ot){var dt=et.prototype._subscribe.call(this,ot);return!dt.closed&&ot.next(this._value),dt},tt.prototype.getValue=function(){var ot=this,dt=ot.hasError,ft=ot.thrownError,pt=ot._value;if(dt)throw ft;return this._throwIfClosed(),pt},tt.prototype.next=function(ot){et.prototype.next.call(this,this._value=ot)},tt}(Subject),dateTimestampProvider={now:function(){return(dateTimestampProvider.delegate||Date).now()},delegate:void 0},ReplaySubject=function(et){__extends(tt,et);function tt(ot,dt,ft){ot===void 0&&(ot=1/0),dt===void 0&&(dt=1/0),ft===void 0&&(ft=dateTimestampProvider);var pt=et.call(this)||this;return pt._bufferSize=ot,pt._windowTime=dt,pt._timestampProvider=ft,pt._buffer=[],pt._infiniteTimeWindow=!0,pt._infiniteTimeWindow=dt===1/0,pt._bufferSize=Math.max(1,ot),pt._windowTime=Math.max(1,dt),pt}return tt.prototype.next=function(ot){var dt=this,ft=dt.isStopped,pt=dt._buffer,mt=dt._infiniteTimeWindow,ht=dt._timestampProvider,bt=dt._windowTime;ft||(pt.push(ot),!mt&&pt.push(ht.now()+bt)),this._trimBuffer(),et.prototype.next.call(this,ot)},tt.prototype._subscribe=function(ot){this._throwIfClosed(),this._trimBuffer();for(var dt=this._innerSubscribe(ot),ft=this,pt=ft._infiniteTimeWindow,mt=ft._buffer,ht=mt.slice(),bt=0;bt<ht.length&&!ot.closed;bt+=pt?1:2)ot.next(ht[bt]);return this._checkFinalizedStatuses(ot),dt},tt.prototype._trimBuffer=function(){var ot=this,dt=ot._bufferSize,ft=ot._timestampProvider,pt=ot._buffer,mt=ot._infiniteTimeWindow,ht=(mt?1:2)*dt;if(dt<1/0&&ht<pt.length&&pt.splice(0,pt.length-ht),!mt){for(var bt=ft.now(),yt=0,xt=1;xt<pt.length&&pt[xt]<=bt;xt+=2)yt=xt;yt&&pt.splice(0,yt+1)}},tt}(Subject),Action=function(et){__extends(tt,et);function tt(ot,dt){return et.call(this)||this}return tt.prototype.schedule=function(ot,dt){return this},tt}(Subscription),intervalProvider={setInterval:function(et,tt){for(var ot=[],dt=2;dt<arguments.length;dt++)ot[dt-2]=arguments[dt];return setInterval.apply(void 0,__spreadArray$1([et,tt],__read(ot)))},clearInterval:function(et){var tt=intervalProvider.delegate;return((tt==null?void 0:tt.clearInterval)||clearInterval)(et)},delegate:void 0},AsyncAction=function(et){__extends(tt,et);function tt(ot,dt){var ft=et.call(this,ot,dt)||this;return ft.scheduler=ot,ft.work=dt,ft.pending=!1,ft}return tt.prototype.schedule=function(ot,dt){var ft;if(dt===void 0&&(dt=0),this.closed)return this;this.state=ot;var pt=this.id,mt=this.scheduler;return pt!=null&&(this.id=this.recycleAsyncId(mt,pt,dt)),this.pending=!0,this.delay=dt,this.id=(ft=this.id)!==null&&ft!==void 0?ft:this.requestAsyncId(mt,this.id,dt),this},tt.prototype.requestAsyncId=function(ot,dt,ft){return ft===void 0&&(ft=0),intervalProvider.setInterval(ot.flush.bind(ot,this),ft)},tt.prototype.recycleAsyncId=function(ot,dt,ft){if(ft===void 0&&(ft=0),ft!=null&&this.delay===ft&&this.pending===!1)return dt;dt!=null&&intervalProvider.clearInterval(dt)},tt.prototype.execute=function(ot,dt){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var ft=this._execute(ot,dt);if(ft)return ft;this.pending===!1&&this.id!=null&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},tt.prototype._execute=function(ot,dt){var ft=!1,pt;try{this.work(ot)}catch(mt){ft=!0,pt=mt||new Error("Scheduled action threw falsy error")}if(ft)return this.unsubscribe(),pt},tt.prototype.unsubscribe=function(){if(!this.closed){var ot=this,dt=ot.id,ft=ot.scheduler,pt=ft.actions;this.work=this.state=this.scheduler=null,this.pending=!1,arrRemove(pt,this),dt!=null&&(this.id=this.recycleAsyncId(ft,dt,null)),this.delay=null,et.prototype.unsubscribe.call(this)}},tt}(Action),nextHandle=1,resolved,activeHandles={};function findAndClearHandle(et){return et in activeHandles?(delete activeHandles[et],!0):!1}var Immediate={setImmediate:function(et){var tt=nextHandle++;return activeHandles[tt]=!0,resolved||(resolved=Promise.resolve()),resolved.then(function(){return findAndClearHandle(tt)&&et()}),tt},clearImmediate:function(et){findAndClearHandle(et)}},setImmediate$1=Immediate.setImmediate,clearImmediate=Immediate.clearImmediate,immediateProvider={setImmediate:function(){for(var et=[],tt=0;tt<arguments.length;tt++)et[tt]=arguments[tt];return setImmediate$1.apply(void 0,__spreadArray$1([],__read(et)))},clearImmediate:function(et){var tt=immediateProvider.delegate;return((tt==null?void 0:tt.clearImmediate)||clearImmediate)(et)},delegate:void 0},AsapAction=function(et){__extends(tt,et);function tt(ot,dt){var ft=et.call(this,ot,dt)||this;return ft.scheduler=ot,ft.work=dt,ft}return tt.prototype.requestAsyncId=function(ot,dt,ft){return ft===void 0&&(ft=0),ft!==null&&ft>0?et.prototype.requestAsyncId.call(this,ot,dt,ft):(ot.actions.push(this),ot._scheduled||(ot._scheduled=immediateProvider.setImmediate(ot.flush.bind(ot,void 0))))},tt.prototype.recycleAsyncId=function(ot,dt,ft){var pt;if(ft===void 0&&(ft=0),ft!=null?ft>0:this.delay>0)return et.prototype.recycleAsyncId.call(this,ot,dt,ft);var mt=ot.actions;dt!=null&&((pt=mt[mt.length-1])===null||pt===void 0?void 0:pt.id)!==dt&&(immediateProvider.clearImmediate(dt),ot._scheduled===dt&&(ot._scheduled=void 0))},tt}(AsyncAction),Scheduler=function(){function et(tt,ot){ot===void 0&&(ot=et.now),this.schedulerActionCtor=tt,this.now=ot}return et.prototype.schedule=function(tt,ot,dt){return ot===void 0&&(ot=0),new this.schedulerActionCtor(this,tt).schedule(dt,ot)},et.now=dateTimestampProvider.now,et}(),AsyncScheduler=function(et){__extends(tt,et);function tt(ot,dt){dt===void 0&&(dt=Scheduler.now);var ft=et.call(this,ot,dt)||this;return ft.actions=[],ft._active=!1,ft}return tt.prototype.flush=function(ot){var dt=this.actions;if(this._active){dt.push(ot);return}var ft;this._active=!0;do if(ft=ot.execute(ot.state,ot.delay))break;while(ot=dt.shift());if(this._active=!1,ft){for(;ot=dt.shift();)ot.unsubscribe();throw ft}},tt}(Scheduler),AsapScheduler=function(et){__extends(tt,et);function tt(){return et!==null&&et.apply(this,arguments)||this}return tt.prototype.flush=function(ot){this._active=!0;var dt=this._scheduled;this._scheduled=void 0;var ft=this.actions,pt;ot=ot||ft.shift();do if(pt=ot.execute(ot.state,ot.delay))break;while((ot=ft[0])&&ot.id===dt&&ft.shift());if(this._active=!1,pt){for(;(ot=ft[0])&&ot.id===dt&&ft.shift();)ot.unsubscribe();throw pt}},tt}(AsyncScheduler),asapScheduler=new AsapScheduler(AsapAction),EMPTY=new Observable(function(et){return et.complete()});function isScheduler(et){return et&&isFunction$8(et.schedule)}function last(et){return et[et.length-1]}function popResultSelector(et){return isFunction$8(last(et))?et.pop():void 0}function popScheduler(et){return isScheduler(last(et))?et.pop():void 0}var isArrayLike$1=function(et){return et&&typeof et.length=="number"&&typeof et!="function"};function isPromise$1(et){return isFunction$8(et==null?void 0:et.then)}function isInteropObservable(et){return isFunction$8(et[observable])}function isAsyncIterable(et){return Symbol.asyncIterator&&isFunction$8(et==null?void 0:et[Symbol.asyncIterator])}function createInvalidObservableTypeError(et){return new TypeError("You provided "+(et!==null&&typeof et=="object"?"an invalid object":"'"+et+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function getSymbolIterator(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var iterator=getSymbolIterator();function isIterable(et){return isFunction$8(et==null?void 0:et[iterator])}function readableStreamLikeToAsyncGenerator(et){return __asyncGenerator(this,arguments,function(){var ot,dt,ft,pt;return __generator(this,function(mt){switch(mt.label){case 0:ot=et.getReader(),mt.label=1;case 1:mt.trys.push([1,,9,10]),mt.label=2;case 2:return[4,__await(ot.read())];case 3:return dt=mt.sent(),ft=dt.value,pt=dt.done,pt?[4,__await(void 0)]:[3,5];case 4:return[2,mt.sent()];case 5:return[4,__await(ft)];case 6:return[4,mt.sent()];case 7:return mt.sent(),[3,2];case 8:return[3,10];case 9:return ot.releaseLock(),[7];case 10:return[2]}})})}function isReadableStreamLike(et){return isFunction$8(et==null?void 0:et.getReader)}function innerFrom(et){if(et instanceof Observable)return et;if(et!=null){if(isInteropObservable(et))return fromInteropObservable(et);if(isArrayLike$1(et))return fromArrayLike(et);if(isPromise$1(et))return fromPromise(et);if(isAsyncIterable(et))return fromAsyncIterable(et);if(isIterable(et))return fromIterable(et);if(isReadableStreamLike(et))return fromReadableStreamLike(et)}throw createInvalidObservableTypeError(et)}function fromInteropObservable(et){return new Observable(function(tt){var ot=et[observable]();if(isFunction$8(ot.subscribe))return ot.subscribe(tt);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function fromArrayLike(et){return new Observable(function(tt){for(var ot=0;ot<et.length&&!tt.closed;ot++)tt.next(et[ot]);tt.complete()})}function fromPromise(et){return new Observable(function(tt){et.then(function(ot){tt.closed||(tt.next(ot),tt.complete())},function(ot){return tt.error(ot)}).then(null,reportUnhandledError)})}function fromIterable(et){return new Observable(function(tt){var ot,dt;try{for(var ft=__values(et),pt=ft.next();!pt.done;pt=ft.next()){var mt=pt.value;if(tt.next(mt),tt.closed)return}}catch(ht){ot={error:ht}}finally{try{pt&&!pt.done&&(dt=ft.return)&&dt.call(ft)}finally{if(ot)throw ot.error}}tt.complete()})}function fromAsyncIterable(et){return new Observable(function(tt){process$1(et,tt).catch(function(ot){return tt.error(ot)})})}function fromReadableStreamLike(et){return fromAsyncIterable(readableStreamLikeToAsyncGenerator(et))}function process$1(et,tt){var ot,dt,ft,pt;return __awaiter(this,void 0,void 0,function(){var mt,ht;return __generator(this,function(bt){switch(bt.label){case 0:bt.trys.push([0,5,6,11]),ot=__asyncValues(et),bt.label=1;case 1:return[4,ot.next()];case 2:if(dt=bt.sent(),!!dt.done)return[3,4];if(mt=dt.value,tt.next(mt),tt.closed)return[2];bt.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return ht=bt.sent(),ft={error:ht},[3,11];case 6:return bt.trys.push([6,,9,10]),dt&&!dt.done&&(pt=ot.return)?[4,pt.call(ot)]:[3,8];case 7:bt.sent(),bt.label=8;case 8:return[3,10];case 9:if(ft)throw ft.error;return[7];case 10:return[7];case 11:return tt.complete(),[2]}})})}function executeSchedule(et,tt,ot,dt,ft){dt===void 0&&(dt=0),ft===void 0&&(ft=!1);var pt=tt.schedule(function(){ot(),ft?et.add(this.schedule(null,dt)):this.unsubscribe()},dt);if(et.add(pt),!ft)return pt}function observeOn(et,tt){return tt===void 0&&(tt=0),operate(function(ot,dt){ot.subscribe(createOperatorSubscriber(dt,function(ft){return executeSchedule(dt,et,function(){return dt.next(ft)},tt)},function(){return executeSchedule(dt,et,function(){return dt.complete()},tt)},function(ft){return executeSchedule(dt,et,function(){return dt.error(ft)},tt)}))})}function subscribeOn(et,tt){return tt===void 0&&(tt=0),operate(function(ot,dt){dt.add(et.schedule(function(){return ot.subscribe(dt)},tt))})}function scheduleObservable(et,tt){return innerFrom(et).pipe(subscribeOn(tt),observeOn(tt))}function schedulePromise(et,tt){return innerFrom(et).pipe(subscribeOn(tt),observeOn(tt))}function scheduleArray(et,tt){return new Observable(function(ot){var dt=0;return tt.schedule(function(){dt===et.length?ot.complete():(ot.next(et[dt++]),ot.closed||this.schedule())})})}function scheduleIterable(et,tt){return new Observable(function(ot){var dt;return executeSchedule(ot,tt,function(){dt=et[iterator](),executeSchedule(ot,tt,function(){var ft,pt,mt;try{ft=dt.next(),pt=ft.value,mt=ft.done}catch(ht){ot.error(ht);return}mt?ot.complete():ot.next(pt)},0,!0)}),function(){return isFunction$8(dt==null?void 0:dt.return)&&dt.return()}})}function scheduleAsyncIterable(et,tt){if(!et)throw new Error("Iterable cannot be null");return new Observable(function(ot){executeSchedule(ot,tt,function(){var dt=et[Symbol.asyncIterator]();executeSchedule(ot,tt,function(){dt.next().then(function(ft){ft.done?ot.complete():ot.next(ft.value)})},0,!0)})})}function scheduleReadableStreamLike(et,tt){return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(et),tt)}function scheduled(et,tt){if(et!=null){if(isInteropObservable(et))return scheduleObservable(et,tt);if(isArrayLike$1(et))return scheduleArray(et,tt);if(isPromise$1(et))return schedulePromise(et,tt);if(isAsyncIterable(et))return scheduleAsyncIterable(et,tt);if(isIterable(et))return scheduleIterable(et,tt);if(isReadableStreamLike(et))return scheduleReadableStreamLike(et,tt)}throw createInvalidObservableTypeError(et)}function from$1(et,tt){return tt?scheduled(et,tt):innerFrom(et)}function of(){for(var et=[],tt=0;tt<arguments.length;tt++)et[tt]=arguments[tt];var ot=popScheduler(et);return from$1(et,ot)}var EmptyError=createErrorClass(function(et){return function(){et(this),this.name="EmptyError",this.message="no elements in sequence"}});function firstValueFrom(et,tt){return new Promise(function(ot,dt){var ft=new SafeSubscriber({next:function(pt){ot(pt),ft.unsubscribe()},error:dt,complete:function(){dt(new EmptyError)}});et.subscribe(ft)})}function map$3(et,tt){return operate(function(ot,dt){var ft=0;ot.subscribe(createOperatorSubscriber(dt,function(pt){dt.next(et.call(tt,pt,ft++))}))})}var isArray$1=Array.isArray;function callOrApply(et,tt){return isArray$1(tt)?et.apply(void 0,__spreadArray$1([],__read(tt))):et(tt)}function mapOneOrManyArgs(et){return map$3(function(tt){return callOrApply(et,tt)})}var isArray=Array.isArray,getPrototypeOf=Object.getPrototypeOf,objectProto=Object.prototype,getKeys=Object.keys;function argsArgArrayOrObject(et){if(et.length===1){var tt=et[0];if(isArray(tt))return{args:tt,keys:null};if(isPOJO(tt)){var ot=getKeys(tt);return{args:ot.map(function(dt){return tt[dt]}),keys:ot}}}return{args:et,keys:null}}function isPOJO(et){return et&&typeof et=="object"&&getPrototypeOf(et)===objectProto}function createObject(et,tt){return et.reduce(function(ot,dt,ft){return ot[dt]=tt[ft],ot},{})}function combineLatest(){for(var et=[],tt=0;tt<arguments.length;tt++)et[tt]=arguments[tt];var ot=popScheduler(et),dt=popResultSelector(et),ft=argsArgArrayOrObject(et),pt=ft.args,mt=ft.keys;if(pt.length===0)return from$1([],ot);var ht=new Observable(combineLatestInit(pt,ot,mt?function(bt){return createObject(mt,bt)}:identity$2));return dt?ht.pipe(mapOneOrManyArgs(dt)):ht}function combineLatestInit(et,tt,ot){return ot===void 0&&(ot=identity$2),function(dt){maybeSchedule(tt,function(){for(var ft=et.length,pt=new Array(ft),mt=ft,ht=ft,bt=function(xt){maybeSchedule(tt,function(){var gt=from$1(et[xt],tt),wt=!1;gt.subscribe(createOperatorSubscriber(dt,function(Pt){pt[xt]=Pt,wt||(wt=!0,ht--),ht||dt.next(ot(pt.slice()))},function(){--mt||dt.complete()}))},dt)},yt=0;yt<ft;yt++)bt(yt)},dt)}}function maybeSchedule(et,tt,ot){et?executeSchedule(ot,et,tt):tt()}function mergeInternals(et,tt,ot,dt,ft,pt,mt,ht){var bt=[],yt=0,xt=0,gt=!1,wt=function(){gt&&!bt.length&&!yt&&tt.complete()},Pt=function(Et){return yt<dt?St(Et):bt.push(Et)},St=function(Et){yt++;var Lt=!1;innerFrom(ot(Et,xt++)).subscribe(createOperatorSubscriber(tt,function(It){tt.next(It)},function(){Lt=!0},void 0,function(){if(Lt)try{yt--;for(var It=function(){var kt=bt.shift();mt||St(kt)};bt.length&&yt<dt;)It();wt()}catch(kt){tt.error(kt)}}))};return et.subscribe(createOperatorSubscriber(tt,Pt,function(){gt=!0,wt()})),function(){}}function mergeMap(et,tt,ot){return ot===void 0&&(ot=1/0),isFunction$8(tt)?mergeMap(function(dt,ft){return map$3(function(pt,mt){return tt(dt,pt,ft,mt)})(innerFrom(et(dt,ft)))},ot):(typeof tt=="number"&&(ot=tt),operate(function(dt,ft){return mergeInternals(dt,ft,et,ot)}))}function mergeAll(et){return mergeMap(identity$2,et)}function concatAll(){return mergeAll(1)}function concat(){for(var et=[],tt=0;tt<arguments.length;tt++)et[tt]=arguments[tt];return concatAll()(from$1(et,popScheduler(et)))}function catchError(et){return operate(function(tt,ot){var dt=null,ft=!1,pt;dt=tt.subscribe(createOperatorSubscriber(ot,void 0,void 0,function(mt){pt=innerFrom(et(mt,catchError(et)(tt))),dt?(dt.unsubscribe(),dt=null,pt.subscribe(ot)):ft=!0})),ft&&(dt.unsubscribe(),dt=null,pt.subscribe(ot))})}function scanInternals(et,tt,ot,dt,ft){return function(pt,mt){var ht=ot,bt=tt,yt=0;pt.subscribe(createOperatorSubscriber(mt,function(xt){var gt=yt++;bt=ht?et(bt,xt,gt):(ht=!0,xt)},function(){ht&&mt.next(bt),mt.complete()}))}}function reduce(et,tt){return operate(scanInternals(et,tt,arguments.length>=2,!1,!0))}var arrReducer=function(et,tt){return et.push(tt),et};function toArray(){return operate(function(et,tt){reduce(arrReducer,[])(et).subscribe(tt)})}function fromSubscribable(et){return new Observable(function(tt){return et.subscribe(tt)})}var DEFAULT_CONFIG={connector:function(){return new Subject}};function connect(et,tt){tt===void 0&&(tt=DEFAULT_CONFIG);var ot=tt.connector;return operate(function(dt,ft){var pt=ot();innerFrom(et(fromSubscribable(pt))).subscribe(ft),ft.add(dt.subscribe(pt))})}function defaultIfEmpty(et){return operate(function(tt,ot){var dt=!1;tt.subscribe(createOperatorSubscriber(ot,function(ft){dt=!0,ot.next(ft)},function(){dt||ot.next(et),ot.complete()}))})}function take(et){return et<=0?function(){return EMPTY}:operate(function(tt,ot){var dt=0;tt.subscribe(createOperatorSubscriber(ot,function(ft){++dt<=et&&(ot.next(ft),et<=dt&&ot.complete())}))})}function distinctUntilChanged(et,tt){return tt===void 0&&(tt=identity$2),et=et??defaultCompare,operate(function(ot,dt){var ft,pt=!0;ot.subscribe(createOperatorSubscriber(dt,function(mt){var ht=tt(mt);(pt||!et(ft,ht))&&(pt=!1,ft=ht,dt.next(mt))}))})}function defaultCompare(et,tt){return et===tt}function throwIfEmpty(et){return et===void 0&&(et=defaultErrorFactory),operate(function(tt,ot){var dt=!1;tt.subscribe(createOperatorSubscriber(ot,function(ft){dt=!0,ot.next(ft)},function(){return dt?ot.complete():ot.error(et())}))})}function defaultErrorFactory(){return new EmptyError}function first(et,tt){var ot=arguments.length>=2;return function(dt){return dt.pipe(identity$2,take(1),ot?defaultIfEmpty(tt):throwIfEmpty(function(){return new EmptyError}))}}function multicast(et,tt){var ot=isFunction$8(et)?et:function(){return et};return isFunction$8(tt)?connect(tt,{connector:ot}):function(dt){return new ConnectableObservable(dt,ot)}}function publishReplay(et,tt,ot,dt){var ft=isFunction$8(ot)?ot:void 0;return function(pt){return multicast(new ReplaySubject(et,tt,dt),ft)(pt)}}function startWith(){for(var et=[],tt=0;tt<arguments.length;tt++)et[tt]=arguments[tt];var ot=popScheduler(et);return operate(function(dt,ft){(ot?concat(et,dt,ot):concat(et,dt)).subscribe(ft)})}function switchMap(et,tt){return operate(function(ot,dt){var ft=null,pt=0,mt=!1,ht=function(){return mt&&!ft&&dt.complete()};ot.subscribe(createOperatorSubscriber(dt,function(bt){ft==null||ft.unsubscribe();var yt=0,xt=pt++;innerFrom(et(bt,xt)).subscribe(ft=createOperatorSubscriber(dt,function(gt){return dt.next(tt?tt(bt,gt,xt,yt++):gt)},function(){ft=null,ht()}))},function(){mt=!0,ht()}))})}function tap(et,tt,ot){var dt=isFunction$8(et)||tt||ot?{next:et,error:tt,complete:ot}:et;return dt?operate(function(ft,pt){var mt;(mt=dt.subscribe)===null||mt===void 0||mt.call(dt);var ht=!0;ft.subscribe(createOperatorSubscriber(pt,function(bt){var yt;(yt=dt.next)===null||yt===void 0||yt.call(dt,bt),pt.next(bt)},function(){var bt;ht=!1,(bt=dt.complete)===null||bt===void 0||bt.call(dt),pt.complete()},function(bt){var yt;ht=!1,(yt=dt.error)===null||yt===void 0||yt.call(dt,bt),pt.error(bt)},function(){var bt,yt;ht&&((bt=dt.unsubscribe)===null||bt===void 0||bt.call(dt)),(yt=dt.finalize)===null||yt===void 0||yt.call(dt)}))}):identity$2}const l$c=logger$2("api/util");function filterEvents(et,{block:{extrinsics:tt,header:ot}},dt,ft){for(const[pt,mt]of tt.entries())if(mt.hash.eq(et))return{blockNumber:isCompact$1(ot.number)?ot.number.unwrap():ot.number,events:dt.filter(({phase:ht})=>ht.isApplyExtrinsic&&ht.asApplyExtrinsic.eqn(pt)),txIndex:pt};if(ft.isInBlock){const pt=tt.map(mt=>mt.hash.toHex());l$c.warn(`block ${ot.hash.toHex()}: Unable to find extrinsic ${et.toHex()} inside ${pt.join(", ")}`)}return{}}function isKeyringPair(et){return isFunction$9(et.sign)}function evaluateThis$4(et){return et("return this")}const xglobal$4=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:evaluateThis$4(Function);function extractGlobal$4(et,tt){return typeof xglobal$4[et]>"u"?tt:xglobal$4[et]}let TextDecoder$5=class{constructor(tt){Ot(this,"__encoding");this.__encoding=tt}decode(tt){let ot="";for(let dt=0,ft=tt.length;dt<ft;dt++)ot+=String.fromCharCode(tt[dt]);return ot}};const TextDecoder$4=extractGlobal$4("TextDecoder",TextDecoder$5);let TextEncoder$a=class{encode(tt){const ot=tt.length,dt=new Uint8Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=tt.charCodeAt(ft);return dt}};const TextEncoder$9=extractGlobal$4("TextEncoder",TextEncoder$a);function isFunction$7(et){return typeof et=="function"}function arrayChunk(et,tt){const ot=Math.ceil(et.length/tt);if(ot===1)return[et];const dt=Array(ot);for(let ft=0;ft<ot;ft++){const pt=ft*tt;dt[ft]=et.slice(pt,pt+tt)}return dt}function arrayFlatten(et){const tt=et.length;if(tt===0)return[];if(tt===1)return et[0];let ot=0;for(let pt=0;pt<tt;pt++)ot+=et[pt].length;const dt=new Array(ot);let ft=-1;for(let pt=0;pt<tt;pt++){const mt=et[pt];for(let ht=0,bt=mt.length;ht<bt;ht++)dt[++ft]=mt[ht]}return dt}function assert(et,tt){if(!et)throw new Error(isFunction$7(tt)?tt():tt)}function assertReturn(et,tt){return assert(et!=null,tt),et}function createCmp(et){return(...tt)=>{const ot=tt.length;if(ot===0)throw new Error("Must provide one or more arguments");let dt=tt[0];for(let ft=1;ft<ot;ft++)et(tt[ft],dt)&&(dt=tt[ft]);return dt}}function invalidFallback$4(){return Number.NaN}const BigInt$5=extractGlobal$4("BigInt",invalidFallback$4),CHR$7="0123456789abcdef",U8$a=new Uint8Array(256),U16$a=new Uint8Array(256*256);for(let et=0,tt=CHR$7.length;et<tt;et++)U8$a[CHR$7[et].charCodeAt(0)|0]=et|0,et>9&&(U8$a[CHR$7[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$a[tt|ot]=U8$a[et]<<4|U8$a[ot]}function hexToU8a$5(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$a[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}const REGEX_HEX_PREFIXED$5=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX$3=/^[\da-fA-F]+$/;function isHex$5(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED$5.test(et))&&(tt===-1?et.length%2===0:et.length===2+Math.ceil(tt/4))}function isObject$6(et){return!!et&&typeof et=="object"}function isOn$3(...et){return tt=>(isObject$6(tt)||isFunction$7(tt))&&et.every(ot=>isFunction$7(tt[ot]))}function isOnObject$2(...et){return tt=>isObject$6(tt)&&et.every(ot=>isFunction$7(tt[ot]))}const isToBigInt$3=isOn$3("toBigInt"),isToBn$4=isOn$3("toBn"),hasBigInt$1=typeof BigInt$5=="function"&&typeof BigInt$5.asIntN=="function",hasBuffer$4=typeof xglobal$4.Buffer=="function"&&typeof xglobal$4.Buffer.isBuffer=="function";xglobal$4.process;function isBuffer$4(et){return hasBuffer$4&&!!et&&isFunction$7(et.readDoubleLE)&&xglobal$4.Buffer.isBuffer(et)}function isU8a$4(et){return(et&&et.constructor)===Uint8Array||et instanceof Uint8Array}const encoder$4=new TextEncoder$9;function stringToU8a$4(et){return et?encoder$4.encode(et.toString()):new Uint8Array}function u8aToU8a$4(et){return isU8a$4(et)?isBuffer$4(et)?new Uint8Array(et):et:isHex$5(et)?hexToU8a$5(et):Array.isArray(et)?new Uint8Array(et):stringToU8a$4(et)}function u8aConcat$2(...et){const tt=et.length,ot=new Array(tt);let dt=0;for(let ft=0;ft<tt;ft++)ot[ft]=u8aToU8a$4(et[ft]),dt+=ot[ft].length;return u8aConcatStrict$3(ot,dt)}function u8aConcatStrict$3(et,tt=0){const ot=et.length;let dt=0;if(!tt)for(let pt=0;pt<ot;pt++)tt+=et[pt].length;const ft=new Uint8Array(tt);for(let pt=0;pt<ot;pt++)ft.set(et[pt],dt),dt+=et[pt].length;return ft}const U8$9=new Array(256),U16$9=new Array(256*256);for(let et=0;et<256;et++)U8$9[et]=et.toString(16).padStart(2,"0");for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$9[tt|ot]=U8$9[et]+U8$9[ot]}function hex$4(et,tt){const ot=et.length%2|0,dt=et.length-ot|0;for(let ft=0;ft<dt;ft+=2)tt+=U16$9[et[ft]<<8|et[ft+1]];return ot&&(tt+=U8$9[et[dt]|0]),tt}function u8aToHex$4(et,tt=-1,ot=!0){const dt=ot?"0x":"";if(et!=null&&et.length){if(tt>0){const ft=Math.ceil(tt/8);if(et.length>ft)return`${hex$4(et.subarray(0,ft/2),dt)}…${hex$4(et.subarray(et.length-ft/2),"")}`}}else return dt;return hex$4(et,dt)}const decoder$2=new TextDecoder$4("utf-8");function u8aToString$2(et){return et?decoder$2.decode(et):""}function hexStripPrefix$3(et){if(!et||et==="0x")return"";if(REGEX_HEX_PREFIXED$5.test(et))return et.substring(2);if(REGEX_HEX_NOPREFIX$3.test(et))return et;throw new Error(`Expected hex value to convert, found '${et}'`)}function hexToBn$3(et,{isLe:tt=!1,isNegative:ot=!1}={}){if(!et||et==="0x")return new BN(0);const dt=hexStripPrefix$3(et),ft=new BN(dt,16,tt?"le":"be");return ot?ft.fromTwos(dt.length*4):ft}const bnMax=createCmp((et,tt)=>et.gt(tt)),bnMin=createCmp((et,tt)=>et.lt(tt)),BN_ZERO=new BN(0),BN_ONE$1=new BN(1),BN_BILLION$1=new BN(1e9);BN_BILLION$1.mul(BN_BILLION$1);const BN_MAX_INTEGER=new BN(Number.MAX_SAFE_INTEGER),BN_SQRT_MAX_INTEGER=new BN(94906265);function isBigInt$5(et){return typeof et=="bigint"}function bnToBn$3(et){return et?BN.isBN(et)?et:isHex$5(et)?hexToBn$3(et.toString()):isBigInt$5(et)?new BN(et.toString()):isToBn$4(et)?et.toBn():isToBigInt$3(et)?new BN(et.toBigInt().toString()):new BN(et):new BN(0)}function bnSqrt(et){const tt=bnToBn$3(et);if(tt.isNeg())throw new Error("square root of negative numbers is not supported");if(tt.lte(BN_MAX_INTEGER))return new BN(~~Math.sqrt(tt.toNumber()));let ot=BN_SQRT_MAX_INTEGER.clone();for(;;){const dt=tt.div(ot).iadd(ot).ishrn(1);if(ot.eq(dt)||ot.eq(dt.sub(BN_ONE$1)))return ot;ot=dt}}function isString$2(et){return typeof et=="string"||et instanceof String}const isCompact=isOnObject$2("toBigInt","toBn","toNumber","unwrap");function isNumber$2(et){return typeof et=="number"}function isUndefined$4(et){return et===void 0}function lazyMethod$1(et,tt,ot,dt,ft=0){const pt=tt.toString();let mt;Object.defineProperty(et,pt,{configurable:!0,enumerable:!0,get:function(){if(mt===void 0){mt=ot(tt,ft,this);try{Object.defineProperty(this,pt,{value:mt})}catch{}}return mt}})}function lazyMethods(et,tt,ot,dt){for(let ft=0,pt=tt.length;ft<pt;ft++)lazyMethod$1(et,tt[ft],ot,dt,ft);return et}function nextTick(et,tt){setTimeout(()=>{Promise.resolve().then(()=>{et()}).catch(ot=>{console.error(ot)})},0)}function objectSpread$3(et,...tt){const ot=new Set(["__proto__","constructor","prototype"]);for(let dt=0,ft=tt.length;dt<ft;dt++){const pt=tt[dt];if(pt)if(typeof pt.entries=="function")for(const[mt,ht]of pt.entries())ot.has(mt)||(et[mt]=ht);else{const mt=Object.create(null);for(const[ht,bt]of Object.entries(pt))ot.has(ht)||(mt[ht]=bt);Object.assign(et,mt)}}return et}function stringToHex(et){return u8aToHex$4(stringToU8a$4(et))}function evaluateThis$3(et){return et("return this")}const xglobal$3=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:evaluateThis$3(Function);function extractGlobal$3(et,tt){return typeof xglobal$3[et]>"u"?tt:xglobal$3[et]}let TextEncoder$8=class{encode(tt){const ot=tt.length,dt=new Uint8Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=tt.charCodeAt(ft);return dt}};const TextEncoder$7=extractGlobal$3("TextEncoder",TextEncoder$8);function isFunction$6(et){return typeof et=="function"}function invalidFallback$3(){return Number.NaN}const BigInt$4=extractGlobal$3("BigInt",invalidFallback$3),CHR$6="0123456789abcdef",U8$8=new Uint8Array(256),U16$8=new Uint8Array(256*256);for(let et=0,tt=CHR$6.length;et<tt;et++)U8$8[CHR$6[et].charCodeAt(0)|0]=et|0,et>9&&(U8$8[CHR$6[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$8[tt|ot]=U8$8[et]<<4|U8$8[ot]}function hexToU8a$4(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$8[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}function isBn$1(et){return BN.isBN(et)}const REGEX_HEX_PREFIXED$4=/^0x[\da-fA-F]+$/;function isHex$4(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED$4.test(et))&&(tt===-1?et.length%2===0:et.length===2+Math.ceil(tt/4))}function isObject$5(et){return!!et&&typeof et=="object"}typeof BigInt$4=="function"&&BigInt$4.asIntN;const hasBuffer$3=typeof xglobal$3.Buffer=="function"&&typeof xglobal$3.Buffer.isBuffer=="function";xglobal$3.process;function isBuffer$3(et){return hasBuffer$3&&!!et&&isFunction$6(et.readDoubleLE)&&xglobal$3.Buffer.isBuffer(et)}function isU8a$3(et){return(et&&et.constructor)===Uint8Array||et instanceof Uint8Array}const encoder$3=new TextEncoder$7;function stringToU8a$3(et){return et?encoder$3.encode(et.toString()):new Uint8Array}function u8aToU8a$3(et){return isU8a$3(et)?isBuffer$3(et)?new Uint8Array(et):et:isHex$4(et)?hexToU8a$4(et):Array.isArray(et)?new Uint8Array(et):stringToU8a$3(et)}function u8aConcat$1(...et){const tt=et.length,ot=new Array(tt);let dt=0;for(let ft=0;ft<tt;ft++)ot[ft]=u8aToU8a$3(et[ft]),dt+=ot[ft].length;return u8aConcatStrict$2(ot,dt)}function u8aConcatStrict$2(et,tt=0){const ot=et.length;let dt=0;if(!tt)for(let pt=0;pt<ot;pt++)tt+=et[pt].length;const ft=new Uint8Array(tt);for(let pt=0;pt<ot;pt++)ft.set(et[pt],dt),dt+=et[pt].length;return ft}const U8$7=new Array(256),U16$7=new Array(256*256);for(let et=0;et<256;et++)U8$7[et]=et.toString(16).padStart(2,"0");for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$7[tt|ot]=U8$7[et]+U8$7[ot]}function hex$3(et,tt){const ot=et.length%2|0,dt=et.length-ot|0;for(let ft=0;ft<dt;ft+=2)tt+=U16$7[et[ft]<<8|et[ft+1]];return ot&&(tt+=U8$7[et[dt]|0]),tt}function u8aToHex$3(et,tt=-1,ot=!0){const dt=ot?"0x":"";if(et!=null&&et.length){if(tt>0){const ft=Math.ceil(tt/8);if(et.length>ft)return`${hex$3(et.subarray(0,ft/2),dt)}…${hex$3(et.subarray(et.length-ft/2),"")}`}}else return dt;return hex$3(et,dt)}function isBigInt$4(et){return typeof et=="bigint"}function zeroPad$1(et){return et.toString().padStart(2,"0")}function formatDate$1(et){const tt=et.getFullYear().toString(),ot=zeroPad$1(et.getMonth()+1),dt=zeroPad$1(et.getDate()),ft=zeroPad$1(et.getHours()),pt=zeroPad$1(et.getMinutes()),mt=zeroPad$1(et.getSeconds());return`${tt}-${ot}-${dt} ${ft}:${pt}:${mt}`}function replacer$2(et,tt){return isBigInt$4(tt)?tt.toString():tt}function stringify$3(et,tt){return JSON.stringify(et,replacer$2,tt)}function isNull$1(et){return et===null}function isUndefined$3(et){return et===void 0}function lazyMethod(et,tt,ot,dt,ft=0){const pt=tt.toString();let mt;Object.defineProperty(et,pt,{configurable:!0,enumerable:!0,get:function(){if(mt===void 0){mt=ot(tt,ft,this);try{Object.defineProperty(this,pt,{value:mt})}catch{}}return mt}})}function noop$1(){}const logTo$1={debug:"log",error:"error",log:"log",warn:"warn"};function formatOther$1(et){if(et&&isObject$5(et)&&et.constructor===Object){const tt={};for(const[ot,dt]of Object.entries(et))tt[ot]=loggerFormat$1(dt);return tt}return et}function loggerFormat$1(et){return Array.isArray(et)?et.map(loggerFormat$1):isBn$1(et)?et.toString():isU8a$3(et)||isBuffer$3(et)?u8aToHex$3(u8aToU8a$3(et)):formatOther$1(et)}function formatWithLength$1(et){return tt=>{if(et<=0)return tt;const ot=`${tt}`;return ot.length<et?tt:`${ot.substring(0,et)} ...`}}function apply$1(et,tt,ot,dt=-1){if(ot.length===1&&isFunction$6(ot[0])){const ft=ot[0]();return apply$1(et,tt,Array.isArray(ft)?ft:[ft],dt)}console[logTo$1[et]](formatDate$1(new Date),tt,...ot.map(loggerFormat$1).map(formatWithLength$1(dt)))}function isDebugOn$1(et,tt){return!!et&&(et==="*"||tt===et||et.endsWith("*")&&tt.startsWith(et.slice(0,-1)))}function isDebugOff$1(et,tt){return!!et&&et.startsWith("-")&&(tt===et.slice(1)||et.endsWith("*")&&tt.startsWith(et.slice(1,-1)))}function getDebugFlag$1(et,tt){let ot=!1;for(const dt of et)isDebugOn$1(dt,tt)?ot=!0:isDebugOff$1(dt,tt)&&(ot=!1);return ot}function parseEnv$1(et){var ot,dt,ft,pt;const tt=parseInt(((dt=(ot=xglobal$3.process)==null?void 0:ot.env)==null?void 0:dt.DEBUG_MAX)||"-1",10);return[getDebugFlag$1((((pt=(ft=xglobal$3.process)==null?void 0:ft.env)==null?void 0:pt.DEBUG)||"").toLowerCase().split(","),et),isNaN(tt)?-1:tt]}function logger$1(et){const tt=`${et.toUpperCase()}:`.padStart(16),[ot,dt]=parseEnv$1(et.toLowerCase());return{debug:ot?(...ft)=>apply$1("debug",tt,ft,dt):noop$1,error:(...ft)=>apply$1("error",tt,ft),log:(...ft)=>apply$1("log",tt,ft),noop:noop$1,warn:(...ft)=>apply$1("warn",tt,ft)}}function defaultGetId(){return"none"}function memoize(et,{getInstanceId:tt=defaultGetId}={}){const ot={},dt=(...ft)=>{const pt=stringify$3(ft),mt=tt();return ot[mt]||(ot[mt]={}),ot[mt][pt]===void 0&&(ot[mt][pt]=et(...ft)),ot[mt][pt]};return dt.unmemoize=(...ft)=>{var ht;const pt=stringify$3(ft),mt=tt();((ht=ot[mt])==null?void 0:ht[pt])!==void 0&&delete ot[mt][pt]},dt}function objectSpread$2(et,...tt){const ot=new Set(["__proto__","constructor","prototype"]);for(let dt=0,ft=tt.length;dt<ft;dt++){const pt=tt[dt];if(pt)if(typeof pt.entries=="function")for(const[mt,ht]of pt.entries())ot.has(mt)||(et[mt]=ht);else{const mt=Object.create(null);for(const[ht,bt]of Object.entries(pt))ot.has(ht)||(mt[ht]=bt);Object.assign(et,mt)}}return et}const DEFAULT_CAPACITY=1024,DEFAULT_TTL=3e4;class LRUNode{constructor(tt,ot){Ot(this,"key");Ot(this,"__internal__expires");Ot(this,"__internal__ttl");Ot(this,"createdAt");Ot(this,"next");Ot(this,"prev");this.key=tt,this.__internal__ttl=ot,this.__internal__expires=Date.now()+ot,this.createdAt=Date.now(),this.next=this.prev=this}refresh(){this.__internal__expires=Date.now()+this.__internal__ttl}get expiry(){return this.__internal__expires}}class LRUCache{constructor(tt=DEFAULT_CAPACITY,ot=DEFAULT_TTL){Ot(this,"capacity");Ot(this,"__internal__data",new Map);Ot(this,"__internal__refs",new Map);Ot(this,"__internal__length",0);Ot(this,"__internal__head");Ot(this,"__internal__tail");Ot(this,"__internal__ttl");this.capacity=tt,this.__internal__ttl=ot,this.__internal__head=this.__internal__tail=new LRUNode("<empty>",ot)}get ttl(){return this.__internal__ttl}get length(){return this.__internal__length}get lengthData(){return this.__internal__data.size}get lengthRefs(){return this.__internal__refs.size}entries(){const tt=this.keys(),ot=tt.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++){const pt=tt[ft];dt[ft]=[pt,this.__internal__data.get(pt)]}return dt}keys(){const tt=[];if(this.__internal__length){let ot=this.__internal__head;for(;ot!==this.__internal__tail;)tt.push(ot.key),ot=ot.next;tt.push(ot.key)}return tt}get(tt){const ot=this.__internal__data.get(tt);return ot?(this.__internal__toHead(tt),this.__internal__evictTTL(),ot):(this.__internal__evictTTL(),null)}set(tt,ot){if(this.__internal__data.has(tt))this.__internal__toHead(tt);else{const dt=new LRUNode(tt,this.__internal__ttl);this.__internal__refs.set(dt.key,dt),this.length===0?this.__internal__head=this.__internal__tail=dt:(this.__internal__head.prev=dt,dt.next=this.__internal__head,this.__internal__head=dt),this.__internal__length===this.capacity?(this.__internal__data.delete(this.__internal__tail.key),this.__internal__refs.delete(this.__internal__tail.key),this.__internal__tail=this.__internal__tail.prev,this.__internal__tail.next=this.__internal__head):this.__internal__length+=1}this.__internal__evictTTL(),this.__internal__data.set(tt,ot)}__internal__evictTTL(){for(;this.__internal__tail.expiry&&this.__internal__tail.expiry<Date.now()&&this.__internal__length>0;)this.__internal__refs.delete(this.__internal__tail.key),this.__internal__data.delete(this.__internal__tail.key),this.__internal__length-=1,this.__internal__tail=this.__internal__tail.prev,this.__internal__tail.next=this.__internal__head;this.__internal__length===0&&(this.__internal__head=this.__internal__tail=new LRUNode("<empty>",this.__internal__ttl))}__internal__toHead(tt){const ot=this.__internal__refs.get(tt);ot&&ot!==this.__internal__head&&(ot.refresh(),ot.prev.next=ot.next,ot.next.prev=ot.prev,ot.next=this.__internal__head,this.__internal__head.prev=ot,this.__internal__head=ot)}}const AllHashers$1={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null},META_V1_TO_V2$1={metadata:{description:"Returns the metadata of a runtime",params:[],type:"OpaqueMetadata"}},runtime$17={Metadata:[{methods:{metadata_at_version:{description:"Returns the metadata at a given version.",params:[{name:"version",type:"u32"}],type:"Option<OpaqueMetadata>"},metadata_versions:{description:"Returns the supported metadata versions.",params:[],type:"Vec<u32>"},...META_V1_TO_V2$1},version:2},{methods:{...META_V1_TO_V2$1},version:1}]},v9$1={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},v10$1={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},v11$1={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:AllHashers$1}},v12$1={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},v13$1={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},Si1Variant$1={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},v1$3={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant:Si1Variant$1},v14$1={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:{...Si1Variant$1,args:"Vec<Type>"},EventMetadataV14:{...Si1Variant$1,args:"Vec<Type>"},FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:{...Si1Variant$1,args:"Vec<FunctionArgumentMetadataV14>"},ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"},v15$1={CustomMetadata15:{map:"BTreeMap<Text, CustomValueMetadata15>"},CustomValueMetadata15:{type:"SiLookupTypeId",value:"Bytes"},ExtrinsicMetadataV15:{version:"u8",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",extraType:"SiLookupTypeId",signedExtensions:"Vec<SignedExtensionMetadataV14>"},OuterEnums15:{callType:"SiLookupTypeId",eventType:"SiLookupTypeId",errorType:"SiLookupTypeId"},PalletMetadataV15:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8",docs:"Vec<Text>"},RuntimeApiMetadataV15:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV15>",docs:"Vec<Text>"},RuntimeApiMethodMetadataV15:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>"},RuntimeApiMethodParamMetadataV15:{name:"Text",type:"SiLookupTypeId"},MetadataV15:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV15>",extrinsic:"ExtrinsicMetadataV15",type:"SiLookupTypeId",apis:"Vec<RuntimeApiMetadataV15>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"}},v16$1={MetadataV16:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV16>",extrinsic:"ExtrinsicMetadataV16",apis:"Vec<RuntimeApiMetadataV16>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"},PalletMetadataV16:{name:"Text",storage:"Option<PalletStorageMetadataV16>",calls:"Option<PalletCallMetadataV16>",events:"Option<PalletEventMetadataV16>",constants:"Vec<PalletConstantMetadataV16>",errors:"Option<PalletErrorMetadataV16>",associatedTypes:"Vec<PalletAssociatedTypeMetadataV16>",viewFunctions:"Vec<PalletViewFunctionMetadataV16>",index:"u8",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},PalletStorageMetadataV16:{prefix:"Text",items:"Vec<StorageEntryMetadataV16>"},StorageEntryMetadataV16:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},ItemDeprecationInfoV16:{_enum:{NotDeprecated:"Null",DeprecatedWithoutNote:"Null",Deprecated:{note:"Text",since:"Option<Text>"}}},PalletCallMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},EnumDeprecationInfoV16:"BTreeMap<u8, VariantDeprecationInfoV16>",VariantDeprecationInfoV16:{_enum:{DummyVariant:"Null",DeprecatedWithoutNote:"Null",Deprecated:{note:"Text",since:"Option<Text>"}}},PalletEventMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},PalletConstantMetadataV16:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},PalletErrorMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},PalletAssociatedTypeMetadataV16:{name:"Text",type:"SiLookupTypeId",docs:"Vec<Text>"},PalletViewFunctionMetadataV16:{id:"[u8; 32]",name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<T::String>",deprecationInfo:"ItemDeprecationInfoV16"},ExtrinsicMetadataV16:{versions:"Vec<u8>",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",transactionExtensionsByVersion:"BTreeMap<u8, Vec<Compact<u32>>>",transactionExtensions:"Vec<TransactionExtensionMetadataV16>"},TransactionExtensionMetadataV16:{identifier:"Text",type:"SiLookupTypeId",implicit:"SiLookupTypeId"},RuntimeApiMetadataV16:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV16>",docs:"Vec<Text>",version:"Compact<u32>",deprecationInfo:"ItemDeprecationInfoV16"},RuntimeApiMethodMetadataV16:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"}},definitions$2q={rpc:{},runtime:runtime$17,types:{...v9$1,...v10$1,...v11$1,...v12$1,...v13$1,...v14$1,...v15$1,...v16$1,ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV16",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV16",PalletCallMetadataLatest:"PalletCallMetadataV16",PalletConstantMetadataLatest:"PalletConstantMetadataV16",PalletErrorMetadataLatest:"PalletErrorMetadataV16",PalletEventMetadataLatest:"PalletEventMetadataV16",PalletMetadataLatest:"PalletMetadataV16",PalletStorageMetadataLatest:"PalletStorageMetadataV16",PortableType:"PortableTypeV14",RuntimeApiMetadataLatest:"RuntimeApiMetadataV16",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",TransactionExtensionMetadataLatest:"TransactionExtensionMetadataV16",StorageEntryMetadataLatest:"StorageEntryMetadataV16",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",OpaqueMetadata:"Opaque<Bytes>",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14",V15:"MetadataV15",V16:"MetadataV16"}}}},CORE_V1_TO_V4$1={execute_block:{description:"Execute the given block.",params:[{name:"block",type:"Block"}],type:"Null"}},CORE_V1_TO_V2$1={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre3"}},CORE_V2_TO_V4$1={initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},CORE_V4_VERSION$1={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersion"}},CORE_V4_TO_V5$1={...CORE_V1_TO_V4$1,initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"ExtrinsicInclusionMode"}},runtime$16={Core:[{methods:{...CORE_V4_VERSION$1,...CORE_V4_TO_V5$1},version:5},{methods:{...CORE_V4_VERSION$1,...CORE_V1_TO_V4$1,...CORE_V2_TO_V4$1},version:4},{methods:{version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre4"},...CORE_V1_TO_V4$1,...CORE_V2_TO_V4$1},version:3},{methods:{...CORE_V1_TO_V2$1,...CORE_V1_TO_V4$1,...CORE_V2_TO_V4$1},version:2},{methods:{initialise_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"},...CORE_V1_TO_V2$1,...CORE_V1_TO_V4$1},version:1}]},numberTypes$1={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},definitions$2p={rpc:{},runtime:runtime$16,types:{...numberTypes$1,AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId32",AccountId33:"GenericAccountId33",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeCall:"Call",RuntimeEvent:"Event",RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",SlotDuration:"u64",StorageData:"Bytes",StorageInfo:{palletName:"Bytes",storage_name:"Bytes",prefix:"Bytes",maxValues:"Option<u32>",maxSize:"Option<u32>"},StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionLongevity:"u64",TransactionTag:"Bytes",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",WeightV0:"u32",WeightV1:"u64",WeightV2:{refTime:"Compact<u64>",proofSize:"Compact<u64>"},Weight:"WeightV2",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)",ExtrinsicInclusionMode:{_enum:["AllExtrinsics","OnlyInherents"]}}},v0$3={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}},definitions$2o={rpc:{},types:{...v0$3,...v1$3,SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"}},runtime$15={AssetConversionApi:[{methods:{get_reserves:{description:"Get pool reserves",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"}],type:"Option<(Balance,Balance)>"},quote_price_exact_tokens_for_tokens:{description:"Quote price: exact tokens for tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"},quote_price_tokens_for_exact_tokens:{description:"Quote price: tokens for exact tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"}},version:1}]},definitions$2n={rpc:{},runtime:runtime$15,types:{TAssetConversion:"Option<MultiLocation>"}},runtime$14={AssetsApi:[{methods:{account_balances:{description:"Return the current set of authorities.",params:[{name:"account",type:"AccountId"}],type:"Vec<(u32, TAssetBalance)>"}},version:1}]},definitions$2m={rpc:{},runtime:runtime$14,types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},runtime$13={AuraApi:[{methods:{authorities:{description:"Return the current set of authorities.",params:[],type:"Vec<AuthorityId>"},slot_duration:{description:"Returns the slot duration for Aura.",params:[],type:"SlotDuration"}},version:1}]},definitions$2l={rpc:{},runtime:runtime$13,types:{RawAuraPreDigest:{slotNumber:"u64"}}},definitions$2k={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},rpc$x={epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",isUnsafe:!0,params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},V1_V2_SHARED$1={current_epoch:{description:"Returns information regarding the current epoch.",params:[],type:"Epoch"},current_epoch_start:{description:"Returns the slot that started the current epoch.",params:[],type:"Slot"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the current epoch.",params:[{name:"slot",type:"Slot"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},next_epoch:{description:"Returns information regarding the next epoch (which was already previously announced).",params:[],type:"Epoch"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BabeEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},runtime$12={BabeApi:[{methods:{configuration:{description:"Return the genesis configuration for BABE. The configuration is only read on genesis.",params:[],type:"BabeGenesisConfiguration"},...V1_V2_SHARED$1},version:2},{methods:{configuration:{description:"Return the configuration for BABE. Version 1.",params:[],type:"BabeGenesisConfigurationV1"},...V1_V2_SHARED$1},version:1}]},definitions$2j={rpc:rpc$x,runtime:runtime$12,types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeGenesisConfiguration:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",allowedSlots:"AllowedSlots"},BabeGenesisConfigurationV1:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",secondarySlots:"bool"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",Epoch:{epochIndex:"u64",startSlot:"Slot",duration:"u64",authorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Hash",config:"BabeEpochConfiguration"},EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},OpaqueKeyOwnershipProof:"Bytes",Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},definitions$2i={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},rpc$w={getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"},subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefyVersionedFinalityProof"}},BEEFY_V3$1={beefy_genesis:{description:"Return the block number where BEEFY consensus is enabled/started",params:[],type:"Option<BlockNumber>"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"ValidatorSetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},validator_set:{description:"Return the current active BEEFY validator set",params:[],type:"Option<ValidatorSet>"}},BEEFY_V1_V3$1={...BEEFY_V3$1,submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BeefyEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},BEEFY_V4$1={...BEEFY_V3$1,submit_report_double_voting_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report a double voting equivocation.",params:[{name:"equivocationProof",type:"SpConsensusBeefyDoubleVotingProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},BEEFY_MMR_V1$1={authority_set_proof:{description:"Return the currently active BEEFY authority set proof.",params:[],type:"BeefyAuthoritySet"},next_authority_set_proof:{description:"Return the next/queued BEEFY authority set proof.",params:[],type:"BeefyNextAuthoritySet"}},runtime$11={BeefyApi:[{methods:BEEFY_V4$1,version:4},{methods:BEEFY_V1_V3$1,version:3},{methods:BEEFY_V1_V3$1,version:2},{methods:BEEFY_V1_V3$1,version:1}],BeefyMmrApi:[{methods:BEEFY_MMR_V1$1,version:1}]},definitions$2h={rpc:rpc$w,runtime:runtime$11,types:{BeefyAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefyEquivocationProof:{first:"BeefyVoteMessage",second:"BeefyVoteMessage"},BeefyCompactSignedCommitment:{commitment:"BeefyCommitment",signaturesFrom:"Vec<u8>",validatorSetLen:"u32",signaturesCompact:"Vec<EcdsaSignature>"},BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyVersionedFinalityProof:{_enum:{V0:"Null",V1:"BeefyCompactSignedCommitment"}},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"Vec<(BeefyPayloadId, Bytes)>",BeefyPayloadId:"[u8;2]",BeefyVoteMessage:{commitment:"BeefyCommitment",id:"AuthorityId",signature:"Signature"},MmrRootHash:"H256",ValidatorSetId:"u64",ValidatorSet:{validators:"Vec<AuthorityId>",id:"ValidatorSetId"}}},runtime$10={Benchmark:[{methods:{benchmark_metadata:{description:"Get the benchmark metadata available for this runtime.",params:[{name:"extra",type:"bool"}],type:"(Vec<BenchmarkList>, Vec<StorageInfo>)"},dispatch_benchmark:{description:"Dispatch the given benchmark.",params:[{name:"config",type:"BenchmarkConfig"}],type:"Result<Vec<BenchmarkBatch>, Text>"}},version:1}]},definitions$2g={rpc:{},runtime:runtime$10,types:{BenchmarkBatch:{pallet:"Text",instance:"Text",benchmark:"Text",results:"Vec<BenchmarkResult>"},BenchmarkConfig:{pallet:"Bytes",benchmark:"Bytes",selectedComponents:"Vec<(BenchmarkParameter, u32)>",verify:"bool",internalRepeats:"u32"},BenchmarkList:{pallet:"Bytes",instance:"Bytes",benchmarks:"Vec<BenchmarkMetadata>"},BenchmarkMetadata:{name:"Bytes",components:"Vec<(BenchmarkParameter, u32, u32)>"},BenchmarkParameter:{_enum:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]},BenchmarkResult:{components:"Vec<(BenchmarkParameter, u32)>",extrinsicTime:"u128",storageRootTime:"u128",reads:"u32",repeatReads:"u32",writes:"u32",repeatWrites:"u32",proofSize:"u32",benchKeys:"Vec<(Vec<u8>, u32, u32, bool)>"}}},BB_V2_TO_V4$1={random_seed:{description:"Generate a random seed.",params:[],type:"Hash"}},BB_V2_TO_V5$1={apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResultPre6"}},BB_V2_TO_V6$1={check_inherents:{description:"Check that the inherents are valid.",params:[{name:"block",type:"Block"},{name:"data",type:"InherentData"}],type:"CheckInherentsResult"},inherent_extrinsics:{description:"Generate inherent extrinsics.",params:[{name:"inherent",type:"InherentData"}],type:"Vec<Extrinsic>"}},BB_V3_TO_V6$1={finalize_block:{description:"Finish the current block.",params:[],type:"Header"}},runtime$$={BlockBuilder:[{methods:{apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResult"},...BB_V2_TO_V6$1,...BB_V3_TO_V6$1},version:6},{methods:{...BB_V2_TO_V5$1,...BB_V2_TO_V6$1,...BB_V3_TO_V6$1},version:5},{methods:{...BB_V2_TO_V4$1,...BB_V2_TO_V5$1,...BB_V2_TO_V6$1,...BB_V3_TO_V6$1},version:4},{methods:{...BB_V2_TO_V4$1,...BB_V2_TO_V6$1,...BB_V3_TO_V6$1},version:3},{methods:{finalise_block:{description:"Finish the current block.",params:[],type:"Header"},...BB_V2_TO_V4$1,...BB_V2_TO_V6$1},version:2}]},definitions$2f={rpc:{},runtime:runtime$$,types:{CheckInherentsResult:{okay:"bool",fatalError:"bool",errors:"InherentData"},InherentData:{data:"BTreeMap<InherentIdentifier, Bytes>"},InherentIdentifier:"[u8; 8]"}},definitions$2e={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},definitions$2d={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},rpc$v={call:{deprecated:"Use the runtime interface `api.call.contractsApi.call` instead",description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractExecResult"},getStorage:{deprecated:"Use the runtime interface `api.call.contractsApi.getStorage` instead",description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<Bytes>"},instantiate:{deprecated:"Use the runtime interface `api.call.contractsApi.instantiate` instead",description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequestV1"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractInstantiateResult"},rentProjection:{deprecated:"Not available in newer versions of the contracts interfaces",description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<BlockNumber>"},uploadCode:{deprecated:"Use the runtime interface `api.call.contractsApi.uploadCode` instead",description:"Upload new code without instantiating a contract from it",endpoint:"contracts_upload_code",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"CodeUploadResult"}},SHARED_V1_V2$1={get_storage:{description:"Query a given storage key in a given contract.",params:[{name:"address",type:"AccountId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},upload_code:{description:"Upload new code without instantiating a contract from it.",params:[{name:"origin",type:"AccountId"},{name:"code",type:"Bytes"},{name:"storageDepositLimit",type:"Option<Balance>"}],type:"CodeUploadResult"}},runtime$_={ContractsApi:[{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResult"},...SHARED_V1_V2$1},version:2},{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResultU64"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResultU64"},...SHARED_V1_V2$1},version:1}]},definitions$2c={rpc:rpc$v,runtime:runtime$_,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:"Result<CodeUploadResultValue, DispatchError>",CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:"Result<ContractExecResultOk, DispatchError>",ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"Weight",gasRequired:"Weight",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResultU64:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:"Result<InstantiateReturnValueTo267, Null>",ContractInstantiateResultTo299:"Result<InstantiateReturnValueOk, Null>",ContractInstantiateResult:{gasConsumed:"WeightV2",gasRequired:"WeightV2",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},ContractInstantiateResultU64:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:"Result<InstantiateReturnValueOk, DispatchError>",InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}},AllConvictions$1=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"],definitions$2b={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:AllConvictions$1},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},rpc$u={getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",isUnsafe:!0,params:[{isHistoric:!0,name:"at",type:"Hash"}],type:"Option<BlockStats>"}},definitions$2a={rpc:rpc$u,types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}},runtime$Z={AuthorityDiscoveryApi:[{methods:{authorities:{description:"Retrieve authority identifiers of the current and next authority set.",params:[],type:"Vec<AuthorityId>"}},version:1}]},definitions$29={rpc:{},runtime:runtime$Z,types:{}},definitions$28={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},rpc$t={createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{isOptional:!0,name:"parentHash",type:"BlockHash"}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{isOptional:!0,name:"justification",type:"Justification"}],type:"bool"}},definitions$27={rpc:rpc$t,types:{CreatedBlock:{_alias:{blockHash:"hash"},blockHash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},definitions$26={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmCallInfo:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCreateInfo:{exitReason:"ExitReason",value:"H160",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCallInfoV2:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmCreateInfoV2:{exitReason:"ExitReason",value:"H160",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},EvmWeightInfo:{refTimeLimit:"Option<u64>",proofSizeLimit:"Option<u64>",refTimeUsage:"Option<u64>",proofSizeUsage:"Option<u64>"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},definitions$25={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",ExtrinsicV5:"GenericExtrinsicV5",ExtrinsicPayloadV5:"GenericExtrinsicPayloadV5",ExtrinsicSignatureV5:"GenericExtrinsicSignatureV5",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},runtime$Y={FungiblesApi:[{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>"}},version:1},{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<XcmVersionedAssets, FungiblesAccessError>"}},version:2}]},definitions$24={rpc:{},runtime:runtime$Y,types:{FungiblesAccessError:{_enum:["AssetIdConversionFailed","AmountToBalanceConversionFailed"]}}},definitions$23={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},runtime$X={GenesisBuilder:[{methods:{build_config:{description:"Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the storage.",params:[{name:"json",type:"Vec<u8>"}],type:"Result<(), GenesisBuildErr>"},create_default_config:{description:"Creates the default `RuntimeGenesisConfig` and returns it as a JSON blob.",params:[],type:"Vec<u8>"}},version:1}]},definitions$22={rpc:{},runtime:runtime$X,types:{GenesisBuildErr:"Text"}},definitions$21={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},rpc$s={proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},GRANDPA_V2_V3$1={generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"SetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},grandpa_authorities:{description:"Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.",params:[],type:"AuthorityList"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"GrandpaEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},runtime$W={GrandpaApi:[{methods:{current_set_id:{description:"Get current GRANDPA authority set id.",params:[],type:"SetId"},...GRANDPA_V2_V3$1},version:3},{methods:GRANDPA_V2_V3$1,version:2}]},definitions$20={rpc:rpc$s,runtime:runtime$W,types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},definitions$1$={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},definitions$1_={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Opaque<Bytes>",OpaquePeerId:"Opaque<Bytes>",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},definitions$1Z={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},runtime$V={MixnetApi:[{methods:{current_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},maybe_register:{description:"Try to register a mixnode for the next session.",params:[{name:"session_index",type:"u32"},{name:"mixnode",type:"Mixnode"}],type:"bool"},prev_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},session_status:{description:"Get the index and phase of the current session.",params:[],type:"SessionStatus"}},version:1}]},definitions$1Y={rpc:{},runtime:runtime$V,types:{Mixnode:{externalAddresses:"Vec<Bytes>",kxPublic:"[u8; 32]",peerId:"[u8; 32]"},MixnodesErr:{_enum:{InsufficientRegistrations:{min:"u32",num:"u32"}}},SessionPhase:{_enum:["CoverToCurrent","RequestsToCurrent","CoverToPrev","DisconnectFromPrev"]},SessionStatus:{currentIndex:"u32",phase:"SessionPhase"}}},rpc$r={generateProof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<u64>"},{isOptional:!0,name:"bestKnownBlockNumber",type:"u64"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafBatchProof"},root:{description:"Get the MMR root hash for the current best block.",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrHash"},verifyProof:{description:"Verify an MMR proof",params:[{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"},verifyProofStateless:{description:"Verify an MMR proof statelessly given an mmr_root",params:[{name:"root",type:"MmrHash"},{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"}},MMR_V2$1={generate_proof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<BlockNumber>"},{name:"bestKnownBlockNumber",type:"Option<BlockNumber>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},mmr_leaf_count:{description:"Return the number of MMR blocks in the chain.",params:[],type:"Result<U64, MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"}},MMR_V1$1={generate_batch_proof:{description:"Generate MMR proof for a series of leaves under given indices.",params:[{name:"leafIndices",type:"Vec<MmrLeafIndex>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},generate_proof:{description:"Generate MMR proof for a leaf under given index.",params:[{name:"leafIndex",type:"MmrLeafIndex"}],type:"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_batch_proof:{description:"Verify MMR proof against on-chain MMR for a batch of leaves.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_batch_proof_stateless:{description:"Verify MMR proof against given root hash or a batch of leaves.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"}},runtime$U={MmrApi:[{methods:MMR_V2$1,version:2},{methods:MMR_V1$1,version:1}]},definitions$1X={rpc:rpc$r,runtime:runtime$U,types:{MmrBatchProof:{leafIndices:"Vec<MmrLeafIndex>",leafCount:"MmrNodeIndex",items:"Vec<Hash>"},MmrEncodableOpaqueLeaf:"Bytes",MmrError:{_enum:["InvalidNumericOp","Push","GetRoot","Commit","GenerateProof","Verify","LeafNotFound"," PalletNotIncluded","InvalidLeafIndex","InvalidBestKnownBlock"]},MmrHash:"Hash",MmrLeafBatchProof:{blockHash:"BlockHash",leaves:"Bytes",proof:"Bytes"},MmrLeafIndex:"u64",MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"},MmrNodeIndex:"u64",MmrProof:{leafIndex:"MmrLeafIndex",leafCount:"MmrNodeIndex",items:"Vec<Hash>"}}},runtime$T={NftsApi:[{methods:{attribute:{description:"An attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_attribute:{description:"A collection attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_owner:{description:"A collection owner",params:[{name:"collection",type:"NftCollectionId"}],type:"Option<AccountId>"},custom_attribute:{description:"A custom attribute",params:[{name:"account",type:"AccountId"},{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},owner:{description:"Collection owner",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"}],type:"Option<AccountId>"},system_attribute:{description:"System attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},version:1}]},definitions$1W={rpc:{},runtime:runtime$T,types:{NftCollectionId:"u32",NftItemId:"u32"}},runtime$S={NominationPoolsApi:[{methods:{balance_to_points:{description:"Returns the equivalent points of `new_funds` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"newFunds",type:"Balance"}],type:"Balance"},pending_rewards:{description:"Returns the pending rewards for the given member.",params:[{name:"member",type:"AccountId"}],type:"Balance"},points_to_balance:{description:"Returns the equivalent balance of `points` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"points",type:"Balance"}],type:"Balance"}},version:1}]},definitions$1V={rpc:{},runtime:runtime$S,types:{NpApiError:{_enum:["MemberNotFound","OverflowInPendingRewards"]},NpPoolId:"u32"}},definitions$1U={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},runtime$R={DifficultyApi:[{methods:{difficulty:{description:"Return the target difficulty of the next block.",params:[],type:"Raw"}},version:1}],TimestampApi:[{methods:{timestamp:{description:"API necessary for timestamp-based difficulty adjustment algorithms.",params:[],type:"Moment"}},version:1}]},definitions$1T={rpc:{},runtime:runtime$R,types:{}},definitions$1S={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},definitions$1R={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},definitions$1Q={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}},runtime$Q={SessionKeys:[{methods:{decode_session_keys:{description:"Decode the given public session keys.",params:[{name:"encoded",type:"Bytes"}],type:"Option<Vec<(Bytes, KeyTypeId)>>"},generate_session_keys:{description:"Generate a set of session keys with optionally using the given seed.",params:[{name:"seed",type:"Option<Bytes>"}],type:"Bytes"}},version:1}]},keyTypes$1={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"},definitions$1P={rpc:{},runtime:runtime$Q,types:{...keyTypes$1,FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Bytes>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"}},definitions$1O={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}},runtime$P={StakingApi:[{methods:{nominations_quota:{description:"Returns the nominations quota for a nominator with a given balance.",params:[{name:"balance",type:"Balance"}],type:"u32"}},version:1}]},deprecated$1={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},phragmen$1={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionResultToSpec10:{electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure<AccountId, Balance>)>",compute:"ElectionCompute"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"},definitions$1N={rpc:{},runtime:runtime$P,types:{...deprecated$1,...phragmen$1,ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{_fallback:"StakingLedgerTo223",stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}}},runtime$O={ValidateStatement:[{methods:{valdate_statement:{description:"Validate the statement.",params:[{name:"source",type:"StatementStoreStatementSource"},{name:"statement",type:"SpStatementStoreStatement"}],type:"Result<StatementStoreValidStatement, StatementStoreInvalidStatement>"}},version:1}]},definitions$1M={rpc:{},runtime:runtime$O,types:{StatementStoreStatementSource:{_enum:["Chain","Network","Local"]},StatementStoreValidStatement:{maxCount:"u32",maxSize:"u32"},StatementStoreInvalidStatement:{_enum:["BadProof","NoProof","InternalError"]}}},definitions$1L={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},rpc$q={genSyncSpec:{description:"Returns the json-serialized chainspec running the node, with a sync state.",endpoint:"sync_state_genSyncSpec",params:[{name:"raw",type:"bool"}],type:"Json"}},definitions$1K={rpc:rpc$q,types:{}},rpc$p={accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},addLogFilter:{description:"Adds the supplied directives to the current log filter",isUnsafe:!0,params:[{name:"directives",type:"Text"}],type:"Null"},addReservedPeer:{description:"Adds a reserved peer",isUnsafe:!0,params:[{name:"peer",type:"Text"}],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",isUnsafe:!0,params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ApplyExtrinsicResult"},health:{description:"Return health status of the node",noErrorLog:!0,params:[],type:"Health"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},name:{description:"Retrieves the node name",params:[],type:"Text"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",isUnsafe:!0,params:[],type:"NetworkState"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},peers:{description:"Returns the currently connected peers",isUnsafe:!0,params:[],type:"Vec<PeerInfo>"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},removeReservedPeer:{description:"Remove a reserved peer",isUnsafe:!0,params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",isUnsafe:!0,params:[],type:"Null"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},version:{description:"Retrieves the version of the node",params:[],type:"Text"}},runtime$N={AccountNonceApi:[{methods:{account_nonce:{description:"The API to query account nonce (aka transaction index)",params:[{name:"accountId",type:"AccountId"}],type:"Index"}},version:1}]},definitions$1J={rpc:rpc$p,runtime:runtime$N,types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ApplyExtrinsicResultPre6:"Result<DispatchOutcomePre6, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError",Exhausted:"Null",Corruption:"Null",Unavailable:"Null"}},DispatchErrorPre6:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorPre6First:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorModuleU8:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorModule:"DispatchErrorModuleU8a",DispatchErrorModulePre6:"DispatchErrorModuleU8",DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchOutcomePre6:"Result<(), DispatchErrorPre6>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null",BadSigner:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Unsupported","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},TransactionalError:{_enum:["LimitReached","NoLayer"]},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},definitions$1I={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},definitions$1H={rpc:{},types:{Multiplier:"Fixed128"}},runtime$M={TaggedTransactionQueue:[{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"},{name:"blockHash",type:"BlockHash"}],type:"TransactionValidity"}},version:3},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:2},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:1}]},definitions$1G={rpc:{},runtime:runtime$M,types:{TransactionSource:{_enum:["InBlock","Local","External"]},TransactionValidity:"Result<ValidTransaction, TransactionValidityError>",ValidTransaction:{priority:"TransactionPriority",requires:"Vec<TransactionTag>",provides:"Vec<TransactionTag>",longevity:"TransactionLongevity",propagate:"bool"}}},definitions$1F={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},definitions$1E={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},definitions$1D={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},definitions$1C={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},definitions$1B={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},definitions$1A={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},definitions$1z={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}},runtime$L={AuraUnincludedSegmentApi:[{methods:{can_build_upon:{description:"Whether it is legal to extend the chain",params:[{name:"includedHash",type:"BlockHash"},{name:"slot",type:"Slot"}],type:"bool"}},version:1}],CollectCollationInfo:[{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[{name:"header",type:"Header"}],type:"CollationInfo"}},version:2},{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[],type:"CollationInfoV1"}},version:1}]},dmpQueue$1={CollationInfo:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber",headData:"HeadData"},CollationInfoV1:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber"},ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}},definitions$1y={rpc:{},runtime:runtime$L,types:dmpQueue$1},finalityV1$1={methods:{best_finalized:{description:"Returns number and hash of the best finalized header known to the bridge module.",params:[],type:"(BlockNumber, Hash)"}},version:1},runtime$K={KusamaFinalityApi:[finalityV1$1],PolkadotFinalityApi:[finalityV1$1],RococoFinalityApi:[finalityV1$1],WestendFinalityApi:[finalityV1$1]},definitions$1x={rpc:{},runtime:runtime$K,types:{}},hrmpTypes$1={HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}},PH_V1_TO_V2$1={assumed_validation_data:{description:"Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.",params:[{name:"paraId",type:"ParaId"},{name:"hash",type:"Hash"}],type:"Option<(PersistedValidationData, ValidationCodeHash)>"},availability_cores:{description:"Yields information on all availability cores as relevant to the child block.",params:[],type:"Vec<CoreState>"},candidate_events:{description:"Get a vector of events concerning candidates that occurred within a block.",params:[],type:"Vec<CandidateEvent>"},candidate_pending_availability:{description:"Get the receipt of a candidate pending availability.",params:[{name:"paraId",type:"ParaId"}],type:"Option<CommittedCandidateReceipt>"},check_validation_outputs:{description:"Checks if the given validation outputs pass the acceptance criteria.",params:[{name:"paraId",type:"ParaId"},{name:"outputs",type:"CandidateCommitments"}],type:"bool"},dmq_contents:{description:"Get all the pending inbound messages in the downward message queue for a para.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundDownwardMessage>"},inbound_hrmp_channels_contents:{description:"Get the contents of all channels addressed to the given recipient.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundHrmpMessage>"},on_chain_votes:{description:"Scrape dispute relevant from on-chain, backing votes and resolved disputes.",params:[],type:"Option<ScrapedOnChainVotes>"},persisted_validation_data:{description:"Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<PersistedValidationData>"},session_index_for_child:{description:"Returns the session index expected at a child of the block.",params:[],type:"SessionIndex"},validation_code:{description:"Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCode>"},validation_code_by_hash:{description:"Get the validation code from its hash.",params:[{name:"hash",type:"ValidationCodeHash"}],type:"Option<ValidationCode>"},validator_groups:{description:"Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on",params:[],type:"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)"},validators:{description:"Get the current validators.",params:[],type:"Vec<ValidatorId>"}},PH_V2_TO_V3$1={pvfs_require_precheck:{description:"Returns code hashes of PVFs that require pre-checking by validators in the active set.",params:[],type:"Vec<ValidationCodeHash>"},session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<SessionInfo>"},submit_pvf_check_statement:{description:"Submits a PVF pre-checking statement into the transaction pool.",params:[{name:"stmt",type:"PvfCheckStatement"},{name:"signature",type:"ValidatorSignature"}],type:"Null"},validation_code_hash:{description:"Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCodeHash>"}},PH_V3$1={disputes:{description:"Returns all onchain disputes.",params:[],type:"Vec<(SessionIndex, CandidateHash, DisputeState)>"}},PH_V4$1={session_executor_params:{description:"Returns execution parameters for the session.",params:[{name:"sessionIndex",type:"SessionIndex"}],type:"Option<ExecutorParams>"}},PH_V5$1={key_ownership_proof:{description:"Returns a merkle proof of a validator session key",params:[{name:"validatorId",type:"ValidatorId"}],type:"Option<OpaqueKeyOwnershipProof>"},submit_report_dispute_lost:{description:"Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session",params:[{name:"disputeProof",type:"DisputeProof"},{name:"keyOwnershipProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"},unapplied_slashes:{description:"Returns a list of validators that lost a past session dispute and need to be slashed",params:[],type:"Vec<(SessionIndex, CandidateHash, PendingSlashes)>"}},PH_V6$1={minimum_backing_votes:{description:"Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!",params:[],type:"u32"}},PH_V7$1={async_backing_params:{description:"Returns candidate's acceptance limitations for asynchronous backing for a relay parent",params:[],type:"AsyncBackingParams"},para_backing_state:{description:"Returns the state of parachain backing for a given para",params:[{name:"paraId",type:"ParaId"}],type:"Option<BackingState>"}},PH_V8$1={disabled_validators:{description:"Returns a list of all disabled validators at the given block",params:[],type:"ValidatorIndex"}},PH_V9$1={node_features:{description:"Get node features. This is a staging method! Do not use on production runtimes!",params:[],type:"NodeFeatures"}},PH_V10$1={approval_voting_params:{description:"Approval voting configuration parameters",params:[],type:"ApprovalVotingParams"}},PH_V11$1={claim_queue:{description:"Claim queue",params:[],type:"BTreeMap<CoreIndex, Vec<u32>>"}},runtime$J={ParachainHost:[{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1,...PH_V6$1,...PH_V7$1,...PH_V8$1,...PH_V9$1,...PH_V10$1,...PH_V11$1},version:11},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1,...PH_V6$1,...PH_V7$1,...PH_V8$1,...PH_V9$1,...PH_V10$1},version:10},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1,...PH_V6$1,...PH_V7$1,...PH_V8$1,...PH_V9$1},version:9},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1,...PH_V6$1,...PH_V7$1,...PH_V8$1},version:8},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1,...PH_V6$1,...PH_V7$1},version:7},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1,...PH_V6$1},version:6},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1,...PH_V5$1},version:5},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1,...PH_V4$1},version:4},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1,...PH_V3$1},version:3},{methods:{...PH_V1_TO_V2$1,...PH_V2_TO_V3$1},version:2},{methods:{session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<OldV1SessionInfo>"},...PH_V1_TO_V2$1},version:1}]},SlotRange10$1={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},SlotRange$1={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},oldTypes$1={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"},slotTypes$1={...oldTypes$1,AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10:SlotRange10$1,SlotRange:SlotRange$1,WinningData10:`[WinningDataEntry; ${SlotRange10$1._enum.length}]`,WinningData:`[WinningDataEntry; ${SlotRange$1._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"},proposeTypes$1={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},cumulusTypes$1={ServiceQuality:{_enum:["Ordered","Fast"]}},disputeTypes$1={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExecutorParam:{_enum:{Phantom:"Null",MaxMemoryPages:"u32",StackLogicalMax:"u32",StackNativeMax:"u32",PrecheckingMaxMemory:"u64",PvfPrepTimeout:"(PvfPrepTimeoutKind, u64)",PvfExecTimeout:"(PvfExecTimeoutKind, u64)"}},ExecutorParamsHash:"Hash",ExecutorParams:"Vec<ExecutorParam>",ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",PvfExecTimeoutKind:{_enum:["Backing","Approval"]},PvfPrepTimeoutKind:{_enum:["Precheck","Lenient"]},ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}},definitions$1w={rpc:{},runtime:runtime$J,types:{...cumulusTypes$1,...disputeTypes$1,...hrmpTypes$1,...proposeTypes$1,...slotTypes$1,AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},ApprovalVotingParams:{maxApprovalCoalesceCount:"u32"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AsyncBackingParams:{maxCandidateDepth:"u32",allowedAncestryLen:"u32"},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BackingState:{constraints:"Constraints",pendingAvailability:"Vec<CandidatePendingAvailability>"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateEvent:{_enum:{CandidateBacked:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateIncluded:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateTimedOut:"(CandidateReceipt, HeadData, CoreIndex)"}},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},Constraints:{minRelayParentNumber:"BlockNumber",maxPovSize:"u32",maxCodeSize:"u32",umpRemaining:"u32",umpRemainingBytes:"u32",maxUmpNumPerCandidate:"u32",dmpRemainingMessages:"Vec<BlockNumber>",hrmpInbound:"InboundHrmpLimitations",hrmpChannelsOut:"HashMap<ParaId, OutboundHrmpChannelLimitations>",maxHrmpNumPerCandidate:"u32",requiredParent:"HeadData",validationCodeHash:"ValidationCodeHash",upgradeRestriction:"Option<UpgradeRestriction>",futureValidationCode:"Option<(BlockNumber, ValidationCodeHash)>"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},CoreState:{_enum:{Occupied:"OccupiedCore",Scheduled:"ScheduledCore",Free:"Null"}},DisputeProof:{timeSlot:"DisputesTimeSlot",kind:"SlashingOffenceKind",validatorIndex:"ValidatorIndex",validatorId:"ValidatorId"},DisputesTimeSlot:{sessionIndex:"SessionIndex",candidateHash:"CandidateHash"},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GroupRotationInfo:{sessionStartBlock:"BlockNumber",groupRotationFrequency:"BlockNumber",now:"BlockNumber"},GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpLimitations:{validWatermarks:"Vec<BlockNumber>"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",NodeFeatures:"BitVec",OccupiedCore:{nextUpOnAvailable:"Option<ScheduledCore>",occupiedSince:"BlockNumber",timeOutAt:"BlockNumber",nextUpOnTimeOut:"Option<ScheduledCore>",availability:"BitVec",groupResponsible:"GroupIndex",candidateHash:"CandidateHash",candidateDescriptor:"CandidateDescriptor"},OccupiedCoreAssumption:{_enum:["Included,","TimedOut","Free"]},OutboundHrmpChannelLimitations:{bytesRemaining:"u32",messagesRemaining:"u32"},OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},PendingSlashes:{_alias:{slashKeys:"keys"},slashKeys:"BTreeMap<ValidatorIndex, ValidatorId>",kind:"SlashingOffenceKind"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},PvfCheckStatement:{accept:"bool",subject:"ValidationCodeHash",sessionIndex:"SessionIndex",validatorIndex:"ParaValidatorIndex"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},ScheduledCore:{paraId:"ParaId",collator:"Option<CollatorId>"},Scheduling:{_enum:["Always","Dynamic"]},ScrapedOnChainVotes:{session:"SessionIndex",backingValidatorsPerCandidate:"Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>",disputes:"MultiDisputeStatementSet"},SessionInfo:{activeValidatorIndices:"Vec<ParaValidatorIndex>",randomSeed:"[u8; 32]",disputePeriod:"SessionIndex",validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},OldV1SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ParaValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},SlashingOffenceKind:{_enum:["ForInvalid","AgainstValid"]},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"}},definitions$1v={rpc:{},types:{Approvals:"[bool; 4]"}},definitions$1u={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}},runtime$I={DryRunApi:[{methods:{dry_run_call:{description:"Dry run call",params:[{name:"origin",type:"OriginCaller"},{name:"call",type:"RuntimeCall"}],type:"Result<CallDryRunEffects, XcmDryRunApiError>"},dry_run_xcm:{description:"Dry run XCM program",params:[{name:"originLocation",type:"VersionedMultiLocation"},{name:"xcm",type:"VersionedXcm"}],type:"Result<XcmDryRunEffects, XcmDryRunApiError>"}},version:1},{methods:{dry_run_call:{description:"Dry run call",params:[{name:"origin",type:"OriginCaller"},{name:"call",type:"RuntimeCall"},{name:"resultXcmsVersion",type:"u32"}],type:"Result<CallDryRunEffects, XcmDryRunApiError>"},dry_run_xcm:{description:"Dry run XCM program",params:[{name:"originLocation",type:"VersionedMultiLocation"},{name:"xcm",type:"VersionedXcm"}],type:"Result<XcmDryRunEffects, XcmDryRunApiError>"}},version:2}]},definitions$1t={rpc:{},runtime:runtime$I,types:{PostDispatchInfo:{actualWeight:"Option<Weight>",paysFee:"Pays"},DispatchResultWithPostInfo:"Result<PostDispatchInfo, DispatchError>",CallDryRunEffects:{executionResult:"DispatchResultWithPostInfo",emittedEvents:"Vec<Event>",localXcm:"Option<VersionedXcm>",forwardedXcms:"Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>"},XcmDryRunEffects:{executionResult:"OutcomeV4",emittedEvents:"Vec<Event>",forwardedXcms:"Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>"},XcmDryRunApiError:{_enum:["Unimplemented","VersionedConversionFailed"]}}};function evaluateThis$2(et){return et("return this")}const xglobal$2=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:evaluateThis$2(Function);function extractGlobal$2(et,tt){return typeof xglobal$2[et]>"u"?tt:xglobal$2[et]}let TextEncoder$6=class{encode(tt){const ot=tt.length,dt=new Uint8Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=tt.charCodeAt(ft);return dt}};const TextEncoder$5=extractGlobal$2("TextEncoder",TextEncoder$6);function isFunction$5(et){return typeof et=="function"}function invalidFallback$2(){return Number.NaN}const BigInt$3=extractGlobal$2("BigInt",invalidFallback$2),CHR$5="0123456789abcdef",U8$6=new Uint8Array(256),U16$6=new Uint8Array(256*256);for(let et=0,tt=CHR$5.length;et<tt;et++)U8$6[CHR$5[et].charCodeAt(0)|0]=et|0,et>9&&(U8$6[CHR$5[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$6[tt|ot]=U8$6[et]<<4|U8$6[ot]}function hexToU8a$3(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$6[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}const REGEX_HEX_PREFIXED$3=/^0x[\da-fA-F]+$/;function isHex$3(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED$3.test(et))&&(tt===-1?et.length%2===0:et.length===2+Math.ceil(tt/4))}typeof BigInt$3=="function"&&BigInt$3.asIntN;const hasBuffer$2=typeof xglobal$2.Buffer=="function"&&typeof xglobal$2.Buffer.isBuffer=="function";xglobal$2.process;function isBuffer$2(et){return hasBuffer$2&&!!et&&isFunction$5(et.readDoubleLE)&&xglobal$2.Buffer.isBuffer(et)}function isU8a$2(et){return(et&&et.constructor)===Uint8Array||et instanceof Uint8Array}const encoder$2=new TextEncoder$5;function stringToU8a$2(et){return et?encoder$2.encode(et.toString()):new Uint8Array}function u8aToU8a$2(et){return isU8a$2(et)?isBuffer$2(et)?new Uint8Array(et):et:isHex$3(et)?hexToU8a$3(et):Array.isArray(et)?new Uint8Array(et):stringToU8a$2(et)}function u8aEq$1(et,tt){const ot=u8aToU8a$2(et),dt=u8aToU8a$2(tt);if(ot.length===dt.length){const ft=new DataView(ot.buffer,ot.byteOffset),pt=new DataView(dt.buffer,dt.byteOffset),mt=ot.length%4|0,ht=ot.length-mt|0;for(let bt=0;bt<ht;bt+=4)if(ft.getUint32(bt)!==pt.getUint32(bt))return!1;for(let bt=ht,yt=ot.length;bt<yt;bt++)if(ot[bt]!==dt[bt])return!1;return!0}return!1}const U8$5=new Array(256),U16$5=new Array(256*256);for(let et=0;et<256;et++)U8$5[et]=et.toString(16).padStart(2,"0");for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$5[tt|ot]=U8$5[et]+U8$5[ot]}function hex$2(et,tt){const ot=et.length%2|0,dt=et.length-ot|0;for(let ft=0;ft<dt;ft+=2)tt+=U16$5[et[ft]<<8|et[ft+1]];return ot&&(tt+=U8$5[et[dt]|0]),tt}function u8aToHex$2(et,tt=-1,ot=!0){const dt=ot?"0x":"";if(et!=null&&et.length){if(tt>0){const ft=Math.ceil(tt/8);if(et.length>ft)return`${hex$2(et.subarray(0,ft/2),dt)}…${hex$2(et.subarray(et.length-ft/2),"")}`}}else return dt;return hex$2(et,dt)}function isBigInt$3(et){return typeof et=="bigint"}function isString$1(et){return typeof et=="string"||et instanceof String}function replacer$1(et,tt){return isBigInt$3(tt)?tt.toString():tt}function stringify$2(et,tt){return JSON.stringify(et,replacer$1,tt)}function isNumber$1(et){return typeof et=="number"}function isUndefined$2(et){return et===void 0}function objectSpread$1(et,...tt){const ot=new Set(["__proto__","constructor","prototype"]);for(let dt=0,ft=tt.length;dt<ft;dt++){const pt=tt[dt];if(pt)if(typeof pt.entries=="function")for(const[mt,ht]of pt.entries())ot.has(mt)||(et[mt]=ht);else{const mt=Object.create(null);for(const[ht,bt]of Object.entries(pt))ot.has(ht)||(mt[ht]=bt);Object.assign(et,mt)}}return et}var TypeDefInfo;(function(et){et[et.BTreeMap=0]="BTreeMap",et[et.BTreeSet=1]="BTreeSet",et[et.Compact=2]="Compact",et[et.DoNotConstruct=3]="DoNotConstruct",et[et.Enum=4]="Enum",et[et.HashMap=5]="HashMap",et[et.Int=6]="Int",et[et.Linkage=7]="Linkage",et[et.Null=8]="Null",et[et.Option=9]="Option",et[et.Plain=10]="Plain",et[et.Range=11]="Range",et[et.RangeInclusive=12]="RangeInclusive",et[et.Result=13]="Result",et[et.Set=14]="Set",et[et.Si=15]="Si",et[et.Struct=16]="Struct",et[et.Tuple=17]="Tuple",et[et.UInt=18]="UInt",et[et.Vec=19]="Vec",et[et.VecFixed=20]="VecFixed",et[et.WrapperKeepOpaque=21]="WrapperKeepOpaque",et[et.WrapperOpaque=22]="WrapperOpaque"})(TypeDefInfo||(TypeDefInfo={}));function evaluateThis$1(et){return et("return this")}const xglobal$1=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:evaluateThis$1(Function);function extractGlobal$1(et,tt){return typeof xglobal$1[et]>"u"?tt:xglobal$1[et]}let TextDecoder$3=class{constructor(tt){Ot(this,"__encoding");this.__encoding=tt}decode(tt){let ot="";for(let dt=0,ft=tt.length;dt<ft;dt++)ot+=String.fromCharCode(tt[dt]);return ot}};const TextDecoder$2=extractGlobal$1("TextDecoder",TextDecoder$3);let TextEncoder$4=class{encode(tt){const ot=tt.length,dt=new Uint8Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=tt.charCodeAt(ft);return dt}};const TextEncoder$3=extractGlobal$1("TextEncoder",TextEncoder$4);function isFunction$4(et){return typeof et=="function"}function invalidFallback$1(){return Number.NaN}const BigInt$2=extractGlobal$1("BigInt",invalidFallback$1),CHR$4="0123456789abcdef",U8$4=new Uint8Array(256),U16$4=new Uint8Array(256*256);for(let et=0,tt=CHR$4.length;et<tt;et++)U8$4[CHR$4[et].charCodeAt(0)|0]=et|0,et>9&&(U8$4[CHR$4[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$4[tt|ot]=U8$4[et]<<4|U8$4[ot]}function hexToU8a$2(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$4[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}function isBn(et){return BN.isBN(et)}const REGEX_HEX_PREFIXED$2=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX$2=/^[\da-fA-F]+$/;function isHex$2(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED$2.test(et))&&(tt===-1?ot||et.length%2===0:et.length===2+Math.ceil(tt/4))}function isObject$4(et){return!!et&&typeof et=="object"}function isOn$2(...et){return tt=>(isObject$4(tt)||isFunction$4(tt))&&et.every(ot=>isFunction$4(tt[ot]))}function isOnObject$1(...et){return tt=>isObject$4(tt)&&et.every(ot=>isFunction$4(tt[ot]))}const isToBigInt$2=isOn$2("toBigInt"),isToBn$3=isOn$2("toBn");typeof BigInt$2=="function"&&BigInt$2.asIntN;const hasBuffer$1=typeof xglobal$1.Buffer=="function"&&typeof xglobal$1.Buffer.isBuffer=="function";xglobal$1.process;function isBuffer$1(et){return hasBuffer$1&&!!et&&isFunction$4(et.readDoubleLE)&&xglobal$1.Buffer.isBuffer(et)}function isU8a$1(et){return(et&&et.constructor)===Uint8Array||et instanceof Uint8Array}const encoder$1=new TextEncoder$3;function stringToU8a$1(et){return et?encoder$1.encode(et.toString()):new Uint8Array}function u8aToU8a$1(et){return isU8a$1(et)?isBuffer$1(et)?new Uint8Array(et):et:isHex$2(et)?hexToU8a$2(et):Array.isArray(et)?new Uint8Array(et):stringToU8a$1(et)}function u8aConcatStrict$1(et,tt=0){const ot=et.length;let dt=0;if(!tt)for(let pt=0;pt<ot;pt++)tt+=et[pt].length;const ft=new Uint8Array(tt);for(let pt=0;pt<ot;pt++)ft.set(et[pt],dt),dt+=et[pt].length;return ft}function u8aToBn(et,{isLe:tt=!0,isNegative:ot=!1}={}){tt||(et=et.slice().reverse());const dt=et.length;if(ot&&dt&&et[dt-1]&128)switch(dt){case 0:return new BN(0);case 1:return new BN((et[0]^255)*-1-1);case 2:return new BN((et[0]+(et[1]<<8)^65535)*-1-1);case 3:return new BN((et[0]+(et[1]<<8)+(et[2]<<16)^16777215)*-1-1);case 4:return new BN((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)*-1-1);case 5:return new BN(((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)+(et[4]^255)*4294967296)*-1-1);case 6:return new BN(((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)+(et[4]+(et[5]<<8)^65535)*4294967296)*-1-1);default:return new BN(et,"le").fromTwos(dt*8)}switch(dt){case 0:return new BN(0);case 1:return new BN(et[0]);case 2:return new BN(et[0]+(et[1]<<8));case 3:return new BN(et[0]+(et[1]<<8)+(et[2]<<16));case 4:return new BN(et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216);case 5:return new BN(et[0]+(et[1]<<8)+(et[2]<<16)+(et[3]+(et[4]<<8))*16777216);case 6:return new BN(et[0]+(et[1]<<8)+(et[2]<<16)+(et[3]+(et[4]<<8)+(et[5]<<16))*16777216);default:return new BN(et,"le")}}function u8aToFloat(et,{bitLength:tt=32,isLe:ot=!0}={}){if(tt!==32&&tt!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");if(et.length<tt/8)throw new Error(`Invalid input buffer provided, expected at least ${tt/8} bytes, found ${et.length}`);const dt=new DataView(et.buffer,et.byteOffset);return tt===32?dt.getFloat32(0,ot):dt.getFloat64(0,ot)}const U8$3=new Array(256),U16$3=new Array(256*256);for(let et=0;et<256;et++)U8$3[et]=et.toString(16).padStart(2,"0");for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$3[tt|ot]=U8$3[et]+U8$3[ot]}function hex$1(et,tt){const ot=et.length%2|0,dt=et.length-ot|0;for(let ft=0;ft<dt;ft+=2)tt+=U16$3[et[ft]<<8|et[ft+1]];return ot&&(tt+=U8$3[et[dt]|0]),tt}function u8aToHex$1(et,tt=-1,ot=!0){const dt=ot?"0x":"";if(et!=null&&et.length){if(tt>0){const ft=Math.ceil(tt/8);if(et.length>ft)return`${hex$1(et.subarray(0,ft/2),dt)}…${hex$1(et.subarray(et.length-ft/2),"")}`}}else return dt;return hex$1(et,dt)}function u8aToNumber(et,{isLe:tt=!0,isNegative:ot=!1}={}){tt||(et=et.slice().reverse());const dt=et.length;if(ot&&dt&&et[dt-1]&128)switch(dt){case 0:return 0;case 1:return(et[0]^255)*-1-1;case 2:return(et[0]+(et[1]<<8)^65535)*-1-1;case 3:return(et[0]+(et[1]<<8)+(et[2]<<16)^16777215)*-1-1;case 4:return(et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)*-1-1;case 5:return((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)+(et[4]^255)*4294967296)*-1-1;case 6:return((et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216^4294967295)+(et[4]+(et[5]<<8)^65535)*4294967296)*-1-1;default:throw new Error("Value more than 48-bits cannot be reliably converted")}switch(dt){case 0:return 0;case 1:return et[0];case 2:return et[0]+(et[1]<<8);case 3:return et[0]+(et[1]<<8)+(et[2]<<16);case 4:return et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216;case 5:return et[0]+(et[1]<<8)+(et[2]<<16)+(et[3]+(et[4]<<8))*16777216;case 6:return et[0]+(et[1]<<8)+(et[2]<<16)+(et[3]+(et[4]<<8)+(et[5]<<16))*16777216;default:throw new Error("Value more than 48-bits cannot be reliably converted")}}const decoder$1=new TextDecoder$2("utf-8");function u8aToString$1(et){return et?decoder$1.decode(et):""}function hexStripPrefix$2(et){if(!et||et==="0x")return"";if(REGEX_HEX_PREFIXED$2.test(et))return et.substring(2);if(REGEX_HEX_NOPREFIX$2.test(et))return et;throw new Error(`Expected hex value to convert, found '${et}'`)}function hexToBn$2(et,{isLe:tt=!1,isNegative:ot=!1}={}){if(!et||et==="0x")return new BN(0);const dt=hexStripPrefix$2(et),ft=new BN(dt,16,tt?"le":"be");return ot?ft.fromTwos(dt.length*4):ft}const BN_ONE=new BN(1),BN_TWO=new BN(2),BN_HUNDRED=new BN(100),BN_MILLION=new BN(1e6),BN_BILLION=new BN(1e9),BN_QUINTILL=BN_BILLION.mul(BN_BILLION);function isBigInt$2(et){return typeof et=="bigint"}function bnToBn$2(et){return et?BN.isBN(et)?et:isHex$2(et)?hexToBn$2(et.toString()):isBigInt$2(et)?new BN(et.toString()):isToBn$3(et)?et.toBn():isToBigInt$2(et)?new BN(et.toBigInt().toString()):new BN(et):new BN(0)}const DEFAULT_OPTS$1={bitLength:-1,isLe:!0,isNegative:!1};function bnToU8a$1(et,{bitLength:tt=-1,isLe:ot=!0,isNegative:dt=!1}=DEFAULT_OPTS$1){const ft=bnToBn$2(et),pt=Math.ceil(tt===-1?ft.bitLength()/8:(tt||0)/8);if(!et)return tt===-1?new Uint8Array(1):new Uint8Array(pt);const mt=new Uint8Array(pt),ht=dt?ft.toTwos(pt*8):ft;return mt.set(ht.toArray(ot?"le":"be",pt),0),mt}function bnToHex(et,{bitLength:tt=-1,isLe:ot=!1,isNegative:dt=!1}={}){return u8aToHex$1(bnToU8a$1(et,{bitLength:tt,isLe:ot,isNegative:dt}))}const MAX_U8=BN_TWO.pow(new BN(6)).isub(BN_ONE),MAX_U16=BN_TWO.pow(new BN(14)).isub(BN_ONE),MAX_U32=BN_TWO.pow(new BN(30)).isub(BN_ONE),BL_16={bitLength:16},BL_32={bitLength:32};function compactToU8a(et){const tt=bnToBn$2(et);if(tt.lte(MAX_U8))return new Uint8Array([tt.toNumber()<<2]);if(tt.lte(MAX_U16))return bnToU8a$1(tt.shln(2).iadd(BN_ONE),BL_16);if(tt.lte(MAX_U32))return bnToU8a$1(tt.shln(2).iadd(BN_TWO),BL_32);const ot=bnToU8a$1(tt);let dt=ot.length;for(;ot[dt-1]===0;)dt--;if(dt<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return u8aConcatStrict$1([new Uint8Array([(dt-4<<2)+3]),ot.subarray(0,dt)])}function compactAddLength(et){return u8aConcatStrict$1([compactToU8a(et.length),et])}function compactFromU8a(et){const tt=u8aToU8a$1(et);switch(tt[0]&3){case 0:return[1,new BN(tt[0]>>>2)];case 1:return[2,new BN(tt[0]+(tt[1]<<8)>>>2)];case 2:return[4,new BN(tt[0]+(tt[1]<<8)+(tt[2]<<16)+tt[3]*16777216>>>2)];default:{const ot=(tt[0]>>>2)+5;switch(ot){case 5:return[5,new BN(tt[1]+(tt[2]<<8)+(tt[3]<<16)+tt[4]*16777216)];case 6:return[6,new BN(tt[1]+(tt[2]<<8)+(tt[3]<<16)+(tt[4]+(tt[5]<<8))*16777216)];case 7:return[7,new BN(tt[1]+(tt[2]<<8)+(tt[3]<<16)+(tt[4]+(tt[5]<<8)+(tt[6]<<16))*16777216)];default:return[ot,u8aToBn(tt.subarray(1,ot))]}}}}function compactFromU8aLim(et){switch(et[0]&3){case 0:return[1,et[0]>>>2];case 1:return[2,et[0]+(et[1]<<8)>>>2];case 2:return[4,et[0]+(et[1]<<8)+(et[2]<<16)+et[3]*16777216>>>2];default:switch((et[0]>>>2)+5){case 5:return[5,et[1]+(et[2]<<8)+(et[3]<<16)+et[4]*16777216];case 6:return[6,et[1]+(et[2]<<8)+(et[3]<<16)+(et[4]+(et[5]<<8))*16777216];case 7:return[7,et[1]+(et[2]<<8)+(et[3]<<16)+(et[4]+(et[5]<<8)+(et[6]<<16))*16777216];default:throw new Error("Compact input is > Number.MAX_SAFE_INTEGER")}}}function compactStripLength(et){const[tt,ot]=compactFromU8a(et),dt=tt+ot.toNumber();return[dt,et.subarray(tt,dt)]}function floatToU8a(et=0,{bitLength:tt=32,isLe:ot=!0}={}){if(tt!==32&&tt!==64)throw new Error("Invalid bitLength provided, expected 32 or 64");const dt=new Uint8Array(tt/8),ft=new DataView(dt.buffer,dt.byteOffset);return tt===32?ft.setFloat32(0,Number(et),ot):ft.setFloat64(0,Number(et),ot),dt}function isBoolean(et){return typeof et=="boolean"}const NUMBER_REGEX=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function formatDecimal(et,tt=","){const ot=et[0].startsWith("-"),dt=ot?et.substring(1).match(NUMBER_REGEX):et.match(NUMBER_REGEX);return dt?`${ot?"-":""}${dt.join(tt)}`:et}function getSeparator(et){return{decimal:.1.toLocaleString(et,{useGrouping:!1}).charAt(1),thousand:1e3.toLocaleString(et,{useGrouping:!0}).replace(/\d/g,"").charAt(0)}}const SI_MID=8,SI=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function findSi(et){for(let tt=0,ot=SI.length;tt<ot;tt++)if(SI[tt].value===et)return SI[tt];return SI[SI_MID]}function calcSi(et,tt,ot){if(ot)return findSi(ot);const dt=SI_MID-1+Math.ceil((et.length-tt)/3);return SI[dt]||SI[dt<0?0:SI.length-1]}const DEFAULT_DECIMALS=0,DEFAULT_UNIT=SI[SI_MID].text;let defaultDecimals=DEFAULT_DECIMALS,defaultUnit=DEFAULT_UNIT;function _formatBalance(et,{decimals:tt=defaultDecimals,forceUnit:ot,locale:dt="en",withAll:ft=!1,withSi:pt=!0,withSiFull:mt=!1,withUnit:ht=!0,withZero:bt=!0}={}){let yt=bnToBn$2(et).toString();if(yt.length===0||yt==="0")return"0";let xt="";yt[0].startsWith("-")&&(xt="-",yt=yt.substring(1));const gt=calcSi(yt,tt,ot),wt=yt.length-(tt+gt.power),Pt=wt<=0?"0":yt.substring(0,wt);let St=yt.padStart(wt<0?tt:1,"0").substring(wt<0?0:wt).padEnd(ft?Math.max(tt,4):4,"0").substring(0,ft?Math.max(4,tt+gt.power):4);if(!bt){let Nt=St.length-1;do St[Nt]==="0"&&Nt--;while(St[Nt]==="0");St=St.substring(0,Nt+1)}const Et=isBoolean(ht)?SI[SI_MID].text:ht,Lt=pt||mt?gt.value==="-"?ht?` ${Et}`:"":` ${mt?`${gt.text}${ht?" ":""}`:gt.value}${ht?Et:""}`:"",{decimal:It,thousand:kt}=getSeparator(dt);return`${xt}${formatDecimal(Pt,kt)}${St&&`${It}${St}`}${Lt}`}const formatBalance$1=_formatBalance;formatBalance$1.calcSi=(et,tt=defaultDecimals)=>calcSi(et,tt);formatBalance$1.findSi=findSi;formatBalance$1.getDefaults=()=>({decimals:defaultDecimals,unit:defaultUnit});formatBalance$1.getOptions=(et=defaultDecimals)=>SI.filter(({power:tt})=>tt<0?et+tt>=0:!0);formatBalance$1.setDefaults=({decimals:et,unit:tt})=>{defaultDecimals=(Array.isArray(et)?et[0]:et)??defaultDecimals,defaultUnit=(Array.isArray(tt)?tt[0]:tt)??defaultUnit,SI[SI_MID].text=defaultUnit};function zeroPad(et){return et.toString().padStart(2,"0")}function formatDate(et){const tt=et.getFullYear().toString(),ot=zeroPad(et.getMonth()+1),dt=zeroPad(et.getDate()),ft=zeroPad(et.getHours()),pt=zeroPad(et.getMinutes()),mt=zeroPad(et.getSeconds());return`${tt}-${ot}-${dt} ${ft}:${pt}:${mt}`}function formatNumber(et,{locale:tt="en"}={}){const{thousand:ot}=getSeparator(tt);return formatDecimal(bnToBn$2(et).toString(),ot)}function isString(et){return typeof et=="string"||et instanceof String}function isAsciiStr(et){for(let tt=0,ot=et.length;tt<ot;tt++){const dt=et.charCodeAt(tt);if(dt<32||dt>126)return!1}return!0}function isAsciiBytes(et){for(let tt=0,ot=et.length;tt<ot;tt++){const dt=et[tt]|0;if(dt<32||dt>126)return!1}return!0}function isAscii(et){return isString(et)?isHex$2(et)?isAsciiBytes(u8aToU8a$1(et)):isAsciiStr(et):et?isAsciiBytes(et):!1}const checkCodec=isOnObject$1("toHex","toHuman","toU8a"),checkRegistry=isOnObject$1("get");function isCodec(et){return checkCodec(et)&&checkRegistry(et.registry)}function replacer(et,tt){return isBigInt$2(tt)?tt.toString():tt}function stringify$1(et,tt){return JSON.stringify(et,replacer,tt)}function isNull(et){return et===null}function isNumber(et){return typeof et=="number"}function isUndefined$1(et){return et===void 0}function isUtf8(et){if(!et)return isString(et);const tt=u8aToU8a$1(et),ot=tt.length;let dt=0;for(;dt<ot;)if(tt[dt]<=127)dt+=1;else if(tt[dt]>=194&&tt[dt]<=223){if(dt+1<ot){if(tt[dt+1]<128||tt[dt+1]>191)return!1}else return!1;dt+=2}else if(tt[dt]===224){if(dt+2<ot){if(tt[dt+1]<160||tt[dt+1]>191||tt[dt+2]<128||tt[dt+2]>191)return!1}else return!1;dt+=3}else if(tt[dt]>=225&&tt[dt]<=236){if(dt+2<ot){if(tt[dt+1]<128||tt[dt+1]>191||tt[dt+2]<128||tt[dt+2]>191)return!1}else return!1;dt+=3}else if(tt[dt]===237){if(dt+2<ot){if(tt[dt+1]<128||tt[dt+1]>159||tt[dt+2]<128||tt[dt+2]>191)return!1}else return!1;dt+=3}else if(tt[dt]>=238&&tt[dt]<=239){if(dt+2<ot){if(tt[dt+1]<128||tt[dt+1]>191||tt[dt+2]<128||tt[dt+2]>191)return!1}else return!1;dt+=3}else if(tt[dt]===240){if(dt+3<ot){if(tt[dt+1]<144||tt[dt+1]>191||tt[dt+2]<128||tt[dt+2]>191||tt[dt+3]<128||tt[dt+3]>191)return!1}else return!1;dt+=4}else if(tt[dt]>=241&&tt[dt]<=243){if(dt+3<ot){if(tt[dt+1]<128||tt[dt+1]>191||tt[dt+2]<128||tt[dt+2]>191||tt[dt+3]<128||tt[dt+3]>191)return!1}else return!1;dt+=4}else if(tt[dt]===244){if(dt+3<ot){if(tt[dt+1]<128||tt[dt+1]>143||tt[dt+2]<128||tt[dt+2]>191||tt[dt+3]<128||tt[dt+3]>191)return!1}else return!1;dt+=4}else return!1;return!0}function identity$1(et){return et}function noop(){}const logTo={debug:"log",error:"error",log:"log",warn:"warn"};function formatOther(et){if(et&&isObject$4(et)&&et.constructor===Object){const tt={};for(const[ot,dt]of Object.entries(et))tt[ot]=loggerFormat(dt);return tt}return et}function loggerFormat(et){return Array.isArray(et)?et.map(loggerFormat):isBn(et)?et.toString():isU8a$1(et)||isBuffer$1(et)?u8aToHex$1(u8aToU8a$1(et)):formatOther(et)}function formatWithLength(et){return tt=>{if(et<=0)return tt;const ot=`${tt}`;return ot.length<et?tt:`${ot.substring(0,et)} ...`}}function apply(et,tt,ot,dt=-1){if(ot.length===1&&isFunction$4(ot[0])){const ft=ot[0]();return apply(et,tt,Array.isArray(ft)?ft:[ft],dt)}console[logTo[et]](formatDate(new Date),tt,...ot.map(loggerFormat).map(formatWithLength(dt)))}function isDebugOn(et,tt){return!!et&&(et==="*"||tt===et||et.endsWith("*")&&tt.startsWith(et.slice(0,-1)))}function isDebugOff(et,tt){return!!et&&et.startsWith("-")&&(tt===et.slice(1)||et.endsWith("*")&&tt.startsWith(et.slice(1,-1)))}function getDebugFlag(et,tt){let ot=!1;for(const dt of et)isDebugOn(dt,tt)?ot=!0:isDebugOff(dt,tt)&&(ot=!1);return ot}function parseEnv(et){var ot,dt,ft,pt;const tt=parseInt(((dt=(ot=xglobal$1.process)==null?void 0:ot.env)==null?void 0:dt.DEBUG_MAX)||"-1",10);return[getDebugFlag((((pt=(ft=xglobal$1.process)==null?void 0:ft.env)==null?void 0:pt.DEBUG)||"").toLowerCase().split(","),et),isNaN(tt)?-1:tt]}function logger(et){const tt=`${et.toUpperCase()}:`.padStart(16),[ot,dt]=parseEnv(et.toLowerCase());return{debug:ot?(...ft)=>apply("debug",tt,ft,dt):noop,error:(...ft)=>apply("error",tt,ft),log:(...ft)=>apply("log",tt,ft),noop,warn:(...ft)=>apply("warn",tt,ft)}}function objectProperty(et,tt,ot,dt,ft=0){const pt=tt;pt in et||Object.defineProperty(et,pt,{enumerable:!0,get:function(){return ot(tt,ft,this)}})}function objectProperties(et,tt,ot,dt){for(let ft=0,pt=tt.length;ft<pt;ft++)objectProperty(et,tt[ft],ot,dt,ft)}const CC_TO_UP=new Array(256),CC_TO_LO=new Array(256);for(let et=0,tt=CC_TO_UP.length;et<tt;et++)CC_TO_LO[et]=String.fromCharCode(et).toLowerCase(),CC_TO_UP[et]=String.fromCharCode(et).toUpperCase();function formatAllCaps(et){return et.slice(0,et.length-1).toLowerCase()+CC_TO_UP[et.charCodeAt(et.length-1)]}function converter(et){return tt=>{const ot=tt.replace(/[-_., ]+/g," ").trim().split(" ");let dt="";for(let ft=0,pt=ot.length;ft<pt;ft++){const mt=ot[ft];dt+=et(/^[\dA-Z]+$/.test(mt)?mt.toLowerCase():mt.replace(/^[\dA-Z]{2,}[^a-z]/,formatAllCaps),ft)}return dt}}const stringCamelCase=converter((et,tt)=>(tt?CC_TO_UP[et.charCodeAt(0)]:CC_TO_LO[et.charCodeAt(0)])+et.slice(1)),stringPascalCase=converter(et=>CC_TO_UP[et.charCodeAt(0)]+et.slice(1));function hasEq(et){return isFunction$4(et.eq)}function compareArray(et,tt){return Array.isArray(tt)?et.length===tt.length&&isUndefined$1(et.find((ot,dt)=>hasEq(ot)?!ot.eq(tt[dt]):ot!==tt[dt])):!1}class AbstractArray extends Array{constructor(ot,dt){super(dt);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");this.registry=ot}static get[Symbol.species](){return Array}get encodedLength(){const ot=this.length;let dt=compactToU8a(ot).length;for(let ft=0;ft<ot;ft++)dt+=this[ft].encodedLength;return dt}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(ot){return compareArray(this,ot)}inspect(){return{inner:this.inspectInner(),outer:[compactToU8a(this.length)]}}inspectInner(){const ot=this.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=this[ft].inspect();return dt}toArray(){return Array.from(this)}toHex(){return u8aToHex$1(this.toU8a())}toHuman(ot,dt){const ft=this.length,pt=new Array(ft);for(let mt=0;mt<ft;mt++)pt[mt]=this[mt]&&this[mt].toHuman(ot,dt);return pt}toJSON(){const ot=this.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=this[ft]&&this[ft].toJSON();return dt}toPrimitive(ot){const dt=this.length,ft=new Array(dt);for(let pt=0;pt<dt;pt++)ft[pt]=this[pt]&&this[pt].toPrimitive(ot);return ft}toString(){const ot=this.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=this[ft].toString();return`[${dt.join(", ")}]`}toU8a(ot){const dt=this.toU8aInner();return u8aConcatStrict$1(ot?dt:[compactToU8a(this.length),...dt])}toU8aInner(ot){const dt=this.length,ft=new Array(dt);for(let pt=0;pt<dt;pt++)ft[pt]=this[pt].toU8a(ot);return ft}}class AbstractBase{constructor(tt,ot,dt){Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__raw");this.initialU8aLength=dt,this.__internal__raw=ot,this.registry=tt}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get inner(){return this.__internal__raw}get isEmpty(){return this.__internal__raw.isEmpty}eq(tt){return this.__internal__raw.eq(tt)}inspect(){return this.__internal__raw.inspect()}toHex(tt){return this.__internal__raw.toHex(tt)}toHuman(tt,ot){return this.__internal__raw.toHuman(tt,ot)}toJSON(){return this.__internal__raw.toJSON()}toPrimitive(tt){return this.__internal__raw.toPrimitive(tt)}toString(){return this.__internal__raw.toString()}toU8a(tt){return this.__internal__raw.toU8a(tt)}unwrap(){return this.__internal__raw}valueOf(){return this.__internal__raw}}const DEFAULT_UINT_BITS=64,MAX_NUMBER_BITS=52,MUL_P=new BN(1e4),FORMATTERS=[["Perquintill",BN_QUINTILL],["Perbill",BN_BILLION],["Permill",BN_MILLION],["Percent",BN_HUNDRED]];function isToBn$2(et){return isFunction$4(et.toBn)}function toPercentage(et,tt){return`${(et.mul(MUL_P).div(tt).toNumber()/100).toFixed(2)}%`}function decodeAbstractInt(et,tt){if(isNumber(et)){if(!Number.isInteger(et)||et>Number.MAX_SAFE_INTEGER||et<Number.MIN_SAFE_INTEGER)throw new Error("Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1");return et}else if(isString(et)){if(isHex$2(et,-1,!0))return hexToBn$2(et,{isLe:!1,isNegative:tt}).toString();if(et.includes(".")||et.includes(",")||et.includes("e"))throw new Error("String should not contain decimal points or scientific notation");return et}else{if(isBn(et)||isBigInt$2(et))return et.toString();if(isObject$4(et)){if(isToBn$2(et))return et.toBn().toString();const ot=Object.keys(et);if(ot.length!==1)throw new Error("Unable to construct number from multi-key object");return decodeAbstractInt(et[ot[0]],tt)}else if(!et)return 0}throw new Error(`Unable to create BN from unknown type ${typeof et}`)}class AbstractInt extends BN{constructor(ot,dt=0,ft=DEFAULT_UINT_BITS,pt=!1){super(isU8a$1(dt)?ft<=48?u8aToNumber(dt.subarray(0,ft/8),{isNegative:pt}):u8aToBn(dt.subarray(0,ft/8),{isLe:!0,isNegative:pt}).toString():decodeAbstractInt(dt,pt));Ot(this,"registry");Ot(this,"encodedLength");Ot(this,"isUnsigned");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__bitLength");this.registry=ot,this.__internal__bitLength=ft,this.encodedLength=this.__internal__bitLength/8,this.initialU8aLength=this.__internal__bitLength/8,this.isUnsigned=!pt;const mt=this.isNeg(),ht=ft-(pt&&!mt?1:0);if(mt&&!pt)throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);if(super.bitLength()>ht)throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${ht}`)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}bitLength(){return this.__internal__bitLength}eq(ot){return super.eq(isHex$2(ot)?hexToBn$2(ot.toString(),{isLe:!1,isNegative:!this.isUnsigned}):bnToBn$2(ot))}inspect(){return{outer:[this.toU8a()]}}isMax(){return this.toU8a().filter(dt=>dt===255).length===this.__internal__bitLength/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(ot=!1){return bnToHex(this,{bitLength:this.bitLength(),isLe:ot,isNegative:!this.isUnsigned})}toHuman(ot){const dt=this.toRawType();if(dt==="Balance")return this.isMax()?"everything":formatBalance$1(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,ft]=FORMATTERS.find(([pt])=>pt===dt)||[];return ft?toPercentage(this,ft):formatNumber(this)}toJSON(ot=!1){return ot||this.__internal__bitLength>128||super.bitLength()>MAX_NUMBER_BITS?this.toHex():this.toNumber()}toPrimitive(){return super.bitLength()>MAX_NUMBER_BITS?this.toString():this.toNumber()}toRawType(){return this instanceof this.registry.createClassUnsafe("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(ot){return super.toString(ot)}toU8a(ot){return bnToU8a$1(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}function hasMismatch(et,tt){return isUndefined$1(et)||(hasEq(et)?!et.eq(tt):et!==tt)}function notEntry(et){return!Array.isArray(et)||et.length!==2}function compareMapArray(et,tt){return et.size===tt.length&&!tt.some(ot=>notEntry(ot)||hasMismatch(et.get(ot[0]),ot[1]))}function compareMap(et,tt){return Array.isArray(tt)?compareMapArray(et,tt):tt instanceof Map?compareMapArray(et,[...tt.entries()]):isObject$4(tt)?compareMapArray(et,Object.entries(tt)):!1}function compareSetArray(et,tt){return et.size===tt.length&&!tt.some(ot=>!et.has(ot))}function compareSet(et,tt){return Array.isArray(tt)?compareSetArray(et,tt):tt instanceof Set?compareSetArray(et,[...tt.values()]):isObject$4(tt)?compareSetArray(et,Object.values(tt)):!1}function formatFailure(et,tt,ot,{message:dt},ft,pt,mt,ht,bt){let yt="";try{yt=`: ${new ht(et).toRawType()}`}catch{}return`${tt}: failed at ${u8aToHex$1(ft.subarray(0,16))}…${bt?` on ${bt}`:""} (index ${pt+1}/${mt})${yt}:: ${dt}`}function decodeU8a$7(et,tt,ot,[dt,ft]){const pt=tt.length;let mt=0,ht=0;try{for(;ht<pt;){const bt=new dt[ht](et,ot.subarray(mt));mt+=bt.initialU8aLength||bt.encodedLength,tt[ht]=bt,ht++}}catch(bt){throw new Error(formatFailure(et,"decodeU8a",tt,bt,ot.subarray(mt),ht,pt,dt[ht],ft[ht]))}return[tt,mt]}function decodeU8aStruct(et,tt,ot,[dt,ft]){const pt=tt.length;let mt=0,ht=0;try{for(;ht<pt;){const bt=new dt[ht](et,ot.subarray(mt));mt+=bt.initialU8aLength||bt.encodedLength,tt[ht]=[ft[ht],bt],ht++}}catch(bt){throw new Error(formatFailure(et,"decodeU8aStruct",tt,bt,ot.subarray(mt),ht,pt,dt[ht],ft[ht]))}return[tt,mt]}function decodeU8aVec(et,tt,ot,dt,ft){const pt=tt.length;let mt=dt,ht=0;try{for(;ht<pt;){const bt=new ft(et,ot.subarray(mt));mt+=bt.initialU8aLength||bt.encodedLength,tt[ht]=bt,ht++}}catch(bt){throw new Error(formatFailure(et,"decodeU8aVec",tt,bt,ot.subarray(mt),ht,pt,ft))}return[mt,mt-dt]}const BOUNDED=["BTreeMap","BTreeSet","HashMap","Vec"],ALLOWED_BOXES=BOUNDED.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Opaque","Option","UInt","WrapperKeepOpaque","WrapperOpaque"]),BOX_PRECEDING=["<","(","[",'"',","," "],mappings=[alias("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),alias("VecDeque<","Vec<",!1),cleanupCompact(),removeExtensions("Bounded",!0),removeExtensions("Weak",!1),removeTraits(),removePairOf(),removeWrap("Box<"),removeGenerics(),alias("String","Text"),alias("Vec<u8>","Bytes"),alias("&\\[u8\\]","Bytes"),alias("&'static\\[u8\\]","Bytes"),alias("RawAddress","Address"),alias("Lookup::Source","LookupSource"),alias("Lookup::Target","LookupTarget"),alias("exec::StorageKey","ContractStorageKey"),flattenSingleTuple(),removeColons(),trim$3()];function trim$3(){return et=>et.trim()}function findClosing(et,tt){let ot=0;for(let dt=tt,ft=et.length;dt<ft;dt++)if(et[dt]===">"){if(!ot)return dt;ot--}else et[dt]==="<"&&ot++;throw new Error(`Unable to find closing matching <> on '${et}' (start ${tt})`)}function alias(et,tt,ot=!0){const dt=new RegExp(`(^${et}|${BOX_PRECEDING.map(pt=>`\\${pt}${et}`).join("|")})`,"g"),ft=pt=>(dt.lastIndex=0,ot&&BOX_PRECEDING.includes(pt[0])?`${pt[0]}${tt}`:tt);return pt=>pt.replace(dt,ft)}function cleanupCompact(){return et=>{if(et.includes(" as HasCompact")){for(let tt=0,ot=et.length;tt<ot;tt++)if(et[tt]==="<"){const dt=findClosing(et,tt+1)-14;et.substring(dt,dt+14)===" as HasCompact"&&(et=`Compact<${et.substring(tt+1,dt)}>`)}}return et}}function flattenSingleTuple(){const et=/,\)/g,tt=/\(([^,]+)\)/;return ot=>(et.lastIndex=0,ot.replace(et,")").replace(tt,"$1"))}function replaceTagWith(et,tt,ot){let dt=-1;for(;;){if(dt=et.indexOf(tt,dt+1),dt===-1)return et;const ft=dt+tt.length,pt=findClosing(et,ft);et=`${et.substring(0,dt)}${ot(et.substring(ft,pt))}${et.substring(pt+1)}`}}function removeExtensions(et,tt){return ot=>{for(let dt=0,ft=BOUNDED.length;dt<ft;dt++){const pt=BOUNDED[dt];ot=replaceTagWith(ot,`${et}${pt}<`,mt=>{const ht=mt.split(",").map(bt=>bt.trim()).filter(bt=>bt);return tt&&ht.pop(),`${pt}<${ht.join(",")}>`})}return ot}}function removeColons(){return et=>{let tt=0;for(;tt!==-1;)if(tt=et.indexOf("::"),tt===0)et=et.substring(2);else if(tt!==-1){let ot=tt;for(;ot!==-1&&!BOX_PRECEDING.includes(et[ot]);)ot--;et=`${et.substring(0,ot+1)}${et.substring(tt+2)}`}return et}}function removeGenerics(){return et=>{for(let tt=0,ot=et.length;tt<ot;tt++)if(et[tt]==="<"&&!ALLOWED_BOXES.find(ft=>{const pt=tt-ft.length;return pt>=0&&et.substring(pt,tt)===ft&&(pt===0||BOX_PRECEDING.includes(et[pt-1]))})){const ft=findClosing(et,tt+1);et=`${et.substring(0,tt)}${et.substring(ft+1)}`}return et}}function removePairOf(){const et=tt=>`(${tt},${tt})`;return tt=>replaceTagWith(tt,"PairOf<",et)}function removeTraits(){const et=/\s/g,tt=/(T|Self)::/g,ot=/<(T|Self)asTrait>::/g,dt=/<Tas[a-z]+::Trait>::/g,ft=/<LookupasStaticLookup>/g,pt=/::Type/g;return mt=>(et.lastIndex=0,tt.lastIndex=0,ot.lastIndex=0,dt.lastIndex=0,ft.lastIndex=0,pt.lastIndex=0,mt.replace(et,"").replace(tt,"").replace(ot,"").replace(dt,"").replace(ft,"Lookup").replace(pt,""))}function removeWrap(et){const tt=ot=>ot;return ot=>replaceTagWith(ot,et,tt)}const sanitizeMap=new Map;function sanitize(et){const tt=et.toString(),ot=sanitizeMap.get(tt);if(ot)return ot;let dt=tt;for(let ft=0,pt=mappings.length;ft<pt;ft++)dt=mappings[ft](dt);return sanitizeMap.set(tt,dt),dt}function isArrayLike(et){return et instanceof Uint8Array||Array.isArray(et)}function isEnum(et){return isCodec(et)&&isNumber(et.index)&&isCodec(et.value)}function isOption(et){return isCodec(et)&&isBoolean(et.isSome)&&isCodec(et.value)}function isNumberLike(et){return isNumber(et)||isBn(et)||isBigInt$2(et)}function sortArray(et,tt){let ot=0;const dt=Math.min(et.length,tt.length);for(let ft=0;ft<dt;++ft)if(ot=sortAsc(et[ft],tt[ft]),ot!==0)return ot;return et.length-tt.length}function checkForDuplicates(et,tt,ot){if(isCodec(ot)){const dt=ot.toHex();if(tt.has(dt))throw new Error(`Duplicate value in ${et}: ${stringify$1(ot)}`);tt.add(dt)}return!0}function sortAsc(et,tt){if(isNumberLike(et)&&isNumberLike(tt))return bnToBn$2(et).cmp(bnToBn$2(tt));if(et instanceof Map&&tt instanceof Map)return sortAsc(Array.from(et.values()),Array.from(tt.values()));if(isEnum(et)&&isEnum(tt))return sortAsc(et.index,tt.index)||sortAsc(et.value,tt.value);if(isOption(et)&&isOption(tt))return sortAsc(et.isNone?0:1,tt.isNone?0:1)||sortAsc(et.value,tt.value);if(isArrayLike(et)&&isArrayLike(tt))return sortArray(et,tt);if(isCodec(et)&&isCodec(tt))return sortAsc(et.toU8a(!0),tt.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${stringify$1(et)} (typeof ${typeof et}) <-> ${stringify$1(tt)} (typeof ${typeof tt})`)}function sortSet(et){const tt=new Set;return new Set(Array.from(et).filter(ot=>checkForDuplicates("BTreeSet",tt,ot)).sort(sortAsc))}function sortMap(et){const tt=new Set;return new Map(Array.from(et.entries()).filter(([ot])=>checkForDuplicates("BTreeMap",tt,ot)).sort(([ot],[dt])=>sortAsc(ot,dt)))}function typeToConstructor(et,tt){return typeof tt=="function"?tt:et.createClassUnsafe(tt)}function typesToConstructors(et,tt){const ot=tt.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=typeToConstructor(et,tt[ft]);return dt}function mapToTypeMap(et,tt){const ot=Object.entries(tt),dt=ot.length,ft=[new Array(dt),new Array(dt)];for(let pt=0;pt<dt;pt++)ft[1][pt]=ot[pt][0],ft[0][pt]=typeToConstructor(et,ot[pt][1]);return ft}function typesToMap(et,[tt,ot]){const dt={};for(let ft=0,pt=ot.length;ft<pt;ft++)dt[ot[ft]]=et.getClassName(tt[ft])||new tt[ft](et).toRawType();return dt}function decodeCompact(et,tt,ot){if(isU8a$1(ot)){const[dt,ft]=(ot[0]&3)<3?compactFromU8aLim(ot):compactFromU8a(ot);return[new tt(et,ft),dt]}else if(ot instanceof Compact){const dt=ot.unwrap();return dt instanceof tt?[dt,0]:[new tt(et,dt),0]}else if(ot instanceof tt)return[ot,0];return[new tt(et,ot),0]}class Compact{constructor(tt,ot,dt=0,{definition:ft,setDefinition:pt=identity$1}={}){Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__Type");Ot(this,"__internal__raw");this.registry=tt,this.__internal__Type=ft||pt(typeToConstructor(tt,ot));const[mt,ht]=decodeCompact(tt,this.__internal__Type,dt);this.initialU8aLength=ht,this.__internal__raw=mt}static with(tt){let ot;const dt=ft=>ot=ft;return class extends Compact{constructor(ft,pt){super(ft,tt,pt,{definition:ot,setDefinition:dt})}}}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.__internal__raw.isEmpty}bitLength(){return this.__internal__raw.bitLength()}eq(tt){return this.__internal__raw.eq(tt instanceof Compact?tt.__internal__raw:tt)}inspect(){return{outer:[this.toU8a()]}}toBigInt(){return this.__internal__raw.toBigInt()}toBn(){return this.__internal__raw.toBn()}toHex(tt){return this.__internal__raw.toHex(tt)}toHuman(tt,ot){return this.__internal__raw.toHuman(tt,ot)}toJSON(){return this.__internal__raw.toJSON()}toNumber(){return this.__internal__raw.toNumber()}toPrimitive(tt){return this.__internal__raw.toPrimitive(tt)}toRawType(){return`Compact<${this.registry.getClassName(this.__internal__Type)||this.__internal__raw.toRawType()}>`}toString(){return this.__internal__raw.toString()}toU8a(tt){return compactToU8a(this.__internal__raw.toBn())}unwrap(){return this.__internal__raw}}class DoNotConstruct{constructor(tt,ot="DoNotConstruct"){Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"isStorageFallback");Ot(this,"__internal__neverError");throw this.registry=tt,this.__internal__neverError=new Error(`DoNotConstruct: Cannot construct unknown type ${ot}`),this.__internal__neverError}static with(tt){return class extends DoNotConstruct{constructor(ot){super(ot,tt)}}}get encodedLength(){throw this.__internal__neverError}get hash(){throw this.__internal__neverError}get isEmpty(){throw this.__internal__neverError}eq(){throw this.__internal__neverError}inspect(){throw this.__internal__neverError}toHex(){throw this.__internal__neverError}toHuman(){throw this.__internal__neverError}toJSON(){throw this.__internal__neverError}toPrimitive(){throw this.__internal__neverError}toRawType(){throw this.__internal__neverError}toString(){throw this.__internal__neverError}toU8a(){throw this.__internal__neverError}}class Null{constructor(tt){Ot(this,"encodedLength",0);Ot(this,"isEmpty",!0);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength",0);Ot(this,"isStorageFallback");this.registry=tt}get hash(){throw new Error(".hash is not implemented on Null")}eq(tt){return tt instanceof Null||isNull(tt)}inspect(){return{}}toHex(){return"0x"}toHuman(){return this.toJSON()}toJSON(){return null}toPrimitive(){return null}toRawType(){return"Null"}toString(){return""}toU8a(tt){return new Uint8Array}}function isRustEnum$1(et){const tt=Object.values(et);if(tt.some(ot=>isNumber(ot))){if(!tt.every(ot=>isNumber(ot)&&ot>=0&&ot<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function extractDef(et,tt){const ot={};let dt,ft;if(Array.isArray(tt)){for(let pt=0,mt=tt.length;pt<mt;pt++)ot[tt[pt]]={Type:Null,index:pt};dt=!0,ft=!1}else if(isRustEnum$1(tt)){const[pt,mt]=mapToTypeMap(et,tt);for(let ht=0,bt=mt.length;ht<bt;ht++)ot[mt[ht]]={Type:pt[ht],index:ht};dt=!Object.values(ot).some(({Type:ht})=>ht!==Null),ft=!1}else{const pt=Object.entries(tt);for(let mt=0,ht=pt.length;mt<ht;mt++){const[bt,yt]=pt[mt];ot[bt]={Type:Null,index:yt}}dt=!0,ft=!0}return{def:ot,isBasic:dt,isIndexed:ft}}function getEntryType(et,tt){const ot=Object.values(et);for(let dt=0,ft=ot.length;dt<ft;dt++){const{Type:pt,index:mt}=ot[dt];if(mt===tt)return pt}throw new Error(`Unable to create Enum via index ${tt}, in ${Object.keys(et).join(", ")}`)}function createFromU8a(et,tt,ot,dt){const ft=getEntryType(tt,ot);return{index:ot,value:new ft(et,dt)}}function createFromValue(et,tt,ot=0,dt){const ft=getEntryType(tt,ot);return{index:ot,value:dt instanceof ft?dt:new ft(et,dt)}}function decodeFromJSON(et,tt,ot,dt){const ft=Object.keys(tt).map(ht=>ht.toLowerCase()),pt=ot.toLowerCase(),mt=ft.indexOf(pt);if(mt===-1)throw new Error(`Cannot map Enum JSON, unable to find '${ot}' in ${ft.join(", ")}`);try{return createFromValue(et,tt,Object.values(tt)[mt].index,dt)}catch(ht){throw new Error(`Enum(${ot}):: ${ht.message}`)}}function decodeEnum(et,tt,ot,dt){if(isNumber(dt))return createFromValue(et,tt,dt,ot);if(isU8a$1(ot)||isHex$2(ot)){const ft=u8aToU8a$1(ot);if(ft.length)return createFromU8a(et,tt,ft[0],ft.subarray(1))}else{if(ot instanceof Enum)return createFromValue(et,tt,ot.index,ot.value);if(isNumber(ot))return createFromValue(et,tt,ot);if(isString(ot))return decodeFromJSON(et,tt,ot.toString());if(isObject$4(ot)){const ft=Object.keys(ot)[0];return decodeFromJSON(et,tt,ft,ot[ft])}}return createFromValue(et,tt,Object.values(tt)[0].index)}class Enum{constructor(tt,ot,dt,ft,{definition:pt,setDefinition:mt=identity$1}={}){Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__def");Ot(this,"__internal__entryIndex");Ot(this,"__internal__indexes");Ot(this,"__internal__isBasic");Ot(this,"__internal__isIndexed");Ot(this,"__internal__raw");const{def:ht,isBasic:bt,isIndexed:yt}=pt||mt(extractDef(tt,ot)),xt=isU8a$1(dt)&&dt.length&&!isNumber(ft)?createFromU8a(tt,ht,dt[0],dt.subarray(1)):decodeEnum(tt,ht,dt,ft);this.registry=tt,this.__internal__def=ht,this.__internal__isBasic=bt,this.__internal__isIndexed=yt,this.__internal__indexes=Object.values(ht).map(({index:gt})=>gt),this.__internal__entryIndex=this.__internal__indexes.indexOf(xt.index),this.__internal__raw=xt.value,this.__internal__raw.initialU8aLength&&(this.initialU8aLength=1+this.__internal__raw.initialU8aLength)}static with(tt){var ft;let ot;const dt=pt=>ot=pt;return ft=class extends Enum{constructor(mt,ht,bt){super(mt,tt,ht,bt,{definition:ot,setDefinition:dt})}},(()=>{const mt=Array.isArray(tt)?tt:Object.keys(tt),ht=mt.length,bt=new Array(ht),yt=new Array(ht);for(let xt=0;xt<ht;xt++){const gt=stringPascalCase(mt[xt]);bt[xt]=`as${gt}`,yt[xt]=`is${gt}`}objectProperties(ft.prototype,yt,(xt,gt,wt)=>wt.type===mt[gt]),objectProperties(ft.prototype,bt,(xt,gt,wt)=>{if(wt.type!==mt[gt])throw new Error(`Cannot convert '${wt.type}' via ${xt}`);return wt.value})})(),ft}get encodedLength(){return 1+this.__internal__raw.encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return this.__internal__indexes[this.__internal__entryIndex]}get inner(){return this.__internal__raw}get isBasic(){return this.__internal__isBasic}get isEmpty(){return this.__internal__raw.isEmpty}get isNone(){return this.__internal__raw instanceof Null}get defIndexes(){return this.__internal__indexes}get defKeys(){return Object.keys(this.__internal__def)}get type(){return this.defKeys[this.__internal__entryIndex]}get value(){return this.__internal__raw}eq(tt){return isU8a$1(tt)?!this.toU8a().some((ot,dt)=>ot!==tt[dt]):isNumber(tt)?this.toNumber()===tt:this.__internal__isBasic&&isString(tt)?this.type===tt:isHex$2(tt)?this.toHex()===tt:tt instanceof Enum?this.index===tt.index&&this.value.eq(tt.value):isObject$4(tt)?this.value.eq(tt[this.type]):this.value.eq(tt)}inspect(){if(this.__internal__isBasic)return{outer:[new Uint8Array([this.index])]};const{inner:tt,outer:ot=[]}=this.__internal__raw.inspect();return{inner:tt,outer:[new Uint8Array([this.index]),...ot]}}toHex(){return u8aToHex$1(this.toU8a())}toHuman(tt,ot){return this.__internal__isBasic||this.isNone?this.type:{[this.type]:this.__internal__raw.toHuman(tt,ot)}}toJSON(){return this.__internal__isBasic?this.type:{[stringCamelCase(this.type)]:this.__internal__raw.toJSON()}}toNumber(){return this.index}toPrimitive(tt){return this.__internal__isBasic?this.type:{[stringCamelCase(this.type)]:this.__internal__raw.toPrimitive(tt)}}_toRawStruct(){if(this.__internal__isBasic)return this.__internal__isIndexed?this.defKeys.reduce((ot,dt,ft)=>(ot[dt]=this.__internal__indexes[ft],ot),{}):this.defKeys;const tt=Object.entries(this.__internal__def);return typesToMap(this.registry,tt.reduce((ot,[dt,{Type:ft}],pt)=>(ot[0][pt]=ft,ot[1][pt]=dt,ot),[new Array(tt.length),new Array(tt.length)]))}toRawType(){return stringify$1({_enum:this._toRawStruct()})}toString(){return this.isNone?this.type:stringify$1(this.toJSON())}toU8a(tt){return tt?this.__internal__raw.toU8a(tt):u8aConcatStrict$1([new Uint8Array([this.index]),this.__internal__raw.toU8a(tt)])}}class Int extends AbstractInt{constructor(tt,ot=0,dt){super(tt,ot,dt,!0)}static with(tt,ot){return class extends Int{constructor(dt,ft){super(dt,ft,tt)}toRawType(){return ot||super.toRawType()}}}}class None extends Null{toRawType(){return"None"}}function decodeOption(et,tt,ot){return ot instanceof tt?ot:ot instanceof Option?ot.value instanceof tt?ot.value:ot.isNone?new None(et):new tt(et,ot.value):isNull(ot)||isUndefined$1(ot)||ot==="0x"||ot instanceof None?new None(et):isU8a$1(ot)?!ot.length||ot[0]===0?new None(et):new tt(et,ot.subarray(1)):new tt(et,ot)}class Option{constructor(tt,ot,dt,{definition:ft,setDefinition:pt=identity$1}={}){Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__Type");Ot(this,"__internal__raw");const mt=ft||pt(typeToConstructor(tt,ot)),ht=isU8a$1(dt)&&dt.length&&!isCodec(dt)?dt[0]===0?new None(tt):new mt(tt,dt.subarray(1)):decodeOption(tt,mt,dt);this.registry=tt,this.__internal__Type=mt,this.__internal__raw=ht,ht!=null&&ht.initialU8aLength&&(this.initialU8aLength=1+ht.initialU8aLength)}static with(tt){let ot;const dt=ft=>(ot=ft,ft);return class extends Option{constructor(ft,pt){super(ft,tt,pt,{definition:ot,setDefinition:dt})}}}get encodedLength(){return 1+this.__internal__raw.encodedLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return this.__internal__raw instanceof None}get isSome(){return!this.isNone}get value(){return this.__internal__raw}eq(tt){return tt instanceof Option?this.isSome===tt.isSome&&this.value.eq(tt.value):this.value.eq(tt)}inspect(){if(this.isNone)return{outer:[new Uint8Array([0])]};const{inner:tt,outer:ot=[]}=this.__internal__raw.inspect();return{inner:tt,outer:[new Uint8Array([1]),...ot]}}toHex(){return this.isNone?"0x":u8aToHex$1(this.toU8a().subarray(1))}toHuman(tt,ot){return this.__internal__raw.toHuman(tt,ot)}toJSON(){return this.isNone?null:this.__internal__raw.toJSON()}toPrimitive(tt){return this.isNone?null:this.__internal__raw.toPrimitive(tt)}toRawType(tt){const ot=this.registry.getClassName(this.__internal__Type)||new this.__internal__Type(this.registry).toRawType();return tt?ot:`Option<${ot}>`}toString(){return this.__internal__raw.toString()}toU8a(tt){if(tt)return this.__internal__raw.toU8a(!0);const ot=new Uint8Array(this.encodedLength);return this.isSome&&(ot.set([1]),ot.set(this.__internal__raw.toU8a(),1)),ot}unwrap(){if(this.isNone)throw new Error("Option: unwrapping a None value");return this.__internal__raw}unwrapOr(tt){return this.isSome?this.unwrap():tt}unwrapOrDefault(){return this.isSome?this.unwrap():new this.__internal__Type(this.registry)}}class Result extends Enum{constructor(tt,ot,dt,ft){super(tt,{Ok:ot,Err:dt},ft)}static with(tt){return class extends Result{constructor(ot,dt){super(ot,tt.Ok,tt.Err,dt)}}}get asErr(){if(!this.isErr)throw new Error("Cannot extract Err value from Ok result, check isErr first");return this.value}get asOk(){if(!this.isOk)throw new Error("Cannot extract Ok value from Err result, check isOk first");return this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return!this.isOk}get isOk(){return this.index===0}toRawType(){const tt=this._toRawStruct();return`Result<${tt.Ok},${tt.Err}>`}}function decodeTuple(et,tt,ot,dt){if(Array.isArray(ot)){const ft=dt[0];for(let pt=0,mt=ft.length;pt<mt;pt++)try{const ht=ot==null?void 0:ot[pt];tt[pt]=ht instanceof ft[pt]?ht:new ft[pt](et,ht)}catch(ht){throw new Error(`Tuple: failed on ${pt}:: ${ht.message}`)}return[tt,0]}else{if(isHex$2(ot))return decodeU8a$7(et,tt,u8aToU8a$1(ot),dt);if(!ot||!tt.length){const ft=dt[0];for(let pt=0,mt=ft.length;pt<mt;pt++)tt[pt]=new ft[pt](et);return[tt,0]}}throw new Error(`Expected array input to Tuple decoding, found ${typeof ot}: ${stringify$1(ot)}`)}class Tuple extends AbstractArray{constructor(ot,dt,ft,{definition:pt,setDefinition:mt=identity$1}={}){const ht=pt||mt(Array.isArray(dt)?[typesToConstructors(ot,dt),[]]:isFunction$4(dt)||isString(dt)?[[typeToConstructor(ot,dt)],[]]:mapToTypeMap(ot,dt));super(ot,ht[0].length);Ot(this,"__internal__Types");this.initialU8aLength=(isU8a$1(ft)?decodeU8a$7(ot,this,ft,ht):decodeTuple(ot,this,ft,ht))[1],this.__internal__Types=ht}static with(ot){let dt;const ft=pt=>dt=pt;return class extends Tuple{constructor(pt,mt){super(pt,ot,mt,{definition:dt,setDefinition:ft})}}}get encodedLength(){let ot=0;for(let dt=0,ft=this.length;dt<ft;dt++)ot+=this[dt].encodedLength;return ot}get Types(){return this.__internal__Types[1].length?this.__internal__Types[1]:this.__internal__Types[0].map(ot=>new ot(this.registry).toRawType())}inspect(){return{inner:this.inspectInner()}}toRawType(){return`(${this.__internal__Types[0].map(dt=>this.registry.getClassName(dt)||new dt(this.registry).toRawType()).join(",")})`}toString(){return stringify$1(this.toJSON())}toU8a(ot){return u8aConcatStrict$1(this.toU8aInner(ot))}}class UInt extends AbstractInt{static with(tt,ot){return class extends UInt{constructor(dt,ft){super(dt,ft,tt)}toRawType(){return ot||super.toRawType()}}}}const MAX_LENGTH$2=512*1024,l$b=logger("Vec");function decodeVecLength(et){if(Array.isArray(et))return[et,et.length,0];if(isU8a$1(et)||isHex$2(et)){const tt=u8aToU8a$1(et),[ot,dt]=compactFromU8aLim(tt);if(dt>MAX_LENGTH$2)throw new Error(`Vec length ${dt.toString()} exceeds ${MAX_LENGTH$2}`);return[tt,dt,ot]}else if(!et)return[null,0,0];throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof et}: ${stringify$1(et)}`)}function decodeVec(et,tt,ot,dt,ft){if(Array.isArray(ot)){const pt=tt.length;for(let mt=0;mt<pt;mt++){const ht=ot[mt];try{tt[mt]=ht instanceof ft?ht:new ft(et,ht)}catch(bt){throw l$b.error(`Unable to decode on index ${mt}`,bt.message),bt}}return[0,0]}else if(!ot)return[0,0];return decodeU8aVec(et,tt,u8aToU8a$1(ot),dt,ft)}class Vec extends AbstractArray{constructor(ot,dt,ft=[],{definition:pt,setDefinition:mt=identity$1}={}){const[ht,bt,yt]=decodeVecLength(ft);super(ot,bt);Ot(this,"__internal__Type");this.__internal__Type=pt||mt(typeToConstructor(ot,dt)),this.initialU8aLength=(isU8a$1(ht)?decodeU8aVec(ot,this,ht,yt,this.__internal__Type):decodeVec(ot,this,ht,yt,this.__internal__Type))[0]}static with(ot){let dt;const ft=pt=>dt=pt;return class extends Vec{constructor(pt,mt){super(pt,ot,mt,{definition:dt,setDefinition:ft})}}}get Type(){return this.__internal__Type.name}indexOf(ot){const dt=ot instanceof this.__internal__Type?ot:new this.__internal__Type(this.registry,ot);for(let ft=0,pt=this.length;ft<pt;ft++)if(dt.eq(this[ft]))return ft;return-1}toRawType(){return`Vec<${this.registry.getClassName(this.__internal__Type)||new this.__internal__Type(this.registry).toRawType()}>`}}class VecFixed extends AbstractArray{constructor(ot,dt,ft,pt=[],{definition:mt,setDefinition:ht=identity$1}={}){super(ot,ft);Ot(this,"__internal__Type");this.__internal__Type=mt||ht(typeToConstructor(ot,dt)),this.initialU8aLength=(isU8a$1(pt)?decodeU8aVec(ot,this,pt,0,this.__internal__Type):decodeVec(ot,this,pt,0,this.__internal__Type))[1]}static with(ot,dt){let ft;const pt=mt=>ft=mt;return class extends VecFixed{constructor(mt,ht){super(mt,ot,dt,ht,{definition:ft,setDefinition:pt})}}}get Type(){return new this.__internal__Type(this.registry).toRawType()}get encodedLength(){let ot=0;for(let dt=0,ft=this.length;dt<ft;dt++)ot+=this[dt].encodedLength;return ot}inspect(){return{inner:this.inspectInner()}}toU8a(){const ot=this.toU8aInner();return ot.length?u8aConcatStrict$1(ot):new Uint8Array([])}toRawType(){return`[${this.Type};${this.length}]`}}class Raw extends Uint8Array{constructor(ot,dt,ft){super(u8aToU8a$1(dt));Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");this.registry=ot,this.initialU8aLength=ft}static get[Symbol.species](){return Uint8Array}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return isAscii(this)}get isEmpty(){return!this.length||isUndefined$1(this.find(ot=>!!ot))}get isUtf8(){return isUtf8(this)}bitLength(){return this.length*8}eq(ot){return ot instanceof Uint8Array?this.length===ot.length&&!this.some((dt,ft)=>dt!==ot[ft]):this.eq(u8aToU8a$1(ot))}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex$1(this)}toHuman(ot,dt){return this.toPrimitive(dt)}toJSON(){return this.toHex()}toPrimitive(ot){if(!ot&&this.isAscii){const dt=this.toUtf8();if(isAscii(dt))return dt}return this.toJSON()}toRawType(){return"Raw"}toString(){return this.toHex()}toU8a(ot){return Uint8Array.from(this)}toUtf8(){if(!this.isUtf8)throw new Error("The character sequence is not a valid Utf8 string");return u8aToString$1(this)}}function decodeBitVecU8a(et){if(!(et!=null&&et.length))return[0,new Uint8Array];const[tt,ot]=compactFromU8aLim(et),dt=tt+Math.ceil(ot/8);if(dt>et.length)throw new Error(`BitVec: required length less than remainder, expected at least ${dt}, found ${et.length}`);return[ot,et.subarray(tt,dt)]}function decodeBitVec(et){if(Array.isArray(et)||isString(et)){const tt=u8aToU8a$1(et);return[tt.length/8,tt]}return decodeBitVecU8a(et)}class BitVec extends Raw{constructor(ot,dt,ft=!1){const[pt,mt]=decodeBitVec(dt);super(ot,mt);Ot(this,"__internal__decodedLength");Ot(this,"__internal__isMsb");this.__internal__decodedLength=pt,this.__internal__isMsb=ft}get encodedLength(){return this.length+compactToU8a(this.__internal__decodedLength).length}inspect(){return{outer:[compactToU8a(this.__internal__decodedLength),super.toU8a()]}}toBoolArray(){const ot=[...this.toU8a(!0)].map(pt=>[!!(pt&128),!!(pt&64),!!(pt&32),!!(pt&16),!!(pt&8),!!(pt&4),!!(pt&2),!!(pt&1)]),dt=ot.length,ft=new Array(8*dt);for(let pt=0;pt<dt;pt++){const mt=pt*8,ht=ot[pt];for(let bt=0;bt<8;bt++)ft[mt+bt]=this.__internal__isMsb?ht[bt]:ht[7-bt]}return ft}toHuman(){return`0b${[...this.toU8a(!0)].map(ot=>`00000000${ot.toString(2)}`.slice(-8)).map(ot=>this.__internal__isMsb?ot:ot.split("").reverse().join("")).join("_")}`}toRawType(){return"BitVec"}toU8a(ot){const dt=super.toU8a(ot);return ot?dt:u8aConcatStrict$1([compactToU8a(this.__internal__decodedLength),dt])}}function noopSetDefinition(et){return et}function decodeStructFromObject(et,[tt,ot],dt,ft){let pt;const mt=Array.isArray(dt),ht=dt instanceof Map,bt=ot.length;if(!mt&&!ht&&!isObject$4(dt))throw new Error(`Struct: Cannot decode value ${stringify$1(dt)} (typeof ${typeof dt}), expected an input object, map or array`);if(mt&&dt.length!==bt)throw new Error(`Struct: Unable to map ${stringify$1(dt)} array to object with known keys ${ot.join(", ")}`);const yt=new Array(bt);for(let xt=0;xt<bt;xt++){const gt=ot[xt],wt=ft.get(gt)||gt,Pt=tt[xt];let St;try{if(mt)St=dt[xt];else if(ht)St=wt&&dt.get(wt);else if(St=wt&&Object.prototype.hasOwnProperty.call(dt,wt)?dt[wt]:void 0,isUndefined$1(St)){if(isUndefined$1(pt)){const Et=Object.entries(dt);pt={};for(let Lt=0,It=Et.length;Lt<It;Lt++)Object.prototype.hasOwnProperty.call(dt,Et[Lt][0])&&(pt[stringCamelCase(Et[Lt][0])]=Et[Lt][1])}St=wt&&Object.prototype.hasOwnProperty.call(pt,wt)?pt[wt]:void 0}yt[xt]=[gt,St instanceof Pt?St:new Pt(et,St)]}catch(Et){let Lt=Pt.name;try{Lt=new Pt(et).toRawType()}catch{}throw new Error(`Struct: failed on ${wt}: ${Lt}:: ${Et.message}`)}}return[yt,0]}class Struct extends Map{constructor(ot,dt,ft,pt=new Map,{definition:mt,setDefinition:ht=noopSetDefinition}={}){const bt=mt||ht(mapToTypeMap(ot,dt)),[yt,xt]=isU8a$1(ft)||isHex$2(ft)?decodeU8aStruct(ot,new Array(bt[0].length),u8aToU8a$1(ft),bt):ft instanceof Struct?[ft,0]:decodeStructFromObject(ot,bt,ft||{},pt);super(yt);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__jsonMap");Ot(this,"__internal__Types");this.initialU8aLength=xt,this.registry=ot,this.__internal__jsonMap=pt,this.__internal__Types=bt}static with(ot,dt){var mt;let ft;const pt=ht=>ft=ht;return mt=class extends Struct{constructor(bt,yt){super(bt,ot,yt,dt,{definition:ft,setDefinition:pt})}},(()=>{const bt=Object.keys(ot);objectProperties(mt.prototype,bt,(yt,xt,gt)=>gt.get(yt))})(),mt}get defKeys(){return this.__internal__Types[1]}get isEmpty(){return[...this.keys()].length===0}get encodedLength(){let ot=0;for(const dt of this.values())ot+=dt.encodedLength;return ot}get hash(){return this.registry.hash(this.toU8a())}get Type(){const ot={},[dt,ft]=this.__internal__Types;for(let pt=0,mt=ft.length;pt<mt;pt++)ot[ft[pt]]=new dt[pt](this.registry).toRawType();return ot}eq(ot){return compareMap(this,ot)}get(ot){return super.get(ot)}getAtIndex(ot){return this.toArray()[ot]}getT(ot){return super.get(ot)}inspect(ot){const dt=[];for(const[ft,pt]of this.entries())dt.push({...pt.inspect(!ot||isBoolean(ot)?ot:ot[ft]),name:stringCamelCase(ft)});return{inner:dt}}toArray(){return[...this.values()]}toHex(){return u8aToHex$1(this.toU8a())}toHuman(ot,dt){const ft={};for(const[pt,mt]of this.entries())ft[pt]=mt.toHuman(ot,dt);return ft}toJSON(){const ot={};for(const[dt,ft]of this.entries())ot[this.__internal__jsonMap.get(dt)||dt]=ft.toJSON();return ot}toPrimitive(ot){const dt={};for(const[ft,pt]of this.entries())dt[ft]=pt.toPrimitive(ot);return dt}toRawType(){return stringify$1(typesToMap(this.registry,this.__internal__Types))}toString(){return stringify$1(this.toJSON())}toU8a(ot){const dt=[];for(const[ft,pt]of this.entries())dt.push(pt.toU8a(!ot||isBoolean(ot)?ot:ot[ft]));return u8aConcatStrict$1(dt)}}const l$a=logger("Map");function decodeMapFromU8a(et,tt,ot,dt){const ft=new Map,[pt,mt]=compactFromU8aLim(dt),ht=[];for(let xt=0;xt<mt;xt++)ht.push(tt,ot);const[bt,yt]=decodeU8a$7(et,new Array(ht.length),dt.subarray(pt),[ht,[]]);for(let xt=0,gt=bt.length;xt<gt;xt+=2)ft.set(bt[xt],bt[xt+1]);return[tt,ot,ft,pt+yt]}function decodeMapFromMap(et,tt,ot,dt){const ft=new Map;for(const[pt,mt]of dt.entries()){const ht=tt.prototype instanceof AbstractArray||tt.prototype instanceof Struct||tt.prototype instanceof Enum;try{ft.set(pt instanceof tt?pt:new tt(et,ht&&typeof pt=="string"?JSON.parse(pt):pt),mt instanceof ot?mt:new ot(et,mt))}catch(bt){throw l$a.error("Failed to decode key or value:",bt.message),bt}}return[tt,ot,ft,0]}function decodeMap(et,tt,ot,dt){const ft=typeToConstructor(et,tt),pt=typeToConstructor(et,ot);if(dt){if(isU8a$1(dt)||isHex$2(dt))return decodeMapFromU8a(et,ft,pt,u8aToU8a$1(dt));if(dt instanceof Map)return decodeMapFromMap(et,ft,pt,dt);if(isObject$4(dt))return decodeMapFromMap(et,ft,pt,new Map(Object.entries(dt)))}else return[ft,pt,new Map,0];throw new Error("Map: cannot decode type")}class CodecMap extends Map{constructor(ot,dt,ft,pt,mt="HashMap"){const[ht,bt,yt,xt]=decodeMap(ot,dt,ft,pt);super(mt==="BTreeMap"?sortMap(yt):yt);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__KeyClass");Ot(this,"__internal__ValClass");Ot(this,"__internal__type");this.registry=ot,this.initialU8aLength=xt,this.__internal__KeyClass=ht,this.__internal__ValClass=bt,this.__internal__type=mt}get encodedLength(){let ot=compactToU8a(this.size).length;for(const[dt,ft]of this.entries())ot+=dt.encodedLength+ft.encodedLength;return ot}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}eq(ot){return compareMap(this,ot)}inspect(){const ot=[];for(const[dt,ft]of this.entries())ot.push(dt.inspect()),ot.push(ft.inspect());return{inner:ot,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex$1(this.toU8a())}toHuman(ot,dt){const ft={};for(const[pt,mt]of this.entries())ft[pt instanceof Raw&&!dt&&pt.isAscii?pt.toUtf8():pt.toString()]=mt.toHuman(ot,dt);return ft}toJSON(){const ot={};for(const[dt,ft]of this.entries())ot[dt.toString()]=ft.toJSON();return ot}toPrimitive(ot){const dt={};for(const[ft,pt]of this.entries())dt[ft instanceof Raw&&!ot&&ft.isAscii?ft.toUtf8():ft.toString()]=pt.toPrimitive(ot);return dt}toRawType(){return`${this.__internal__type}<${this.registry.getClassName(this.__internal__KeyClass)||new this.__internal__KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.__internal__ValClass)||new this.__internal__ValClass(this.registry).toRawType()}>`}toString(){return stringify$1(this.toJSON())}toU8a(ot){const dt=[];ot||dt.push(compactToU8a(this.size));for(const[ft,pt]of this.entries())dt.push(ft.toU8a(ot),pt.toU8a(ot));return u8aConcatStrict$1(dt)}}class BTreeMap extends CodecMap{static with(tt,ot){return class extends BTreeMap{constructor(dt,ft){super(dt,tt,ot,ft,"BTreeMap")}}}}const l$9=logger("BTreeSet");function decodeSetFromU8a(et,tt,ot){const dt=new Set,[ft,pt]=compactFromU8aLim(ot),mt=new Array(pt),[ht]=decodeU8aVec(et,mt,ot,ft,tt);for(let bt=0;bt<pt;bt++)dt.add(mt[bt]);return[tt,dt,ht]}function decodeSetFromSet(et,tt,ot){const dt=new Set;return ot.forEach(ft=>{try{dt.add(ft instanceof tt?ft:new tt(et,ft))}catch(pt){throw l$9.error("Failed to decode key or value:",pt.message),pt}}),[tt,dt,0]}function decodeSet$1(et,tt,ot){const dt=typeToConstructor(et,tt);if(ot){if(isU8a$1(ot)||isHex$2(ot))return decodeSetFromU8a(et,dt,u8aToU8a$1(ot));if(Array.isArray(ot)||ot instanceof Set)return decodeSetFromSet(et,dt,ot)}else return[dt,new Set,0];throw new Error("BTreeSet: cannot decode type")}class BTreeSet extends Set{constructor(ot,dt,ft){const[pt,mt,ht]=decodeSet$1(ot,dt,ft);super(sortSet(mt));Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__ValClass");this.registry=ot,this.initialU8aLength=ht,this.__internal__ValClass=pt}static with(ot){return class extends BTreeSet{constructor(dt,ft){super(dt,ot,ft)}}}get encodedLength(){let ot=compactToU8a(this.size).length;for(const dt of this.values())ot+=dt.encodedLength;return ot}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()].map(ot=>ot.toString())}eq(ot){return compareSet(this,ot)}inspect(){const ot=[];for(const dt of this.values())ot.push(dt.inspect());return{inner:ot,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex$1(this.toU8a())}toHuman(ot,dt){const ft=[];for(const pt of this.values())ft.push(pt.toHuman(ot,dt));return ft}toJSON(){const ot=[];for(const dt of this.values())ot.push(dt.toJSON());return ot}toRawType(){return`BTreeSet<${this.registry.getClassName(this.__internal__ValClass)||new this.__internal__ValClass(this.registry).toRawType()}>`}toPrimitive(ot){const dt=[];for(const ft of this.values())dt.push(ft.toPrimitive(ot));return dt}toString(){return stringify$1(this.toJSON())}toU8a(ot){const dt=[];ot||dt.push(compactToU8a(this.size));for(const ft of this.values())dt.push(ft.toU8a(ot));return u8aConcatStrict$1(dt)}}const MAX_LENGTH$1=10*1024*1024;function decodeBytesU8a(et){if(!et.length)return[new Uint8Array,0];const[tt,ot]=compactFromU8aLim(et),dt=tt+ot;if(ot>MAX_LENGTH$1)throw new Error(`Bytes length ${ot.toString()} exceeds ${MAX_LENGTH$1}`);if(dt>et.length)throw new Error(`Bytes: required length less than remainder, expected at least ${dt}, found ${et.length}`);return[et.subarray(tt,dt),dt]}class Bytes extends Raw{constructor(tt,ot){const[dt,ft]=isU8a$1(ot)&&!(ot instanceof Raw)?decodeBytesU8a(ot):Array.isArray(ot)||isString(ot)?[u8aToU8a$1(ot),0]:[ot,0];super(tt,dt,ft)}get encodedLength(){return this.length+compactToU8a(this.length).length}inspect(tt){const ot=compactToU8a(this.length);return{outer:tt?[super.toU8a()]:this.length?[ot,super.toU8a()]:[ot]}}toRawType(){return"Bytes"}toU8a(tt){return tt?super.toU8a(tt):compactAddLength(this)}}class HashMap extends CodecMap{static with(tt,ot){return class extends HashMap{constructor(dt,ft){super(dt,tt,ot,ft)}}}}class bool extends Boolean{constructor(ot,dt=!1){super(isU8a$1(dt)?dt[0]===1:dt instanceof Boolean?dt.valueOf():!!dt);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength",1);Ot(this,"isStorageFallback");this.registry=ot}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return!this.isTrue}get isTrue(){return this.valueOf()}eq(ot){return this.valueOf()===(ot instanceof Boolean?ot.valueOf():ot)}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex$1(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toPrimitive(){return this.toJSON()}toRawType(){return"bool"}toString(){return this.toJSON().toString()}toU8a(ot){return new Uint8Array([this.valueOf()?1:0])}}function decodeU8a$6(et,tt){return tt[0]===0?null:new bool(et,tt[0]===1)}class OptionBool extends Option{constructor(tt,ot){super(tt,bool,isU8a$1(ot)||isHex$2(ot)?decodeU8a$6(tt,u8aToU8a$1(ot)):ot),this.initialU8aLength=1}get encodedLength(){return 1}get isFalse(){return this.isSome?!this.value.valueOf():!1}get isTrue(){return this.isSome?this.value.valueOf():!1}inspect(){return{outer:[this.toU8a()]}}toRawType(tt){return tt?"bool":"Option<bool>"}toU8a(tt){return tt?super.toU8a(!0):this.isSome?new Uint8Array([this.isTrue?1:2]):new Uint8Array([0])}}class Range extends Tuple{constructor(ot,dt,ft,{rangeName:pt="Range"}={}){super(ot,[dt,dt],ft);Ot(this,"__internal__rangeName");this.__internal__rangeName=pt}static with(ot){return class extends Range{constructor(dt,ft){super(dt,ot,ft)}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return`${this.__internal__rangeName}<${this.start.toRawType()}>`}}class RangeInclusive extends Range{constructor(tt,ot,dt){super(tt,ot,dt,{rangeName:"RangeInclusive"})}static with(tt){return class extends RangeInclusive{constructor(ot,dt){super(ot,tt,dt)}}}}const MAX_LENGTH=128*1024;function decodeText(et){if(isU8a$1(et)){if(!et.length)return["",0];if(et instanceof Raw)return[u8aToString$1(et),0];const[tt,ot]=compactFromU8aLim(et),dt=tt+ot;if(ot>MAX_LENGTH)throw new Error(`Text: length ${ot.toString()} exceeds ${MAX_LENGTH}`);if(dt>et.length)throw new Error(`Text: required length less than remainder, expected at least ${dt}, found ${et.length}`);return[u8aToString$1(et.subarray(tt,dt)),dt]}else if(isHex$2(et))return[u8aToString$1(hexToU8a$2(et)),0];return[et?et.toString():"",0]}class Text extends String{constructor(ot,dt){const[ft,pt]=decodeText(dt);super(ft);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__override",null);this.registry=ot,this.initialU8aLength=pt}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.length===0}get length(){return super.length}eq(ot){return isString(ot)?this.toString()===ot.toString():!1}inspect(){const ot=stringToU8a$1(super.toString());return{outer:ot.length?[compactToU8a(ot.length),ot]:[compactToU8a(ot.length)]}}setOverride(ot){this.__internal__override=ot}toHex(){return u8aToHex$1(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toRawType(){return"Text"}toString(){return this.__internal__override||super.toString()}toU8a(ot){const dt=stringToU8a$1(super.toString());return ot?dt:compactAddLength(dt)}}class Type extends Text{constructor(tt,ot=""){super(tt,ot),this.setOverride(sanitize(this.toString()))}toRawType(){return"Type"}}function decodeU8aFixed(et,tt){const ot=u8aToU8a$1(et),dt=tt/8;if(!ot.length)return[new Uint8Array(dt),0];if(isU8a$1(et)?ot.length<dt:ot.length!==dt)throw new Error(`Expected input with ${dt} bytes (${tt} bits), found ${ot.length} bytes`);return[ot.subarray(0,dt),dt]}class U8aFixed extends Raw{constructor(tt,ot=new Uint8Array,dt=256){const[ft,pt]=decodeU8aFixed(ot,dt);super(tt,ft,pt)}static with(tt,ot){return class extends U8aFixed{constructor(dt,ft){super(dt,ft,tt)}toRawType(){return ot||super.toRawType()}}}toRawType(){return`[u8;${this.length}]`}}function decodeRaw(et,tt,ot){const dt=typeToConstructor(et,tt);if(isU8a$1(ot)||isHex$2(ot))try{const[,pt]=isHex$2(ot)?[0,u8aToU8a$1(ot)]:ot instanceof Raw?[0,ot.subarray()]:compactStripLength(ot);return[dt,new dt(et,pt),ot]}catch{return[dt,null,ot]}const ft=new dt(et,ot);return[dt,ft,compactAddLength(ft.toU8a())]}class WrapperKeepOpaque extends Bytes{constructor(ot,dt,ft,{opaqueName:pt="WrapperKeepOpaque"}={}){const[mt,ht,bt]=decodeRaw(ot,dt,ft);super(ot,bt);Ot(this,"__internal__Type");Ot(this,"__internal__decoded");Ot(this,"__internal__opaqueName");this.__internal__Type=mt,this.__internal__decoded=ht,this.__internal__opaqueName=pt}static with(ot){return class extends WrapperKeepOpaque{constructor(dt,ft){super(dt,ot,ft)}}}get isDecoded(){return!!this.__internal__decoded}inspect(){return this.__internal__decoded?{inner:[this.__internal__decoded.inspect()],outer:[compactToU8a(this.length)]}:{outer:[compactToU8a(this.length),this.toU8a(!0)]}}toHuman(ot,dt){return this.__internal__decoded?this.__internal__decoded.toHuman(ot,dt):super.toHuman(ot,dt)}toPrimitive(ot){return this.__internal__decoded?this.__internal__decoded.toPrimitive(ot):super.toPrimitive(ot)}toRawType(){return`${this.__internal__opaqueName}<${this.registry.getClassName(this.__internal__Type)||(this.__internal__decoded?this.__internal__decoded.toRawType():new this.__internal__Type(this.registry).toRawType())}>`}toString(){return this.__internal__decoded?this.__internal__decoded.toString():super.toString()}unwrap(){if(!this.__internal__decoded)throw new Error(`${this.__internal__opaqueName}: unwrapping an undecodable value`);return this.__internal__decoded}}class WrapperOpaque extends WrapperKeepOpaque{constructor(tt,ot,dt){super(tt,ot,dt,{opaqueName:"WrapperOpaque"})}static with(tt){return class extends WrapperOpaque{constructor(ot,dt){super(ot,tt,dt)}}}get inner(){return this.unwrap()}}class Float extends Number{constructor(ot,dt,{bitLength:ft=32}={}){super(isU8a$1(dt)||isHex$2(dt)?dt.length===0?0:u8aToFloat(u8aToU8a$1(dt),{bitLength:ft}):dt||0);Ot(this,"encodedLength");Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__bitLength");this.__internal__bitLength=ft,this.encodedLength=ft/8,this.initialU8aLength=this.encodedLength,this.registry=ot}static with(ot){return class extends Float{constructor(dt,ft){super(dt,ft,{bitLength:ot})}}}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.valueOf()===0}eq(ot){return this.valueOf()===Number(ot)}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex$1(this.toU8a())}toHuman(){return this.toString()}toJSON(){return this.toHex()}toNumber(){return this.valueOf()}toPrimitive(){return this.toNumber()}toRawType(){return`f${this.__internal__bitLength}`}toU8a(ot){return floatToU8a(this,{bitLength:this.__internal__bitLength})}}function decodeJson(et){return Object.entries(et||{})}class Json extends Map{constructor(ot,dt){const ft=decodeJson(dt);super(ft);Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");this.registry=ot,objectProperties(this,ft.map(([pt])=>pt),pt=>this.get(pt))}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return[...this.keys()].length===0}eq(ot){return compareMap(this,ot)}getT(ot){return this.get(ot)}inspect(){throw new Error("Unimplemented")}toHex(){throw new Error("Unimplemented")}toHuman(){return[...this.entries()].reduce((ot,[dt,ft])=>(ot[dt]=isFunction$4(ft==null?void 0:ft.toHuman)?ft.toHuman():ft,ot),{})}toJSON(){return[...this.entries()].reduce((ot,[dt,ft])=>(ot[dt]=ft,ot),{})}toPrimitive(ot){return[...this.entries()].reduce((dt,[ft,pt])=>(dt[ft]=isFunction$4(pt.toPrimitive)?pt.toPrimitive(ot):pt,dt),{})}toRawType(){return"Json"}toString(){return stringify$1(this.toJSON())}toU8a(ot){throw new Error("Unimplemented")}}function encodeSet(et,tt){const ot=new BN(0);for(let dt=0,ft=tt.length;dt<ft;dt++)ot.ior(bnToBn$2(et[tt[dt]]||0));return ot}function decodeSetArray(et,tt){const ot=tt.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++){const pt=tt[ft];if(isUndefined$1(et[pt]))throw new Error(`Set: Invalid key '${pt}' passed to Set, allowed ${Object.keys(et).join(", ")}`);dt[ft]=pt}return dt}function decodeSetNumber(et,tt){const ot=bnToBn$2(tt),dt=Object.keys(et),ft=[];for(let mt=0,ht=dt.length;mt<ht;mt++){const bt=dt[mt];ot.and(bnToBn$2(et[bt])).eq(bnToBn$2(et[bt]))&&ft.push(bt)}const pt=encodeSet(et,ft);if(!ot.eq(pt))throw new Error(`Set: Mismatch decoding '${ot.toString()}', computed as '${pt.toString()}' with ${ft.join(", ")}`);return ft}function decodeSet(et,tt=0,ot){if(ot%8!==0)throw new Error(`Expected valid bitLength, power of 8, found ${ot}`);const dt=ot/8;if(isU8a$1(tt))return tt.length===0?[]:decodeSetNumber(et,u8aToBn(tt.subarray(0,dt),{isLe:!0}));if(isString(tt))return decodeSet(et,u8aToU8a$1(tt),dt);if(tt instanceof Set||Array.isArray(tt)){const ft=Array.isArray(tt)?tt:[...tt.values()];return decodeSetArray(et,ft)}return decodeSetNumber(et,tt)}class CodecSet extends Set{constructor(ot,dt,ft,pt=8){super(decodeSet(dt,ft,pt));Ot(this,"registry");Ot(this,"createdAtHash");Ot(this,"initialU8aLength");Ot(this,"isStorageFallback");Ot(this,"__internal__allowed");Ot(this,"__internal__byteLength");Ot(this,"add",ot=>{if(this.__internal__allowed&&isUndefined$1(this.__internal__allowed[ot]))throw new Error(`Set: Invalid key '${ot}' on add`);return super.add(ot),this});this.registry=ot,this.__internal__allowed=dt,this.__internal__byteLength=pt/8}static with(ot,dt){var ft;return ft=class extends CodecSet{constructor(mt,ht){super(mt,ot,ht,dt)}},(()=>{const mt=Object.keys(ot),ht=mt.length,bt=new Array(ht);for(let yt=0;yt<ht;yt++)bt[yt]=`is${stringPascalCase(mt[yt])}`;objectProperties(ft.prototype,bt,(yt,xt,gt)=>gt.strings.includes(mt[xt]))})(),ft}get encodedLength(){return this.__internal__byteLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.size===0}get strings(){return[...super.values()]}get valueEncoded(){return encodeSet(this.__internal__allowed,this.strings)}eq(ot){return Array.isArray(ot)?compareArray(this.strings.sort(),ot.sort()):ot instanceof Set?this.eq([...ot.values()]):isNumber(ot)||isBn(ot)?this.valueEncoded.eq(bnToBn$2(ot)):!1}inspect(){return{outer:[this.toU8a()]}}toHex(){return u8aToHex$1(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toPrimitive(){return this.toJSON()}toRawType(){return stringify$1({_set:this.__internal__allowed})}toString(){return`[${this.strings.join(", ")}]`}toU8a(ot){return bnToU8a$1(this.valueEncoded,{bitLength:this.__internal__byteLength*8,isLe:!0})}}class f32 extends Float.with(32){constructor(){super(...arguments);Ot(this,"__FloatType","f32")}}class f64 extends Float.with(64){constructor(){super(...arguments);Ot(this,"__FloatType","f64")}}class i8 extends Int.with(8){constructor(){super(...arguments);Ot(this,"__IntType","i8")}}class i16 extends Int.with(16){constructor(){super(...arguments);Ot(this,"__IntType","i16")}}class i32 extends Int.with(32){constructor(){super(...arguments);Ot(this,"__IntType","i32")}}class i64 extends Int.with(64){constructor(){super(...arguments);Ot(this,"__IntType","i64")}}class i128 extends Int.with(128){constructor(){super(...arguments);Ot(this,"__IntType","i128")}}class i256 extends Int.with(256){constructor(){super(...arguments);Ot(this,"__IntType","i256")}}class isize extends i32{constructor(tt,ot){throw super(tt,ot),new Error("The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.")}}let u8$2=class extends UInt.with(8){constructor(){super(...arguments);Ot(this,"__UIntType","u8")}},u16$2=class extends UInt.with(16){constructor(){super(...arguments);Ot(this,"__UIntType","u16")}},u32$2=class extends UInt.with(32){constructor(){super(...arguments);Ot(this,"__UIntType","u32")}};class u64 extends UInt.with(64){constructor(){super(...arguments);Ot(this,"__UIntType","u64")}}class u128 extends UInt.with(128){constructor(){super(...arguments);Ot(this,"__UIntType","u128")}}class u256 extends UInt.with(256){constructor(){super(...arguments);Ot(this,"__UIntType","u256")}}class usize extends u32$2{constructor(tt,ot){throw super(tt,ot),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}function typeSplit(et){const tt=[];let ot=0,dt=0,ft=0,pt=0,mt=0;for(let ht=0,bt=et.length;ht<bt;ht++)switch(et[ht]){case",":{ot||dt||ft||pt||(tt.push(et.substring(mt,ht).trim()),mt=ht+1);break}case"<":ot++;break;case">":ot--;break;case"[":dt++;break;case"]":dt--;break;case"{":ft++;break;case"}":ft--;break;case"(":pt++;break;case")":pt--;break}if(ot||dt||ft||pt)throw new Error(`Invalid definition (missing terminators) found in ${et}`);return tt.push(et.substring(mt,et.length).trim()),tt}const KNOWN_INTERNALS=["_alias","_fallback"];function getTypeString(et){return isString$1(et)?et.toString():stringify$2(et)}function isRustEnum(et){const tt=Object.values(et);if(tt.some(ot=>isNumber$1(ot))){if(!tt.every(ot=>isNumber$1(ot)&&ot>=0&&ot<=255))throw new Error("Invalid number-indexed enum definition");return!1}return!0}function _decodeEnum(et,tt,ot,dt){return et.info=TypeDefInfo.Enum,et.fallbackType=dt,Array.isArray(tt)?et.sub=tt.map((ft,pt)=>({index:pt,info:TypeDefInfo.Plain,name:ft,type:"Null"})):isRustEnum(tt)?et.sub=Object.entries(tt).map(([ft,pt],mt)=>objectSpread$1({},getTypeDef(getTypeString(pt||"Null"),{name:ft},ot),{index:mt})):et.sub=Object.entries(tt).map(([ft,pt])=>({index:pt,info:TypeDefInfo.Plain,name:ft,type:"Null"})),et}function _decodeSet(et,tt,ot){return et.info=TypeDefInfo.Set,et.fallbackType=ot,et.length=tt._bitLength,et.sub=Object.entries(tt).filter(([dt])=>!dt.startsWith("_")).map(([dt,ft])=>({index:ft,info:TypeDefInfo.Plain,name:dt,type:"Null"})),et}function _decodeStruct(et,tt,ot,dt){const ft=JSON.parse(tt),pt=Object.keys(ft);return ft._enum?_decodeEnum(et,ft._enum,dt,ft._fallback):ft._set?_decodeSet(et,ft._set,ft._fallback):(et.alias=ft._alias?new Map(Object.entries(ft._alias)):void 0,et.fallbackType=ft._fallback,et.sub=pt.filter(mt=>!KNOWN_INTERNALS.includes(mt)).map(mt=>getTypeDef(getTypeString(ft[mt]),{name:mt},dt)),et)}function _decodeFixedVec(et,tt,ot,dt){const ft=tt.length-1;let pt=-1,mt=0;for(let gt=1;gt<ft&&pt===-1;gt++)switch(tt[gt]){case";":{mt===0&&(pt=gt);break}case"[":case"(":case"<":mt++;break;case"]":case")":case">":mt--;break}if(pt===-1)throw new Error(`${tt}: Unable to extract location of ';'`);const ht=tt.substring(1,pt),[bt,yt]=tt.substring(pt+1,ft).split(";"),xt=parseInt(bt.trim(),10);if(xt>2048)throw new Error(`${tt}: Only support for [Type; <length>], where length <= 2048`);return et.displayName=yt,et.length=xt,et.sub=getTypeDef(ht,{},dt),et}function _decodeTuple(et,tt,ot,dt){return et.sub=ot.length===0?[]:typeSplit(ot).map(ft=>getTypeDef(ft,{},dt)),et}function _decodeAnyInt(et,tt,ot,dt){const[ft,pt]=tt.substring(dt.length+1,tt.length-1).split(","),mt=parseInt(ft.trim(),10);if(mt>8192||mt%8)throw new Error(`${tt}: Only support for ${dt}<bitLength>, where length <= 8192 and a power of 8, found ${mt}`);return et.displayName=pt,et.length=mt,et}function _decodeInt(et,tt,ot){return _decodeAnyInt(et,tt,ot,"Int")}function _decodeUInt(et,tt,ot){return _decodeAnyInt(et,tt,ot,"UInt")}function _decodeDoNotConstruct(et,tt,ot){return et.displayName=tt.substring(15,tt.length-1),et}function hasWrapper(et,[tt,ot]){return et.startsWith(tt)&&et.slice(-1*ot.length)===ot}const nestedExtraction=[["[","]",TypeDefInfo.VecFixed,_decodeFixedVec],["{","}",TypeDefInfo.Struct,_decodeStruct],["(",")",TypeDefInfo.Tuple,_decodeTuple],["BTreeMap<",">",TypeDefInfo.BTreeMap,_decodeTuple],["HashMap<",">",TypeDefInfo.HashMap,_decodeTuple],["Int<",">",TypeDefInfo.Int,_decodeInt],["Result<",">",TypeDefInfo.Result,_decodeTuple],["UInt<",">",TypeDefInfo.UInt,_decodeUInt],["DoNotConstruct<",">",TypeDefInfo.DoNotConstruct,_decodeDoNotConstruct]],wrappedExtraction=[["BTreeSet<",">",TypeDefInfo.BTreeSet],["Compact<",">",TypeDefInfo.Compact],["Linkage<",">",TypeDefInfo.Linkage],["Opaque<",">",TypeDefInfo.WrapperOpaque],["Option<",">",TypeDefInfo.Option],["Range<",">",TypeDefInfo.Range],["RangeInclusive<",">",TypeDefInfo.RangeInclusive],["Vec<",">",TypeDefInfo.Vec],["WrapperKeepOpaque<",">",TypeDefInfo.WrapperKeepOpaque],["WrapperOpaque<",">",TypeDefInfo.WrapperOpaque]];function extractSubType(et,[tt,ot]){return et.substring(tt.length,et.length-ot.length)}function getTypeDef(et,{displayName:tt,name:ot}={},dt=0){const ft=sanitize(et),pt={displayName:tt,info:TypeDefInfo.Plain,name:ot,type:ft};if(++dt>64)throw new Error("getTypeDef: Maximum nested limit reached");const mt=nestedExtraction.find(bt=>hasWrapper(ft,bt));if(mt)return pt.info=mt[2],mt[3](pt,ft,extractSubType(ft,mt),dt);const ht=wrappedExtraction.find(bt=>hasWrapper(ft,bt));return ht&&(pt.info=ht[2],pt.sub=getTypeDef(extractSubType(ft,ht),{},dt)),pt}function getTypeDefType({lookupName:et,type:tt}){return et||tt}function getSubDefArray(et){if(!Array.isArray(et.sub))throw new Error(`Expected subtype as TypeDef[] in ${stringify$2(et)}`);return et.sub}function getSubDef(et){if(!et.sub||Array.isArray(et.sub))throw new Error(`Expected subtype as TypeDef in ${stringify$2(et)}`);return et.sub}function getSubType(et){return getTypeDefType(getSubDef(et))}function getTypeClassMap(et){const tt=getSubDefArray(et),ot={};for(let dt=0,ft=tt.length;dt<ft;dt++){const pt=tt[dt];if(!pt.name)throw new Error(`No name found in definition ${stringify$2(pt)}`);ot[pt.name]=getTypeDefType(pt)}return ot}function getTypeClassArray(et){return getSubDefArray(et).map(getTypeDefType)}function createInt(et,{displayName:tt,length:ot}){if(!isNumber$1(ot))throw new Error(`Expected bitLength information for ${tt||et.constructor.name}<bitLength>`);return et.with(ot,tt)}function createHashMap(et,tt){const[ot,dt]=getTypeClassArray(tt);return et.with(ot,dt)}function createWithSub(et,tt){return et.with(getSubType(tt))}const infoMapping={[TypeDefInfo.BTreeMap]:(et,tt)=>createHashMap(BTreeMap,tt),[TypeDefInfo.BTreeSet]:(et,tt)=>createWithSub(BTreeSet,tt),[TypeDefInfo.Compact]:(et,tt)=>createWithSub(Compact,tt),[TypeDefInfo.DoNotConstruct]:(et,tt)=>DoNotConstruct.with(tt.displayName||tt.type),[TypeDefInfo.Enum]:(et,tt)=>{const ot=getSubDefArray(tt);return Enum.with(ot.every(({type:dt})=>dt==="Null")?ot.reduce((dt,{index:ft,name:pt},mt)=>{if(!pt)throw new Error("No name found in sub definition");return dt[pt]=ft||mt,dt},{}):getTypeClassMap(tt))},[TypeDefInfo.HashMap]:(et,tt)=>createHashMap(HashMap,tt),[TypeDefInfo.Int]:(et,tt)=>createInt(Int,tt),[TypeDefInfo.Linkage]:(et,tt)=>{const ot=`Option<${getSubType(tt)}>`,dt=Struct.with({previous:ot,next:ot});return dt.prototype.toRawType=function(){return`Linkage<${this.next.toRawType(!0)}>`},dt},[TypeDefInfo.Null]:(et,tt)=>Null,[TypeDefInfo.Option]:(et,tt)=>{if(!tt.sub||Array.isArray(tt.sub))throw new Error("Expected type information for Option");return createWithSub(Option,tt)},[TypeDefInfo.Plain]:(et,tt)=>et.getOrUnknown(tt.type),[TypeDefInfo.Range]:(et,tt)=>createWithSub(Range,tt),[TypeDefInfo.RangeInclusive]:(et,tt)=>createWithSub(RangeInclusive,tt),[TypeDefInfo.Result]:(et,tt)=>{const[ot,dt]=getTypeClassArray(tt);return Result.with({Err:dt,Ok:ot})},[TypeDefInfo.Set]:(et,tt)=>CodecSet.with(getSubDefArray(tt).reduce((ot,{index:dt,name:ft})=>{if(!ft||!isNumber$1(dt))throw new Error("No name found in sub definition");return ot[ft]=dt,ot},{}),tt.length),[TypeDefInfo.Si]:(et,tt)=>getTypeClass(et,et.lookup.getTypeDef(tt.type)),[TypeDefInfo.Struct]:(et,tt)=>Struct.with(getTypeClassMap(tt),tt.alias),[TypeDefInfo.Tuple]:(et,tt)=>Tuple.with(getTypeClassArray(tt)),[TypeDefInfo.UInt]:(et,tt)=>createInt(UInt,tt),[TypeDefInfo.Vec]:(et,{sub:tt})=>{if(!tt||Array.isArray(tt))throw new Error("Expected type information for vector");return tt.type==="u8"?Bytes:Vec.with(getTypeDefType(tt))},[TypeDefInfo.VecFixed]:(et,{displayName:tt,length:ot,sub:dt})=>{if(!isNumber$1(ot)||!dt||Array.isArray(dt))throw new Error("Expected length & type information for fixed vector");return dt.type==="u8"?U8aFixed.with(ot*8,tt):VecFixed.with(getTypeDefType(dt),ot)},[TypeDefInfo.WrapperKeepOpaque]:(et,tt)=>createWithSub(WrapperKeepOpaque,tt),[TypeDefInfo.WrapperOpaque]:(et,tt)=>createWithSub(WrapperOpaque,tt)};function constructTypeClass(et,tt){try{const ot=infoMapping[tt.info](et,tt);if(!ot)throw new Error("No class created");return!ot.__fallbackType&&tt.fallbackType&&(ot.__fallbackType=tt.fallbackType),ot}catch(ot){throw new Error(`Unable to construct class from ${stringify$2(tt)}: ${ot.message}`)}}function getTypeClass(et,tt){return et.getUnsafe(tt.type,!1,tt)}function createClassUnsafe(et,tt){return et.getUnsafe(tt)||getTypeClass(et,et.isLookupType(tt)?et.lookup.getTypeDef(tt):getTypeDef(tt))}function checkInstance(et,tt){const ot=et.toU8a(),dt=et.toRawType();if(!(u8aEq$1(ot,tt)||["Bytes","Text","Type"].includes(dt)&&tt.length===et.length||et.isEmpty&&tt.every(pt=>!pt)))throw new Error(`${dt}:: Decoded input doesn't match input, received ${u8aToHex$2(tt,512)} (${tt.length} bytes), created ${u8aToHex$2(ot,512)} (${ot.length} bytes)`)}function checkPedantic(et,[tt]){isU8a$2(tt)?checkInstance(et,tt):isHex$3(tt)&&checkInstance(et,u8aToU8a$2(tt))}function initType(et,tt,ot=[],{blockHash:dt,isFallback:ft,isOptional:pt,isPedantic:mt}={}){const ht=new(pt?Option.with(tt):tt)(et,...ot);return mt&&checkPedantic(ht,ot),dt&&(ht.createdAtHash=createTypeUnsafe(et,"BlockHash",[dt])),ft&&(ht.isStorageFallback=!0),ht}function createTypeUnsafe(et,tt,ot=[],dt={}){let ft=null,pt=null;try{return ft=createClassUnsafe(et,tt),initType(et,ft,ot,dt)}catch(mt){pt=new Error(`createType(${tt}):: ${mt.message}`)}if(ft!=null&&ft.__fallbackType)try{return ft=createClassUnsafe(et,ft.__fallbackType),initType(et,ft,ot,dt)}catch{}throw pt}const stringIdentity=et=>et.toString(),INFO_WRAP=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function paramsNotation(et,tt,ot=stringIdentity){return`${et}${tt?`<${(Array.isArray(tt)?tt:[tt]).map(ot).join(", ")}>`:""}`}function encodeWithParams(et,tt,ot){const{info:dt,sub:ft}=tt;switch(dt){case TypeDefInfo.BTreeMap:case TypeDefInfo.BTreeSet:case TypeDefInfo.Compact:case TypeDefInfo.HashMap:case TypeDefInfo.Linkage:case TypeDefInfo.Option:case TypeDefInfo.Range:case TypeDefInfo.RangeInclusive:case TypeDefInfo.Result:case TypeDefInfo.Vec:case TypeDefInfo.WrapperKeepOpaque:case TypeDefInfo.WrapperOpaque:return paramsNotation(ot,ft,pt=>encodeTypeDef(et,pt))}throw new Error(`Unable to encode ${stringify$2(tt)} with params`)}function encodeSubTypes(et,tt,ot,dt){const ft=tt.map(({name:mt})=>mt);if(!ft.every(mt=>!!mt))throw new Error(`Subtypes does not have consistent names, ${ft.join(", ")}`);const pt=objectSpread$1({},dt);for(let mt=0,ht=tt.length;mt<ht;mt++){const bt=tt[mt];if(!bt.name)throw new Error(`No name found in ${stringify$2(bt)}`);pt[bt.name]=encodeTypeDef(et,bt)}return stringify$2(ot?{_enum:pt}:pt)}const encoders={[TypeDefInfo.BTreeMap]:(et,tt)=>encodeWithParams(et,tt,"BTreeMap"),[TypeDefInfo.BTreeSet]:(et,tt)=>encodeWithParams(et,tt,"BTreeSet"),[TypeDefInfo.Compact]:(et,tt)=>encodeWithParams(et,tt,"Compact"),[TypeDefInfo.DoNotConstruct]:(et,{displayName:tt,lookupIndex:ot,lookupName:dt})=>`DoNotConstruct<${dt||tt||(isUndefined$2(ot)?"Unknown":et.createLookupType(ot))}>`,[TypeDefInfo.Enum]:(et,{sub:tt})=>{if(!Array.isArray(tt))throw new Error("Unable to encode Enum type");return tt.every(({type:ot})=>ot==="Null")?stringify$2({_enum:tt.map(({name:ot},dt)=>`${ot||`Empty${dt}`}`)}):encodeSubTypes(et,tt,!0)},[TypeDefInfo.HashMap]:(et,tt)=>encodeWithParams(et,tt,"HashMap"),[TypeDefInfo.Int]:(et,{length:tt=32})=>`Int<${tt}>`,[TypeDefInfo.Linkage]:(et,tt)=>encodeWithParams(et,tt,"Linkage"),[TypeDefInfo.Null]:(et,tt)=>"Null",[TypeDefInfo.Option]:(et,tt)=>encodeWithParams(et,tt,"Option"),[TypeDefInfo.Plain]:(et,{displayName:tt,type:ot})=>tt||ot,[TypeDefInfo.Range]:(et,tt)=>encodeWithParams(et,tt,"Range"),[TypeDefInfo.RangeInclusive]:(et,tt)=>encodeWithParams(et,tt,"RangeInclusive"),[TypeDefInfo.Result]:(et,tt)=>encodeWithParams(et,tt,"Result"),[TypeDefInfo.Set]:(et,{length:tt=8,sub:ot})=>{if(!Array.isArray(ot))throw new Error("Unable to encode Set type");return stringify$2({_set:ot.reduce((dt,{index:ft,name:pt},mt)=>objectSpread$1(dt,{[`${pt||`Unknown${ft||mt}`}`]:ft||mt}),{_bitLength:tt||8})})},[TypeDefInfo.Si]:(et,{lookupName:tt,type:ot})=>tt||ot,[TypeDefInfo.Struct]:(et,{alias:tt,sub:ot})=>{if(!Array.isArray(ot))throw new Error("Unable to encode Struct type");return encodeSubTypes(et,ot,!1,tt?{_alias:[...tt.entries()].reduce((dt,[ft,pt])=>objectSpread$1(dt,{[ft]:pt}),{})}:{})},[TypeDefInfo.Tuple]:(et,{sub:tt})=>{if(!Array.isArray(tt))throw new Error("Unable to encode Tuple type");return`(${tt.map(ot=>encodeTypeDef(et,ot)).join(",")})`},[TypeDefInfo.UInt]:(et,{length:tt=32})=>`UInt<${tt}>`,[TypeDefInfo.Vec]:(et,tt)=>encodeWithParams(et,tt,"Vec"),[TypeDefInfo.VecFixed]:(et,{length:tt,sub:ot})=>{if(!isNumber$1(tt)||!ot||Array.isArray(ot))throw new Error("Unable to encode VecFixed type");return`[${ot.type};${tt}]`},[TypeDefInfo.WrapperKeepOpaque]:(et,tt)=>encodeWithParams(et,tt,"WrapperKeepOpaque"),[TypeDefInfo.WrapperOpaque]:(et,tt)=>encodeWithParams(et,tt,"WrapperOpaque")};function encodeType(et,tt,ot=!0){return ot&&tt.lookupName?tt.lookupName:encoders[tt.info](et,tt)}function encodeTypeDef(et,tt){return tt.displayName&&!INFO_WRAP.some(ot=>tt.displayName===ot)?tt.displayName:encodeType(et,tt)}function withTypeString(et,tt){return objectSpread$1({},tt,{type:encodeType(et,tt,!1)})}const XCM_MAPPINGS=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError"];function mapXcmTypes(et){return XCM_MAPPINGS.reduce((tt,ot)=>objectSpread$1(tt,{[ot]:`${ot}${et}`}),{})}const v0$2={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAssetV0",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},v1$2={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},v2$1={AssetIdV2:{_enum:{Concrete:"MultiLocationV2",Abstract:"Bytes"}},AssetInstanceV2:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]",Blob:"Bytes"}},BodyIdV2:{_enum:{Unit:"Null",Named:"Bytes",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null",Defense:"Null",Administration:"Null",Treasury:"Null"}},BodyPartV2:{_enum:{Voice:"Null",Members:{count:"Compact<u32>"},Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},NetworkIdV2:{_enum:{Any:"Null",Named:"Bytes",Polkadot:"Null",Kusama:"Null"}},JunctionV2:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkIdV2",id:"[u8; 32]"},AccountIndex64:{network:"NetworkIdV2",index:"Compact<u64>"},AccountKey20:{network:"NetworkIdV2",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Bytes",OnlyChild:"Null",Plurality:{id:"BodyIdV2",part:"BodyPartV2"}}},JunctionsV2:{_enum:{Here:"Null",X1:"JunctionV2",X2:"(JunctionV2, JunctionV2)",X3:"(JunctionV2, JunctionV2, JunctionV2)",X4:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X5:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X6:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X7:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X8:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)"}},FungibilityV2:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV2"}},InteriorMultiLocationV2:"JunctionsV2",MultiAssetV2:{id:"AssetIdV2",fun:"FungibilityV2"},MultiAssetsV2:"Vec<MultiAssetV2>",MultiAssetFilterV2:{_enum:{Definite:"MultiAssetsV2",Wild:"WildMultiAssetV2"}},MultiLocationV2:{parents:"u8",interior:"JunctionsV2"},OriginKindV2:{_enum:{Native:"Null",SovereignAccount:"Null",Superuser:"Null",Xcm:"Null"}},WildFungibilityV2:{_enum:{Fungible:"Null",NonFungible:"Null"}},ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"Option<(u32, XcmErrorV2)>",Version:"u32"}},ResponseV2Error:"(u32, XcmErrorV2)",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"Compact<u64>",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocationV2",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"Compact<u32>",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"Compact<u32>",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponseWeight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2<RuntimeCall>",SetAppendix:"XcmV2<RuntimeCall>",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"Compact<u64>"},UnsubscribeVersion:"Null"}},WildMultiAssetV2:{_enum:{All:"Null",AllOf:{id:"AssetIdV2",fun:"WildFungibilityV2"}}},XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Overflow:"Null",Unimplemented:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",BadOrigin:"Null",InvalidLocation:"Null",AssetNotFound:"Null",FailedToTransactAsset:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",ExceedsMaxMessageSize:"Null",DestinationUnsupported:"Null",Transport:"Null",Unroutable:"Null",UnknownClaim:"Null",FailedToDecode:"Null",MaxWeightInvalid:"Null",NotHoldingFees:"Null",TooExpensive:"Null",Trap:"u64",UnhandledXcmVersion:"Null",WeightLimitReached:"Weight",Barrier:"Null",WeightNotComputable:"Null"}}},v3$1={AssetIdV3:{_enum:{Concrete:"MultiLocationV3",Abstract:"Bytes"}},BodyIdV3:{_enum:{Unit:"Null",Moniker:"[u8;4]",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null",Defense:"Null",Administration:"Null",Treasury:"Null"}},BodyPartV3:{_enum:{Voice:"Null",Members:{count:"Compact<u32>"},Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},AssetInstanceV3:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},FungibilityV3:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV3"}},InteriorMultiLocationV3:"JunctionsV3",JunctionV3:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV3>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV3>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV3>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV3"}},JunctionsV3:{_enum:{Here:"Null",X1:"JunctionV3",X2:"(JunctionV3, JunctionV3)",X3:"(JunctionV3, JunctionV3, JunctionV3)",X4:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X5:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X6:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X7:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X8:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)"}},MaybeErrorCodeV3:{_enum:{Success:"Null",Error:"Bytes",TruncatedError:"Bytes"}},MaxPalletsInfo:"u32",MultiAssetV3:{id:"AssetIdV3",fun:"FungibilityV3"},MultiAssetsV3:"Vec<MultiAssetV3>",MultiAssetFilterV3:{_enum:{Definite:"MultiAssetsV3",Wild:"WildMultiAssetV3"}},MultiLocationV3:{parents:"u8",interior:"JunctionsV3"},MaxPalletNameLen:"u32",NetworkIdV3:{_enum:{ByGenesis:"[u8;32]",ByFork:{blockNumber:"u64",blockHash:"[u8;32]"},Polkadot:"Null",Kusama:"Null",Westend:"Null",Rococo:"Null",Wococo:"Null",Ethereum:{chainId:"Compact<u64>"},BitcoinCore:"Null",BitcoinCash:"Null",PolkadotBulletin:"Null"}},OriginKindV3:"OriginKindV2",PalletInfoV3:{index:"Compact<u32>",name:"Bytes",moduleName:"Bytes",major:"Compact<u32>",minor:"Compact<u32>",patch:"Compact<u32>"},WildFungibilityV3:"WildFungibilityV2",QueryResponseInfoV3:{destination:"MultiLocationV3",queryId:"Compact<u64>",maxWeight:"WeightV2"},ResponseV3:{_enum:{Null:"Null",Assets:"MultiAssetsV3",ExecutionResult:"Option<(u32,XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV3>",DispatchResult:"MaybeErrorCodeV3"}},XcmErrorV3:{_enum:{Overflow:"Null",Unimplemented:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",LocationFull:"Null",LocationNotInvertible:"Null",BadOrigin:"Null",InvalidLocation:"Null",AssetNotFound:"Null",FailedToTransactAsset:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",ExceedsMaxMessageSize:"Null",DestinationUnsupported:"Null",Transport:"Null",Unroutable:"Null",UnknownClaim:"Null",FailedToDecode:"Null",MaxWeightInvalid:"Null",NotHoldingFees:"Null",TooExpensive:"Null",Trap:"u64",ExpectationFalse:"Null",PalletNotFound:"Null",NameMismatch:"Null",VersionIncompatible:"Null",HoldingWouldOverflow:"Null",ExportError:"Null",ReanchorFailed:"Null",NoDeal:"Null",FeesNotMet:"Null",LockError:"Null",NoPermission:"Null",Unanchored:"Null",NotDepositable:"Null",UnhandledXcmVersion:"Null",WeightLimitReached:"WeightV2",Barrier:"Null",ExceedsStackLimit:"Null"}},ResponseV3Error:"(u32, XcmErrorV3)",ResponseV3Result:"Option<(u32, ResponseV3Error)>",WeightLimitV3:{_enum:{Unlimited:"Null",Limited:"WeightV2"}},InstructionV3:{_enum:{WithdrawAsset:"MultiAssetsV3",ReserveAssetDeposited:"MultiAssetsV3",ReceiveTeleportedAsset:"MultiAssetsV3",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV3",maxWeight:"WeightV2",querier:"Option<MultiLocationV3>"},TransferAsset:{assets:"MultiAssetsV3",beneficiary:"MultiLocationV3"},TransferReserveAsset:{assets:"MultiAssetsV3",dest:"MultiLocationV3",xcm:"XcmV3"},Transact:{originKind:"XcmOriginKind",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"JunctionsV3",ReportError:"QueryResponseInfoV3",DepositAsset:{assets:"MultiAssetFilterV3",beneficiary:"MultiLocationV3"},DepositReserveAsset:{assets:"MultiAssetFilterV3",dest:"MultiLocationV3",xcm:"XcmV3"},ExchangeAsset:{give:"MultiAssetFilterV3",want:"MultiAssetsV3",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV3",reserve:"MultiLocationV3",xcm:"XcmV3"},InitiateTeleport:{assets:"MultiAssetFilterV3",dest:"MultiLocationV3",xcm:"XcmV3"},ReportHolding:{responseInfo:"QueryResponseInfoV3",assets:"MultiAssetFilterV3"},BuyExecution:{fees:"MultiAssetV3",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV3<RuntimeCall>",SetAppendix:"XcmV3<RuntimeCall>",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV3",ticket:"MultiLocationV3"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV3",ExpectAsset:"MultiAssetsV3",ExpectOrigin:"Option<MultiLocationV3>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV3"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV3",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV3",ExportMessage:{network:"NetworkIdV3",destination:"JunctionsV3",xcm:"XcmV3"},LockAsset:{asset:"MultiAssetV3",unlocker:"MultiLocationV3"},UnlockAsset:{asset:"MultiAssetV3",target:"MultiLocationV3"},NoteUnlockable:{asset:"MultiAssetV3",owner:"MultiLocationV3"},RequestUnlock:{asset:"MultiAssetV3",locker:"MultiLocationV3"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8; 32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV3",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV3>"}}},WildMultiAssetV3:{_enum:{All:"Null",AllOf:{id:"AssetIdV3",fun:"WildFungibilityV2"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV3",fun:"WildFungibilityV2",count:"Compact<u32>"}}},VersionV3:"u32",XcmV3:"Vec<InstructionV3>"},v4$1={AssetIdV4:"MultiLocationV4",AssetInstanceV4:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},FungibilityV4:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV4"}},UncheckedFungibilityV4:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV4"}},JunctionV4:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV4>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV4>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV4>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV4"}},JunctionsV4:{_enum:{Here:"Null",X1:"[JunctionV4;1]",X2:"[JunctionV4;2]",X3:"[JunctionV4;3]",X4:"[JunctionV4;4]",X5:"[JunctionV4;5]",X6:"[JunctionV4;6]",X7:"[JunctionV4;7]",X8:"[JunctionV4;8]"}},MaxPalletsInfo:"u32",NetworkIdV4:"NetworkIdV3",MultiAssetV4:{id:"AssetIdV4",fun:"FungibilityV4"},MultiAssetsV4:"Vec<MultiAssetV4>",MultiAssetFilterV4:{_enum:{Definite:"MultiAssetsV4",Wild:"WildMultiAssetV4"}},MultiLocationV4:{parents:"u8",interior:"JunctionsV4"},OriginKindV4:"XcmOriginKind",PalletInfoV4:"PalletInfoV3",WildFungibilityV4:"WildFungibilityV2",QueryResponseInfoV4:{destination:"MultiLocationV4",queryId:"Compact<u64>",maxWeight:"WeightV2"},ResponseV4:{_enum:{Null:"Null",Assets:"MultiAssetsV4",ExecutionResult:"Option<(u32, XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV4>",DispatchResult:"MaybeErrorCodeV3"}},InstructionV4:{_enum:{WithdrawAsset:"MultiAssetsV4",ReserveAssetDeposited:"MultiAssetsV4",ReceiveTeleportedAsset:"MultiAssetsV4",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV4",maxWeight:"WeightV2",querier:"Option<MultiLocationV4>"},TransferAsset:{assets:"MultiAssetsV4",beneficiary:"MultiLocationV4"},TransferReserveAsset:{assets:"MultiAssetsV4",dest:"MultiLocationV4",xcm:"XcmV4"},Transact:{originKind:"OriginKindV4",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"JunctionsV4",ReportError:"QueryResponseInfoV4",DepositAsset:{assets:"MultiAssetFilterV4",beneficiary:"MultiLocationV4"},DepositReserveAsset:{assets:"MultiAssetFilterV4",dest:"MultiLocationV4",xcm:"XcmV4"},ExchangeAsset:{give:"MultiAssetFilterV4",want:"MultiAssetsV4",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV4",reserve:"MultiLocationV4",xcm:"XcmV4"},InitiateTeleport:{assets:"MultiAssetFilterV4",dest:"MultiLocationV4",xcm:"XcmV4"},ReportHolding:{responseInfo:"QueryResponseInfoV4",assets:"MultiAssetFilterV4"},BuyExecution:{fees:"MultiAssetV4",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV4",SetAppendix:"XcmV4",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV4",ticket:"MultiLocationV4"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV4",ExpectAsset:"MultiAssetsV4",ExpectOrigin:"Option<MultiLocationV4>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV4"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV4",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV4",ExportMessage:{network:"NetworkIdV4",destination:"JunctionsV4",xcm:"XcmV4"},LockAsset:{asset:"MultiAssetV4",unlocker:"MultiLocationV4"},UnlockAsset:{asset:"MultiAssetV4",target:"MultiLocationV4"},NoteUnlockable:{asset:"MultiAssetV4",owner:"MultiLocationV4"},RequestUnlock:{asset:"MultiAssetV4",locker:"MultiLocationV4"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8;32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV4",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV4>"}}},OutcomeV4:{_enum:{Complete:{used:"WeightV2"},Incomplete:{used:"WeightV2",error:"XcmErrorV3"},Error:{error:"XcmErrorV3"}}},WildMultiAssetV4:{_enum:{All:"Null",AllOf:{id:"AssetIdV4",fun:"WildFungibilityV4"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV4",fun:"WildFungibilityV4",count:"Compact<u32>"}}},VersionV4:"u32",XcmV4:"Vec<InstructionV4>",XcmErrorV4:"XcmErrorV3"},v5$1={AssetIdV5:"MultiLocationV5",AssetInstanceV5:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},MultiAssetV5:{id:"AssetIdV5",fun:"FungibilityV5"},MultiAssetsV5:"Vec<MultiAssetV5>",WildMultiAssetV5:{_enum:{All:"Null",AllOf:{id:"AssetIdV5",fun:"WildFungibilityV5"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV5",fun:"WildFungibilityV5",count:"Compact<u32>"}}},MultiAssetFilterV5:{_enum:{Definite:"MultiAssetsV5",Wild:"WildMultiAssetV5"}},MultiAssetTransferFilterV5:{_enum:{Teleport:"MultiAssetFilterV5",ReserveDeposit:"MultiAssetFilterV5",ReserveWithdraw:"MultiAssetFilterV5"}},FungibilityV5:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV5"}},UncheckedFungibilityV5:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV5"}},WildFungibilityV5:"WildFungibilityV2",JunctionV5:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV5>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV5>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV5>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV5"}},NetworkIdV5:{_enum:{ByGenesis:"[u8;32]",ByFork:{blockNumber:"u64",blockHash:"[u8;32]"},Polkadot:"Null",Kusama:"Null",Ethereum:{chainId:"Compact<u64>"},BitcoinCore:"Null",BitcoinCash:"Null",PolkadotBulletin:"Null"}},JunctionsV5:{_enum:{Here:"Null",X1:"[JunctionV5;1]",X2:"[JunctionV5;2]",X3:"[JunctionV5;3]",X4:"[JunctionV5;4]",X5:"[JunctionV5;5]",X6:"[JunctionV5;6]",X7:"[JunctionV5;7]",X8:"[JunctionV5;8]"}},MultiLocationV5:{parents:"u8",interior:"JunctionsV5"},InteriorMultiLocationV5:"JunctionsV5",XcmV5:"Vec<InstructionV5>",PalletInfoV5:"PalletInfoV3",ResponseV5:{_enum:{Null:"Null",Assets:"MultiAssetsV5",ExecutionResult:"Option<(u32, XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV5>",DispatchResult:"MaybeErrorCodeV3"}},QueryResponseInfoV5:{destination:"MultiLocationV5",queryId:"Compact<u64>",maxWeight:"WeightV2"},InstructionV5:{_enum:{WithdrawAsset:"MultiAssetsV5",ReserveAssetDeposited:"MultiAssetsV5",ReceiveTeleportedAsset:"MultiAssetsV5",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV5",maxWeight:"WeightV2",querier:"Option<MultiLocationV5>"},TransferAsset:{assets:"MultiAssetsV5",beneficiary:"MultiLocationV5"},TransferReserveAsset:{assets:"MultiAssetsV5",dest:"MultiLocationV5",xcm:"XcmV5"},Transact:{originKind:"OriginKindV4",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocationV5",ReportError:"QueryResponseInfoV4",DepositAsset:{assets:"MultiAssetFilterV5",beneficiary:"MultiLocationV5"},DepositReserveAsset:{assets:"MultiAssetFilterV5",dest:"MultiLocationV5",xcm:"XcmV5"},ExchangeAsset:{give:"MultiAssetFilterV5",want:"MultiAssetsV5",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV5",reserve:"MultiLocationV5",xcm:"XcmV5"},InitiateTeleport:{assets:"MultiAssetFilterV5",dest:"MultiLocationV5",xcm:"XcmV5"},ReportHolding:{responseInfo:"QueryResponseInfoV4",assets:"MultiAssetFilterV5"},BuyExecution:{fees:"MultiAssetV4",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV5",SetAppendix:"XcmV5",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV5",ticket:"MultiLocationV5"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV5",ExpectAsset:"MultiAssetsV5",ExpectOrigin:"Option<MultiLocationV5>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV4"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV4",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV5",ExportMessage:{network:"NetworkIdV5",destination:"InteriorMultiLocationV5",xcm:"XcmV5"},LockAsset:{asset:"MultiAssetV5",unlocker:"MultiLocationV5"},UnlockAsset:{asset:"MultiAssetV5",target:"MultiLocationV5"},NoteUnlockable:{asset:"MultiAssetV5",owner:"MultiLocationV5"},RequestUnlock:{asset:"MultiAssetV5",locker:"MultiLocationV5"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8;32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV5",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV5>"},PayFees:{asset:"MultiAssetV5"},InitiateTransfer:{destination:"MultiLocationV5",remoteFees:"Option<MultiAssetTransferFilterV5>",preserveOrigin:"bool",assets:"Vec<MultiAssetTransferFilterV5>",remoteXcm:"XcmV5"},ExecuteWithOrigin:{descendant_origin:"Option<InteriorMultiLocationV5>",xcm:"XcmV5"},SetHints:{hints:"Vec<HintV5>"}}},HintV5:{_enum:{AssetClaimer:{location:"MultiLocationV5"}}},XcmErrorV5:"XcmErrorV3"},XCM_LATEST$1="V5",xcm$1={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},location$1={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}},definitions$1s={rpc:{},types:{...location$1,...xcm$1,...v0$2,...v1$2,...v2$1,...v3$1,...v4$1,...v5$1,...mapXcmTypes(XCM_LATEST$1),DoubleEncodedCall:{encoded:"Bytes"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2",V3:"MultiAssetV3",V4:"MultiAssetV4",V5:"MultiAssetV5"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2",V3:"MultiAssetsV3",V4:"MultiAssetsV4",V5:"MultiAssetsV5"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2",V3:"MultiLocationV3",V4:"MultiLocationV4",v5:"MultiLocationV5"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2",V3:"ResponseV3",V4:"ResponseV4",V5:"ResponseV5"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2",V3:"XcmV3",V4:"XcmV4",V5:"XcmV5"}},XcmVersion:"u32"}},runtime$H={XcmPaymentApi:[{methods:{query_acceptable_payment_assets:{description:"The API to query acceptable payment assets",params:[{name:"version",type:"u32"}],type:"Result<Vec<XcmVersionedAssetId>, XcmPaymentApiError>"},query_weight_to_asset_fee:{description:"",params:[{name:"weight",type:"WeightV2"},{name:"asset",type:"XcmVersionedAssetId"}],type:"Result<u128, XcmPaymentApiError>"},query_xcm_weight:{description:"",params:[{name:"message",type:"XcmVersionedXcm"}],type:"Result<WeightV2, XcmPaymentApiError>"}},version:1}]},definitions$1r={rpc:{},runtime:runtime$H,types:{XcmPaymentApiError:{_enum:["Unimplemented","VersionedConversionFailed","WeightNotComputable","UnhandledXcmVersion","AssetNotFound"]}}},runtime$G={LocationToAccountApi:[{methods:{convert_location:{description:"Converts `Location` to `AccountId`",params:[{name:"location",type:"XcmVersionedLocation"}],type:"Result<AccountId, Error>"}},version:1}]},definitions$1q={rpc:{},runtime:runtime$G,types:{Error:{_enum:["Unsupported","VersionedConversionFailed"]}}},layout$1={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},spec$1={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV4:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>",default:"bool",returnType:"Option<ContractTypeSpec>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV4:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractContractSpecV5:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV3>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractEventSpecV3:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>",module_path:"Text",signature_topic:"Option<[u8; 32]>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV3:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>",default:"bool"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},latest$1={ContractConstructorSpecLatest:"ContractConstructorSpecV4",ContractEventSpecLatest:"ContractEventSpecV3",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV3",ContractMetadataLatest:"ContractMetadataV5"},definitions$1p={rpc:{},types:{...layout$1,...spec$1,...latest$1,ContractProjectInfo:{source:"ContractProjectSource",contract:"ContractProjectContract"},ContractMetadataV0:{metadataVersion:"Text",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1:{types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2:{types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3:{types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractMetadataV4:{types:"Vec<PortableType>",spec:"ContractContractSpecV4",version:"Text"},ContractMetadataV5:{types:"Vec<PortableType>",spec:"ContractContractSpecV5",version:"u64"},ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3",V4:"ContractMetadataV4",V5:"ContractMetadataV5"}},ContractProjectV0:{metadataVersion:"Text",source:"ContractProjectSource",contract:"ContractProjectContract",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"},ContractEnvironmentV4:{_alias:{hashType:"hash"},accountId:"Option<ContractTypeSpec>",balance:"Option<ContractTypeSpec>",blockNumber:"Option<ContractTypeSpec>",hashType:"Option<ContractTypeSpec>",timestamp:"Option<ContractTypeSpec>",maxEventTopics:"Option<u32>"}}},netRpc$1={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"Text"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"Text"}},web3Rpc$1={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"Text"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},rpc$o={...netRpc$1,...web3Rpc$1,accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},feeHistory:{description:"Returns fee history for given block count & reward percentiles",params:[{name:"blockCount",type:"U256"},{name:"newestBlock",type:"BlockNumber"},{name:"rewardPercentiles",type:"Option<Vec<f64>>"}],type:"EthFeeHistory"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},maxPriorityFeePerGas:{description:"Returns max priority fee per gas",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}},ethMethodsV4$1={account_basic:{description:"Returns pallet_evm::Accounts by address.",params:[{name:"address",type:"H160"}],type:"EvmAccount"},account_code_at:{description:"For a given account address, returns pallet_evm::AccountCodes.",params:[{name:"address",type:"H160"}],type:"Bytes"},author:{description:"Returns the converted FindAuthor::find_author authority id.",params:[],type:"H160"},call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfo, DispatchError>"},chain_id:{description:"Returns runtime defined pallet_evm::ChainId.",params:[],type:"u64"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfo, DispatchError>"},current_all:{description:"Return all the current data for a block in a single runtime call.",params:[],type:"(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)"},current_block:{description:"Return the current block.",params:[],type:"BlockV2"},current_receipts:{description:"Return the current receipt.",params:[],type:"Option<Vec<EthReceiptV3>>"},current_transaction_statuses:{description:"Return the current transaction status.",params:[],type:"Option<Vec<EthTransactionStatus>>"},elasticity:{description:"Return the elasticity multiplier.",params:[],type:"Option<Permill>"},extrinsic_filter:{description:"Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.",params:[{name:"xts",type:"Vec<Extrinsic>"}],type:"Vec<TransactionV2>"},gas_price:{description:"Returns FixedGasPrice::min_gas_price",params:[],type:"u256"},storage_at:{description:"For a given account address and index, returns pallet_evm::AccountStorages.",params:[{name:"address",type:"H160"},{name:"index",type:"u256"}],type:"H256"}},ethMethodsV5$1={call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfoV2, DispatchError>"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfoV2, DispatchError>"}},runtime$F={ConvertTransactionRuntimeApi:[{methods:{convert_transaction:{description:"Converts an Ethereum-style transaction to Extrinsic",params:[{name:"transaction",type:"TransactionV2"}],type:"Extrinsic"}},version:2}],DebugRuntimeApi:[{methods:{trace_block:{description:"Trace all block extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"knownTransactions",type:"Vec<H256>"}],type:"Result<(), DispatchError>"},trace_transaction:{description:"Trace transaction extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"transaction",type:"EthTransaction"}],type:"Result<(), DispatchError>"}},version:4}],EthereumRuntimeRPCApi:[{methods:{...ethMethodsV4$1},version:4},{methods:{...ethMethodsV4$1,...ethMethodsV5$1},version:5}]},V0$1={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},V1$1={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},V2$1={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},types$1={...V0$1,...V1$1,...V2$1,EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFeeHistory:{oldestBlock:"U256",baseFeePerGas:"Vec<U256>",gasUsedRatio:"Vec<f64>",reward:"Option<Vec<Vec<U256>>>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthReceiptV0:"EthReceipt",EthReceiptV3:"EthReceipt",EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:{hash:"H256",nonce:"U256",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionIndex:"Option<U256>",from:"H160",to:"Option<H160>",value:"U256",gasPrice:"Option<U256>",maxFeePerGas:"Option<U256>",maxPriorityFeePerGas:"Option<U256>",gas:"U256",input:"Bytes",creates:"Option<H160>",raw:"Bytes",publicKey:"Option<H512>",chainId:"Option<U64>",standardV:"U256",v:"U256",r:"U256",s:"U256",accessList:"Option<Vec<EthAccessListItem>>",transactionType:"Option<U256>"},EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}},definitions$1o={rpc:rpc$o,runtime:runtime$F,types:types$1},runtime$E={AuthorFilterAPI:[{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:2},{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"}],type:"bool"}},version:1}],NimbusApi:[{methods:{can_author:{description:"The runtime api used to predict whether a Nimbus author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:1}]},definitions$1n={rpc:{},runtime:runtime$E,types:{}},runtime$D={OracleApi:[{methods:{get_all_values:{description:"Retrieves all values",params:[{name:"providerId",type:"Raw"}],type:"Raw"},get_value:{description:"Retrieves a single value",params:[{name:"providerId",type:"Raw"},{name:"key",type:"Raw"}],type:"Option<Raw>"}},version:1}]},definitions$1m={rpc:{},runtime:runtime$D,types:{}},runtime$C={TokensApi:[{methods:{query_existential_deposit:{description:"Query the existential amount for a specific currency",params:[{name:"currencyId",type:"Raw"}],type:"u128"}},version:1}]},definitions$1l={rpc:{},runtime:runtime$C,types:{}},rpc$n={methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},definitions$1k={rpc:rpc$n,types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},rpc$m={hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",isUnsafe:!0,params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",isUnsafe:!0,params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},insertKey:{description:"Insert a key into the keystore.",isUnsafe:!0,params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",isUnsafe:!0,params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",isUnsafe:!0,params:[],type:"Bytes"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"},submitExtrinsic:{description:"Submit a fully formatted extrinsic for block inclusion",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"}},definitions$1j={rpc:rpc$m,types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},rpc$l={getBlock:{description:"Get header and body of a relay chain block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{isOptional:!0,name:"blockNumber",type:"BlockNumber"}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"}},definitions$1i={rpc:rpc$l,types:{BlockHash:"Hash"}},rpc$k={getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<u64>"}},definitions$1h={rpc:rpc$k,types:{PrefixedStorageKey:"StorageKey"}},rpc$j={localStorageClear:{description:"Clear offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Null"},localStorageGet:{description:"Get offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},localStorageSet:{description:"Set offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"}},runtime$B={OffchainWorkerApi:[{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"header",type:"Header"}],type:"Null"}},version:2},{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"number",type:"BlockNumber"}],type:"Null"}},version:1}]},definitions$1g={rpc:rpc$j,runtime:runtime$B,types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}},rpc$i={queryFeeDetails:{deprecated:"Use `api.call.transactionPaymentApi.queryFeeDetails` instead",description:"Query the detailed fee of a given encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"FeeDetails"},queryInfo:{deprecated:"Use `api.call.transactionPaymentApi.queryInfo` instead",description:"Retrieves the fee information for an encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeDispatchInfoV1"}},V1_TO_V4_SHARED_PAY$1={query_fee_details:{description:"The transaction fee details",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"FeeDetails"}},V1_TO_V3_SHARED_CALL$1={query_call_fee_details:{description:"The call fee details",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"FeeDetails"}},V2_TO_V4_SHARED_PAY$1={query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V2_V3_SHARED_CALL$1={query_call_info:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V3_SHARED_PAY_CALL$1={query_length_to_fee:{description:"Query the output of the current LengthToFee given some input",params:[{name:"length",type:"u32"}],type:"Balance"},query_weight_to_fee:{description:"Query the output of the current WeightToFee given some input",params:[{name:"weight",type:"Weight"}],type:"Balance"}},runtime$A={TransactionPaymentApi:[{methods:{...V3_SHARED_PAY_CALL$1,...V2_TO_V4_SHARED_PAY$1,...V1_TO_V4_SHARED_PAY$1},version:4},{methods:{...V3_SHARED_PAY_CALL$1,...V2_TO_V4_SHARED_PAY$1,...V1_TO_V4_SHARED_PAY$1},version:3},{methods:{...V2_TO_V4_SHARED_PAY$1,...V1_TO_V4_SHARED_PAY$1},version:2},{methods:{query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...V1_TO_V4_SHARED_PAY$1},version:1}],TransactionPaymentCallApi:[{methods:{...V3_SHARED_PAY_CALL$1,...V2_V3_SHARED_CALL$1,...V1_TO_V3_SHARED_CALL$1},version:3},{methods:{...V2_V3_SHARED_CALL$1,...V1_TO_V3_SHARED_CALL$1},version:2},{methods:{CALL:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...V1_TO_V3_SHARED_CALL$1},version:1}]},definitions$1f={rpc:rpc$i,runtime:runtime$A,types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV1:{weight:"WeightV1",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV2:{weight:"WeightV2",class:"DispatchClass",partialFee:"Balance"}}},rpc$h={call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Bytes"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},getKeys:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getMetadata:{description:"Returns the runtime metadata",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Metadata"},getPairs:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",isUnsafe:!0,params:[{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<KeyValue>"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeVersion"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",isUnsafe:!0,params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{isOptional:!0,name:"toBlock",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{isOptional:!0,name:"keys",type:"Vec<StorageKey>"}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",isUnsafe:!0,params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",isUnsafe:!0,params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MigrationStatusResult"}},definitions$1e={rpc:rpc$h,types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32",stateVersion:"u8"},RuntimeVersionPre4:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPre3:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32",apis:"Vec<RuntimeVersionApi>"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}},definitions$1d=Object.freeze(Object.defineProperty({__proto__:null,assetConversion:definitions$2n,assets:definitions$2m,attestations:definitions$1C,aura:definitions$2l,author:definitions$1j,authorship:definitions$2k,babe:definitions$2j,balances:definitions$2i,beefy:definitions$2h,benchmark:definitions$2g,blockbuilder:definitions$2f,bridges:definitions$1B,chain:definitions$1i,childstate:definitions$1h,claims:definitions$1A,collective:definitions$2e,consensus:definitions$2d,contracts:definitions$2c,contractsAbi:definitions$1p,crowdloan:definitions$1z,cumulus:definitions$1y,democracy:definitions$2b,dev:definitions$2a,discovery:definitions$29,dryRunApi:definitions$1t,elections:definitions$28,engine:definitions$27,eth:definitions$1o,evm:definitions$26,extrinsics:definitions$25,finality:definitions$1x,fungibles:definitions$24,genericAsset:definitions$23,genesisBuilder:definitions$22,gilt:definitions$21,grandpa:definitions$20,identity:definitions$1$,imOnline:definitions$1_,lottery:definitions$1Z,metadata:definitions$2q,mixnet:definitions$1Y,mmr:definitions$1X,nfts:definitions$1W,nimbus:definitions$1n,nompools:definitions$1V,offchain:definitions$1g,offences:definitions$1U,ormlOracle:definitions$1m,ormlTokens:definitions$1l,parachains:definitions$1w,payment:definitions$1f,poll:definitions$1v,pow:definitions$1T,proxy:definitions$1S,purchase:definitions$1u,recovery:definitions$1R,rpc:definitions$1k,runtime:definitions$2p,scaleInfo:definitions$2o,scheduler:definitions$1Q,session:definitions$1P,society:definitions$1O,staking:definitions$1N,state:definitions$1e,statement:definitions$1M,support:definitions$1L,syncstate:definitions$1K,system:definitions$1J,treasury:definitions$1I,txpayment:definitions$1H,txqueue:definitions$1G,uniques:definitions$1F,utility:definitions$1E,vesting:definitions$1D,xcm:definitions$1s,xcmPaymentApi:definitions$1r,xcmRuntimeApi:definitions$1q},Symbol.toStringTag,{value:"Module"})),jsonrpc={};Object.keys(definitions$1d).forEach(et=>Object.entries(definitions$1d[et].rpc||{}).forEach(([tt,ot])=>{const dt=ot.aliasSection||et;jsonrpc[dt]||(jsonrpc[dt]={}),jsonrpc[dt][tt]=objectSpread$2({},ot,{isSubscription:!!ot.pubsub,jsonrpc:`${dt}_${tt}`,method:tt,section:dt})}));function refCountDelay(et=1750){return tt=>{let[ot,dt,ft,pt]=[0,0,Subscription.EMPTY,Subscription.EMPTY];return new Observable(mt=>(tt.subscribe(mt),dt++===0&&(ot===1?pt.unsubscribe():ft=tt.connect(),ot=3),()=>{--dt===0&&(ot===2?(ot=0,pt.unsubscribe()):(ot=1,pt=asapScheduler.schedule(()=>{ot=0,ft.unsubscribe()},et)))}))}}function CMP(et,tt){return stringify$3({t:et})===stringify$3({t:tt})}function ERR(et){throw et}function NOOP(){}function drr({delay:et,skipChange:tt=!1,skipTimeout:ot=!1}={}){return dt=>dt.pipe(catchError(ERR),tt?tap(NOOP):distinctUntilChanged(CMP),publishReplay(1),ot?refCount():refCountDelay(et))}function memo(et,tt){const dt=memoize((...ft)=>new Observable(pt=>{const mt=tt(...ft).subscribe(pt);return()=>{dt.unmemoize(...ft),mt.unsubscribe()}}).pipe(drr()),{getInstanceId:()=>et});return dt}const l$8=logger$1("rpc-core"),EMPTY_META={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}},RPC_CORE_DEFAULT_CAPACITY=1024*10*10;function logErrorMessage(et,{noErrorLog:tt,params:ot,type:dt},ft){tt||l$8.error(`${et}(${ot.map(({isOptional:pt,name:mt,type:ht})=>`${mt}${pt?"?":""}: ${ht}`).join(", ")}): ${dt}:: ${ft.message}`)}function isTreatAsHex(et){return["0x3a636f6465"].includes(et.toHex())}class RpcCore{constructor(tt,ot,{isPedantic:dt=!0,provider:ft,rpcCacheCapacity:pt,userRpc:mt={}}){Ot(this,"__internal__instanceId");Ot(this,"__internal__isPedantic");Ot(this,"__internal__registryDefault");Ot(this,"__internal__storageCache");Ot(this,"__internal__storageCacheHits",0);Ot(this,"__internal__getBlockRegistry");Ot(this,"__internal__getBlockHash");Ot(this,"mapping",new Map);Ot(this,"provider");Ot(this,"sections",[]);if(!ft||!isFunction$6(ft.send))throw new Error("Expected Provider to API create");this.__internal__instanceId=tt,this.__internal__isPedantic=dt,this.__internal__registryDefault=ot,this.provider=ft;const ht=Object.keys(jsonrpc);this.sections.push(...ht),this.__internal__storageCache=new LRUCache(pt||RPC_CORE_DEFAULT_CAPACITY),this.addUserInterfaces(mt)}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}async disconnect(){return this.provider.disconnect()}get stats(){const tt=this.provider.stats;return tt?{...tt,core:{cacheHits:this.__internal__storageCacheHits,cacheSize:this.__internal__storageCache.length}}:void 0}setRegistrySwap(tt){this.__internal__getBlockRegistry=memoize(tt,{getInstanceId:()=>this.__internal__instanceId})}setResolveBlockHash(tt){this.__internal__getBlockHash=memoize(tt,{getInstanceId:()=>this.__internal__instanceId})}addUserInterfaces(tt){this.sections.push(...Object.keys(tt).filter(ot=>!this.sections.includes(ot)));for(let ot=0,dt=this.sections.length;ot<dt;ot++){const ft=this.sections[ot],pt=objectSpread$2({},jsonrpc[ft],tt[ft]),mt=Object.keys(pt);for(let ht=0,bt=mt.length;ht<bt;ht++){const yt=mt[ht],xt=pt[yt],gt=xt.endpoint||`${ft}_${yt}`;if(!this.mapping.has(gt)){const wt=!!xt.pubsub;this[ft]||(this[ft]={}),this.mapping.set(gt,objectSpread$2({},xt,{isSubscription:wt,jsonrpc:gt,method:yt,section:ft})),lazyMethod(this[ft],yt,()=>wt?this._createMethodSubscribe(ft,yt,xt):this._createMethodSend(ft,yt,xt))}}}}_memomize(tt,ot){const dt={getInstanceId:()=>this.__internal__instanceId},ft=memoize(tt(!0),dt);return ft.raw=memoize(tt(!1),dt),ft.meta=ot,ft}_formatResult(tt,ot,dt,ft,pt,mt,ht){return tt?this._formatOutput(ot,dt,ft,pt,mt,ht):ht}_createMethodSend(tt,ot,dt){const ft=dt.endpoint||`${tt}_${ot}`,pt=dt.params.findIndex(({isHistoric:yt})=>yt);let mt=null;const ht=async(yt,xt)=>{var Lt;const gt=pt===-1?null:xt[pt],wt=gt&&dt.params[pt].type==="BlockNumber"?await((Lt=this.__internal__getBlockHash)==null?void 0:Lt.call(this,gt)):gt,{registry:Pt}=yt&&wt&&this.__internal__getBlockRegistry?await this.__internal__getBlockRegistry(u8aToU8a$3(wt)):{registry:this.__internal__registryDefault},St=this._formatParams(Pt,null,dt,xt),Et=await this.provider.send(ft,St.map(It=>It.toJSON()),!!wt);return this._formatResult(yt,Pt,wt,ot,dt,St,Et)},bt=yt=>(...xt)=>{const gt=yt&&pt!==-1&&!!xt[pt];return new Observable(wt=>(ht(yt,xt).then(Pt=>{wt.next(Pt),wt.complete()}).catch(Pt=>{logErrorMessage(ot,dt,Pt),wt.error(Pt),wt.complete()}),()=>{yt?mt==null||mt.unmemoize(...xt):mt==null||mt.raw.unmemoize(...xt)})).pipe(publishReplay(1),gt?refCountDelay():refCount())};return mt=this._memomize(bt,dt),mt}_createSubscriber({paramsJson:tt,subName:ot,subType:dt,update:ft},pt){return new Promise((mt,ht)=>{this.provider.subscribe(dt,ot,tt,ft).then(mt).catch(bt=>{pt(bt),ht(bt)})})}_createMethodSubscribe(tt,ot,dt){const[ft,pt,mt]=dt.pubsub,ht=`${tt}_${pt}`,bt=`${tt}_${mt}`,yt=`${tt}_${ft}`;let xt=null;const gt=wt=>(...Pt)=>new Observable(St=>{let Et=Promise.resolve(null);const Lt=this.__internal__registryDefault,It=kt=>{logErrorMessage(ot,dt,kt),St.error(kt)};try{const kt=this._formatParams(Lt,null,dt,Pt),Nt=(Ut,Ft)=>{if(Ut){logErrorMessage(ot,dt,Ut);return}try{St.next(this._formatResult(wt,Lt,null,ot,dt,kt,Ft))}catch(jt){St.error(jt)}};Et=this._createSubscriber({paramsJson:kt.map(Ut=>Ut.toJSON()),subName:ht,subType:yt,update:Nt},It)}catch(kt){It(kt)}return()=>{wt?xt==null||xt.unmemoize(...Pt):xt==null||xt.raw.unmemoize(...Pt),Et.then(kt=>isNull$1(kt)?Promise.resolve(!1):this.provider.unsubscribe(yt,bt,kt)).catch(kt=>logErrorMessage(ot,dt,kt))}}).pipe(drr());return xt=this._memomize(gt,dt),xt}_formatParams(tt,ot,dt,ft){const pt=ft.length,mt=dt.params.filter(({isOptional:bt})=>!bt).length;if(pt<mt||pt>dt.params.length)throw new Error(`Expected ${dt.params.length} parameters${mt===dt.params.length?"":` (${dt.params.length-mt} optional)`}, ${pt} found instead`);const ht=new Array(pt);for(let bt=0;bt<pt;bt++)ht[bt]=tt.createTypeUnsafe(dt.params[bt].type,[ft[bt]],{blockHash:ot});return ht}_formatOutput(tt,ot,dt,ft,pt,mt){if(ft.type==="StorageData"){const ht=pt[0];return this._formatStorageData(tt,ot,ht,mt)}else if(ft.type==="StorageChangeSet"){const ht=pt[0];return ht?this._formatStorageSet(tt,mt.block,ht,mt.changes):tt.createType("StorageChangeSet",mt)}else if(ft.type==="Vec<StorageChangeSet>"){const ht=mt,bt=ht.length,yt=new Array(bt);for(let xt=0;xt<bt;xt++){const{block:gt,changes:wt}=ht[xt];yt[xt]=[tt.createType("BlockHash",gt),this._formatStorageSet(tt,gt,pt[0],wt)]}return dt==="queryStorageAt"?yt[0][1]:yt}return tt.createTypeUnsafe(ft.type,[mt],{blockHash:ot})}_formatStorageData(tt,ot,dt,ft){const pt=isNull$1(ft),mt=pt?null:isTreatAsHex(dt)?ft:u8aToU8a$3(ft);return this._newType(tt,ot,dt,mt,pt)}_formatStorageSet(tt,ot,dt,ft){const pt=dt.length,mt=pt!==1,ht=new Array(pt);for(let bt=0;bt<pt;bt++)ht[bt]=this._formatStorageSetEntry(tt,ot,dt[bt],ft,mt,bt);return ht}_formatStorageSetEntry(tt,ot,dt,ft,pt,mt){const ht=dt.toHex(),bt=ft.find(([St])=>St===ht),yt=isUndefined$3(bt);if(yt&&pt){const St=this.__internal__storageCache.get(ht);if(St)return this.__internal__storageCacheHits++,St}const xt=yt?null:bt[1],gt=isNull$1(xt),wt=gt||isTreatAsHex(dt)?xt:u8aToU8a$3(xt),Pt=this._newType(tt,ot,dt,wt,gt,mt);return this._setToCache(ht,Pt),Pt}_setToCache(tt,ot){this.__internal__storageCache.set(tt,ot)}_newType(tt,ot,dt,ft,pt,mt=-1){const ht=dt.outputType||"Raw",bt=dt.meta||EMPTY_META,yt=mt===-1?"":` entry ${mt}:`;try{return tt.createTypeUnsafe(ht,[pt?bt.fallback?ht.includes("Linkage<")?u8aConcat$1(hexToU8a$4(bt.fallback.toHex()),new Uint8Array(2)):hexToU8a$4(bt.fallback.toHex()):void 0:bt.modifier.isOptional?tt.createTypeUnsafe(ht,[ft],{blockHash:ot,isPedantic:this.__internal__isPedantic}):ft],{blockHash:ot,isFallback:pt&&!!bt.fallback,isOptional:bt.modifier.isOptional,isPedantic:this.__internal__isPedantic&&!bt.modifier.isOptional})}catch(xt){throw new Error(`Unable to decode storage ${dt.section||"unknown"}.${dt.method||"unknown"}:${yt}: ${xt.message}`)}}}function unwrapBlockNumber(et){return isCompact(et.number)?et.number.unwrap():et.number}const deriveNoopCache={del:()=>{},forEach:()=>{},get:()=>{},set:(et,tt)=>tt};let deriveCache;function setDeriveCache(et="",tt){deriveCache=deriveNoopCache}setDeriveCache();function firstObservable(et){return et.pipe(map$3(([tt])=>tt))}function firstMemo(et){return(tt,ot)=>memo(tt,(...dt)=>firstObservable(et(ot,...dt)))}function lazyDeriveSection(et,tt,ot,dt){lazyMethod$1(et,tt,()=>lazyMethods({},ot(tt),ft=>dt(tt,ft)))}const crypto$1=xglobal$4.crypto;function getRandomValues$1(et){return crypto$1.getRandomValues(et)}const DEFAULT_CRYPTO$1={getRandomValues:getRandomValues$1},DEFAULT_SELF$1={crypto:DEFAULT_CRYPTO$1};let Wbg$1=class{constructor(tt){Ot(this,"__internal__bridge");Ot(this,"abort",()=>{throw new Error("abort")});Ot(this,"__wbindgen_is_undefined",tt=>this.__internal__bridge.getObject(tt)===void 0);Ot(this,"__wbindgen_throw",(tt,ot)=>{throw new Error(this.__internal__bridge.getString(tt,ot))});Ot(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(DEFAULT_SELF$1));Ot(this,"__wbg_require_604837428532a733",(tt,ot)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(tt,ot)}`)});Ot(this,"__wbg_crypto_968f1772287e2df0",tt=>this.__internal__bridge.addObject(DEFAULT_CRYPTO$1));Ot(this,"__wbg_getRandomValues_a3d34b4fee3c2869",tt=>this.__internal__bridge.addObject(DEFAULT_CRYPTO$1.getRandomValues));Ot(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(tt,ot,dt)=>{DEFAULT_CRYPTO$1.getRandomValues(this.__internal__bridge.getU8a(ot,dt))});Ot(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(tt,ot,dt)=>{throw new Error("randomFillsync is not available")});Ot(this,"__wbindgen_object_drop_ref",tt=>{this.__internal__bridge.takeObject(tt)});this.__internal__bridge=tt}},Bridge$1=class{constructor(tt){Ot(this,"__internal__createWasm");Ot(this,"__internal__heap");Ot(this,"__internal__wbg");Ot(this,"__internal__cachegetInt32");Ot(this,"__internal__cachegetUint8");Ot(this,"__internal__heapNext");Ot(this,"__internal__wasm");Ot(this,"__internal__wasmError");Ot(this,"__internal__wasmPromise");Ot(this,"__internal__type");this.__internal__createWasm=tt,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new Wbg$1(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(tt){(!this.__internal__wasmPromise||tt)&&(this.__internal__wasmPromise=(tt||this.__internal__createWasm)(this.__internal__wbg));const{error:ot,type:dt,wasm:ft}=await this.__internal__wasmPromise;return this.__internal__type=dt,this.__internal__wasm=ft,this.__internal__wasmError=ot,this.__internal__wasm}getObject(tt){return this.__internal__heap[tt]}dropObject(tt){tt<36||(this.__internal__heap[tt]=this.__internal__heapNext,this.__internal__heapNext=tt)}takeObject(tt){const ot=this.getObject(tt);return this.dropObject(tt),ot}addObject(tt){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const ot=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[ot],this.__internal__heap[ot]=tt,ot}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(tt,ot){return this.getUint8().subarray(tt/1,tt/1+ot)}getString(tt,ot){return u8aToString$2(this.getU8a(tt,ot))}allocU8a(tt){const ot=this.__internal__wasm.__wbindgen_malloc(tt.length*1);return this.getUint8().set(tt,ot/1),[ot,tt.length]}allocString(tt){return this.allocU8a(stringToU8a$4(tt))}resultU8a(){const tt=this.getInt32()[2],ot=this.getInt32()[8/4+1],dt=this.getU8a(tt,ot).slice();return this.__internal__wasm.__wbindgen_free(tt,ot*1),dt}resultString(){return u8aToString$2(this.resultU8a())}};function createWasmFn$1(et,tt,ot){return async dt=>{const ft={error:null,type:"none",wasm:null};try{if(tt!=null&&tt.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const pt=await WebAssembly.instantiate(tt,{wbg:dt});ft.wasm=pt.instance.exports,ft.type="wasm"}catch(pt){ft.error=`FATAL: Unable to initialize @polkadot/wasm-${et}:: ${pt.message}`,console.error(ft.error)}return ft}}const CHR$3="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",map$2=new Array(256);for(let et=0,tt=CHR$3.length;et<tt;et++)map$2[CHR$3.charCodeAt(et)]=et;function base64Decode$1(et,tt){let ot=0,dt=0,ft=-1;for(let pt=0,mt=tt.length-1;ft!==mt;pt++)ot=ot<<6|map$2[et.charCodeAt(pt)],(dt+=6)>=8&&(tt[++ft]=ot>>>(dt-=8)&255);return tt}const u8$1=Uint8Array,u16$1=Uint16Array,u32$1=Uint32Array,clim$1=new u8$1([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),fleb$1=new u8$1([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb$1=new u8$1([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb$1=(et,tt)=>{const ot=new u16$1(31);for(let ft=0;ft<31;++ft)ot[ft]=tt+=1<<et[ft-1];const dt=new u32$1(ot[30]);for(let ft=1;ft<30;++ft)for(let pt=ot[ft];pt<ot[ft+1];++pt)dt[pt]=pt-ot[ft]<<5|ft;return[ot,dt]},[fl$1,revfl$1]=freb$1(fleb$1,2);fl$1[28]=258,revfl$1[258]=28;const[fd$1]=freb$1(fdeb$1,0),rev$1=new u16$1(32768);for(let et=0;et<32768;++et){let tt=(et&43690)>>>1|(et&21845)<<1;tt=(tt&52428)>>>2|(tt&13107)<<2,tt=(tt&61680)>>>4|(tt&3855)<<4,rev$1[et]=((tt&65280)>>>8|(tt&255)<<8)>>>1}const hMap$1=(et,tt,ot)=>{const dt=et.length;let ft=0;const pt=new u16$1(tt);for(;ft<dt;++ft)et[ft]&&++pt[et[ft]-1];const mt=new u16$1(tt);for(ft=1;ft<tt;++ft)mt[ft]=mt[ft-1]+pt[ft-1]<<1;let ht;{ht=new u16$1(1<<tt);const bt=15-tt;for(ft=0;ft<dt;++ft)if(et[ft]){const yt=ft<<4|et[ft],xt=tt-et[ft];let gt=mt[et[ft]-1]++<<xt;for(const wt=gt|(1<<xt)-1;gt<=wt;++gt)ht[rev$1[gt]>>bt]=yt}}return ht},flt$1=new u8$1(288);for(let et=0;et<144;++et)flt$1[et]=8;for(let et=144;et<256;++et)flt$1[et]=9;for(let et=256;et<280;++et)flt$1[et]=7;for(let et=280;et<288;++et)flt$1[et]=8;const fdt$1=new u8$1(32);for(let et=0;et<32;++et)fdt$1[et]=5;const flrm$1=hMap$1(flt$1,9),fdrm$1=hMap$1(fdt$1,5),bits$1=(et,tt,ot)=>{const dt=tt>>>3;return(et[dt]|et[dt+1]<<8)>>>(tt&7)&ot},bits16$1=(et,tt)=>{const ot=tt>>>3;return(et[ot]|et[ot+1]<<8|et[ot+2]<<16)>>>(tt&7)},shft$1=et=>(et>>>3)+(et&7&&1),slc$1=(et,tt,ot)=>{(ot==null||ot>et.length)&&(ot=et.length);const dt=new(et instanceof u16$1?u16$1:et instanceof u32$1?u32$1:u8$1)(ot-tt);return dt.set(et.subarray(tt,ot)),dt},max$1=et=>{let tt=et[0];for(let ot=1,dt=et.length;ot<dt;++ot)et[ot]>tt&&(tt=et[ot]);return tt},inflt$1=(et,tt,ot)=>{const dt=!ot||ot.i;ot||(ot={});const ft=et.length,pt=!tt||!dt;tt||(tt=new u8$1(ft*3));const mt=Et=>{let Lt=tt.length;if(Et>Lt){const It=new u8$1(Math.max(Lt<<1,Et));It.set(tt),tt=It}};let ht=ot.f||0,bt=ot.p||0,yt=ot.b||0,xt=ot.l,gt=ot.d,wt=ot.m,Pt=ot.n;if(ht&&!xt)return tt;const St=ft<<3;do{if(!xt){ot.f=ht=bits$1(et,bt,1);const kt=bits$1(et,bt+1,3);if(bt+=3,kt)if(kt==1)xt=flrm$1,gt=fdrm$1,wt=9,Pt=5;else if(kt==2){const Nt=bits$1(et,bt,31)+257,Ut=bits$1(et,bt+10,15)+4,Ft=Nt+bits$1(et,bt+5,31)+1;bt+=14;const jt=new u8$1(Ft),Xt=new u8$1(19);for(let Ht=0;Ht<Ut;++Ht)Xt[clim$1[Ht]]=bits$1(et,bt+Ht*3,7);bt+=Ut*3;const Wt=max$1(Xt),qt=(1<<Wt)-1;if(!dt&&bt+Ft*(Wt+7)>St)break;const Zt=hMap$1(Xt,Wt);for(let Ht=0;Ht<Ft;){const vt=Zt[bits$1(et,bt,qt)];bt+=vt&15;const Vt=vt>>>4;if(Vt<16)jt[Ht++]=Vt;else{let At=0,Bt=0;for(Vt==16?(Bt=3+bits$1(et,bt,3),bt+=2,At=jt[Ht-1]):Vt==17?(Bt=3+bits$1(et,bt,7),bt+=3):Vt==18&&(Bt=11+bits$1(et,bt,127),bt+=7);Bt--;)jt[Ht++]=At}}const Gt=jt.subarray(0,Nt),Qt=jt.subarray(Nt);wt=max$1(Gt),Pt=max$1(Qt),xt=hMap$1(Gt,wt),gt=hMap$1(Qt,Pt)}else throw"invalid block type";else{const Nt=shft$1(bt)+4,Ut=et[Nt-4]|et[Nt-3]<<8,Ft=Nt+Ut;if(Ft>ft){if(dt)throw"unexpected EOF";break}pt&&mt(yt+Ut),tt.set(et.subarray(Nt,Ft),yt),ot.b=yt+=Ut,ot.p=bt=Ft<<3;continue}if(bt>St)throw"unexpected EOF"}pt&&mt(yt+131072);const Et=(1<<wt)-1,Lt=(1<<Pt)-1,It=wt+Pt+18;for(;dt||bt+It<St;){const kt=xt[bits16$1(et,bt)&Et],Nt=kt>>>4;if(bt+=kt&15,bt>St)throw"unexpected EOF";if(!kt)throw"invalid length/literal";if(Nt<256)tt[yt++]=Nt;else if(Nt==256){xt=void 0;break}else{let Ut=Nt-254;if(Nt>264){const qt=Nt-257,Zt=fleb$1[qt];Ut=bits$1(et,bt,(1<<Zt)-1)+fl$1[qt],bt+=Zt}const Ft=gt[bits16$1(et,bt)&Lt],jt=Ft>>>4;if(!Ft)throw"invalid distance";bt+=Ft&15;let Xt=fd$1[jt];if(jt>3){const qt=fdeb$1[jt];Xt+=bits16$1(et,bt)&(1<<qt)-1,bt+=qt}if(bt>St)throw"unexpected EOF";pt&&mt(yt+131072);const Wt=yt+Ut;for(;yt<Wt;yt+=4)tt[yt]=tt[yt-Xt],tt[yt+1]=tt[yt+1-Xt],tt[yt+2]=tt[yt+2-Xt],tt[yt+3]=tt[yt+3-Xt];yt=Wt}}ot.l=xt,ot.p=bt,ot.b=yt,xt&&(ht=1,ot.m=wt,ot.d=gt,ot.n=Pt)}while(!ht);return yt==tt.length?tt:slc$1(tt,0,yt)},zlv$1=et=>{if((et[0]&15)!=8||et[0]>>>4>7||(et[0]<<8|et[1])%31)throw"invalid zlib data";if(et[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function unzlibSync$1(et,tt){return inflt$1((zlv$1(et),et.subarray(2,-4)),tt)}var lenIn$1=171008,lenOut$1=339468,bytes_1$1="";const wasmBytes$1=unzlibSync$1(base64Decode$1(bytes_1$1,new Uint8Array(lenIn$1)),new Uint8Array(lenOut$1)),createWasm$1=createWasmFn$1("crypto",wasmBytes$1),bridge$1=new Bridge$1(createWasm$1);function withWasm$1(et){return(...tt)=>{if(!bridge$1.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return et(bridge$1.wasm,...tt)}}const blake2b$1=withWasm$1((et,tt,ot,dt)=>(et.ext_blake2b(8,...bridge$1.allocU8a(tt),...bridge$1.allocU8a(ot),dt),bridge$1.resultU8a()));function isReady$1(){return!!bridge$1.wasm}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function isBytes$1(et){return et instanceof Uint8Array||ArrayBuffer.isView(et)&&et.constructor.name==="Uint8Array"}function isArrayOf(et,tt){return Array.isArray(tt)?tt.length===0?!0:et?tt.every(ot=>typeof ot=="string"):tt.every(ot=>Number.isSafeInteger(ot)):!1}function astr(et,tt){if(typeof tt!="string")throw new Error(`${et}: string expected`);return!0}function anumber(et){if(!Number.isSafeInteger(et))throw new Error(`invalid integer: ${et}`)}function aArr(et){if(!Array.isArray(et))throw new Error("array expected")}function astrArr(et,tt){if(!isArrayOf(!0,tt))throw new Error(`${et}: array of strings expected`)}function anumArr(et,tt){if(!isArrayOf(!1,tt))throw new Error(`${et}: array of numbers expected`)}function chain$2(...et){const tt=pt=>pt,ot=(pt,mt)=>ht=>pt(mt(ht)),dt=et.map(pt=>pt.encode).reduceRight(ot,tt),ft=et.map(pt=>pt.decode).reduce(ot,tt);return{encode:dt,decode:ft}}function alphabet$1(et){const tt=typeof et=="string"?et.split(""):et,ot=tt.length;astrArr("alphabet",tt);const dt=new Map(tt.map((ft,pt)=>[ft,pt]));return{encode:ft=>(aArr(ft),ft.map(pt=>{if(!Number.isSafeInteger(pt)||pt<0||pt>=ot)throw new Error(`alphabet.encode: digit index outside alphabet "${pt}". Allowed: ${et}`);return tt[pt]})),decode:ft=>(aArr(ft),ft.map(pt=>{astr("alphabet.decode",pt);const mt=dt.get(pt);if(mt===void 0)throw new Error(`Unknown letter: "${pt}". Allowed: ${et}`);return mt}))}}function join$1(et=""){return astr("join",et),{encode:tt=>(astrArr("join.decode",tt),tt.join(et)),decode:tt=>(astr("join.decode",tt),tt.split(et))}}function convertRadix$1(et,tt,ot){if(tt<2)throw new Error(`convertRadix: invalid from=${tt}, base cannot be less than 2`);if(ot<2)throw new Error(`convertRadix: invalid to=${ot}, base cannot be less than 2`);if(aArr(et),!et.length)return[];let dt=0;const ft=[],pt=Array.from(et,ht=>{if(anumber(ht),ht<0||ht>=tt)throw new Error(`invalid integer: ${ht}`);return ht}),mt=pt.length;for(;;){let ht=0,bt=!0;for(let yt=dt;yt<mt;yt++){const xt=pt[yt],gt=tt*ht,wt=gt+xt;if(!Number.isSafeInteger(wt)||gt/tt!==ht||wt-xt!==gt)throw new Error("convertRadix: carry overflow");const Pt=wt/ot;ht=wt%ot;const St=Math.floor(Pt);if(pt[yt]=St,!Number.isSafeInteger(St)||St*ot+ht!==wt)throw new Error("convertRadix: carry overflow");if(bt)St?bt=!1:dt=yt;else continue}if(ft.push(ht),bt)break}for(let ht=0;ht<et.length-1&&et[ht]===0;ht++)ft.push(0);return ft.reverse()}function radix$1(et){anumber(et);const tt=2**8;return{encode:ot=>{if(!isBytes$1(ot))throw new Error("radix.encode input should be Uint8Array");return convertRadix$1(Array.from(ot),tt,et)},decode:ot=>(anumArr("radix.decode",ot),Uint8Array.from(convertRadix$1(ot,et,tt)))}}const genBase58$1=et=>chain$2(radix$1(58),alphabet$1(et),join$1("")),base58$1=genBase58$1("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function createDecode$1({coder:et,ipfs:tt},ot){return(dt,ft)=>(ot(dt,ft),et.decode(tt&&ft?dt.substring(1):dt))}function createValidate$1({chars:et,ipfs:tt,type:ot,withPadding:dt}){return(ft,pt)=>{if(typeof ft!="string")throw new Error(`Expected ${ot} string input`);if(tt&&pt&&!ft.startsWith(tt))throw new Error(`Expected ipfs-compatible ${ot} to start with '${tt}'`);for(let mt=pt?1:0,ht=ft.length;mt<ht;mt++)if(!et.includes(ft[mt]))if(dt&&ft[mt]==="="){if(mt!==ht-1){if(ft[mt+1]!=="=")throw new Error(`Invalid ${ot} padding sequence "${ft[mt]}${ft[mt+1]}" at index ${mt}`)}}else throw new Error(`Invalid ${ot} character "${ft[mt]}" (0x${ft.charCodeAt(mt).toString(16)}) at index ${mt}`);return!0}}const config$1={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:base58$1,ipfs:"z",type:"base58"},base58Validate$1=createValidate$1(config$1),base58Decode$1=createDecode$1(config$1,base58Validate$1);function blake2AsU8a$1(et,tt=256,ot,dt){const ft=Math.ceil(tt/8),pt=u8aToU8a$4(et);return!hasBigInt$1||!dt&&isReady$1()?blake2b$1(pt,u8aToU8a$4(ot),ft):ot?blake2b$2(pt,{dkLen:ft,key:ot}):blake2b$2(pt,{dkLen:ft})}const SS58_PREFIX$1=stringToU8a$4("SS58PRE");function sshash$1(et){return blake2AsU8a$1(u8aConcat$2(SS58_PREFIX$1,et),512)}function checkAddressChecksum$1(et){const tt=et[0]&64?2:1,ot=tt===1?et[0]:(et[0]&63)<<2|et[1]>>6|(et[1]&63)<<8,dt=[34+tt,35+tt].includes(et.length),ft=et.length-(dt?2:1),pt=sshash$1(et.subarray(0,ft));return[(et[0]&128)===0&&![46,47].includes(et[0])&&(dt?et[et.length-2]===pt[0]&&et[et.length-1]===pt[1]:et[et.length-1]===pt[0]),ft,tt,ot]}const knownSubstrate$2=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"autonomys",displayName:"Autonomys",symbols:["AI3"],decimals:[18],standardAccount:"*25519",website:"https://autonomys.xyz"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],knownGenesis$2={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],encointer:["0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],frequency:["0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],integritee:["0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da","0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],peaq:["0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polimec:["0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vara:["0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},knownIcon$2={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},knownLedger$2={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,bittensor:354,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,encointer:434,enjin:1155,equilibrium:99999997,frequency:2091,genshiro:99999996,hydradx:354,integritee:2015,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,peaq:3338,pendulum:354,phala:354,picasso:434,polimec:3344,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vara:4976,vtb:694,xxnetwork:1955,zeitgeist:354},knownTestnet$2={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},UNSORTED$2=[0,2,42],TESTNETS$2=["testnet"];function toExpanded$2(et){var ft,pt;const tt=et.network||"",ot=tt.replace(/_/g,"-").split("-"),dt=et;return dt.slip44=knownLedger$2[tt],dt.hasLedgerSupport=!!dt.slip44,dt.genesisHash=knownGenesis$2[tt]||[],dt.icon=knownIcon$2[tt]||"substrate",dt.isTestnet=!!knownTestnet$2[tt]||TESTNETS$2.includes(ot[ot.length-1]),dt.isIgnored=dt.isTestnet||!(et.standardAccount&&((ft=et.decimals)!=null&&ft.length)&&((pt=et.symbols)!=null&&pt.length))&&et.prefix!==42,dt}function filterSelectable$2({genesisHash:et,prefix:tt}){return!!et.length||tt===42}function filterAvailable$2(et){return!et.isIgnored&&!!et.network}function sortNetworks$2(et,tt){const ot=UNSORTED$2.includes(et.prefix),dt=UNSORTED$2.includes(tt.prefix);return ot===dt?ot?0:et.displayName.localeCompare(tt.displayName):ot?-1:1}const allNetworks$2=knownSubstrate$2.map(toExpanded$2),availableNetworks$2=allNetworks$2.filter(filterAvailable$2).sort(sortNetworks$2);availableNetworks$2.filter(filterSelectable$2);const defaults$1={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:availableNetworks$2.map(({prefix:et})=>et),prefix:42};function decodeAddress$1(et,tt,ot=-1){if(!et)throw new Error("Invalid empty address passed");if(isU8a$4(et)||isHex$5(et))return u8aToU8a$4(et);try{const dt=base58Decode$1(et);if(!defaults$1.allowedEncodedLengths.includes(dt.length))throw new Error("Invalid decoded address length");const[ft,pt,mt,ht]=checkAddressChecksum$1(dt);if(!ft&&!tt)throw new Error("Invalid decoded address checksum");if(ot!==-1&&ot!==ht)throw new Error(`Expected ss58Format ${ot}, received ${ht}`);return dt.slice(mt,pt)}catch(dt){throw new Error(`Decoding ${et}: ${dt.message}`)}}function accountId(et,tt){return memo(et,ot=>{const dt=isU8a$4(ot)?ot:decodeAddress$1((ot||"").toString());if(dt.length>8)return of(tt.registry.createType(dt.length===20?"AccountId20":"AccountId",dt));const ft=tt.registry.createType("AccountIndex",dt);return tt.derive.accounts.indexToId(ft.toString()).pipe(map$3(pt=>assertReturn(pt,"Unable to retrieve accountId")))})}function parseFlags(et,[tt,ot,dt,ft,pt]){const mt=et==null?void 0:et.toString(),ht=bt=>bt.toString()===mt;return{isCouncil:((tt==null?void 0:tt.map(bt=>Array.isArray(bt)?bt[0]:bt.who))||ot||[]).some(ht),isSociety:(ft||[]).some(ht),isSudo:(pt==null?void 0:pt.toString())===mt,isTechCommittee:(dt||[]).some(ht)}}function _flags(et,tt){return memo(et,()=>{var pt,mt,ht,bt,yt;const ot=[void 0,[],[],[],void 0],dt=[(pt=tt.query.elections||tt.query.phragmenElection||tt.query.electionsPhragmen)==null?void 0:pt.members,(mt=tt.query.council)==null?void 0:mt.members,(ht=tt.query.technicalCommittee)==null?void 0:ht.members,(bt=tt.query.society)==null?void 0:bt.members,(yt=tt.query.sudo)==null?void 0:yt.key],ft=dt.filter(xt=>xt);return ft.length?tt.queryMulti(ft).pipe(map$3(xt=>{let gt=-1;for(let wt=0,Pt=dt.length;wt<Pt;wt++)isFunction$7(dt[wt])&&(ot[wt]=xt[++gt]);return ot})):of(ot)})}function flags(et,tt){return memo(et,ot=>tt.derive.accounts._flags().pipe(map$3(dt=>parseFlags(ot,dt))))}function idAndIndex(et,tt){return memo(et,ot=>{try{const dt=isU8a$4(ot)?ot:decodeAddress$1((ot||"").toString());if(dt.length>8){const pt=tt.registry.createType(dt.length===20?"AccountId20":"AccountId",dt);return tt.derive.accounts.idToIndex(pt).pipe(map$3(mt=>[pt,mt]))}const ft=tt.registry.createType("AccountIndex",dt);return tt.derive.accounts.indexToId(ft.toString()).pipe(map$3(pt=>[pt,ft]))}catch{return of([void 0,void 0])}})}const UNDEF_HEX={toHex:()=>{}};function dataAsString(et){return et&&(et.isRaw?u8aToString$2(et.asRaw.toU8a(!0)):et.isNone?void 0:et.toHex())}function extractOther(et){return et.reduce((tt,[ot,dt])=>{const ft=dataAsString(ot),pt=dataAsString(dt);return ft&&pt&&(tt[ft]=pt),tt},{})}function identityCompat(et){const tt=et.unwrap();return Array.isArray(tt)?tt[0]:tt}function extractIdentity(et,tt){if(!(et!=null&&et.isSome))return{judgements:[]};const{info:ot,judgements:dt}=identityCompat(et),ft=dataAsString(ot.display);return{discord:dataAsString(ot.discord),display:tt&&dataAsString(tt[1])||ft,displayParent:tt&&ft,email:dataAsString(ot.email),github:dataAsString(ot.github),image:dataAsString(ot.image),judgements:dt,legal:dataAsString(ot.legal),matrix:dataAsString(ot.matrix),other:ot.additional?extractOther(ot.additional):{},parent:tt==null?void 0:tt[0],pgp:ot.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),riot:dataAsString(ot.riot),twitter:dataAsString(ot.twitter),web:dataAsString(ot.web)}}function getParent(et,tt,ot){if(tt!=null&&tt.isSome)return of([tt,void 0]);if(ot!=null&&ot.isSome){const dt=ot.unwrap();return combineLatest([et.derive.accounts._identity(dt[0]).pipe(map$3(([ft])=>ft)),of(dt)])}return of([void 0,void 0])}function _identity(et,tt){return memo(et,ot=>{var dt;return ot&&((dt=tt.query.identity)!=null&&dt.identityOf)?combineLatest([tt.query.identity.identityOf(ot),tt.query.identity.superOf(ot)]):of([void 0,void 0])})}function identity(et,tt){return memo(et,ot=>tt.derive.accounts._identity(ot).pipe(switchMap(([dt,ft])=>getParent(tt,dt,ft)),map$3(([dt,ft])=>extractIdentity(dt,ft)),switchMap(dt=>getSubIdentities(dt,tt,ot))))}function getSubIdentities(et,tt,ot){const dt=et.parent||ot;return!dt||!tt.query.identity?of(et):tt.query.identity.subsOf(dt).pipe(map$3(ft=>{const pt=ft[1];return{...et,subs:pt}}))}const hasIdentity=firstMemo((et,tt)=>et.derive.accounts.hasIdentityMulti([tt]));function hasIdentityMulti(et,tt){return memo(et,ot=>{var dt;return(dt=tt.query.identity)!=null&&dt.identityOf?combineLatest([tt.query.identity.identityOf.multi(ot),tt.query.identity.superOf.multi(ot)]).pipe(map$3(([ft,pt])=>ft.map((mt,ht)=>{const bt=pt[ht],yt=bt&&bt.isSome?bt.unwrap()[0].toString():void 0;let xt;if(mt&&mt.isSome){const gt=dataAsString(identityCompat(mt).info.display);gt&&!isHex$5(gt)&&(xt=gt)}return{display:xt,hasIdentity:!!(xt||yt),parentId:yt}}))):of(ot.map(()=>({hasIdentity:!1})))})}function idToIndex(et,tt){return memo(et,ot=>tt.derive.accounts.indexes().pipe(map$3(dt=>dt[ot.toString()])))}let indicesCache=null;function queryAccounts(et){return et.query.indices.accounts.entries().pipe(map$3(tt=>tt.reduce((ot,[dt,ft])=>(ft.isSome&&(ot[ft.unwrap()[0].toString()]=et.registry.createType("AccountIndex",dt.args[0])),ot),{})))}function indexes$1(et,tt){return memo(et,()=>indicesCache?of(indicesCache):(tt.query.indices?queryAccounts(tt).pipe(startWith({})):of({})).pipe(map$3(ot=>(indicesCache=ot,ot))))}function indexToId(et,tt){return memo(et,ot=>tt.query.indices?tt.query.indices.accounts(ot).pipe(map$3(dt=>dt.unwrapOr([])[0])):of(void 0))}function retrieveNick(et,tt){var ot;return(tt&&((ot=et.query.nicks)!=null&&ot.nameOf)?et.query.nicks.nameOf(tt):of(void 0)).pipe(map$3(dt=>dt!=null&&dt.isSome?u8aToString$2(dt.unwrap()[0]).substring(0,et.consts.nicks.maxLength.toNumber()):void 0))}function info$4(et,tt){return memo(et,ot=>tt.derive.accounts.idAndIndex(ot).pipe(switchMap(([dt,ft])=>combineLatest([of({accountId:dt,accountIndex:ft}),tt.derive.accounts.identity(dt),retrieveNick(tt,dt)])),map$3(([{accountId:dt,accountIndex:ft},pt,mt])=>({accountId:dt,accountIndex:ft,identity:pt,nickname:mt}))))}const accounts$1=Object.freeze(Object.defineProperty({__proto__:null,_flags,_identity,accountId,flags,hasIdentity,hasIdentityMulti,idAndIndex,idToIndex,identity,indexToId,indexes:indexes$1,info:info$4},Symbol.toStringTag,{value:"Module"}));function getInstance(et,tt){const ot=et.registry.getModuleInstances(et.runtimeVersion.specName,tt),dt=ot!=null&&ot.length?ot[0]:tt;return et.query[dt]}function withSection(et,tt){return(ot,dt)=>memo(ot,tt(getInstance(dt,et),dt,ot))}function callMethod(et,tt){return ot=>withSection(ot,dt=>()=>isFunction$7(dt==null?void 0:dt[et])?dt[et]():of(tt))}const members$5=callMethod("members",[]);function prime$4(et){return withSection(et,tt=>()=>isFunction$7(tt==null?void 0:tt.prime)?tt.prime().pipe(map$3(ot=>ot.unwrapOr(null))):of(null))}function parse$5(et,[tt,ot,dt]){return ot.map((ft,pt)=>({hash:et.registry.createType("Hash",tt[pt]),proposal:ft&&ft.isSome?ft.unwrap():null,votes:dt[pt].unwrapOr(null)}))}function _proposalsFrom(et,tt,ot){return(isFunction$7(tt==null?void 0:tt.proposals)&&ot.length?combineLatest([of(ot),tt.proposalOf.multi(ot).pipe(catchError(()=>of(ot.map(()=>null)))),tt.voting.multi(ot)]):of([[],[],[]])).pipe(map$3(dt=>parse$5(et,dt)))}function hasProposals$4(et){return withSection(et,tt=>()=>of(isFunction$7(tt==null?void 0:tt.proposals)))}function proposals$6(et){return withSection(et,(tt,ot)=>()=>ot.derive[et].proposalHashes().pipe(switchMap(dt=>_proposalsFrom(ot,tt,dt))))}function proposal$4(et){return withSection(et,(tt,ot)=>dt=>isFunction$7(tt==null?void 0:tt.proposals)?firstObservable(_proposalsFrom(ot,tt,[dt])):of(null))}const proposalCount$4=callMethod("proposalCount",null),proposalHashes$4=callMethod("proposals",[]),members$4=members$5("allianceMotion"),hasProposals$3=hasProposals$4("allianceMotion"),proposal$3=proposal$4("allianceMotion"),proposalCount$3=proposalCount$4("allianceMotion"),proposalHashes$3=proposalHashes$4("allianceMotion"),proposals$5=proposals$6("allianceMotion"),prime$3=prime$4("allianceMotion"),alliance=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:hasProposals$3,members:members$4,prime:prime$3,proposal:proposal$3,proposalCount:proposalCount$3,proposalHashes:proposalHashes$3,proposals:proposals$5},Symbol.toStringTag,{value:"Module"}));function getQueryInterface(et){return et.query.voterList||et.query.voterBagsList||et.query.bagsList}function orderBags(et,tt){const ot=et.map((ft,pt)=>({bag:tt[pt].unwrapOr(null),id:ft,key:ft.toString()})).sort((ft,pt)=>pt.id.cmp(ft.id)),dt=ot.length-1;return ot.map((ft,pt)=>objectSpread$3(ft,{bagLower:pt===dt?BN_ZERO:ot[pt+1].id,bagUpper:ft.id,index:pt}))}function _getIds(et,tt){const ot=getQueryInterface(tt);return memo(et,dt=>{const ft=dt.map(pt=>bnToBn$3(pt));return ft.length?ot.listBags.multi(ft).pipe(map$3(pt=>orderBags(ft,pt))):of([])})}function all$2(et,tt){const ot=getQueryInterface(tt);return memo(et,()=>ot.listBags.keys().pipe(switchMap(dt=>tt.derive.bagsList._getIds(dt.map(({args:[ft]})=>ft))),map$3(dt=>dt.filter(({bag:ft})=>ft))))}function get(et,tt){return memo(et,ot=>tt.derive.bagsList._getIds([bnToBn$3(ot)]).pipe(map$3(dt=>dt[0])))}function expand(et,tt){return memo(et,ot=>tt.derive.bagsList.listNodes(ot.bag).pipe(map$3(dt=>objectSpread$3({nodes:dt},ot))))}function getExpanded(et,tt){return memo(et,ot=>tt.derive.bagsList.get(ot).pipe(switchMap(dt=>tt.derive.bagsList.expand(dt))))}function traverseLinks(et,tt){const ot=new BehaviorSubject(tt),dt=getQueryInterface(et);return ot.pipe(switchMap(ft=>dt.listNodes(ft)),tap(ft=>{nextTick(()=>{ft.isSome&&ft.value.next.isSome?ot.next(ft.unwrap().next.unwrap()):ot.complete()})}),toArray(),map$3(ft=>ft.map(pt=>pt.unwrap())))}function listNodes(et,tt){return memo(et,ot=>ot&&ot.head.isSome?traverseLinks(tt,ot.head.unwrap()):of([]))}const bagsList=Object.freeze(Object.defineProperty({__proto__:null,_getIds,all:all$2,expand,get,getExpanded,listNodes},Symbol.toStringTag,{value:"Module"})),VESTING_ID="0x76657374696e6720";function calcLocked(et,tt,ot){let dt=et.registry.createType("Balance"),ft=[],pt=et.registry.createType("Balance"),mt=!1;if(Array.isArray(ot)){ft=ot.filter(({until:bt})=>!bt||tt&&bt.gt(tt)),mt=ft.some(({amount:bt})=>bt&&bt.isMax()),pt=et.registry.createType("Balance",ft.filter(({id:bt})=>bt.eq(VESTING_ID)).reduce((bt,{amount:yt})=>bt.iadd(yt),new BN(0)));const ht=ft.filter(({amount:bt})=>bt&&!bt.isMax());ht.length&&(dt=et.registry.createType("Balance",bnMax(...ht.map(({amount:bt})=>bt))))}return{allLocked:mt,lockedBalance:dt,lockedBreakdown:ft,vestingLocked:pt}}function calcShared(et,tt,ot,dt){var yt;const{allLocked:ft,lockedBalance:pt,lockedBreakdown:mt,vestingLocked:ht}=calcLocked(et,tt,dt);let bt=null;if((yt=ot==null?void 0:ot.frameSystemAccountInfo)!=null&&yt.frozen){const{frameSystemAccountInfo:xt,freeBalance:gt,reservedBalance:wt}=ot,Pt=xt.frozen.isZero()&&wt.isZero(),St=et.consts.balances.existentialDeposit,Et=Pt?new BN(0):St,Lt=xt.frozen.sub(wt);bt=et.registry.createType("Balance",ft?0:gt.sub(bnMax(Et,Lt)))}return objectSpread$3({},ot,{availableBalance:et.registry.createType("Balance",ft?0:bnMax(new BN(0),ot!=null&&ot.freeBalance?ot.freeBalance.sub(pt):new BN(0))),lockedBalance:pt,lockedBreakdown:mt,transferable:bt,vestingLocked:ht})}function calcVesting(et,tt,ot){const dt=ot||[],ft=!tt.vestingLocked.isZero(),pt=dt.map(({locked:bt,perBlock:yt,startingBlock:xt})=>et.gt(xt)?bnMin(bt,yt.mul(et.sub(xt))):BN_ZERO),mt=pt.reduce((bt,yt)=>bt.iadd(yt),new BN(0)),ht=dt.reduce((bt,{locked:yt})=>bt.iadd(yt),new BN(0));return{isVesting:ft,vestedBalance:mt,vestedClaimable:ft?tt.vestingLocked.sub(ht.sub(mt)):BN_ZERO,vesting:dt.map(({locked:bt,perBlock:yt,startingBlock:xt},gt)=>({endBlock:bt.div(yt).iadd(xt),locked:bt,perBlock:yt,startingBlock:xt,vested:pt[gt]})).filter(({locked:bt})=>!bt.isZero()),vestingTotal:ht}}function calcBalances$1(et,tt){const[ot,[dt,ft,pt],mt]=tt,ht=calcShared(et,mt,ot,ft[0]);return objectSpread$3(ht,calcVesting(mt,ht,dt),{accountId:ot.accountId,accountNonce:ot.accountNonce,additional:ft.slice(1).map((bt,yt)=>calcShared(et,mt,ot.additional[yt],bt)),namedReserves:pt})}function queryOld(et,tt){return combineLatest([et.query.balances.locks(tt),et.query.balances.vesting(tt)]).pipe(map$3(([ot,dt])=>{let ft=null;if(dt.isSome){const{offset:pt,perBlock:mt,startingBlock:ht}=dt.unwrap();ft=et.registry.createType("VestingInfo",{locked:pt,perBlock:mt,startingBlock:ht})}return[ft?[ft]:null,[ot],[]]}))}const isNonNullable=et=>!!et;function createCalls(et){return[et.map(tt=>!tt),et.filter(isNonNullable)]}function queryCurrent(et,tt,ot=["balances"]){var ht;const[dt,ft]=createCalls(ot.map(bt=>{var yt,xt;return((yt=et.derive[bt])==null?void 0:yt.customLocks)||((xt=et.query[bt])==null?void 0:xt.locks)})),[pt,mt]=createCalls(ot.map(bt=>{var yt;return(yt=et.query[bt])==null?void 0:yt.reserves}));return combineLatest([(ht=et.query.vesting)!=null&&ht.vesting?et.query.vesting.vesting(tt):of(et.registry.createType("Option<VestingInfo>")),ft.length?combineLatest(ft.map(bt=>bt(tt))):of([]),mt.length?combineLatest(mt.map(bt=>bt(tt))):of([])]).pipe(map$3(([bt,yt,xt])=>{let gt=-1,wt=-1;const Pt=bt.unwrapOr(null);return[Pt?Array.isArray(Pt)?Pt:[Pt]:null,dt.map(St=>St?et.registry.createType("Vec<BalanceLock>"):yt[++gt]),pt.map(St=>St?et.registry.createType("Vec<PalletBalancesReserveData>"):xt[++wt])]}))}function all$1(et,tt){const ot=tt.registry.getModuleInstances(tt.runtimeVersion.specName,"balances");return memo(et,dt=>{var ft,pt;return combineLatest([tt.derive.balances.account(dt),isFunction$7((ft=tt.query.system)==null?void 0:ft.account)||isFunction$7((pt=tt.query.balances)==null?void 0:pt.account)?queryCurrent(tt,dt,ot):queryOld(tt,dt)]).pipe(switchMap(([mt,ht])=>combineLatest([of(mt),of(ht),tt.derive.chain.bestNumber()])),map$3(mt=>calcBalances$1(tt,mt)))})}function zeroBalance(et){return et.registry.createType("Balance")}function getBalance(et,[tt,ot,dt,ft],pt){const mt=et.registry.createType("Balance",tt.toBn());return pt.isFrameAccountData?{frameSystemAccountInfo:{flags:ft,frozen:dt},freeBalance:tt,frozenFee:et.registry.createType("Balance",0),frozenMisc:et.registry.createType("Balance",0),reservedBalance:ot,votingBalance:mt}:{freeBalance:tt,frozenFee:dt,frozenMisc:ft,reservedBalance:ot,votingBalance:mt}}function calcBalances(et,[tt,[ot,[dt,...ft],pt]]){return objectSpread$3({accountId:tt,accountNonce:ot,additional:ft.map(mt=>getBalance(et,mt,pt))},getBalance(et,dt,pt))}function queryBalancesFree(et,tt){return combineLatest([et.query.balances.freeBalance(tt),et.query.balances.reservedBalance(tt),et.query.system.accountNonce(tt)]).pipe(map$3(([ot,dt,ft])=>[ft,[[ot,dt,zeroBalance(et),zeroBalance(et)]],{isFrameAccountData:!1}]))}function queryNonceOnly(et,tt){const ot=dt=>[dt,[[zeroBalance(et),zeroBalance(et),zeroBalance(et),zeroBalance(et)]],{isFrameAccountData:!1}];return isFunction$7(et.query.system.account)?et.query.system.account(tt).pipe(map$3(({nonce:dt})=>ot(dt))):isFunction$7(et.query.system.accountNonce)?et.query.system.accountNonce(tt).pipe(map$3(dt=>ot(dt))):of(ot(et.registry.createType("Index")))}function queryBalancesAccount(et,tt,ot=["balances"]){const dt=ot.map(pt=>{var mt,ht;return((mt=et.derive[pt])==null?void 0:mt.customAccount)||((ht=et.query[pt])==null?void 0:ht.account)}).filter(pt=>isFunction$7(pt)),ft=(pt,mt)=>[pt,mt.map(({feeFrozen:ht,free:bt,miscFrozen:yt,reserved:xt})=>[bt,xt,ht,yt]),{isFrameAccountData:!1}];return dt.length?isFunction$7(et.query.system.account)?combineLatest([et.query.system.account(tt),...dt.map(pt=>pt(tt))]).pipe(map$3(([{nonce:pt},...mt])=>ft(pt,mt))):combineLatest([et.query.system.accountNonce(tt),...dt.map(pt=>pt(tt))]).pipe(map$3(([pt,...mt])=>ft(pt,mt))):queryNonceOnly(et,tt)}function querySystemAccount(et,tt){return et.query.system.account(tt).pipe(map$3(ot=>{const dt=ot.nonce?ot.data:ot[1],ft=ot.nonce||ot[0];if(!dt||dt.isEmpty)return[ft,[[zeroBalance(et),zeroBalance(et),zeroBalance(et),zeroBalance(et)]],{isFrameAccountData:!1}];if(!!ot.data.frozen){const{flags:mt,free:ht,frozen:bt,reserved:yt}=dt;return[ft,[[ht,yt,bt,mt]],{isFrameAccountData:!0}]}else{const{feeFrozen:mt,free:ht,miscFrozen:bt,reserved:yt}=dt;return[ft,[[ht,yt,mt,bt]],{isFrameAccountData:!1}]}}))}function account$1(et,tt){const ot=tt.registry.getModuleInstances(tt.runtimeVersion.specName,"balances"),dt=ot&&ot[0]!=="balances";return memo(et,ft=>tt.derive.accounts.accountId(ft).pipe(switchMap(pt=>{var mt,ht,bt;return pt?combineLatest([of(pt),dt?queryBalancesAccount(tt,pt,ot):isFunction$7((mt=tt.query.system)==null?void 0:mt.account)?querySystemAccount(tt,pt):isFunction$7((ht=tt.query.balances)==null?void 0:ht.account)?queryBalancesAccount(tt,pt):isFunction$7((bt=tt.query.balances)==null?void 0:bt.freeBalance)?queryBalancesFree(tt,pt):queryNonceOnly(tt,pt)]):of([tt.registry.createType("AccountId"),[tt.registry.createType("Index"),[[zeroBalance(tt),zeroBalance(tt),zeroBalance(tt),zeroBalance(tt)]],{isFrameAccountData:!1}]])}),map$3(pt=>calcBalances(tt,pt))))}function votingBalances(et,tt){return memo(et,ot=>ot!=null&&ot.length?combineLatest(ot.map(dt=>tt.derive.balances.account(dt))):of([]))}const votingBalance=all$1,balances=Object.freeze(Object.defineProperty({__proto__:null,account:account$1,all:all$1,votingBalance,votingBalances},Symbol.toStringTag,{value:"Module"}));function filterBountiesProposals(et,tt){const ot=et.tx.bounties?et.tx.bounties:et.tx.treasury,dt=[ot.approveBounty,ot.closeBounty,ot.proposeCurator,ot.unassignCurator];return tt.filter(ft=>dt.find(pt=>ft.proposal&&pt.is(ft.proposal)))}function parseResult$2([et,tt,ot,dt]){const ft=[];return et.forEach((pt,mt)=>{pt.isSome&&ft.push({bounty:pt.unwrap(),description:tt[mt].unwrapOrDefault().toUtf8(),index:ot[mt],proposals:dt.filter(ht=>ht.proposal&&ot[mt].eq(ht.proposal.args[0]))})}),ft}function bounties$1(et,tt){const ot=tt.query.bounties||tt.query.treasury;return memo(et,()=>ot.bounties?combineLatest([ot.bountyCount(),tt.query.council?tt.query.council.proposalCount():of(0)]).pipe(switchMap(()=>combineLatest([ot.bounties.keys(),tt.derive.council?tt.derive.council.proposals():of([])])),switchMap(([dt,ft])=>{const pt=dt.map(({args:[mt]})=>mt);return combineLatest([ot.bounties.multi(pt),ot.bountyDescriptions.multi(pt),of(pt),of(filterBountiesProposals(tt,ft))])}),map$3(parseResult$2)):of(parseResult$2([[],[],[],[]])))}const bounties=Object.freeze(Object.defineProperty({__proto__:null,bounties:bounties$1},Symbol.toStringTag,{value:"Module"}));function createBlockNumberDerive(et){return(tt,ot)=>memo(tt,()=>et(ot).pipe(map$3(unwrapBlockNumber)))}function getAuthorDetailsWithAt(et,tt){var pt,mt,ht,bt;const ot=(pt=tt.session)!=null&&pt.validators?tt.session.validators():of(null),{logs:[dt]}=et.digest,ft=dt&&(dt.isConsensus&&dt.asConsensus[0].isNimbus&&dt.asConsensus[1]||dt.isPreRuntime&&dt.asPreRuntime[0].isNimbus&&dt.asPreRuntime[1]);if(ft){if((mt=tt.authorMapping)!=null&&mt.mappingWithDeposit)return combineLatest([of(et),ot,tt.authorMapping.mappingWithDeposit(ft).pipe(map$3(yt=>yt.unwrapOr({account:null}).account))]);if((ht=tt.parachainStaking)!=null&&ht.selectedCandidates&&((bt=tt.session)!=null&&bt.nextKeys)){const yt=ft.toHex();return combineLatest([of(et),ot,tt.parachainStaking.selectedCandidates().pipe(mergeMap(xt=>combineLatest([of(xt),tt.session.nextKeys.multi(xt).pipe(map$3(gt=>gt.findIndex(wt=>wt.unwrapOrDefault().nimbus.toHex()===yt)))])),map$3(([xt,gt])=>gt===-1?null:xt[gt]))])}}return combineLatest([of(et),ot,of(null)])}function getAuthorDetails(et,tt,ot){return et.queryAt(tt.parentHash.isEmpty?ot||tt.hash:tt.parentHash).pipe(switchMap(dt=>getAuthorDetailsWithAt(tt,dt)))}const bestNumber=createBlockNumberDerive(et=>et.rpc.chain.subscribeNewHeads()),bestNumberFinalized=createBlockNumberDerive(et=>et.rpc.chain.subscribeFinalizedHeads());function bestNumberLag(et,tt){return memo(et,()=>combineLatest([tt.derive.chain.bestNumber(),tt.derive.chain.bestNumberFinalized()]).pipe(map$3(([ot,dt])=>tt.registry.createType("BlockNumber",ot.sub(dt)))))}function extractAuthor(et,tt){const[ot]=et.logs.filter(mt=>mt.isConsensus),[dt]=et.logs.filter(mt=>mt.isPreRuntime),[ft]=et.logs.filter(mt=>mt.isSeal);let pt;try{if(dt){const[mt,ht]=dt.asPreRuntime;pt=mt.extractAuthor(ht,tt)}if(!pt&&ot){const[mt,ht]=ot.asConsensus;pt=mt.extractAuthor(ht,tt)}if(!pt&&ft){const[mt,ht]=ft.asSeal;pt=mt.extractAuthor(ht,tt)}}catch{}return pt}function createHeaderExtended(et,tt,ot,dt){const ft=et.createClass("Header");class pt extends ft{constructor(bt,yt,xt,gt){super(bt,yt);Ot(this,"__internal__author");this.__internal__author=gt||extractAuthor(this.digest,xt||[]),this.createdAtHash=yt==null?void 0:yt.createdAtHash}get author(){return this.__internal__author}}return new pt(et,tt,ot,dt)}function mapExtrinsics(et,tt){return et.map((ot,dt)=>{let ft,pt;const mt=tt.filter(({phase:ht})=>ht.isApplyExtrinsic&&ht.asApplyExtrinsic.eq(dt)).map(({event:ht})=>(ht.section==="system"&&(ht.method==="ExtrinsicSuccess"?pt=ht.data[0]:ht.method==="ExtrinsicFailed"&&(ft=ht.data[0],pt=ht.data[1])),ht));return{dispatchError:ft,dispatchInfo:pt,events:mt,extrinsic:ot}})}function createSignedBlockExtended(et,tt,ot,dt,ft){const pt=et.createClass("SignedBlock");class mt extends pt{constructor(yt,xt,gt,wt,Pt){super(yt,xt);Ot(this,"__internal__author");Ot(this,"__internal__events");Ot(this,"__internal__extrinsics");this.__internal__author=Pt||extractAuthor(this.block.header.digest,wt||[]),this.__internal__events=gt||[],this.__internal__extrinsics=mapExtrinsics(this.block.extrinsics,this.__internal__events),this.createdAtHash=xt==null?void 0:xt.createdAtHash}get author(){return this.__internal__author}get events(){return this.__internal__events}get extrinsics(){return this.__internal__extrinsics}}return new mt(et,tt,ot,dt,ft)}function getBlock(et,tt){return memo(et,ot=>combineLatest([tt.rpc.chain.getBlock(ot),tt.queryAt(ot)]).pipe(switchMap(([dt,ft])=>combineLatest([of(dt),ft.system.events(),getAuthorDetails(tt,dt.block.header,ot)])),map$3(([dt,ft,[,pt,mt]])=>createSignedBlockExtended(ft.registry,dt,ft,pt,mt))))}function getBlockByNumber(et,tt){return memo(et,ot=>tt.rpc.chain.getBlockHash(ot).pipe(switchMap(dt=>tt.derive.chain.getBlock(dt))))}function getHeader(et,tt){return memo(et,ot=>tt.rpc.chain.getHeader(ot).pipe(switchMap(dt=>getAuthorDetails(tt,dt,ot)),map$3(([dt,ft,pt])=>createHeaderExtended((ft||dt).registry,dt,ft,pt))))}function subscribeFinalizedBlocks(et,tt){return memo(et,()=>tt.derive.chain.subscribeFinalizedHeads().pipe(switchMap(ot=>tt.derive.chain.getBlock(ot.createdAtHash||ot.hash))))}function _getHeaderRange(et,tt){return memo(et,(ot,dt,ft=[])=>tt.rpc.chain.getHeader(ot).pipe(switchMap(pt=>pt.parentHash.eq(dt)?of([pt,...ft]):tt.derive.chain._getHeaderRange(pt.parentHash,dt,[pt,...ft]))))}function subscribeFinalizedHeads(et,tt){return memo(et,()=>{let ot=null;return tt.rpc.chain.subscribeFinalizedHeads().pipe(switchMap(dt=>{const ft=ot,pt=dt.parentHash;return ot=dt.createdAtHash=dt.hash,ft===null||pt.eq(ft)?of(dt):tt.derive.chain._getHeaderRange(pt,ft,[dt]).pipe(switchMap(mt=>from$1(mt)))}))})}function subscribeNewBlocks(et,tt){return memo(et,()=>tt.derive.chain.subscribeNewHeads().pipe(switchMap(ot=>tt.derive.chain.getBlock(ot.createdAtHash||ot.hash))))}function subscribeNewHeads(et,tt){return memo(et,()=>tt.rpc.chain.subscribeNewHeads().pipe(switchMap(ot=>getAuthorDetails(tt,ot)),map$3(([ot,dt,ft])=>(ot.createdAtHash=ot.hash,createHeaderExtended(ot.registry,ot,dt,ft)))))}const chain$1=Object.freeze(Object.defineProperty({__proto__:null,_getHeaderRange,bestNumber,bestNumberFinalized,bestNumberLag,getBlock,getBlockByNumber,getHeader,subscribeFinalizedBlocks,subscribeFinalizedHeads,subscribeNewBlocks,subscribeNewHeads},Symbol.toStringTag,{value:"Module"}));function queryConstants(et){return of([et.consts.contracts.callBaseFee||et.registry.createType("Balance"),et.consts.contracts.contractFee||et.registry.createType("Balance"),et.consts.contracts.creationFee||et.registry.createType("Balance"),et.consts.contracts.transactionBaseFee||et.registry.createType("Balance"),et.consts.contracts.transactionByteFee||et.registry.createType("Balance"),et.consts.contracts.transferFee||et.registry.createType("Balance"),et.consts.contracts.rentByteFee||et.registry.createType("Balance"),et.consts.contracts.rentDepositOffset||et.registry.createType("Balance"),et.consts.contracts.surchargeReward||et.registry.createType("Balance"),et.consts.contracts.tombstoneDeposit||et.registry.createType("Balance")])}function fees(et,tt){return memo(et,()=>queryConstants(tt).pipe(map$3(([ot,dt,ft,pt,mt,ht,bt,yt,xt,gt])=>({callBaseFee:ot,contractFee:dt,creationFee:ft,rentByteFee:bt,rentDepositOffset:yt,surchargeReward:xt,tombstoneDeposit:gt,transactionBaseFee:pt,transactionByteFee:mt,transferFee:ht}))))}const contracts=Object.freeze(Object.defineProperty({__proto__:null,fees},Symbol.toStringTag,{value:"Module"}));function isVoter(et){return!Array.isArray(et)}function retrieveStakeOf(et){return et.stakeOf.entries().pipe(map$3(tt=>tt.map(([{args:[ot]},dt])=>[ot,dt])))}function retrieveVoteOf(et){return et.votesOf.entries().pipe(map$3(tt=>tt.map(([{args:[ot]},dt])=>[ot,dt])))}function retrievePrev(et,tt){return combineLatest([retrieveStakeOf(tt),retrieveVoteOf(tt)]).pipe(map$3(([ot,dt])=>{const ft=[];return dt.forEach(([pt,mt])=>{ft.push([pt,{stake:et.registry.createType("Balance"),votes:mt}])}),ot.forEach(([pt,mt])=>{const ht=ft.find(([bt])=>bt.eq(pt));ht?ht[1].stake=mt:ft.push([pt,{stake:mt,votes:[]}])}),ft}))}function retrieveCurrent(et){return et.voting.entries().pipe(map$3(tt=>tt.map(([{args:[ot]},dt])=>[ot,isVoter(dt)?{stake:dt.stake,votes:dt.votes}:{stake:dt[0],votes:dt[1]}])))}function votes(et,tt){const ot=tt.query.elections||tt.query.phragmenElection||tt.query.electionsPhragmen;return memo(et,()=>ot?ot.stakeOf?retrievePrev(tt,ot):retrieveCurrent(ot):of([]))}function votesOf(et,tt){return memo(et,ot=>tt.derive.council.votes().pipe(map$3(dt=>(dt.find(([ft])=>ft.eq(ot))||[null,{stake:tt.registry.createType("Balance"),votes:[]}])[1])))}const members$3=members$5("council"),hasProposals$2=hasProposals$4("council"),proposal$2=proposal$4("council"),proposalCount$2=proposalCount$4("council"),proposalHashes$2=proposalHashes$4("council"),proposals$4=proposals$6("council"),prime$2=prime$4("council"),council=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:hasProposals$2,members:members$3,prime:prime$2,proposal:proposal$2,proposalCount:proposalCount$2,proposalHashes:proposalHashes$2,proposals:proposals$4,votes,votesOf},Symbol.toStringTag,{value:"Module"}));function createChildKey(et){return u8aToHex$4(u8aConcat$2(":child_storage:default:",blake2AsU8a$1(u8aConcat$2("crowdloan",(et.fundIndex||et.trieIndex).toU8a()))))}function childKey(et,tt){return memo(et,ot=>tt.query.crowdloan.funds(ot).pipe(map$3(dt=>dt.isSome?createChildKey(dt.unwrap()):null)))}function extractContributed(et,tt){var ft;const ot=[],dt=[];return tt.filter(({event:{data:[,pt],method:mt,section:ht}})=>ht==="crowdloan"&&["Contributed","Withdrew"].includes(mt)&&pt.eq(et)).reduce((pt,{event:{data:[mt],method:ht}})=>(ht==="Contributed"?pt.added.push(mt.toHex()):pt.removed.push(mt.toHex()),pt),{added:ot,blockHash:((ft=tt.createdAtHash)==null?void 0:ft.toHex())||"-",removed:dt})}const PAGE_SIZE_K$1=1e3;function _getUpdates(et,tt){let ot=[],dt=[];return et.query.system.events().pipe(switchMap(ft=>{var mt;const pt=extractContributed(tt,ft);return pt.added.length||pt.removed.length?(ot=ot.concat(...pt.added),dt=dt.concat(...pt.removed),of({added:ot,addedDelta:pt.added,blockHash:((mt=ft.createdAtHash)==null?void 0:mt.toHex())||"-",removed:dt,removedDelta:pt.removed})):EMPTY}),startWith({added:ot,addedDelta:[],blockHash:"-",removed:dt,removedDelta:[]}))}function _eventTriggerAll(et,tt){return et.query.system.events().pipe(switchMap(ot=>{var ft;return ot.filter(({event:{data:[pt],method:mt,section:ht}})=>ht==="crowdloan"&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(mt)&&pt.eq(tt)).length?of(((ft=ot.createdAtHash)==null?void 0:ft.toHex())||"-"):EMPTY}),startWith("-"))}function _getKeysPaged(et,tt){const ot=new BehaviorSubject(void 0);return ot.pipe(switchMap(dt=>et.rpc.childstate.getKeysPaged(tt,"0x",PAGE_SIZE_K$1,dt)),tap(dt=>{nextTick(()=>{dt.length===PAGE_SIZE_K$1?ot.next(dt[PAGE_SIZE_K$1-1].toHex()):ot.complete()})}),toArray(),map$3(dt=>arrayFlatten(dt)))}function _getAll(et,tt,ot){return _eventTriggerAll(et,tt).pipe(switchMap(()=>isFunction$7(et.rpc.childstate.getKeysPaged)?_getKeysPaged(et,ot):et.rpc.childstate.getKeys(ot,"0x")),map$3(dt=>dt.map(ft=>ft.toHex())))}function _contributions$1(et,tt,ot){return combineLatest([_getAll(et,tt,ot),_getUpdates(et,tt)]).pipe(map$3(([dt,{added:ft,blockHash:pt,removed:mt}])=>{const ht={};return dt.forEach(bt=>{ht[bt]=!0}),ft.forEach(bt=>{ht[bt]=!0}),mt.forEach(bt=>{delete ht[bt]}),{blockHash:pt,contributorsHex:Object.keys(ht)}}))}function contributions(et,tt){return memo(et,ot=>tt.derive.crowdloan.childKey(ot).pipe(switchMap(dt=>dt?_contributions$1(tt,ot,dt):of({blockHash:"-",contributorsHex:[]}))))}function _getValues(et,tt,ot){return combineLatest(ot.map(dt=>et.rpc.childstate.getStorage(tt,dt))).pipe(map$3(dt=>dt.map(ft=>et.registry.createType("Option<StorageData>",ft)).map(ft=>ft.isSome?et.registry.createType("Balance",ft.unwrap()):et.registry.createType("Balance")).reduce((ft,pt,mt)=>objectSpread$3(ft,{[ot[mt]]:pt}),{})))}function _watchOwnChanges(et,tt,ot,dt){return et.query.system.events().pipe(switchMap(ft=>{const pt=extractContributed(tt,ft),mt=dt.filter(ht=>pt.added.includes(ht)||pt.removed.includes(ht));return mt.length?_getValues(et,ot,mt):EMPTY}),startWith({}))}function _contributions(et,tt,ot,dt){return combineLatest([_getValues(et,ot,dt),_watchOwnChanges(et,tt,ot,dt)]).pipe(map$3(([ft,pt])=>objectSpread$3({},ft,pt)))}function ownContributions(et,tt){return memo(et,(ot,dt)=>tt.derive.crowdloan.childKey(ot).pipe(switchMap(ft=>ft&&dt.length?_contributions(tt,ot,ft,dt):of({}))))}const crowdloan=Object.freeze(Object.defineProperty({__proto__:null,childKey,contributions,ownContributions},Symbol.toStringTag,{value:"Module"}));function isOldInfo(et){return!!et.proposalHash}function isCurrentStatus(et){return!!et.tally}function compareRationals(et,tt,ot,dt){for(;;){const ft=et.div(tt),pt=ot.div(dt);if(ft.lt(pt))return!0;if(pt.lt(ft))return!1;const mt=et.mod(tt),ht=ot.mod(dt);if(ht.isZero())return!1;if(mt.isZero())return!0;et=dt,ot=tt,tt=ht,dt=mt}}function calcPassingOther(et,tt,{votedAye:ot,votedNay:dt,votedTotal:ft}){const pt=bnSqrt(ft);return pt.isZero()?!1:et.isSuperMajorityApprove?compareRationals(dt,pt,ot,tt):compareRationals(dt,tt,ot,pt)}function calcPassing(et,tt,ot){return et.isSimpleMajority?ot.votedAye.gt(ot.votedNay):calcPassingOther(et,tt,ot)}function calcVotesPrev(et){return et.reduce((tt,ot)=>{const{balance:dt,vote:ft}=ot,pt=ft.conviction.index===0,mt=dt.muln(pt?1:ft.conviction.index).divn(pt?10:1);return ft.isAye?(tt.allAye.push(ot),tt.voteCountAye++,tt.votedAye.iadd(mt)):(tt.allNay.push(ot),tt.voteCountNay++,tt.votedNay.iadd(mt)),tt.voteCount++,tt.votedTotal.iadd(mt),tt},{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new BN(0),votedNay:new BN(0),votedTotal:new BN(0)})}function calcVotesCurrent(et,tt){const ot=[],dt=[];return tt.forEach(ft=>{ft.vote.isAye?ot.push(ft):dt.push(ft)}),{allAye:ot,allNay:dt,voteCount:ot.length+dt.length,voteCountAye:ot.length,voteCountNay:dt.length,votedAye:et.ayes,votedNay:et.nays,votedTotal:et.turnout}}function calcVotes(et,tt,ot){const dt=isCurrentStatus(tt.status)?calcVotesCurrent(tt.status.tally,ot):calcVotesPrev(ot);return objectSpread$3({},dt,{isPassing:calcPassing(tt.status.threshold,et,dt),votes:ot})}function getStatus(et){if(et.isNone)return null;const tt=et.unwrap();return isOldInfo(tt)?tt:tt.isOngoing?tt.asOngoing:null}function getImageHashBounded(et){return et.isLegacy?et.asLegacy.hash_.toHex():et.isLookup?et.asLookup.hash_.toHex():et.isInline?et.asInline.hash.toHex():isString$2(et)?isHex$5(et)?et:stringToHex(et):isU8a$4(et)?u8aToHex$4(et):et.toHex()}function getImageHash(et){return getImageHashBounded(et.proposal||et.proposalHash)}const DEMOCRACY_ID=stringToHex("democrac");function isMaybeHashedOrBounded(et){return et instanceof Enum}function isBounded(et){return et.isInline||et.isLegacy||et.isLookup}function queryQueue(et){return et.query.democracy.dispatchQueue().pipe(switchMap(tt=>combineLatest([of(tt),et.derive.democracy.preimages(tt.map(([,ot])=>ot))])),map$3(([tt,ot])=>tt.map(([dt,ft,pt],mt)=>({at:dt,image:ot[mt],imageHash:getImageHashBounded(ft),index:pt}))))}function schedulerEntries(et){return et.derive.democracy.referendumsFinished().pipe(switchMap(()=>et.query.scheduler.agenda.keys()),switchMap(tt=>{const ot=tt.map(({args:[dt]})=>dt);return ot.length?combineLatest([of(ot),et.query.scheduler.agenda.multi(ot).pipe(catchError(()=>of(ot.map(()=>[]))))]):of([[],[]])}))}function queryScheduler(et){return schedulerEntries(et).pipe(switchMap(([tt,ot])=>{const dt=[];return tt.forEach((ft,pt)=>{(ot[pt]||[]).filter(mt=>mt.isSome).forEach(mt=>{const ht=mt.unwrap();if(ht.maybeId.isSome){const bt=ht.maybeId.unwrap().toHex();if(bt.startsWith(DEMOCRACY_ID)){const yt=isMaybeHashedOrBounded(ht.call)?isBounded(ht.call)?getImageHashBounded(ht.call):ht.call.isHash?ht.call.asHash.toHex():ht.call.asValue.args[0].toHex():ht.call.args[0].toHex();dt.push({at:ft,imageHash:yt,index:et.registry.createType("(u64, ReferendumIndex)",bt)[1]})}}})}),combineLatest([of(dt),dt.length?et.derive.democracy.preimages(dt.map(({imageHash:ft})=>ft)):of([])])}),map$3(([tt,ot])=>tt.map((dt,ft)=>objectSpread$3({image:ot[ft]},dt))))}function dispatchQueue(et,tt){return memo(et,()=>{var ot;return isFunction$7((ot=tt.query.scheduler)==null?void 0:ot.agenda)?queryScheduler(tt):tt.query.democracy.dispatchQueue?queryQueue(tt):of([])})}const LOCKUPS=[0,1,2,4,8,16,32];function parseEnd(et,tt,{approved:ot,end:dt}){return[dt,ot.isTrue&&tt.isAye||ot.isFalse&&tt.isNay?dt.add((et.consts.democracy.voteLockingPeriod||et.consts.democracy.enactmentPeriod).muln(LOCKUPS[tt.conviction.index])):BN_ZERO]}function parseLock(et,[tt,ot],dt){const{balance:ft,vote:pt}=ot.asStandard,[mt,ht]=dt.isFinished?parseEnd(et,pt,dt.asFinished):[BN_ZERO,BN_ZERO];return{balance:ft,isDelegated:!1,isFinished:dt.isFinished,referendumEnd:mt,referendumId:tt,unlockAt:ht,vote:pt}}function delegateLocks(et,{balance:tt,conviction:ot,target:dt}){return et.derive.democracy.locks(dt).pipe(map$3(ft=>ft.map(({isFinished:pt,referendumEnd:mt,referendumId:ht,unlockAt:bt,vote:yt})=>({balance:tt,isDelegated:!0,isFinished:pt,referendumEnd:mt,referendumId:ht,unlockAt:bt.isZero()?bt:mt.add((et.consts.democracy.voteLockingPeriod||et.consts.democracy.enactmentPeriod).muln(LOCKUPS[ot.index])),vote:et.registry.createType("Vote",{aye:yt.isAye,conviction:ot})}))))}function directLocks(et,{votes:tt}){return tt.length?et.query.democracy.referendumInfoOf.multi(tt.map(([ot])=>ot)).pipe(map$3(ot=>tt.map((dt,ft)=>[dt,ot[ft].unwrapOr(null)]).filter(dt=>!!dt[1]&&isUndefined$4(dt[1].end)&&dt[0][1].isStandard).map(([dt,ft])=>parseLock(et,dt,ft)))):of([])}function locks(et,tt){return memo(et,ot=>tt.query.democracy.votingOf?tt.query.democracy.votingOf(ot).pipe(switchMap(dt=>dt.isDirect?directLocks(tt,dt.asDirect):dt.isDelegating?delegateLocks(tt,dt.asDelegating):of([]))):of([]))}function withImage(et,tt){if(tt.isNone)return of(null);const[ot,dt]=tt.unwrap();return et.derive.democracy.preimage(ot).pipe(map$3(ft=>({image:ft,imageHash:getImageHashBounded(ot),threshold:dt})))}function nextExternal(et,tt){return memo(et,()=>{var ot;return(ot=tt.query.democracy)!=null&&ot.nextExternal?tt.query.democracy.nextExternal().pipe(switchMap(dt=>withImage(tt,dt))):of(null)})}function getUnrequestedTicket(et){return et.ticket||et.deposit}function getRequestedTicket(et){return(et.maybeTicket||et.deposit).unwrapOrDefault()}function isDemocracyPreimage(et,tt){return!!tt&&!et.query.democracy.dispatchQueue}function constructProposal(et,[tt,ot,dt,ft]){let pt;try{pt=et.registry.createType("Call",tt.toU8a(!0))}catch(mt){console.error(mt)}return{at:ft,balance:dt,proposal:pt,proposer:ot}}function parseDemocracy(et,tt){if(!tt.isNone){if(isDemocracyPreimage(et,tt)){const ot=tt.unwrap();if(ot.isMissing)return;const{data:dt,deposit:ft,provider:pt,since:mt}=ot.asAvailable;return constructProposal(et,[dt,pt,ft,mt])}return constructProposal(et,tt.unwrap())}}function parseImage(et,[tt,ot,dt]){if(!ot)return;const[ft,pt]=ot.isUnrequested?getUnrequestedTicket(ot.asUnrequested):getRequestedTicket(ot.asRequested);let mt;if(dt)try{mt=et.registry.createType("Call",dt.toU8a(!0))}catch(ht){console.error(ht)}return{at:BN_ZERO,balance:pt,proposal:mt,proposalHash:tt,proposer:ft}}function getDemocracyImages(et,tt){const ot=tt.map(dt=>getImageHashBounded(dt));return et.query.democracy.preimages.multi(ot).pipe(map$3(dt=>dt.map(ft=>parseDemocracy(et,ft))))}function getImages(et,tt){const ot=tt.map(ft=>getImageHashBounded(ft)),dt=et.registry.lookup.getTypeDef(et.query.preimage.preimageFor.creator.meta.type.asMap.key).type;return et.query.preimage.statusFor.multi(ot).pipe(switchMap(ft=>{const pt=ft.map(ht=>ht.unwrapOr(null)),mt=pt.map((ht,bt)=>ht?dt==="H256"?ot[bt]:ht.isRequested?[ot[bt],ht.asRequested.len.unwrapOr(0)]:[ot[bt],ht.asUnrequested.len]:null).filter(ht=>!!ht);return et.query.preimage.preimageFor.multi(mt).pipe(map$3(ht=>{let bt=-1;return pt.map((yt,xt)=>yt?[ot[xt],yt,ht[++bt].unwrapOr(null)]:[ot[xt],null,null]).map(yt=>parseImage(et,yt))}))}))}function preimages(et,tt){return memo(et,ot=>ot.length?isFunction$7(tt.query.democracy.preimages)?getDemocracyImages(tt,ot):isFunction$7(tt.query.preimage.preimageFor)?getImages(tt,ot):of([]):of([]))}const preimage=firstMemo((et,tt)=>et.derive.democracy.preimages([tt]));function isNewDepositors(et){return isFunction$7(et[1].mul)}function parse$4([et,tt,ot]){return et.filter(([,,dt],ft)=>{var pt;return!!((pt=ot[ft])!=null&&pt.isSome)&&!dt.isEmpty}).map(([dt,ft,pt],mt)=>{const ht=ot[mt].unwrap();return objectSpread$3({image:tt[mt],imageHash:getImageHashBounded(ft),index:dt,proposer:pt},isNewDepositors(ht)?{balance:ht[1],seconds:ht[0]}:{balance:ht[0],seconds:ht[1]})})}function proposals$3(et,tt){return memo(et,()=>{var ot;return isFunction$7((ot=tt.query.democracy)==null?void 0:ot.publicProps)?tt.query.democracy.publicProps().pipe(switchMap(dt=>dt.length?combineLatest([of(dt),tt.derive.democracy.preimages(dt.map(([,ft])=>ft)),tt.query.democracy.depositOf.multi(dt.map(([ft])=>ft))]):of([[],[],[]])),map$3(parse$4)):of([])})}function referendumIds(et,tt){return memo(et,()=>{var ot;return(ot=tt.query.democracy)!=null&&ot.lowestUnbaked?tt.queryMulti([tt.query.democracy.lowestUnbaked,tt.query.democracy.referendumCount]).pipe(map$3(([dt,ft])=>ft.gt(dt)?[...Array(ft.sub(dt).toNumber())].map((pt,mt)=>dt.addn(mt)):[])):of([])})}function referendums(et,tt){return memo(et,()=>tt.derive.democracy.referendumsActive().pipe(switchMap(ot=>ot.length?combineLatest([of(ot),tt.derive.democracy._referendumsVotes(ot)]):of([[],[]])),map$3(([ot,dt])=>ot.map((ft,pt)=>objectSpread$3({},ft,dt[pt])))))}function referendumsActive(et,tt){return memo(et,()=>tt.derive.democracy.referendumIds().pipe(switchMap(ot=>ot.length?tt.derive.democracy.referendumsInfo(ot):of([]))))}function referendumsFinished(et,tt){return memo(et,()=>tt.derive.democracy.referendumIds().pipe(switchMap(ot=>tt.query.democracy.referendumInfoOf.multi(ot)),map$3(ot=>ot.map(dt=>dt.unwrapOr(null)).filter(dt=>!!dt&&dt.isFinished).map(dt=>dt.asFinished))))}function votesPrev(et,tt){return et.query.democracy.votersFor(tt).pipe(switchMap(ot=>combineLatest([of(ot),ot.length?et.query.democracy.voteOf.multi(ot.map(dt=>[tt,dt])):of([]),et.derive.balances.votingBalances(ot)])),map$3(([ot,dt,ft])=>ot.map((pt,mt)=>({accountId:pt,balance:ft[mt].votingBalance||et.registry.createType("Balance"),isDelegating:!1,vote:dt[mt]||et.registry.createType("Vote")}))))}function extractVotes(et,tt){return et.filter(([,ot])=>ot.isDirect).map(([ot,dt])=>[ot,dt.asDirect.votes.filter(([ft])=>ft.eq(tt))]).filter(([,ot])=>!!ot.length).reduce((ot,[dt,ft])=>ft.reduce((pt,[,mt])=>(mt.isStandard&&pt.push(objectSpread$3({accountId:dt,isDelegating:!1},mt.asStandard)),pt),ot),[])}function votesCurr(et,tt){return et.query.democracy.votingOf.entries().pipe(map$3(ot=>{const dt=ot.map(([{args:[mt]},ht])=>[mt,ht]),ft=extractVotes(dt,tt),pt=dt.filter(([,mt])=>mt.isDelegating).map(([mt,ht])=>[mt,ht.asDelegating]);return pt.forEach(([mt,{balance:ht,conviction:bt,target:yt}])=>{const xt=pt.find(([wt])=>wt.eq(yt)),gt=ft.find(({accountId:wt})=>wt.eq(xt?xt[0]:yt));gt&&ft.push({accountId:mt,balance:ht,isDelegating:!0,vote:et.registry.createType("Vote",{aye:gt.vote.isAye,conviction:bt})})}),ft}))}function _referendumVotes(et,tt){return memo(et,ot=>combineLatest([tt.derive.democracy.sqrtElectorate(),isFunction$7(tt.query.democracy.votingOf)?votesCurr(tt,ot.index):votesPrev(tt,ot.index)]).pipe(map$3(([dt,ft])=>calcVotes(dt,ot,ft))))}function _referendumsVotes(et,tt){return memo(et,ot=>ot.length?combineLatest(ot.map(dt=>tt.derive.democracy._referendumVotes(dt))):of([]))}function _referendumInfo(et,tt){return memo(et,(ot,dt)=>{const ft=getStatus(dt);return ft?tt.derive.democracy.preimage(ft.proposal||ft.proposalHash).pipe(map$3(pt=>({image:pt,imageHash:getImageHash(ft),index:tt.registry.createType("ReferendumIndex",ot),status:ft}))):of(null)})}function referendumsInfo(et,tt){return memo(et,ot=>ot.length?tt.query.democracy.referendumInfoOf.multi(ot).pipe(switchMap(dt=>combineLatest(ot.map((ft,pt)=>tt.derive.democracy._referendumInfo(ft,dt[pt])))),map$3(dt=>dt.filter(ft=>!!ft))):of([]))}function sqrtElectorate(et,tt){return memo(et,()=>tt.query.balances.totalIssuance().pipe(map$3(bnSqrt)))}const democracy=Object.freeze(Object.defineProperty({__proto__:null,_referendumInfo,_referendumVotes,_referendumsVotes,dispatchQueue,locks,nextExternal,preimage,preimages,proposals:proposals$3,referendumIds,referendums,referendumsActive,referendumsFinished,referendumsInfo,sqrtElectorate},Symbol.toStringTag,{value:"Module"}));function isSeatHolder(et){return!Array.isArray(et)}function isCandidateTuple(et){return Array.isArray(et)}function getAccountTuple(et){return isSeatHolder(et)?[et.who,et.stake]:et}function getCandidate(et){return isCandidateTuple(et)?et[0]:et}function sortAccounts([,et],[,tt]){return tt.cmp(et)}function getConstants(et,tt){return tt?{candidacyBond:et.consts[tt].candidacyBond,desiredRunnersUp:et.consts[tt].desiredRunnersUp,desiredSeats:et.consts[tt].desiredMembers,termDuration:et.consts[tt].termDuration,votingBond:et.consts[tt].votingBond,votingBondBase:et.consts[tt].votingBondBase,votingBondFactor:et.consts[tt].votingBondFactor}:{}}function getModules(et){const[tt]=et.registry.getModuleInstances(et.runtimeVersion.specName,"council")||["council"],ot=et.query.phragmenElection?"phragmenElection":et.query.electionsPhragmen?"electionsPhragmen":et.query.elections?"elections":null;return[et.query[tt]?tt:"council",ot]}function queryAll(et,tt,ot){return et.queryMulti([et.query[tt].members,et.query[ot].candidates,et.query[ot].members,et.query[ot].runnersUp])}function queryCouncil(et,tt){return combineLatest([et.query[tt].members(),of([]),of([]),of([])])}function info$3(et,tt){return memo(et,()=>{const[ot,dt]=getModules(tt);return(dt?queryAll(tt,ot,dt):queryCouncil(tt,ot)).pipe(map$3(([ft,pt,mt,ht])=>objectSpread$3({},getConstants(tt,dt),{candidateCount:tt.registry.createType("u32",pt.length),candidates:pt.map(getCandidate),members:mt.length?mt.map(getAccountTuple).sort(sortAccounts):ft.map(bt=>[bt,tt.registry.createType("Balance")]),runnersUp:ht.map(getAccountTuple).sort(sortAccounts)})))})}const elections=Object.freeze(Object.defineProperty({__proto__:null,info:info$3},Symbol.toStringTag,{value:"Module"}));function mapResult([et,tt,ot,dt]){return tt.forEach((ft,pt)=>{const mt=ft.toString(),ht=dt[pt],bt=!ot[pt].isEmpty,yt=et[mt];(!yt||yt.hasMessage!==bt||!yt.blockCount.eq(ht))&&(et[mt]={blockCount:ht,hasMessage:bt,isOnline:bt||ht.gt(BN_ZERO)})}),et}function receivedHeartbeats(et,tt){return memo(et,()=>{var ot;return(ot=tt.query.imOnline)!=null&&ot.receivedHeartbeats?tt.derive.staking.overview().pipe(switchMap(({currentIndex:dt,validators:ft})=>combineLatest([of({}),of(ft),tt.query.imOnline.receivedHeartbeats.multi(ft.map((pt,mt)=>[dt,mt])),tt.query.imOnline.authoredBlocks.multi(ft.map(pt=>[dt,pt]))])),map$3(mapResult)):of({})})}const imOnline=Object.freeze(Object.defineProperty({__proto__:null,receivedHeartbeats},Symbol.toStringTag,{value:"Module"})),members$2=members$5("membership"),hasProposals$1=hasProposals$4("membership"),proposal$1=proposal$4("membership"),proposalCount$1=proposalCount$4("membership"),proposalHashes$1=proposalHashes$4("membership"),proposals$2=proposals$6("membership"),prime$1=prime$4("membership"),membership=Object.freeze(Object.defineProperty({__proto__:null,hasProposals:hasProposals$1,members:members$2,prime:prime$1,proposal:proposal$1,proposalCount:proposalCount$1,proposalHashes:proposalHashes$1,proposals:proposals$2},Symbol.toStringTag,{value:"Module"}));function didUpdateToBool(et,tt){return et.isSome?et.unwrap().some(ot=>ot.eq(tt)):!1}function parseActive(et,tt){const ot=tt.find(([dt])=>dt===et);if(ot&&ot[1].isSome){const[dt,ft]=ot[1].unwrap();return objectSpread$3({collatorId:dt},ft.isWithRetries?{isRetriable:!0,retries:ft.asWithRetries.toNumber()}:{isRetriable:!1,retries:0})}return null}function parseCollators(et,tt){return tt.map(ot=>{const dt=ot.find(([ft])=>ft===et);return dt?dt[1]:null})}function parse$3(et,[tt,ot,dt,ft,pt,mt,ht,bt]){return pt.isNone?null:{active:parseActive(et,tt),didUpdate:didUpdateToBool(ft,et),heads:ht,id:et,info:objectSpread$3({id:et},pt.unwrap()),pendingSwapId:mt.unwrapOr(null),relayDispatchQueue:bt,retryCollators:parseCollators(et,ot),selectedCollators:parseCollators(et,dt)}}function info$2(et,tt){return memo(et,ot=>tt.query.registrar&&tt.query.parachains?tt.queryMulti([tt.query.registrar.active,tt.query.registrar.retryQueue,tt.query.registrar.selectedThreads,tt.query.parachains.didUpdate,[tt.query.registrar.paras,ot],[tt.query.registrar.pendingSwap,ot],[tt.query.parachains.heads,ot],[tt.query.parachains.relayDispatchQueue,ot]]).pipe(map$3(dt=>parse$3(tt.registry.createType("ParaId",ot),dt))):of(null))}function parse$2([et,tt,ot,dt,ft]){return et.map((pt,mt)=>({didUpdate:didUpdateToBool(tt,pt),id:pt,info:objectSpread$3({id:pt},dt[mt].unwrapOr(null)),pendingSwapId:ft[mt].unwrapOr(null),relayDispatchQueueSize:ot[mt][0].toNumber()}))}function overview$1(et,tt){return memo(et,()=>{var ot;return(ot=tt.query.registrar)!=null&&ot.parachains&&tt.query.parachains?tt.query.registrar.parachains().pipe(switchMap(dt=>combineLatest([of(dt),tt.query.parachains.didUpdate(),tt.query.parachains.relayDispatchQueueSize.multi(dt),tt.query.registrar.paras.multi(dt),tt.query.registrar.pendingSwap.multi(dt)])),map$3(parse$2)):of([])})}const parachains=Object.freeze(Object.defineProperty({__proto__:null,info:info$2,overview:overview$1},Symbol.toStringTag,{value:"Module"}));function parse$1([et,tt,ot,dt,ft]){return{activeEra:tt,activeEraStart:ot,currentEra:dt,currentIndex:et,validatorCount:ft}}function queryStaking(et){return et.queryMulti([et.query.session.currentIndex,et.query.staking.activeEra,et.query.staking.currentEra,et.query.staking.validatorCount]).pipe(map$3(([tt,ot,dt,ft])=>{const{index:pt,start:mt}=ot.unwrapOrDefault();return parse$1([tt,pt,mt,dt.unwrapOrDefault(),ft])}))}function querySession(et){return et.query.session.currentIndex().pipe(map$3(tt=>parse$1([tt,et.registry.createType("EraIndex"),et.registry.createType("Option<Moment>"),et.registry.createType("EraIndex"),et.registry.createType("u32")])))}function empty(et){return of(parse$1([et.registry.createType("SessionIndex",1),et.registry.createType("EraIndex"),et.registry.createType("Option<Moment>"),et.registry.createType("EraIndex"),et.registry.createType("u32")]))}function indexes(et,tt){return memo(et,()=>tt.query.session?tt.query.staking?queryStaking(tt):querySession(tt):empty(tt))}function info$1(et,tt){return memo(et,()=>tt.derive.session.indexes().pipe(map$3(ot=>{var pt,mt,ht,bt;const dt=((mt=(pt=tt.consts)==null?void 0:pt.babe)==null?void 0:mt.epochDuration)||tt.registry.createType("u64",1),ft=((bt=(ht=tt.consts)==null?void 0:ht.staking)==null?void 0:bt.sessionsPerEra)||tt.registry.createType("SessionIndex",1);return objectSpread$3({eraLength:tt.registry.createType("BlockNumber",ft.mul(dt)),isEpoch:!!tt.query.babe,sessionLength:dt,sessionsPerEra:ft},ot)})))}function withProgressField(et){return(tt,ot)=>memo(tt,()=>ot.derive.session.progress().pipe(map$3(dt=>dt[et])))}function createDerive(et,tt,[ot,dt,ft,pt]){const mt=dt.mul(tt.sessionLength).iadd(ft),ht=ot.sub(mt),bt=tt.currentIndex.sub(pt).imul(tt.sessionLength).iadd(ht);return objectSpread$3({eraProgress:et.registry.createType("BlockNumber",bt),sessionProgress:et.registry.createType("BlockNumber",ht)},tt)}function queryAura(et){return et.derive.session.info().pipe(map$3(tt=>objectSpread$3({eraProgress:et.registry.createType("BlockNumber"),sessionProgress:et.registry.createType("BlockNumber")},tt)))}function queryBabe(et){return et.derive.session.info().pipe(switchMap(tt=>{var ot;return combineLatest([of(tt),(ot=et.query.staking)!=null&&ot.erasStartSessionIndex?et.queryMulti([et.query.babe.currentSlot,et.query.babe.epochIndex,et.query.babe.genesisSlot,[et.query.staking.erasStartSessionIndex,tt.activeEra]]):et.queryMulti([et.query.babe.currentSlot,et.query.babe.epochIndex,et.query.babe.genesisSlot])])}),map$3(([tt,[ot,dt,ft,pt]])=>[tt,[ot,dt,ft,pt&&pt.isSome?pt.unwrap():et.registry.createType("SessionIndex",1)]]))}function progress(et,tt){return memo(et,()=>tt.query.babe?queryBabe(tt).pipe(map$3(([ot,dt])=>createDerive(tt,ot,dt))):queryAura(tt))}const eraLength=withProgressField("eraLength"),eraProgress=withProgressField("eraProgress"),sessionProgress=withProgressField("sessionProgress"),session=Object.freeze(Object.defineProperty({__proto__:null,eraLength,eraProgress,indexes,info:info$1,progress,sessionProgress},Symbol.toStringTag,{value:"Module"}));function getPrev(et){return et.query.society.candidates().pipe(switchMap(tt=>combineLatest([of(tt),et.query.society.suspendedCandidates.multi(tt.map(({who:ot})=>ot))])),map$3(([tt,ot])=>tt.map(({kind:dt,value:ft,who:pt},mt)=>({accountId:pt,isSuspended:ot[mt].isSome,kind:dt,value:ft}))))}function getCurr(et){return et.query.society.candidates.entries().pipe(map$3(tt=>tt.filter(([,ot])=>ot.isSome).map(([{args:[ot]},dt])=>[ot,dt.unwrap()]).map(([ot,{bid:dt,kind:ft}])=>({accountId:ot,isSuspended:!1,kind:ft,value:dt}))))}function candidates(et,tt){return memo(et,()=>tt.query.society.suspendedCandidates&&tt.query.society.candidates.creator.meta.type.isPlain?getPrev(tt):getCurr(tt))}function info(et,tt){return memo(et,()=>combineLatest([tt.query.society.bids(),tt.query.society.defender?tt.query.society.defender():of(void 0),tt.query.society.founder(),tt.query.society.head(),tt.query.society.maxMembers?tt.query.society.maxMembers():of(void 0),tt.query.society.pot()]).pipe(map$3(([ot,dt,ft,pt,mt,ht])=>({bids:ot,defender:dt==null?void 0:dt.unwrapOr(void 0),founder:ft.unwrapOr(void 0),hasDefender:(dt==null?void 0:dt.isSome)&&pt.isSome&&!pt.eq(dt)||!1,head:pt.unwrapOr(void 0),maxMembers:mt,pot:ht}))))}function member(et,tt){return memo(et,ot=>tt.derive.society._members([ot]).pipe(map$3(([dt])=>dt)))}function _membersPrev(et,tt){return combineLatest([of(tt),et.query.society.payouts.multi(tt),et.query.society.strikes.multi(tt),et.query.society.defenderVotes.multi(tt),et.query.society.suspendedMembers.multi(tt),et.query.society.vouching.multi(tt)]).pipe(map$3(([ot,dt,ft,pt,mt,ht])=>ot.map((bt,yt)=>({accountId:bt,isDefenderVoter:pt[yt].isSome,isSuspended:mt[yt].isTrue,payouts:dt[yt],strikes:ft[yt],vote:pt[yt].unwrapOr(void 0),vouching:ht[yt].unwrapOr(void 0)}))))}function _membersCurr(et,tt){return combineLatest([of(tt),et.query.society.members.multi(tt),et.query.society.payouts.multi(tt),et.query.society.challengeRoundCount().pipe(switchMap(ot=>et.query.society.defenderVotes.multi(tt.map(dt=>[ot,dt])))),et.query.society.suspendedMembers.multi(tt)]).pipe(map$3(([ot,dt,ft,pt,mt])=>ot.map((ht,bt)=>dt[bt].isSome?{accountId:ht,isDefenderVoter:pt[bt].isSome,isSuspended:mt[bt].isSome,member:dt[bt].unwrap(),payouts:ft[bt].payouts}:null).filter(ht=>!!ht).map(({accountId:ht,isDefenderVoter:bt,isSuspended:yt,member:xt,payouts:gt})=>({accountId:ht,isDefenderVoter:bt,isSuspended:yt,payouts:gt,strikes:xt.strikes,vouching:xt.vouching.unwrapOr(void 0)}))))}function _members(et,tt){return memo(et,ot=>tt.query.society.members.creator.meta.type.isMap?_membersCurr(tt,ot):_membersPrev(tt,ot))}function members$1(et,tt){return memo(et,()=>tt.query.society.members.creator.meta.type.isMap?tt.query.society.members.keys().pipe(switchMap(ot=>tt.derive.society._members(ot.map(({args:[dt]})=>dt)))):tt.query.society.members().pipe(switchMap(ot=>tt.derive.society._members(ot))))}const society=Object.freeze(Object.defineProperty({__proto__:null,_members,candidates,info,member,members:members$1},Symbol.toStringTag,{value:"Module"})),QUERY_OPTS={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function groupByEra(et){return et.reduce((tt,{era:ot,value:dt})=>{const ft=ot.toString();return tt[ft]=(tt[ft]||BN_ZERO).add(dt.unwrap()),tt},{})}function calculateUnlocking(et,tt,ot){const dt=Object.entries(groupByEra(((tt==null?void 0:tt.unlocking)||[]).filter(({era:ft})=>ft.unwrap().gt(ot.activeEra)))).map(([ft,pt])=>({remainingEras:new BN(ft).isub(ot.activeEra),value:et.registry.createType("Balance",pt)}));return dt.length?dt:void 0}function redeemableSum(et,tt,ot){return et.registry.createType("Balance",((tt==null?void 0:tt.unlocking)||[]).reduce((dt,{era:ft,value:pt})=>ft.unwrap().gt(ot.currentEra)?dt:dt.iadd(pt.unwrap()),new BN(0)))}function parseResult$1(et,tt,ot,dt){return objectSpread$3({},ot,dt,{redeemable:redeemableSum(et,dt.stakingLedger,tt),unlocking:calculateUnlocking(et,dt.stakingLedger,tt)})}function accounts(et,tt){return memo(et,(ot,dt=QUERY_OPTS)=>tt.derive.session.info().pipe(switchMap(ft=>combineLatest([tt.derive.staking.keysMulti(ot),tt.derive.staking.queryMulti(ot,dt)]).pipe(map$3(([pt,mt])=>mt.map((ht,bt)=>parseResult$1(tt,ft,pt[bt],ht)))))))}const account=firstMemo((et,tt,ot)=>et.derive.staking.accounts([tt],ot));function currentPoints(et,tt){return memo(et,()=>tt.derive.session.indexes().pipe(switchMap(({activeEra:ot})=>tt.query.staking.erasRewardPoints(ot))))}const DEFAULT_FLAGS$1={withController:!0,withExposure:!0,withPrefs:!0};function combineAccounts(et,tt){return arrayFlatten([et,tt.filter(ot=>!et.find(dt=>dt.eq(ot)))])}function electedInfo(et,tt){return memo(et,(ot=DEFAULT_FLAGS$1,dt=0)=>tt.derive.staking.validators().pipe(switchMap(({nextElected:ft,validators:pt})=>tt.derive.staking.queryMulti(combineAccounts(ft,pt),ot,dt).pipe(map$3(mt=>({info:mt,nextElected:ft,validators:pt}))))))}function getEraCache(et,tt,ot){const dt=`${et}-${tt.toString()}`;return[dt,ot?void 0:deriveCache.get(dt)]}function getEraMultiCache(et,tt,ot){return ot?[]:tt.map(ft=>deriveCache.get(`${et}-${ft.toString()}`)).filter(ft=>!!ft)}function setEraCache(et,tt,ot){return!tt&&deriveCache.set(et,ot),ot}function setEraMultiCache(et,tt,ot){return!tt&&ot.forEach(dt=>deriveCache.set(`${et}-${dt.era.toString()}`,dt)),ot}function filterCachedEras(et,tt,ot){return et.map(dt=>tt.find(({era:ft})=>dt.eq(ft))||ot.find(({era:ft})=>dt.eq(ft))).filter(dt=>!!dt)}const ERA_CHUNK_SIZE=14;function chunkEras(et,tt){const ot=arrayChunk(et,ERA_CHUNK_SIZE);let dt=0;const ft=new BehaviorSubject(ot[dt]);return ft.pipe(switchMap(tt),tap(()=>{nextTick(()=>{dt++,dt===ot.length?ft.complete():ft.next(ot[dt])})}),toArray(),map$3(arrayFlatten))}function filterEras(et,tt){return et.filter(ot=>!tt.some(({era:dt})=>ot.eq(dt)))}function erasHistoricApply(et){return(tt,ot)=>memo(tt,(dt=!1)=>ot.derive.staking.erasHistoric(dt).pipe(switchMap(ft=>ot.derive.staking[et](ft,dt))))}function erasHistoricApplyAccount(et){return(tt,ot)=>memo(tt,(dt,ft=!1,pt)=>ot.derive.staking.erasHistoric(ft).pipe(switchMap(mt=>ot.derive.staking[et](dt,mt,ft,pt||0))))}function singleEra(et){return(tt,ot)=>memo(tt,dt=>ot.derive.staking[et](dt,!0))}function combineEras(et){return(tt,ot)=>memo(tt,(dt,ft)=>dt.length?chunkEras(dt,pt=>combineLatest(pt.map(mt=>ot.derive.staking[et](mt,ft)))):of([]))}const CACHE_KEY$4="eraExposure";function mapStakersClipped(et,tt){const ot={},dt={};return tt.forEach(([ft,pt])=>{const mt=ft.args[1].toString();dt[mt]=pt,pt.others.forEach(({who:ht},bt)=>{const yt=ht.toString();ot[yt]=ot[yt]||[],ot[yt].push({validatorId:mt,validatorIndex:bt})})}),{era:et,nominators:ot,validators:dt}}function mapStakersPaged(et,tt){const ot={},dt={};return tt.forEach(([ft,pt])=>{if(pt.isSome){const mt=ft.args[1].toString(),ht=pt.unwrap();dt[mt]=ht,ht.others.forEach(({who:bt},yt)=>{const xt=bt.toString();ot[xt]=ot[xt]||[],ot[xt].push({validatorId:mt,validatorIndex:yt})})}}),{era:et,nominators:ot,validators:dt}}function _eraExposure(et,tt){return memo(et,(ot,dt=!1)=>{const[ft,pt]=getEraCache(CACHE_KEY$4,ot,dt);return pt?of(pt):tt.query.staking.erasStakersPaged?tt.query.staking.erasStakersPaged.entries(ot).pipe(map$3(mt=>setEraCache(ft,dt,mapStakersPaged(ot,mt)))):tt.query.staking.erasStakersClipped.entries(ot).pipe(map$3(mt=>setEraCache(ft,dt,mapStakersClipped(ot,mt))))})}const eraExposure=singleEra("_eraExposure"),_erasExposure=combineEras("_eraExposure"),erasExposure=erasHistoricApply("_erasExposure");function erasHistoric(et,tt){return memo(et,ot=>combineLatest([tt.query.staking.activeEra(),tt.consts.staking.historyDepth?of(tt.consts.staking.historyDepth):tt.query.staking.historyDepth()]).pipe(map$3(([dt,ft])=>{const pt=[],mt=ft.toNumber(),ht=dt.unwrapOrDefault().index;let bt=ht;for(;bt.gte(BN_ZERO)&&pt.length<mt;)(bt!==ht||ot===!0)&&pt.push(tt.registry.createType("EraIndex",bt)),bt=bt.sub(BN_ONE$1);return pt.reverse()})))}const CACHE_KEY$3="eraPoints";function mapValidators({individual:et}){return[...et.entries()].filter(([,tt])=>tt.gt(BN_ZERO)).reduce((tt,[ot,dt])=>(tt[ot.toString()]=dt,tt),{})}function mapPoints(et,tt){return et.map((ot,dt)=>({era:ot,eraPoints:tt[dt].total,validators:mapValidators(tt[dt])}))}function _erasPoints(et,tt){return memo(et,(ot,dt)=>{if(!ot.length)return of([]);const ft=getEraMultiCache(CACHE_KEY$3,ot,dt),pt=filterEras(ot,ft);return pt.length?tt.query.staking.erasRewardPoints.multi(pt).pipe(map$3(mt=>filterCachedEras(ot,ft,setEraMultiCache(CACHE_KEY$3,dt,mapPoints(pt,mt))))):of(ft)})}const erasPoints=erasHistoricApply("_erasPoints"),CACHE_KEY$2="eraPrefs";function mapPrefs(et,tt){const ot={};return tt.forEach(([dt,ft])=>{ot[dt.args[1].toString()]=ft}),{era:et,validators:ot}}function _eraPrefs(et,tt){return memo(et,(ot,dt)=>{const[ft,pt]=getEraCache(CACHE_KEY$2,ot,dt);return pt?of(pt):tt.query.staking.erasValidatorPrefs.entries(ot).pipe(map$3(mt=>setEraCache(ft,dt,mapPrefs(ot,mt))))})}const eraPrefs=singleEra("_eraPrefs"),_erasPrefs=combineEras("_eraPrefs"),erasPrefs=erasHistoricApply("_erasPrefs"),CACHE_KEY$1="eraRewards";function mapRewards(et,tt){return et.map((ot,dt)=>({era:ot,eraReward:tt[dt].unwrapOrDefault()}))}function _erasRewards(et,tt){return memo(et,(ot,dt)=>{if(!ot.length)return of([]);const ft=getEraMultiCache(CACHE_KEY$1,ot,dt),pt=filterEras(ot,ft);return pt.length?tt.query.staking.erasValidatorReward.multi(pt).pipe(map$3(mt=>filterCachedEras(ot,ft,setEraMultiCache(CACHE_KEY$1,dt,mapRewards(pt,mt))))):of(ft)})}const erasRewards=erasHistoricApply("_erasRewards"),CACHE_KEY="eraSlashes";function mapSlashes(et,tt,ot){const dt={},ft={};return tt.forEach(([pt,mt])=>{dt[pt.args[1].toString()]=mt.unwrap()}),ot.forEach(([pt,mt])=>{ft[pt.args[1].toString()]=mt.unwrapOrDefault()[1]}),{era:et,nominators:dt,validators:ft}}function _eraSlashes(et,tt){return memo(et,(ot,dt)=>{const[ft,pt]=getEraCache(CACHE_KEY,ot,dt);return pt?of(pt):combineLatest([tt.query.staking.nominatorSlashInEra.entries(ot),tt.query.staking.validatorSlashInEra.entries(ot)]).pipe(map$3(([mt,ht])=>setEraCache(ft,dt,mapSlashes(ot,mt,ht))))})}const eraSlashes=singleEra("_eraSlashes"),_erasSlashes=combineEras("_eraSlashes"),erasSlashes=erasHistoricApply("_erasSlashes");function extractsIds(et,tt,ot){const dt=(tt.find(([pt])=>pt.eq(et))||[void 0,[]])[1],ft=ot.unwrapOr([]);return{nextSessionIds:Array.isArray(ft)?ft:[...ft.values()],sessionIds:Array.isArray(dt)?dt:[...dt.values()]}}const keys=firstMemo((et,tt)=>et.derive.staking.keysMulti([tt]));function keysMulti(et,tt){return memo(et,ot=>ot.length?tt.query.session.queuedKeys().pipe(switchMap(dt=>{var ft;return combineLatest([of(dt),(ft=tt.consts.session)!=null&&ft.dedupKeyPrefix?tt.query.session.nextKeys.multi(ot.map(pt=>[tt.consts.session.dedupKeyPrefix,pt])):combineLatest(ot.map(pt=>tt.query.session.nextKeys(pt)))])}),map$3(([dt,ft])=>ot.map((pt,mt)=>extractsIds(pt,dt,ft[mt])))):of([]))}function overview(et,tt){return memo(et,()=>combineLatest([tt.derive.session.indexes(),tt.derive.staking.validators()]).pipe(map$3(([ot,{nextElected:dt,validators:ft}])=>objectSpread$3({},ot,{nextElected:dt,validators:ft}))))}function _ownExposures(et,tt){return memo(et,(ot,dt,ft,pt)=>{const mt=tt.registry.createType("Exposure"),ht=tt.registry.createType("Option<Null>"),bt=tt.registry.createType("Option<Null>");return dt.length?combineLatest([tt.query.staking.erasStakersClipped?combineLatest(dt.map(yt=>tt.query.staking.erasStakersClipped(yt,ot))):of(dt.map(yt=>mt)),tt.query.staking.erasStakers?combineLatest(dt.map(yt=>tt.query.staking.erasStakers(yt,ot))):of(dt.map(yt=>mt)),tt.query.staking.erasStakersPaged?combineLatest(dt.map(yt=>tt.query.staking.erasStakersPaged(yt,ot,pt))):of(dt.map(yt=>ht)),tt.query.staking.erasStakersOverview?combineLatest(dt.map(yt=>tt.query.staking.erasStakersOverview(yt,ot))):of(dt.map(yt=>bt))]).pipe(map$3(([yt,xt,gt,wt])=>dt.map((Pt,St)=>({clipped:yt[St],era:Pt,exposure:xt[St],exposureMeta:wt[St],exposurePaged:gt[St]})))):of([])})}const ownExposure=firstMemo((et,tt,ot,dt)=>et.derive.staking._ownExposures(tt,[ot],!0,dt||0)),ownExposures=erasHistoricApplyAccount("_ownExposures");function _ownSlashes(et,tt){return memo(et,(ot,dt,ft)=>dt.length?combineLatest([combineLatest(dt.map(pt=>tt.query.staking.validatorSlashInEra(pt,ot))),combineLatest(dt.map(pt=>tt.query.staking.nominatorSlashInEra(pt,ot)))]).pipe(map$3(([pt,mt])=>dt.map((ht,bt)=>({era:ht,total:pt[bt].isSome?pt[bt].unwrap()[1]:mt[bt].unwrapOrDefault()})))):of([]))}const ownSlash=firstMemo((et,tt,ot)=>et.derive.staking._ownSlashes(tt,[ot],!0)),ownSlashes=erasHistoricApplyAccount("_ownSlashes");function rewardDestinationCompat(et){return typeof et.isSome=="boolean"?et.unwrapOr(null):et}function filterClaimedRewards(et,tt){return et.registry.createType("Vec<u32>",tt.filter(ot=>ot!==-1))}function filterRewards$1(et,tt,ot,dt){const ft={},pt={},mt=et.map(ht=>ht.toString());return ot.forEach(([ht,bt])=>{const yt=ht.args[1].toString(),xt=ht.args[0].toNumber();mt.includes(yt)&&(ft[yt]||(ft[yt]=new Map),ft[yt].set(xt,bt.toArray()))}),dt.forEach(([ht,bt])=>{const yt=ht.args[1].toString(),xt=ht.args[0].toNumber();mt.includes(yt)&&bt.isSome&&(pt[yt]||(pt[yt]=new Map),pt[yt].set(xt,bt.unwrap().pageCount))}),et.map(ht=>{const bt=ft[ht.toString()],yt=pt[ht.toString()];return tt.map(xt=>{if(bt&&bt.has(xt)&&yt&&yt.has(xt)){const gt=bt.get(xt),wt=yt.get(xt);return gt.length===wt.toNumber()?xt:-1}return-1})})}function parseDetails(et,tt,ot,dt,ft,pt,mt,ht,bt,yt,xt){return{accountId:tt,claimedRewardsEras:filterClaimedRewards(et,yt),controllerId:(ot==null?void 0:ot.unwrapOr(null))||null,exposureEraStakers:xt,exposureMeta:bt,exposurePaged:mt,nominators:dt.isSome?dt.unwrap().targets:[],rewardDestination:rewardDestinationCompat(ft),stakingLedger:ht.unwrapOrDefault(),stashId:tt,validatorPrefs:pt}}function getLedgers(et,tt,{withLedger:ot=!1}){const dt=tt.filter(pt=>ot&&!!pt&&pt.isSome).map(pt=>pt.unwrap()),ft=et.registry.createType("Option<StakingLedger>");return(dt.length?combineLatest(dt.map(pt=>et.query.staking.ledger(pt))):of([])).pipe(map$3(pt=>{let mt=-1;return tt.map(ht=>ht&&ht.isSome&&pt[++mt]||ft)}))}function getStashInfo(et,tt,ot,{withClaimedRewardsEras:dt,withController:ft,withDestination:pt,withExposure:mt,withExposureErasStakersLegacy:ht,withExposureMeta:bt,withLedger:yt,withNominations:xt,withPrefs:gt},wt){const Pt=et.registry.createType("Option<Nominations>"),St=et.registry.createType("RewardDestination"),Et=et.registry.createType("Exposure"),Lt=et.registry.createType("ValidatorPrefs"),It=et.registry.createType("Option<Null>"),kt=et.registry.createType("Option<Null>"),Nt=[-1],Ut=Number(et.consts.staking.historyDepth.toNumber()),Ft=new Array(Ut).fill(0).map((jt,Xt)=>Xt===0?ot.toNumber()-1:ot.toNumber()-Xt-1);return combineLatest([ft||yt?combineLatest(tt.map(jt=>et.query.staking.bonded(jt))):of(tt.map(()=>null)),xt?combineLatest(tt.map(jt=>et.query.staking.nominators(jt))):of(tt.map(()=>Pt)),pt?combineLatest(tt.map(jt=>et.query.staking.payee(jt))):of(tt.map(()=>St)),gt?combineLatest(tt.map(jt=>et.query.staking.validators(jt))):of(tt.map(()=>Lt)),mt&&et.query.staking.erasStakersPaged?combineLatest(tt.map(jt=>et.query.staking.erasStakersPaged(ot,jt,wt))):of(tt.map(()=>It)),bt&&et.query.staking.erasStakersOverview?combineLatest(tt.map(jt=>et.query.staking.erasStakersOverview(ot,jt))):of(tt.map(()=>kt)),dt&&et.query.staking.claimedRewards?combineLatest([et.query.staking.claimedRewards.entries(),et.query.staking.erasStakersOverview.entries()]).pipe(map$3(([jt,Xt])=>filterRewards$1(tt,Ft,jt,Xt))):of(tt.map(()=>Nt)),ht&&et.query.staking.erasStakers?combineLatest(tt.map(jt=>et.query.staking.erasStakers(ot,jt))):of(tt.map(()=>Et))])}function getBatch(et,tt,ot,dt,ft){return getStashInfo(et,ot,tt,dt,ft).pipe(switchMap(([pt,mt,ht,bt,yt,xt,gt,wt])=>getLedgers(et,pt,dt).pipe(map$3(Pt=>ot.map((St,Et)=>parseDetails(et,St,pt[Et],mt[Et],ht[Et],bt[Et],yt[Et],Pt[Et],xt[Et],gt[Et],wt[Et]))))))}const query=firstMemo((et,tt,ot,dt)=>et.derive.staking.queryMulti([tt],ot,dt));function queryMulti(et,tt){return memo(et,(ot,dt,ft)=>tt.derive.session.indexes().pipe(switchMap(({activeEra:pt})=>{const mt=ot.map(bt=>tt.registry.createType("AccountId",bt)),ht=ft||0;return mt.length?getBatch(tt,pt,mt,dt,ht):of([])})))}function _stakerExposures(et,tt){return memo(et,(ot,dt,ft=!1)=>{const pt=ot.map(mt=>tt.registry.createType("AccountId",mt).toString());return tt.derive.staking._erasExposure(dt,ft).pipe(map$3(mt=>pt.map(ht=>mt.map(({era:bt,nominators:yt,validators:xt})=>{const gt=!!xt[ht],wt={},Pt=yt[ht]||[];return gt?wt[ht]=xt[ht]:Pt&&Pt.forEach(({validatorId:St})=>{wt[St]=xt[St]}),{era:bt,isEmpty:!Object.keys(wt).length,isValidator:gt,nominating:Pt,validators:wt}}))))})}function stakerExposures(et,tt){return memo(et,(ot,dt=!1)=>tt.derive.staking.erasHistoric(dt).pipe(switchMap(ft=>tt.derive.staking._stakerExposures(ot,ft,dt))))}const stakerExposure=firstMemo((et,tt,ot)=>et.derive.staking.stakerExposures([tt],ot));function _stakerPoints(et,tt){return memo(et,(ot,dt,ft)=>{const pt=tt.registry.createType("AccountId",ot).toString();return tt.derive.staking._erasPoints(dt,ft).pipe(map$3(mt=>mt.map(({era:ht,eraPoints:bt,validators:yt})=>({era:ht,eraPoints:bt,points:yt[pt]||tt.registry.createType("RewardPoint")}))))})}const stakerPoints=erasHistoricApplyAccount("_stakerPoints");function _stakerPrefs(et,tt){return memo(et,(ot,dt,ft)=>tt.query.staking.erasValidatorPrefs.multi(dt.map(pt=>[pt,ot])).pipe(map$3(pt=>pt.map((mt,ht)=>({era:dt[ht],validatorPrefs:mt})))))}const stakerPrefs=erasHistoricApplyAccount("_stakerPrefs");function extractCompatRewards(et,tt){const ot=tt?(tt.legacyClaimedRewards||tt.claimedRewards).toArray():[];return et.toArray().concat(ot)}function parseRewards(et,tt,[ot,dt,ft],pt,mt){return pt.map(({era:ht,isEmpty:bt,isValidator:yt,nominating:xt,validators:gt})=>{const{eraPoints:wt,validators:Pt}=ot.find(kt=>kt.era.eq(ht))||{eraPoints:BN_ZERO,validators:{}},{eraReward:St}=ft.find(kt=>kt.era.eq(ht))||{eraReward:et.registry.createType("Balance")},{validators:Et}=dt.find(kt=>kt.era.eq(ht))||{validators:{}},Lt={},It=tt.toString();return Object.entries(gt).forEach(([kt,Nt])=>{var qt,Zt,Gt;const Ut=Pt[kt]||BN_ZERO,Ft=((qt=Et[kt])==null?void 0:qt.commission.unwrap())||BN_ZERO,jt=Nt.total?(Zt=Nt.total)==null?void 0:Zt.unwrap():Nt.pageTotal?(Gt=Nt.pageTotal)==null?void 0:Gt.unwrap():BN_ZERO;let Xt=BN_ZERO,Wt;if(!(jt.isZero()||Ut.isZero()||wt.isZero())){Xt=St.mul(Ut).div(wt);const Qt=Ft.mul(Xt).div(BN_BILLION$1);let Ht;if(kt===It)if(Nt.own)Ht=Nt.own.unwrap();else{const vt=Nt.others.find(({who:Vt})=>Vt.eq(kt));Ht=vt?vt.value.unwrap():BN_ZERO}else{const vt=Nt.others.find(({who:Vt})=>Vt.eq(It));Ht=vt?vt.value.unwrap():BN_ZERO}Wt=Xt.sub(Qt).imul(Ht).div(jt).iadd(kt===It?Qt:BN_ZERO)}Lt[kt]={total:et.registry.createType("Balance",Xt),value:et.registry.createType("Balance",Wt)}}),{era:ht,eraReward:St,isClaimed:mt.some(kt=>kt.eq(ht)),isEmpty:bt,isValidator:yt,nominating:xt,validators:Lt}})}function allUniqValidators(et){return et.reduce(([tt,ot],dt)=>{const ft=[];return ot.push(ft),dt.forEach(({validators:pt})=>Object.keys(pt).forEach(mt=>{ft.includes(mt)||(ft.push(mt),tt.includes(mt)||tt.push(mt))})),[tt,ot]},[[],[]])}function removeClaimed(et,tt,ot,dt){const ft=[];Object.keys(ot.validators).forEach(pt=>{const mt=et.indexOf(pt);if(mt!==-1){const ht=tt[mt].stakingLedger;extractCompatRewards(dt,ht).some(bt=>ot.era.eq(bt))&&ft.push(pt)}}),ft.forEach(pt=>{delete ot.validators[pt]})}function filterRewards(et,tt,{claimedRewardsEras:ot,rewards:dt,stakingLedger:ft}){const pt=et.filter(bt=>!extractCompatRewards(ot,ft).some(yt=>yt.eq(bt))),mt=tt.map(([bt])=>bt),ht=tt.map(([,bt])=>bt);return dt.filter(({isEmpty:bt})=>!bt).filter(bt=>pt.some(yt=>bt.era.eq(yt))?(removeClaimed(mt,ht,bt,ot),!0):!1).filter(({validators:bt})=>Object.keys(bt).length!==0).map(bt=>{let yt=bt.isClaimed;const xt=Object.keys(bt.validators);if(!bt.isClaimed&&xt.length)for(const gt of xt){const wt=ht.find(Pt=>Pt.accountId.toString()===gt);if(wt){yt=wt.claimedRewardsEras.toArray().some(Pt=>Pt.eq(bt.era));break}}return objectSpread$3({},bt,{isClaimed:yt,nominators:bt.nominating.filter(gt=>bt.validators[gt.validatorId])})})}function _stakerRewardsEras(et,tt){return memo(et,(ot,dt=!1)=>combineLatest([tt.derive.staking._erasPoints(ot,dt),tt.derive.staking._erasPrefs(ot,dt),tt.derive.staking._erasRewards(ot,dt)]))}function _stakerRewards(et,tt){return memo(et,(ot,dt,ft=!1)=>{const pt=dt.map(mt=>typeof mt=="number"||typeof mt=="string"?tt.registry.createType("u32",mt):mt);return combineLatest([tt.derive.staking.queryMulti(ot,{withClaimedRewardsEras:!0,withLedger:!0}),tt.derive.staking._stakerExposures(ot,pt,ft),tt.derive.staking._stakerRewardsEras(pt,ft)]).pipe(switchMap(([mt,ht,bt])=>{const yt=mt.map(({claimedRewardsEras:wt,stakingLedger:Pt,stashId:St},Et)=>!St||!Pt&&!wt?[]:parseRewards(tt,St,bt,ht[Et],wt));if(ft)return of(yt);const[xt,gt]=allUniqValidators(yt);return tt.derive.staking.queryMulti(xt,{withClaimedRewardsEras:!0,withLedger:!0}).pipe(map$3(wt=>mt.map(({claimedRewardsEras:Pt,stakingLedger:St},Et)=>filterRewards(dt,gt[Et].map(Lt=>[Lt,wt.find(It=>It.accountId.eq(Lt))]).filter(Lt=>!!Lt[1]),{claimedRewardsEras:Pt,rewards:yt[Et],stakingLedger:St}))))}))})}const stakerRewards=firstMemo((et,tt,ot)=>et.derive.staking.erasHistoric(ot).pipe(switchMap(dt=>et.derive.staking._stakerRewards([tt],dt,ot))));function stakerRewardsMultiEras(et,tt){return memo(et,(ot,dt)=>ot.length&&dt.length?tt.derive.staking._stakerRewards(ot,dt,!1):of([]))}function stakerRewardsMulti(et,tt){return memo(et,(ot,dt=!1)=>tt.derive.staking.erasHistoric(dt).pipe(switchMap(ft=>tt.derive.staking.stakerRewardsMultiEras(ot,ft))))}function _stakerSlashes(et,tt){return memo(et,(ot,dt,ft)=>{const pt=tt.registry.createType("AccountId",ot).toString();return tt.derive.staking._erasSlashes(dt,ft).pipe(map$3(mt=>mt.map(({era:ht,nominators:bt,validators:yt})=>({era:ht,total:bt[pt]||yt[pt]||tt.registry.createType("Balance")}))))})}const stakerSlashes=erasHistoricApplyAccount("_stakerSlashes");function onBondedEvent(et){let tt=Date.now();return et.query.system.events().pipe(map$3(ot=>(tt=ot.filter(({event:dt,phase:ft})=>{try{return ft.isApplyExtrinsic&&dt.section==="staking"&&dt.method==="Bonded"}catch{return!1}})?Date.now():tt,tt)),startWith(tt),drr({skipTimeout:!0}))}function stashes(et,tt){return memo(et,()=>onBondedEvent(tt).pipe(switchMap(()=>tt.query.staking.validators.keys()),map$3(ot=>ot.map(({args:[dt]})=>dt).filter(dt=>dt))))}function nextElected(et,tt){return memo(et,()=>tt.query.staking.erasStakersOverview?tt.derive.session.indexes().pipe(switchMap(({currentEra:ot})=>tt.query.staking.erasStakersOverview.keys(ot)),map$3(ot=>[...new Set(ot.map(({args:[,dt]})=>dt.toString()))].map(dt=>tt.registry.createType("AccountId",dt)))):tt.query.staking.erasStakers?tt.derive.session.indexes().pipe(switchMap(({currentEra:ot})=>tt.query.staking.erasStakers.keys(ot)),map$3(ot=>[...new Set(ot.map(({args:[,dt]})=>dt.toString()))].map(dt=>tt.registry.createType("AccountId",dt)))):tt.query.staking.currentElected())}function validators(et,tt){return memo(et,()=>combineLatest([tt.query.session?tt.query.session.validators():of([]),tt.query.staking?tt.derive.staking.nextElected():of([])]).pipe(map$3(([ot,dt])=>({nextElected:dt.length?dt:ot,validators:ot}))))}const DEFAULT_FLAGS={withController:!0,withPrefs:!0};function waitingInfo(et,tt){return memo(et,(ot=DEFAULT_FLAGS)=>combineLatest([tt.derive.staking.validators(),tt.derive.staking.stashes()]).pipe(switchMap(([{nextElected:dt},ft])=>{const pt=dt.map(ht=>ht.toString()),mt=ft.filter(ht=>!pt.includes(ht.toString()));return tt.derive.staking.queryMulti(mt,ot).pipe(map$3(ht=>({info:ht,waiting:mt})))})))}const staking=Object.freeze(Object.defineProperty({__proto__:null,_eraExposure,_eraPrefs,_eraSlashes,_erasExposure,_erasPoints,_erasPrefs,_erasRewards,_erasSlashes,_ownExposures,_ownSlashes,_stakerExposures,_stakerPoints,_stakerPrefs,_stakerRewards,_stakerRewardsEras,_stakerSlashes,account,accounts,currentPoints,electedInfo,eraExposure,eraPrefs,eraSlashes,erasExposure,erasHistoric,erasPoints,erasPrefs,erasRewards,erasSlashes,keys,keysMulti,nextElected,overview,ownExposure,ownExposures,ownSlash,ownSlashes,query,queryMulti,stakerExposure,stakerExposures,stakerPoints,stakerPrefs,stakerRewards,stakerRewardsMulti,stakerRewardsMultiEras,stakerSlashes,stashes,validators,waitingInfo},Symbol.toStringTag,{value:"Module"})),members=members$5("technicalCommittee"),hasProposals=hasProposals$4("technicalCommittee"),proposal=proposal$4("technicalCommittee"),proposalCount=proposalCount$4("technicalCommittee"),proposalHashes=proposalHashes$4("technicalCommittee"),proposals$1=proposals$6("technicalCommittee"),prime=prime$4("technicalCommittee"),technicalCommittee=Object.freeze(Object.defineProperty({__proto__:null,hasProposals,members,prime,proposal,proposalCount,proposalHashes,proposals:proposals$1},Symbol.toStringTag,{value:"Module"}));function parseResult(et,{allIds:tt,allProposals:ot,approvalIds:dt,councilProposals:ft,proposalCount:pt}){const mt=[],ht=[],bt=ft.filter(({proposal:yt})=>yt&&(et.tx.treasury.approveProposal&&et.tx.treasury.approveProposal.is(yt)||et.tx.treasury.rejectProposal&&et.tx.treasury.rejectProposal.is(yt)));return tt.forEach((yt,xt)=>{if(ot[xt].isSome){const gt=bt.filter(({proposal:St})=>St&&yt.eq(St.args[0])).sort((St,Et)=>St.proposal&&Et.proposal?St.proposal.method.localeCompare(Et.proposal.method):St.proposal?-1:1),wt=dt.some(St=>St.eq(yt)),Pt={council:gt,id:yt,proposal:ot[xt].unwrap()};wt?mt.push(Pt):ht.push(Pt)}}),{approvals:mt,proposalCount:pt,proposals:ht}}function retrieveProposals(et,tt,ot){const dt=[],ft=tt.toNumber();for(let mt=0;mt<ft;mt++)ot.some(ht=>ht.eqn(mt))||dt.push(et.registry.createType("ProposalIndex",mt));const pt=[...dt,...ot];return combineLatest([et.query.treasury.proposals.multi(pt),et.derive.council?et.derive.council.proposals():of([])]).pipe(map$3(([mt,ht])=>parseResult(et,{allIds:pt,allProposals:mt,approvalIds:ot,councilProposals:ht,proposalCount:tt})))}function proposals(et,tt){return memo(et,()=>tt.query.treasury?combineLatest([tt.query.treasury.proposalCount(),tt.query.treasury.approvals()]).pipe(switchMap(([ot,dt])=>retrieveProposals(tt,ot,dt))):of({approvals:[],proposalCount:tt.registry.createType("ProposalIndex"),proposals:[]}))}const treasury=Object.freeze(Object.defineProperty({__proto__:null,proposals},Symbol.toStringTag,{value:"Module"}));function events(et,tt){return memo(et,ot=>combineLatest([tt.rpc.chain.getBlock(ot),tt.queryAt(ot).pipe(switchMap(dt=>dt.system.events()))]).pipe(map$3(([dt,ft])=>({block:dt,events:ft}))))}function extrinsicInfo(et,tt){return memo(et,(ot,dt)=>tt.derive.tx.events(ot).pipe(map$3(({block:ft,events:pt})=>{const mt=ft.block.extrinsics.findIndex(bt=>bt.hash.toString()===dt);if(mt===-1)return null;const ht=pt.filter(({phase:bt})=>bt.isApplyExtrinsic&&bt.asApplyExtrinsic.eq(mt));return{blockHash:ft.hash.toHex(),blockNumber:ft.block.header.number.toNumber(),events:ht,extrinsic:ft.block.extrinsics[mt],success:ht.findIndex(bt=>bt.event.method==="ExtrinsicSuccess")!==-1}})))}function accountExtrinsics(et,tt){return memo(et,(ot,dt)=>tt.derive.tx.events(ot).pipe(map$3(({block:ft,events:pt})=>{const mt=[];return{blockHash:ft.hash.toHex(),blockNumber:ft.block.header.number.toNumber(),extrinsics:ft.block.extrinsics.filter((ht,bt)=>ht.signer.toString()===dt?(mt.push(bt),!0):!1).map((ht,bt)=>{const yt=pt.filter(({phase:xt})=>xt.isApplyExtrinsic&&xt.asApplyExtrinsic.eq(mt[bt]));return{events:yt,extrinsic:ht,success:yt.findIndex(xt=>xt.event.method==="ExtrinsicSuccess")!==-1}})}})))}const FALLBACK_MAX_HASH_COUNT=250,FALLBACK_PERIOD=new BN(6*1e3),MAX_FINALITY_LAG=new BN(5),MORTAL_PERIOD=new BN(5*60*1e3);function latestNonce(et,tt){return et.derive.balances.account(tt).pipe(map$3(({accountNonce:ot})=>ot))}function nextNonce(et,tt){var ot;return et.call.accountNonceApi?et.call.accountNonceApi.accountNonce(tt):(ot=et.rpc.system)!=null&&ot.accountNextIndex?et.rpc.system.accountNextIndex(tt):latestNonce(et,tt)}function signingHeader(et){return combineLatest([et.rpc.chain.getHeader().pipe(switchMap(tt=>tt.parentHash.isEmpty?of(tt):et.rpc.chain.getHeader(tt.parentHash).pipe(catchError(()=>of(tt))))),et.rpc.chain.getFinalizedHead().pipe(switchMap(tt=>et.rpc.chain.getHeader(tt).pipe(catchError(()=>of(null)))))]).pipe(map$3(([tt,ot])=>!ot||unwrapBlockNumber(tt).sub(unwrapBlockNumber(ot)).gt(MAX_FINALITY_LAG)?tt:ot))}function babeOrAuraPeriod(et){var ot,dt,ft;const tt=((ot=et.consts.babe)==null?void 0:ot.expectedBlockTime)||((dt=et.consts.aura)==null?void 0:dt.slotDuration)||((ft=et.consts.timestamp)==null?void 0:ft.minimumPeriod.muln(2));return tt&&tt.isZero&&!tt.isZero()?tt:void 0}function signingInfo(et,tt){return(ot,dt,ft)=>combineLatest([isUndefined$4(dt)?latestNonce(tt,ot):dt===-1?nextNonce(tt,ot):of(tt.registry.createType("Index",dt)),isUndefined$4(ft)||isNumber$2(ft)&&ft>0?signingHeader(tt):of(null)]).pipe(map$3(([pt,mt])=>{var ht,bt;return{header:mt,mortalLength:Math.min(((bt=(ht=tt.consts.system)==null?void 0:ht.blockHashCount)==null?void 0:bt.toNumber())||FALLBACK_MAX_HASH_COUNT,MORTAL_PERIOD.div(babeOrAuraPeriod(tt)||FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),nonce:pt}}))}const tx=Object.freeze(Object.defineProperty({__proto__:null,accountExtrinsics,events,extrinsicInfo,signingInfo},Symbol.toStringTag,{value:"Module"})),derive={accounts:accounts$1,alliance,bagsList,balances,bounties,chain:chain$1,contracts,council,crowdloan,democracy,elections,imOnline,membership,parachains,session,society,staking,technicalCommittee,treasury,tx},checks={allianceMotion:{instances:["allianceMotion"],methods:[]},bagsList:{instances:["voterBagsList","voterList","bagsList"],methods:[],withDetect:!0},contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function getModuleInstances(et,tt,ot){return et.registry.getModuleInstances(tt,ot)||[]}function injectFunctions(et,tt,ot){const dt={},ft=Object.keys(ot),pt=Object.keys(tt.query),mt=tt.runtimeVersion.specName,ht=Pt=>pt.includes(Pt),bt=Pt=>getModuleInstances(tt,mt,Pt).some(ht),yt=Pt=>St=>Pt.some(Et=>pt.includes(Et)&&tt.query[Et][St]),xt=Pt=>Object.keys(ot[Pt]),gt=(Pt,St)=>ot[Pt][St](et,tt),wt=Pt=>!checks[Pt]||checks[Pt].instances.some(ht)&&(!checks[Pt].methods.length||checks[Pt].methods.every(yt(checks[Pt].instances)))||checks[Pt].withDetect&&checks[Pt].instances.some(bt);for(let Pt=0,St=ft.length;Pt<St;Pt++){const Et=ft[Pt];wt(Et)&&lazyDeriveSection(dt,Et,xt,gt)}return dt}function getAvailableDerives(et,tt,ot={}){return{...injectFunctions(et,tt,derive),...injectFunctions(et,tt,ot)}}function decorateDeriveSections(et,tt){const ot=mt=>Object.keys(tt[mt]),dt=(mt,ht)=>et(tt[mt][ht]),ft={},pt=Object.keys(tt);for(let mt=0,ht=pt.length;mt<ht;mt++)lazyDeriveSection(ft,pt[mt],ot,dt);return ft}const recordIdentity=et=>et;function filterAndApply(et,tt,ot,dt){return et.filter(({event:ft})=>tt===ft.section&&ot.includes(ft.method)).map(ft=>dt(ft))}function getDispatchError({event:{data:[et]}}){return et}function getDispatchInfo({event:{data:et,method:tt}}){return tt==="ExtrinsicSuccess"?et[0]:et[1]}function extractError(et=[]){return filterAndApply(et,"system",["ExtrinsicFailed"],getDispatchError)[0]}function extractInfo(et=[]){return filterAndApply(et,"system",["ExtrinsicFailed","ExtrinsicSuccess"],getDispatchInfo)[0]}class SubmittableResult{constructor({blockNumber:tt,dispatchError:ot,dispatchInfo:dt,events:ft,internalError:pt,status:mt,txHash:ht,txIndex:bt}){Ot(this,"dispatchError");Ot(this,"dispatchInfo");Ot(this,"internalError");Ot(this,"events");Ot(this,"status");Ot(this,"txHash");Ot(this,"txIndex");Ot(this,"blockNumber");this.dispatchError=ot||extractError(ft),this.dispatchInfo=dt||extractInfo(ft),this.events=ft||[],this.internalError=pt,this.status=mt,this.txHash=ht,this.txIndex=bt,this.blockNumber=tt}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(tt,ot){return filterAndApply(this.events,tt,Array.isArray(ot)?ot:[ot],recordIdentity)}findRecord(tt,ot){return this.filterRecords(tt,ot)[0]}toHuman(tt){var ot,dt,ft;return{dispatchError:(ot=this.dispatchError)==null?void 0:ot.toHuman(),dispatchInfo:(dt=this.dispatchInfo)==null?void 0:dt.toHuman(),events:this.events.map(pt=>pt.toHuman(tt)),internalError:(ft=this.internalError)==null?void 0:ft.message.toString(),status:this.status.toHuman(tt)}}}function makeEraOptions(et,tt,ot,{header:dt,mortalLength:ft,nonce:pt}){if(!dt){if(ot.era&&!ot.blockHash)throw new Error("Expected blockHash to be passed alongside non-immortal era options");return isNumber$3(ot.era)&&(delete ot.era,delete ot.blockHash),makeSignOptions(et,ot,{nonce:pt})}return makeSignOptions(et,ot,{blockHash:dt.hash,era:tt.createTypeUnsafe("ExtrinsicEra",[{current:dt.number,period:ot.era||ft}]),nonce:pt})}function makeSignAndSendOptions(et,tt){let ot={};return isFunction$9(et)?tt=et:ot=objectSpread$4({},et),[ot,tt]}function makeSignOptions(et,tt,ot){return objectSpread$4({blockHash:et.genesisHash,genesisHash:et.genesisHash},tt,ot,{runtimeVersion:et.runtimeVersion,signedExtensions:et.registry.signedExtensions,version:et.extrinsicType})}function optionsOrNonce(et={}){return isBn$2(et)||isNumber$3(et)?{nonce:et}:et}function createClass({api:et,apiType:tt,blockHash:ot,decorateMethod:dt}){const ft=et.registry.createClass("Extrinsic");class pt extends ft{constructor(bt,yt){super(bt,yt,{version:et.extrinsicType});Ot(this,"__internal__ignoreStatusCb");Ot(this,"__internal__transformResult",identity$3);Ot(this,"__internal__observeSign",(bt,yt)=>{const xt=isKeyringPair(bt)?bt.address:bt.toString(),gt=optionsOrNonce(yt);return et.derive.tx.signingInfo(xt,gt.nonce,gt.era).pipe(first(),mergeMap(async wt=>{const Pt=makeEraOptions(et,this.registry,gt,wt);let St=-1,Et=null;if(isKeyringPair(bt))this.sign(bt,Pt);else{const Lt=await this.__internal__signViaSigner(xt,Pt,wt.header);St=Lt.id,Lt.signedTransaction&&(Et=Lt.signedTransaction)}return{options:Pt,signedTransaction:Et,updateId:St}}))});Ot(this,"__internal__observeStatus",(bt,yt)=>{if(!yt.isFinalized&&!yt.isInBlock)return of(this.__internal__transformResult(new SubmittableResult({status:yt,txHash:bt})));const xt=yt.isInBlock?yt.asInBlock:yt.asFinalized;return et.derive.tx.events(xt).pipe(map$3(({block:gt,events:wt})=>this.__internal__transformResult(new SubmittableResult({...filterEvents(bt,gt,wt,yt),status:yt,txHash:bt}))),catchError(gt=>of(this.__internal__transformResult(new SubmittableResult({internalError:gt,status:yt,txHash:bt})))))});Ot(this,"__internal__observeSend",bt=>et.rpc.author.submitExtrinsic((bt==null?void 0:bt.signedTransaction)||this).pipe(tap(yt=>{this.__internal__updateSigner(yt,bt)})));Ot(this,"__internal__observeSubscribe",bt=>{const yt=this.hash;return et.rpc.author.submitAndWatchExtrinsic((bt==null?void 0:bt.signedTransaction)||this).pipe(switchMap(xt=>this.__internal__observeStatus(yt,xt)),tap(xt=>{this.__internal__updateSigner(xt,bt)}))});Ot(this,"__internal__signViaSigner",async(bt,yt,xt)=>{const gt=yt.signer||et.signer,wt=yt.allowCallDataAlteration??!0;if(!gt)throw new Error("No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const Pt=this.registry.createTypeUnsafe("SignerPayload",[objectSpread$4({},yt,{address:bt,blockNumber:xt?xt.number:0,method:this.method})]);let St;if(isFunction$9(gt.signPayload)){if(St=await gt.signPayload(Pt.toPayload()),St.signedTransaction&&!yt.withSignedTransaction)throw new Error("The `signedTransaction` field may not be submitted when `withSignedTransaction` is disabled");if(St.signedTransaction&&yt.withSignedTransaction){const Et=this.registry.createTypeUnsafe("Extrinsic",[St.signedTransaction]),Lt=this.registry.createTypeUnsafe("SignerPayload",[objectSpread$4({},{address:bt,assetId:Et.assetId&&Et.assetId.isSome?Et.assetId.toHex():null,blockHash:Pt.blockHash,blockNumber:xt?xt.number:0,era:Et.era.toHex(),genesisHash:Pt.genesisHash,metadataHash:Et.metadataHash?Et.metadataHash.toHex():null,method:Et.method.toHex(),mode:Et.mode?Et.mode.toHex():null,nonce:Et.nonce.toHex(),runtimeVersion:Pt.runtimeVersion,signedExtensions:Pt.signedExtensions,tip:Et.tip?Et.tip.toHex():null,version:Pt.version})]);if(!Et.isSigned)throw new Error(`When using the signedTransaction field, the transaction must be signed. Recieved isSigned: ${Et.isSigned}`);return wt||this.__internal__validateSignedTransaction(Pt,Et),super.addSignature(bt,St.signature,Lt.toPayload()),{id:St.id,signedTransaction:St.signedTransaction}}}else if(isFunction$9(gt.signRaw))St=await gt.signRaw(Pt.toRaw());else throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");return super.addSignature(bt,St.signature,Pt.toPayload()),{id:St.id}});Ot(this,"__internal__updateSigner",(bt,yt)=>{if(yt&&yt.updateId!==-1){const{options:xt,updateId:gt}=yt,wt=xt.signer||et.signer;wt&&isFunction$9(wt.update)&&wt.update(gt,bt)}});Ot(this,"__internal__validateSignedTransaction",(bt,yt)=>{const xt=bt.toPayload(),gt=wt=>`signAndSend: ${wt} does not match the original payload`;if(xt.method!==yt.method.toHex())throw new Error(gt("call data"))});this.__internal__ignoreStatusCb=tt==="rxjs"}get hasDryRun(){var bt;return isFunction$9((bt=et.rpc.system)==null?void 0:bt.dryRun)}get hasPaymentInfo(){var bt;return isFunction$9((bt=et.call.transactionPaymentApi)==null?void 0:bt.queryInfo)}dryRun(bt,yt){if(!this.hasDryRun)throw new Error("The system.dryRun RPC call is not available in your environment");return ot||isString$3(yt)||isU8a$5(yt)?dt(()=>et.rpc.system.dryRun(this.toHex(),ot||yt)):dt(()=>this.__internal__observeSign(bt,yt).pipe(switchMap(()=>et.rpc.system.dryRun(this.toHex()))))()}paymentInfo(bt,yt){if(!this.hasPaymentInfo)throw new Error("The transactionPaymentApi.queryInfo runtime call is not available in your environment");if(ot||isString$3(yt)||isU8a$5(yt))return dt(()=>et.callAt(ot||yt).pipe(switchMap(wt=>{const Pt=this.toU8a();return wt.transactionPaymentApi.queryInfo(Pt,Pt.length)})));const[xt]=makeSignAndSendOptions(yt),gt=isKeyringPair(bt)?bt.address:bt.toString();return dt(()=>et.derive.tx.signingInfo(gt,xt.nonce,xt.era).pipe(first(),switchMap(wt=>{const Pt=makeEraOptions(et,this.registry,xt,wt),St=makeSignOptions(et,Pt,{}),Et=et.tx(this.toU8a()).signFake(gt,St).toU8a();return et.call.transactionPaymentApi.queryInfo(Et,Et.length)})))()}send(bt){const yt=et.hasSubscriptions&&(this.__internal__ignoreStatusCb||!!bt);return dt(yt?this.__internal__observeSubscribe:this.__internal__observeSend)(bt)}signAsync(bt,yt){return dt(()=>this.__internal__observeSign(bt,yt).pipe(map$3(()=>this)))()}signAndSend(bt,yt,xt){const[gt,wt]=makeSignAndSendOptions(yt,xt),Pt=et.hasSubscriptions&&(this.__internal__ignoreStatusCb||!!wt);return dt(()=>this.__internal__observeSign(bt,gt).pipe(switchMap(St=>Pt?this.__internal__observeSubscribe(St):this.__internal__observeSend(St))))(wt)}withResultTransform(bt){return this.__internal__transformResult=bt,this}}return pt}function createSubmittable(et,tt,ot,dt,ft){const pt=createClass({api:tt,apiType:et,blockHash:ft,decorateMethod:ot});return mt=>new pt(dt||tt.registry,mt)}function findCall(et,tt){return et.findMetaCall(u8aToU8a$5(tt))}function findError(et,tt){return et.findMetaError(u8aToU8a$5(tt))}const AllHashers={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null},META_V1_TO_V2={metadata:{description:"Returns the metadata of a runtime",params:[],type:"OpaqueMetadata"}},runtime$z={Metadata:[{methods:{metadata_at_version:{description:"Returns the metadata at a given version.",params:[{name:"version",type:"u32"}],type:"Option<OpaqueMetadata>"},metadata_versions:{description:"Returns the supported metadata versions.",params:[],type:"Vec<u32>"},...META_V1_TO_V2},version:2},{methods:{...META_V1_TO_V2},version:1}]},v9={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}},v10={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}},v11={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:AllHashers}},v12={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"},v13={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"},Si1Variant={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"},v1$1={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant},v14={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:{...Si1Variant,args:"Vec<Type>"},EventMetadataV14:{...Si1Variant,args:"Vec<Type>"},FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:{...Si1Variant,args:"Vec<FunctionArgumentMetadataV14>"},ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"},v15={CustomMetadata15:{map:"BTreeMap<Text, CustomValueMetadata15>"},CustomValueMetadata15:{type:"SiLookupTypeId",value:"Bytes"},ExtrinsicMetadataV15:{version:"u8",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",extraType:"SiLookupTypeId",signedExtensions:"Vec<SignedExtensionMetadataV14>"},OuterEnums15:{callType:"SiLookupTypeId",eventType:"SiLookupTypeId",errorType:"SiLookupTypeId"},PalletMetadataV15:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8",docs:"Vec<Text>"},RuntimeApiMetadataV15:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV15>",docs:"Vec<Text>"},RuntimeApiMethodMetadataV15:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>"},RuntimeApiMethodParamMetadataV15:{name:"Text",type:"SiLookupTypeId"},MetadataV15:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV15>",extrinsic:"ExtrinsicMetadataV15",type:"SiLookupTypeId",apis:"Vec<RuntimeApiMetadataV15>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"}},v16={MetadataV16:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV16>",extrinsic:"ExtrinsicMetadataV16",apis:"Vec<RuntimeApiMetadataV16>",outerEnums:"OuterEnums15",custom:"CustomMetadata15"},PalletMetadataV16:{name:"Text",storage:"Option<PalletStorageMetadataV16>",calls:"Option<PalletCallMetadataV16>",events:"Option<PalletEventMetadataV16>",constants:"Vec<PalletConstantMetadataV16>",errors:"Option<PalletErrorMetadataV16>",associatedTypes:"Vec<PalletAssociatedTypeMetadataV16>",viewFunctions:"Vec<PalletViewFunctionMetadataV16>",index:"u8",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},PalletStorageMetadataV16:{prefix:"Text",items:"Vec<StorageEntryMetadataV16>"},StorageEntryMetadataV16:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},ItemDeprecationInfoV16:{_enum:{NotDeprecated:"Null",DeprecatedWithoutNote:"Null",Deprecated:{note:"Text",since:"Option<Text>"}}},PalletCallMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},EnumDeprecationInfoV16:"BTreeMap<u8, VariantDeprecationInfoV16>",VariantDeprecationInfoV16:{_enum:{DummyVariant:"Null",DeprecatedWithoutNote:"Null",Deprecated:{note:"Text",since:"Option<Text>"}}},PalletEventMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},PalletConstantMetadataV16:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"},PalletErrorMetadataV16:{type:"SiLookupTypeId",deprecationInfo:"EnumDeprecationInfoV16"},PalletAssociatedTypeMetadataV16:{name:"Text",type:"SiLookupTypeId",docs:"Vec<Text>"},PalletViewFunctionMetadataV16:{id:"[u8; 32]",name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<T::String>",deprecationInfo:"ItemDeprecationInfoV16"},ExtrinsicMetadataV16:{versions:"Vec<u8>",addressType:"SiLookupTypeId",callType:"SiLookupTypeId",signatureType:"SiLookupTypeId",transactionExtensionsByVersion:"BTreeMap<u8, Vec<Compact<u32>>>",transactionExtensions:"Vec<TransactionExtensionMetadataV16>"},TransactionExtensionMetadataV16:{identifier:"Text",type:"SiLookupTypeId",implicit:"SiLookupTypeId"},RuntimeApiMetadataV16:{name:"Text",methods:"Vec<RuntimeApiMethodMetadataV16>",docs:"Vec<Text>",version:"Compact<u32>",deprecationInfo:"ItemDeprecationInfoV16"},RuntimeApiMethodMetadataV16:{name:"Text",inputs:"Vec<RuntimeApiMethodParamMetadataV15>",output:"SiLookupTypeId",docs:"Vec<Text>",deprecationInfo:"ItemDeprecationInfoV16"}},definitions$1c={rpc:{},runtime:runtime$z,types:{...v9,...v10,...v11,...v12,...v13,...v14,...v15,...v16,ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV16",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV16",PalletCallMetadataLatest:"PalletCallMetadataV16",PalletConstantMetadataLatest:"PalletConstantMetadataV16",PalletErrorMetadataLatest:"PalletErrorMetadataV16",PalletEventMetadataLatest:"PalletEventMetadataV16",PalletMetadataLatest:"PalletMetadataV16",PalletStorageMetadataLatest:"PalletStorageMetadataV16",PortableType:"PortableTypeV14",RuntimeApiMetadataLatest:"RuntimeApiMetadataV16",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",TransactionExtensionMetadataLatest:"TransactionExtensionMetadataV16",StorageEntryMetadataLatest:"StorageEntryMetadataV16",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",OpaqueMetadata:"Opaque<Bytes>",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14",V15:"MetadataV15",V16:"MetadataV16"}}}},CORE_V1_TO_V4={execute_block:{description:"Execute the given block.",params:[{name:"block",type:"Block"}],type:"Null"}},CORE_V1_TO_V2={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre3"}},CORE_V2_TO_V4={initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},CORE_V4_VERSION={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersion"}},CORE_V4_TO_V5={...CORE_V1_TO_V4,initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"ExtrinsicInclusionMode"}},runtime$y={Core:[{methods:{...CORE_V4_VERSION,...CORE_V4_TO_V5},version:5},{methods:{...CORE_V4_VERSION,...CORE_V1_TO_V4,...CORE_V2_TO_V4},version:4},{methods:{version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre4"},...CORE_V1_TO_V4,...CORE_V2_TO_V4},version:3},{methods:{...CORE_V1_TO_V2,...CORE_V1_TO_V4,...CORE_V2_TO_V4},version:2},{methods:{initialise_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"},...CORE_V1_TO_V2,...CORE_V1_TO_V4},version:1}]},numberTypes={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"},knownOrigins={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"},definitions$1b={rpc:{},runtime:runtime$y,types:{...numberTypes,AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId32",AccountId33:"GenericAccountId33",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeCall:"Call",RuntimeEvent:"Event",RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",SlotDuration:"u64",StorageData:"Bytes",StorageInfo:{palletName:"Bytes",storage_name:"Bytes",prefix:"Bytes",maxValues:"Option<u32>",maxSize:"Option<u32>"},StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionLongevity:"u64",TransactionTag:"Bytes",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",WeightV0:"u32",WeightV1:"u64",WeightV2:{refTime:"Compact<u64>",proofSize:"Compact<u64>"},Weight:"WeightV2",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)",ExtrinsicInclusionMode:{_enum:["AllExtrinsics","OnlyInherents"]}}},v0$1={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}},definitions$1a={rpc:{},types:{...v0$1,...v1$1,SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"}},runtime$x={AssetConversionApi:[{methods:{get_reserves:{description:"Get pool reserves",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"}],type:"Option<(Balance,Balance)>"},quote_price_exact_tokens_for_tokens:{description:"Quote price: exact tokens for tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"},quote_price_tokens_for_exact_tokens:{description:"Quote price: tokens for exact tokens",params:[{name:"asset1",type:"StagingXcmV3MultiLocation"},{name:"asset2",type:"StagingXcmV3MultiLocation"},{name:"amount",type:"u128"},{name:"include_fee",type:"bool"}],type:"Option<(Balance)>"}},version:1}]},definitions$19={rpc:{},runtime:runtime$x,types:{TAssetConversion:"Option<MultiLocation>"}},runtime$w={AssetsApi:[{methods:{account_balances:{description:"Return the current set of authorities.",params:[{name:"account",type:"AccountId"}],type:"Vec<(u32, TAssetBalance)>"}},version:1}]},definitions$18={rpc:{},runtime:runtime$w,types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}},runtime$v={AuraApi:[{methods:{authorities:{description:"Return the current set of authorities.",params:[],type:"Vec<AuthorityId>"},slot_duration:{description:"Returns the slot duration for Aura.",params:[],type:"SlotDuration"}},version:1}]},definitions$17={rpc:{},runtime:runtime$v,types:{RawAuraPreDigest:{slotNumber:"u64"}}},definitions$16={rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}},rpc$g={epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",isUnsafe:!0,params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}},V1_V2_SHARED={current_epoch:{description:"Returns information regarding the current epoch.",params:[],type:"Epoch"},current_epoch_start:{description:"Returns the slot that started the current epoch.",params:[],type:"Slot"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the current epoch.",params:[{name:"slot",type:"Slot"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},next_epoch:{description:"Returns information regarding the next epoch (which was already previously announced).",params:[],type:"Epoch"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BabeEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},runtime$u={BabeApi:[{methods:{configuration:{description:"Return the genesis configuration for BABE. The configuration is only read on genesis.",params:[],type:"BabeGenesisConfiguration"},...V1_V2_SHARED},version:2},{methods:{configuration:{description:"Return the configuration for BABE. Version 1.",params:[],type:"BabeGenesisConfigurationV1"},...V1_V2_SHARED},version:1}]},definitions$15={rpc:rpc$g,runtime:runtime$u,types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeGenesisConfiguration:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",allowedSlots:"AllowedSlots"},BabeGenesisConfigurationV1:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",secondarySlots:"bool"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",Epoch:{epochIndex:"u64",startSlot:"Slot",duration:"u64",authorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Hash",config:"BabeEpochConfiguration"},EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},OpaqueKeyOwnershipProof:"Bytes",Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}},definitions$14={rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}},rpc$f={getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"},subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefyVersionedFinalityProof"}},BEEFY_V3={beefy_genesis:{description:"Return the block number where BEEFY consensus is enabled/started",params:[],type:"Option<BlockNumber>"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"ValidatorSetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},validator_set:{description:"Return the current active BEEFY validator set",params:[],type:"Option<ValidatorSet>"}},BEEFY_V1_V3={...BEEFY_V3,submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BeefyEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},BEEFY_V4={...BEEFY_V3,submit_report_double_voting_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report a double voting equivocation.",params:[{name:"equivocationProof",type:"SpConsensusBeefyDoubleVotingProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},BEEFY_MMR_V1={authority_set_proof:{description:"Return the currently active BEEFY authority set proof.",params:[],type:"BeefyAuthoritySet"},next_authority_set_proof:{description:"Return the next/queued BEEFY authority set proof.",params:[],type:"BeefyNextAuthoritySet"}},runtime$t={BeefyApi:[{methods:BEEFY_V4,version:4},{methods:BEEFY_V1_V3,version:3},{methods:BEEFY_V1_V3,version:2},{methods:BEEFY_V1_V3,version:1}],BeefyMmrApi:[{methods:BEEFY_MMR_V1,version:1}]},definitions$13={rpc:rpc$f,runtime:runtime$t,types:{BeefyAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefyEquivocationProof:{first:"BeefyVoteMessage",second:"BeefyVoteMessage"},BeefyCompactSignedCommitment:{commitment:"BeefyCommitment",signaturesFrom:"Vec<u8>",validatorSetLen:"u32",signaturesCompact:"Vec<EcdsaSignature>"},BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyVersionedFinalityProof:{_enum:{V0:"Null",V1:"BeefyCompactSignedCommitment"}},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"Vec<(BeefyPayloadId, Bytes)>",BeefyPayloadId:"[u8;2]",BeefyVoteMessage:{commitment:"BeefyCommitment",id:"AuthorityId",signature:"Signature"},MmrRootHash:"H256",ValidatorSetId:"u64",ValidatorSet:{validators:"Vec<AuthorityId>",id:"ValidatorSetId"}}},runtime$s={Benchmark:[{methods:{benchmark_metadata:{description:"Get the benchmark metadata available for this runtime.",params:[{name:"extra",type:"bool"}],type:"(Vec<BenchmarkList>, Vec<StorageInfo>)"},dispatch_benchmark:{description:"Dispatch the given benchmark.",params:[{name:"config",type:"BenchmarkConfig"}],type:"Result<Vec<BenchmarkBatch>, Text>"}},version:1}]},definitions$12={rpc:{},runtime:runtime$s,types:{BenchmarkBatch:{pallet:"Text",instance:"Text",benchmark:"Text",results:"Vec<BenchmarkResult>"},BenchmarkConfig:{pallet:"Bytes",benchmark:"Bytes",selectedComponents:"Vec<(BenchmarkParameter, u32)>",verify:"bool",internalRepeats:"u32"},BenchmarkList:{pallet:"Bytes",instance:"Bytes",benchmarks:"Vec<BenchmarkMetadata>"},BenchmarkMetadata:{name:"Bytes",components:"Vec<(BenchmarkParameter, u32, u32)>"},BenchmarkParameter:{_enum:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]},BenchmarkResult:{components:"Vec<(BenchmarkParameter, u32)>",extrinsicTime:"u128",storageRootTime:"u128",reads:"u32",repeatReads:"u32",writes:"u32",repeatWrites:"u32",proofSize:"u32",benchKeys:"Vec<(Vec<u8>, u32, u32, bool)>"}}},BB_V2_TO_V4={random_seed:{description:"Generate a random seed.",params:[],type:"Hash"}},BB_V2_TO_V5={apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResultPre6"}},BB_V2_TO_V6={check_inherents:{description:"Check that the inherents are valid.",params:[{name:"block",type:"Block"},{name:"data",type:"InherentData"}],type:"CheckInherentsResult"},inherent_extrinsics:{description:"Generate inherent extrinsics.",params:[{name:"inherent",type:"InherentData"}],type:"Vec<Extrinsic>"}},BB_V3_TO_V6={finalize_block:{description:"Finish the current block.",params:[],type:"Header"}},runtime$r={BlockBuilder:[{methods:{apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResult"},...BB_V2_TO_V6,...BB_V3_TO_V6},version:6},{methods:{...BB_V2_TO_V5,...BB_V2_TO_V6,...BB_V3_TO_V6},version:5},{methods:{...BB_V2_TO_V4,...BB_V2_TO_V5,...BB_V2_TO_V6,...BB_V3_TO_V6},version:4},{methods:{...BB_V2_TO_V4,...BB_V2_TO_V6,...BB_V3_TO_V6},version:3},{methods:{finalise_block:{description:"Finish the current block.",params:[],type:"Header"},...BB_V2_TO_V4,...BB_V2_TO_V6},version:2}]},definitions$11={rpc:{},runtime:runtime$r,types:{CheckInherentsResult:{okay:"bool",fatalError:"bool",errors:"InherentData"},InherentData:{data:"BTreeMap<InherentIdentifier, Bytes>"},InherentIdentifier:"[u8; 8]"}},definitions$10={rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}},definitions$$={rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}},rpc$e={call:{deprecated:"Use the runtime interface `api.call.contractsApi.call` instead",description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractExecResult"},getStorage:{deprecated:"Use the runtime interface `api.call.contractsApi.getStorage` instead",description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<Bytes>"},instantiate:{deprecated:"Use the runtime interface `api.call.contractsApi.instantiate` instead",description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequestV1"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractInstantiateResult"},rentProjection:{deprecated:"Not available in newer versions of the contracts interfaces",description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<BlockNumber>"},uploadCode:{deprecated:"Use the runtime interface `api.call.contractsApi.uploadCode` instead",description:"Upload new code without instantiating a contract from it",endpoint:"contracts_upload_code",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"CodeUploadResult"}},SHARED_V1_V2={get_storage:{description:"Query a given storage key in a given contract.",params:[{name:"address",type:"AccountId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},upload_code:{description:"Upload new code without instantiating a contract from it.",params:[{name:"origin",type:"AccountId"},{name:"code",type:"Bytes"},{name:"storageDepositLimit",type:"Option<Balance>"}],type:"CodeUploadResult"}},runtime$q={ContractsApi:[{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResult"},...SHARED_V1_V2},version:2},{methods:{call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResultU64"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResultU64"},...SHARED_V1_V2},version:1}]},definitions$_={rpc:rpc$e,runtime:runtime$q,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:"Result<CodeUploadResultValue, DispatchError>",CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:"Result<ContractExecResultOk, DispatchError>",ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"Weight",gasRequired:"Weight",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResultU64:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:"Result<InstantiateReturnValueTo267, Null>",ContractInstantiateResultTo299:"Result<InstantiateReturnValueOk, Null>",ContractInstantiateResult:{gasConsumed:"WeightV2",gasRequired:"WeightV2",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},ContractInstantiateResultU64:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:"Result<InstantiateReturnValueOk, DispatchError>",InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}},AllConvictions=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"],definitions$Z={rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:AllConvictions},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}},rpc$d={getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",isUnsafe:!0,params:[{isHistoric:!0,name:"at",type:"Hash"}],type:"Option<BlockStats>"}},definitions$Y={rpc:rpc$d,types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}},runtime$p={AuthorityDiscoveryApi:[{methods:{authorities:{description:"Retrieve authority identifiers of the current and next authority set.",params:[],type:"Vec<AuthorityId>"}},version:1}]},definitions$X={rpc:{},runtime:runtime$p,types:{}},definitions$W={rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}},rpc$c={createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{isOptional:!0,name:"parentHash",type:"BlockHash"}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{isOptional:!0,name:"justification",type:"Justification"}],type:"bool"}},definitions$V={rpc:rpc$c,types:{CreatedBlock:{_alias:{blockHash:"hash"},blockHash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}},definitions$U={rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmCallInfo:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCreateInfo:{exitReason:"ExitReason",value:"H160",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCallInfoV2:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmCreateInfoV2:{exitReason:"ExitReason",value:"H160",usedGas:"U256",weightInfo:"Option<EvmWeightInfo>",logs:"Vec<EvmLog>"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},EvmWeightInfo:{refTimeLimit:"Option<u64>",proofSizeLimit:"Option<u64>",refTimeUsage:"Option<u64>",proofSizeUsage:"Option<u64>"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}},definitions$T={rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",ExtrinsicV5:"GenericExtrinsicV5",ExtrinsicPayloadV5:"GenericExtrinsicPayloadV5",ExtrinsicSignatureV5:"GenericExtrinsicSignatureV5",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}},runtime$o={FungiblesApi:[{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>"}},version:1},{methods:{query_account_balances:{description:"Returns the list of all `MultiAsset` that an `AccountId` has",params:[{name:"account",type:"AccountId"}],type:"Result<XcmVersionedAssets, FungiblesAccessError>"}},version:2}]},definitions$S={rpc:{},runtime:runtime$o,types:{FungiblesAccessError:{_enum:["AssetIdConversionFailed","AmountToBalanceConversionFailed"]}}},definitions$R={rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}},runtime$n={GenesisBuilder:[{methods:{build_config:{description:"Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the storage.",params:[{name:"json",type:"Vec<u8>"}],type:"Result<(), GenesisBuildErr>"},create_default_config:{description:"Creates the default `RuntimeGenesisConfig` and returns it as a JSON blob.",params:[],type:"Vec<u8>"}},version:1}]},definitions$Q={rpc:{},runtime:runtime$n,types:{GenesisBuildErr:"Text"}},definitions$P={rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}},rpc$b={proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}},GRANDPA_V2_V3={generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"SetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},grandpa_authorities:{description:"Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.",params:[],type:"AuthorityList"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"GrandpaEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}},runtime$m={GrandpaApi:[{methods:{current_set_id:{description:"Get current GRANDPA authority set id.",params:[],type:"SetId"},...GRANDPA_V2_V3},version:3},{methods:GRANDPA_V2_V3,version:2}]},definitions$O={rpc:rpc$b,runtime:runtime$m,types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}},definitions$N={rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}},definitions$M={rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Opaque<Bytes>",OpaquePeerId:"Opaque<Bytes>",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}},definitions$L={rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}},runtime$l={MixnetApi:[{methods:{current_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},maybe_register:{description:"Try to register a mixnode for the next session.",params:[{name:"session_index",type:"u32"},{name:"mixnode",type:"Mixnode"}],type:"bool"},prev_mixnodes:{description:"Get the index and phase of the current session.",params:[],type:"Result<Mixnode, MixnodesErr>"},session_status:{description:"Get the index and phase of the current session.",params:[],type:"SessionStatus"}},version:1}]},definitions$K={rpc:{},runtime:runtime$l,types:{Mixnode:{externalAddresses:"Vec<Bytes>",kxPublic:"[u8; 32]",peerId:"[u8; 32]"},MixnodesErr:{_enum:{InsufficientRegistrations:{min:"u32",num:"u32"}}},SessionPhase:{_enum:["CoverToCurrent","RequestsToCurrent","CoverToPrev","DisconnectFromPrev"]},SessionStatus:{currentIndex:"u32",phase:"SessionPhase"}}},rpc$a={generateProof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<u64>"},{isOptional:!0,name:"bestKnownBlockNumber",type:"u64"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafBatchProof"},root:{description:"Get the MMR root hash for the current best block.",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrHash"},verifyProof:{description:"Verify an MMR proof",params:[{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"},verifyProofStateless:{description:"Verify an MMR proof statelessly given an mmr_root",params:[{name:"root",type:"MmrHash"},{name:"proof",type:"MmrLeafBatchProof"}],type:"bool"}},MMR_V2={generate_proof:{description:"Generate MMR proof for the given block numbers.",params:[{name:"blockNumbers",type:"Vec<BlockNumber>"},{name:"bestKnownBlockNumber",type:"Option<BlockNumber>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},mmr_leaf_count:{description:"Return the number of MMR blocks in the chain.",params:[],type:"Result<U64, MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"}},MMR_V1={generate_batch_proof:{description:"Generate MMR proof for a series of leaves under given indices.",params:[{name:"leafIndices",type:"Vec<MmrLeafIndex>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},generate_proof:{description:"Generate MMR proof for a leaf under given index.",params:[{name:"leafIndex",type:"MmrLeafIndex"}],type:"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_batch_proof:{description:"Verify MMR proof against on-chain MMR for a batch of leaves.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_batch_proof_stateless:{description:"Verify MMR proof against given root hash or a batch of leaves.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"}},runtime$k={MmrApi:[{methods:MMR_V2,version:2},{methods:MMR_V1,version:1}]},definitions$J={rpc:rpc$a,runtime:runtime$k,types:{MmrBatchProof:{leafIndices:"Vec<MmrLeafIndex>",leafCount:"MmrNodeIndex",items:"Vec<Hash>"},MmrEncodableOpaqueLeaf:"Bytes",MmrError:{_enum:["InvalidNumericOp","Push","GetRoot","Commit","GenerateProof","Verify","LeafNotFound"," PalletNotIncluded","InvalidLeafIndex","InvalidBestKnownBlock"]},MmrHash:"Hash",MmrLeafBatchProof:{blockHash:"BlockHash",leaves:"Bytes",proof:"Bytes"},MmrLeafIndex:"u64",MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"},MmrNodeIndex:"u64",MmrProof:{leafIndex:"MmrLeafIndex",leafCount:"MmrNodeIndex",items:"Vec<Hash>"}}},runtime$j={NftsApi:[{methods:{attribute:{description:"An attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_attribute:{description:"A collection attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_owner:{description:"A collection owner",params:[{name:"collection",type:"NftCollectionId"}],type:"Option<AccountId>"},custom_attribute:{description:"A custom attribute",params:[{name:"account",type:"AccountId"},{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},owner:{description:"Collection owner",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"}],type:"Option<AccountId>"},system_attribute:{description:"System attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},version:1}]},definitions$I={rpc:{},runtime:runtime$j,types:{NftCollectionId:"u32",NftItemId:"u32"}},runtime$i={NominationPoolsApi:[{methods:{balance_to_points:{description:"Returns the equivalent points of `new_funds` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"newFunds",type:"Balance"}],type:"Balance"},pending_rewards:{description:"Returns the pending rewards for the given member.",params:[{name:"member",type:"AccountId"}],type:"Balance"},points_to_balance:{description:"Returns the equivalent balance of `points` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"points",type:"Balance"}],type:"Balance"}},version:1}]},definitions$H={rpc:{},runtime:runtime$i,types:{NpApiError:{_enum:["MemberNotFound","OverflowInPendingRewards"]},NpPoolId:"u32"}},definitions$G={rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}},runtime$h={DifficultyApi:[{methods:{difficulty:{description:"Return the target difficulty of the next block.",params:[],type:"Raw"}},version:1}],TimestampApi:[{methods:{timestamp:{description:"API necessary for timestamp-based difficulty adjustment algorithms.",params:[],type:"Moment"}},version:1}]},definitions$F={rpc:{},runtime:runtime$h,types:{}},definitions$E={rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}},definitions$D={rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}},definitions$C={rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}},runtime$g={SessionKeys:[{methods:{decode_session_keys:{description:"Decode the given public session keys.",params:[{name:"encoded",type:"Bytes"}],type:"Option<Vec<(Bytes, KeyTypeId)>>"},generate_session_keys:{description:"Generate a set of session keys with optionally using the given seed.",params:[{name:"seed",type:"Option<Bytes>"}],type:"Bytes"}},version:1}]},keyTypes={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"},definitions$B={rpc:{},runtime:runtime$g,types:{...keyTypes,FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Bytes>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"}},definitions$A={rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}},runtime$f={StakingApi:[{methods:{nominations_quota:{description:"Returns the nominations quota for a nominator with a given balance.",params:[{name:"balance",type:"Balance"}],type:"u32"}},version:1}]},deprecated={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},phragmen={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionResultToSpec10:{electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure<AccountId, Balance>)>",compute:"ElectionCompute"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"},definitions$z={rpc:{},runtime:runtime$f,types:{...deprecated,...phragmen,ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{_fallback:"StakingLedgerTo223",stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}}},runtime$e={ValidateStatement:[{methods:{valdate_statement:{description:"Validate the statement.",params:[{name:"source",type:"StatementStoreStatementSource"},{name:"statement",type:"SpStatementStoreStatement"}],type:"Result<StatementStoreValidStatement, StatementStoreInvalidStatement>"}},version:1}]},definitions$y={rpc:{},runtime:runtime$e,types:{StatementStoreStatementSource:{_enum:["Chain","Network","Local"]},StatementStoreValidStatement:{maxCount:"u32",maxSize:"u32"},StatementStoreInvalidStatement:{_enum:["BadProof","NoProof","InternalError"]}}},definitions$x={rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}},rpc$9={genSyncSpec:{description:"Returns the json-serialized chainspec running the node, with a sync state.",endpoint:"sync_state_genSyncSpec",params:[{name:"raw",type:"bool"}],type:"Json"}},definitions$w={rpc:rpc$9,types:{}},rpc$8={accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},addLogFilter:{description:"Adds the supplied directives to the current log filter",isUnsafe:!0,params:[{name:"directives",type:"Text"}],type:"Null"},addReservedPeer:{description:"Adds a reserved peer",isUnsafe:!0,params:[{name:"peer",type:"Text"}],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",isUnsafe:!0,params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ApplyExtrinsicResult"},health:{description:"Return health status of the node",noErrorLog:!0,params:[],type:"Health"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},name:{description:"Retrieves the node name",params:[],type:"Text"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",isUnsafe:!0,params:[],type:"NetworkState"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},peers:{description:"Returns the currently connected peers",isUnsafe:!0,params:[],type:"Vec<PeerInfo>"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},removeReservedPeer:{description:"Remove a reserved peer",isUnsafe:!0,params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",isUnsafe:!0,params:[],type:"Null"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},version:{description:"Retrieves the version of the node",params:[],type:"Text"}},runtime$d={AccountNonceApi:[{methods:{account_nonce:{description:"The API to query account nonce (aka transaction index)",params:[{name:"accountId",type:"AccountId"}],type:"Index"}},version:1}]},definitions$v={rpc:rpc$8,runtime:runtime$d,types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ApplyExtrinsicResultPre6:"Result<DispatchOutcomePre6, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError",Exhausted:"Null",Corruption:"Null",Unavailable:"Null"}},DispatchErrorPre6:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorPre6First:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorModuleU8:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorModule:"DispatchErrorModuleU8a",DispatchErrorModulePre6:"DispatchErrorModuleU8",DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchOutcomePre6:"Result<(), DispatchErrorPre6>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null",BadSigner:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Unsupported","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},TransactionalError:{_enum:["LimitReached","NoLayer"]},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}},definitions$u={rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}},definitions$t={rpc:{},types:{Multiplier:"Fixed128"}},runtime$c={TaggedTransactionQueue:[{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"},{name:"blockHash",type:"BlockHash"}],type:"TransactionValidity"}},version:3},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:2},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:1}]},definitions$s={rpc:{},runtime:runtime$c,types:{TransactionSource:{_enum:["InBlock","Local","External"]},TransactionValidity:"Result<ValidTransaction, TransactionValidityError>",ValidTransaction:{priority:"TransactionPriority",requires:"Vec<TransactionTag>",provides:"Vec<TransactionTag>",longevity:"TransactionLongevity",propagate:"bool"}}},definitions$r={rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}},definitions$q={rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}},definitions$p={rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}},definitions$o={rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}},definitions$n={rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}},definitions$m={rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}},definitions$l={rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}},runtime$b={AuraUnincludedSegmentApi:[{methods:{can_build_upon:{description:"Whether it is legal to extend the chain",params:[{name:"includedHash",type:"BlockHash"},{name:"slot",type:"Slot"}],type:"bool"}},version:1}],CollectCollationInfo:[{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[{name:"header",type:"Header"}],type:"CollationInfo"}},version:2},{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[],type:"CollationInfoV1"}},version:1}]},dmpQueue={CollationInfo:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber",headData:"HeadData"},CollationInfoV1:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber"},ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}},definitions$k={rpc:{},runtime:runtime$b,types:dmpQueue},finalityV1={methods:{best_finalized:{description:"Returns number and hash of the best finalized header known to the bridge module.",params:[],type:"(BlockNumber, Hash)"}},version:1},runtime$a={KusamaFinalityApi:[finalityV1],PolkadotFinalityApi:[finalityV1],RococoFinalityApi:[finalityV1],WestendFinalityApi:[finalityV1]},definitions$j={rpc:{},runtime:runtime$a,types:{}},hrmpTypes={HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}},PH_V1_TO_V2={assumed_validation_data:{description:"Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.",params:[{name:"paraId",type:"ParaId"},{name:"hash",type:"Hash"}],type:"Option<(PersistedValidationData, ValidationCodeHash)>"},availability_cores:{description:"Yields information on all availability cores as relevant to the child block.",params:[],type:"Vec<CoreState>"},candidate_events:{description:"Get a vector of events concerning candidates that occurred within a block.",params:[],type:"Vec<CandidateEvent>"},candidate_pending_availability:{description:"Get the receipt of a candidate pending availability.",params:[{name:"paraId",type:"ParaId"}],type:"Option<CommittedCandidateReceipt>"},check_validation_outputs:{description:"Checks if the given validation outputs pass the acceptance criteria.",params:[{name:"paraId",type:"ParaId"},{name:"outputs",type:"CandidateCommitments"}],type:"bool"},dmq_contents:{description:"Get all the pending inbound messages in the downward message queue for a para.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundDownwardMessage>"},inbound_hrmp_channels_contents:{description:"Get the contents of all channels addressed to the given recipient.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundHrmpMessage>"},on_chain_votes:{description:"Scrape dispute relevant from on-chain, backing votes and resolved disputes.",params:[],type:"Option<ScrapedOnChainVotes>"},persisted_validation_data:{description:"Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<PersistedValidationData>"},session_index_for_child:{description:"Returns the session index expected at a child of the block.",params:[],type:"SessionIndex"},validation_code:{description:"Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCode>"},validation_code_by_hash:{description:"Get the validation code from its hash.",params:[{name:"hash",type:"ValidationCodeHash"}],type:"Option<ValidationCode>"},validator_groups:{description:"Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on",params:[],type:"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)"},validators:{description:"Get the current validators.",params:[],type:"Vec<ValidatorId>"}},PH_V2_TO_V3={pvfs_require_precheck:{description:"Returns code hashes of PVFs that require pre-checking by validators in the active set.",params:[],type:"Vec<ValidationCodeHash>"},session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<SessionInfo>"},submit_pvf_check_statement:{description:"Submits a PVF pre-checking statement into the transaction pool.",params:[{name:"stmt",type:"PvfCheckStatement"},{name:"signature",type:"ValidatorSignature"}],type:"Null"},validation_code_hash:{description:"Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCodeHash>"}},PH_V3={disputes:{description:"Returns all onchain disputes.",params:[],type:"Vec<(SessionIndex, CandidateHash, DisputeState)>"}},PH_V4={session_executor_params:{description:"Returns execution parameters for the session.",params:[{name:"sessionIndex",type:"SessionIndex"}],type:"Option<ExecutorParams>"}},PH_V5={key_ownership_proof:{description:"Returns a merkle proof of a validator session key",params:[{name:"validatorId",type:"ValidatorId"}],type:"Option<OpaqueKeyOwnershipProof>"},submit_report_dispute_lost:{description:"Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session",params:[{name:"disputeProof",type:"DisputeProof"},{name:"keyOwnershipProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"},unapplied_slashes:{description:"Returns a list of validators that lost a past session dispute and need to be slashed",params:[],type:"Vec<(SessionIndex, CandidateHash, PendingSlashes)>"}},PH_V6={minimum_backing_votes:{description:"Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!",params:[],type:"u32"}},PH_V7={async_backing_params:{description:"Returns candidate's acceptance limitations for asynchronous backing for a relay parent",params:[],type:"AsyncBackingParams"},para_backing_state:{description:"Returns the state of parachain backing for a given para",params:[{name:"paraId",type:"ParaId"}],type:"Option<BackingState>"}},PH_V8={disabled_validators:{description:"Returns a list of all disabled validators at the given block",params:[],type:"ValidatorIndex"}},PH_V9={node_features:{description:"Get node features. This is a staging method! Do not use on production runtimes!",params:[],type:"NodeFeatures"}},PH_V10={approval_voting_params:{description:"Approval voting configuration parameters",params:[],type:"ApprovalVotingParams"}},PH_V11={claim_queue:{description:"Claim queue",params:[],type:"BTreeMap<CoreIndex, Vec<u32>>"}},runtime$9={ParachainHost:[{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5,...PH_V6,...PH_V7,...PH_V8,...PH_V9,...PH_V10,...PH_V11},version:11},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5,...PH_V6,...PH_V7,...PH_V8,...PH_V9,...PH_V10},version:10},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5,...PH_V6,...PH_V7,...PH_V8,...PH_V9},version:9},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5,...PH_V6,...PH_V7,...PH_V8},version:8},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5,...PH_V6,...PH_V7},version:7},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5,...PH_V6},version:6},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4,...PH_V5},version:5},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3,...PH_V4},version:4},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3,...PH_V3},version:3},{methods:{...PH_V1_TO_V2,...PH_V2_TO_V3},version:2},{methods:{session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<OldV1SessionInfo>"},...PH_V1_TO_V2},version:1}]},SlotRange10={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},SlotRange={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},oldTypes={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"},slotTypes={...oldTypes,AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10,SlotRange,WinningData10:`[WinningDataEntry; ${SlotRange10._enum.length}]`,WinningData:`[WinningDataEntry; ${SlotRange._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"},proposeTypes={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},cumulusTypes={ServiceQuality:{_enum:["Ordered","Fast"]}},disputeTypes={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExecutorParam:{_enum:{Phantom:"Null",MaxMemoryPages:"u32",StackLogicalMax:"u32",StackNativeMax:"u32",PrecheckingMaxMemory:"u64",PvfPrepTimeout:"(PvfPrepTimeoutKind, u64)",PvfExecTimeout:"(PvfExecTimeoutKind, u64)"}},ExecutorParamsHash:"Hash",ExecutorParams:"Vec<ExecutorParam>",ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",PvfExecTimeoutKind:{_enum:["Backing","Approval"]},PvfPrepTimeoutKind:{_enum:["Precheck","Lenient"]},ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}},definitions$i={rpc:{},runtime:runtime$9,types:{...cumulusTypes,...disputeTypes,...hrmpTypes,...proposeTypes,...slotTypes,AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},ApprovalVotingParams:{maxApprovalCoalesceCount:"u32"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AsyncBackingParams:{maxCandidateDepth:"u32",allowedAncestryLen:"u32"},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BackingState:{constraints:"Constraints",pendingAvailability:"Vec<CandidatePendingAvailability>"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateEvent:{_enum:{CandidateBacked:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateIncluded:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateTimedOut:"(CandidateReceipt, HeadData, CoreIndex)"}},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},Constraints:{minRelayParentNumber:"BlockNumber",maxPovSize:"u32",maxCodeSize:"u32",umpRemaining:"u32",umpRemainingBytes:"u32",maxUmpNumPerCandidate:"u32",dmpRemainingMessages:"Vec<BlockNumber>",hrmpInbound:"InboundHrmpLimitations",hrmpChannelsOut:"HashMap<ParaId, OutboundHrmpChannelLimitations>",maxHrmpNumPerCandidate:"u32",requiredParent:"HeadData",validationCodeHash:"ValidationCodeHash",upgradeRestriction:"Option<UpgradeRestriction>",futureValidationCode:"Option<(BlockNumber, ValidationCodeHash)>"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},CoreState:{_enum:{Occupied:"OccupiedCore",Scheduled:"ScheduledCore",Free:"Null"}},DisputeProof:{timeSlot:"DisputesTimeSlot",kind:"SlashingOffenceKind",validatorIndex:"ValidatorIndex",validatorId:"ValidatorId"},DisputesTimeSlot:{sessionIndex:"SessionIndex",candidateHash:"CandidateHash"},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GroupRotationInfo:{sessionStartBlock:"BlockNumber",groupRotationFrequency:"BlockNumber",now:"BlockNumber"},GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpLimitations:{validWatermarks:"Vec<BlockNumber>"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",NodeFeatures:"BitVec",OccupiedCore:{nextUpOnAvailable:"Option<ScheduledCore>",occupiedSince:"BlockNumber",timeOutAt:"BlockNumber",nextUpOnTimeOut:"Option<ScheduledCore>",availability:"BitVec",groupResponsible:"GroupIndex",candidateHash:"CandidateHash",candidateDescriptor:"CandidateDescriptor"},OccupiedCoreAssumption:{_enum:["Included,","TimedOut","Free"]},OutboundHrmpChannelLimitations:{bytesRemaining:"u32",messagesRemaining:"u32"},OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},PendingSlashes:{_alias:{slashKeys:"keys"},slashKeys:"BTreeMap<ValidatorIndex, ValidatorId>",kind:"SlashingOffenceKind"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},PvfCheckStatement:{accept:"bool",subject:"ValidationCodeHash",sessionIndex:"SessionIndex",validatorIndex:"ParaValidatorIndex"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},ScheduledCore:{paraId:"ParaId",collator:"Option<CollatorId>"},Scheduling:{_enum:["Always","Dynamic"]},ScrapedOnChainVotes:{session:"SessionIndex",backingValidatorsPerCandidate:"Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>",disputes:"MultiDisputeStatementSet"},SessionInfo:{activeValidatorIndices:"Vec<ParaValidatorIndex>",randomSeed:"[u8; 32]",disputePeriod:"SessionIndex",validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},OldV1SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ParaValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},SlashingOffenceKind:{_enum:["ForInvalid","AgainstValid"]},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"}},definitions$h={rpc:{},types:{Approvals:"[bool; 4]"}},definitions$g={rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}},runtime$8={DryRunApi:[{methods:{dry_run_call:{description:"Dry run call",params:[{name:"origin",type:"OriginCaller"},{name:"call",type:"RuntimeCall"}],type:"Result<CallDryRunEffects, XcmDryRunApiError>"},dry_run_xcm:{description:"Dry run XCM program",params:[{name:"originLocation",type:"VersionedMultiLocation"},{name:"xcm",type:"VersionedXcm"}],type:"Result<XcmDryRunEffects, XcmDryRunApiError>"}},version:1},{methods:{dry_run_call:{description:"Dry run call",params:[{name:"origin",type:"OriginCaller"},{name:"call",type:"RuntimeCall"},{name:"resultXcmsVersion",type:"u32"}],type:"Result<CallDryRunEffects, XcmDryRunApiError>"},dry_run_xcm:{description:"Dry run XCM program",params:[{name:"originLocation",type:"VersionedMultiLocation"},{name:"xcm",type:"VersionedXcm"}],type:"Result<XcmDryRunEffects, XcmDryRunApiError>"}},version:2}]},definitions$f={rpc:{},runtime:runtime$8,types:{PostDispatchInfo:{actualWeight:"Option<Weight>",paysFee:"Pays"},DispatchResultWithPostInfo:"Result<PostDispatchInfo, DispatchError>",CallDryRunEffects:{executionResult:"DispatchResultWithPostInfo",emittedEvents:"Vec<Event>",localXcm:"Option<VersionedXcm>",forwardedXcms:"Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>"},XcmDryRunEffects:{executionResult:"OutcomeV4",emittedEvents:"Vec<Event>",forwardedXcms:"Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>"},XcmDryRunApiError:{_enum:["Unimplemented","VersionedConversionFailed"]}}},v0={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAssetV0",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}},v1={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}},v2={AssetIdV2:{_enum:{Concrete:"MultiLocationV2",Abstract:"Bytes"}},AssetInstanceV2:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]",Blob:"Bytes"}},BodyIdV2:{_enum:{Unit:"Null",Named:"Bytes",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null",Defense:"Null",Administration:"Null",Treasury:"Null"}},BodyPartV2:{_enum:{Voice:"Null",Members:{count:"Compact<u32>"},Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},NetworkIdV2:{_enum:{Any:"Null",Named:"Bytes",Polkadot:"Null",Kusama:"Null"}},JunctionV2:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkIdV2",id:"[u8; 32]"},AccountIndex64:{network:"NetworkIdV2",index:"Compact<u64>"},AccountKey20:{network:"NetworkIdV2",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Bytes",OnlyChild:"Null",Plurality:{id:"BodyIdV2",part:"BodyPartV2"}}},JunctionsV2:{_enum:{Here:"Null",X1:"JunctionV2",X2:"(JunctionV2, JunctionV2)",X3:"(JunctionV2, JunctionV2, JunctionV2)",X4:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X5:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X6:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X7:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)",X8:"(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)"}},FungibilityV2:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV2"}},InteriorMultiLocationV2:"JunctionsV2",MultiAssetV2:{id:"AssetIdV2",fun:"FungibilityV2"},MultiAssetsV2:"Vec<MultiAssetV2>",MultiAssetFilterV2:{_enum:{Definite:"MultiAssetsV2",Wild:"WildMultiAssetV2"}},MultiLocationV2:{parents:"u8",interior:"JunctionsV2"},OriginKindV2:{_enum:{Native:"Null",SovereignAccount:"Null",Superuser:"Null",Xcm:"Null"}},WildFungibilityV2:{_enum:{Fungible:"Null",NonFungible:"Null"}},ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"Option<(u32, XcmErrorV2)>",Version:"u32"}},ResponseV2Error:"(u32, XcmErrorV2)",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"Compact<u64>",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocationV2",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"Compact<u32>",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"Compact<u32>",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponseWeight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2<RuntimeCall>",SetAppendix:"XcmV2<RuntimeCall>",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"Compact<u64>"},UnsubscribeVersion:"Null"}},WildMultiAssetV2:{_enum:{All:"Null",AllOf:{id:"AssetIdV2",fun:"WildFungibilityV2"}}},XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Overflow:"Null",Unimplemented:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",BadOrigin:"Null",InvalidLocation:"Null",AssetNotFound:"Null",FailedToTransactAsset:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",ExceedsMaxMessageSize:"Null",DestinationUnsupported:"Null",Transport:"Null",Unroutable:"Null",UnknownClaim:"Null",FailedToDecode:"Null",MaxWeightInvalid:"Null",NotHoldingFees:"Null",TooExpensive:"Null",Trap:"u64",UnhandledXcmVersion:"Null",WeightLimitReached:"Weight",Barrier:"Null",WeightNotComputable:"Null"}}},v3={AssetIdV3:{_enum:{Concrete:"MultiLocationV3",Abstract:"Bytes"}},BodyIdV3:{_enum:{Unit:"Null",Moniker:"[u8;4]",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null",Defense:"Null",Administration:"Null",Treasury:"Null"}},BodyPartV3:{_enum:{Voice:"Null",Members:{count:"Compact<u32>"},Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},AssetInstanceV3:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},FungibilityV3:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV3"}},InteriorMultiLocationV3:"JunctionsV3",JunctionV3:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV3>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV3>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV3>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV3"}},JunctionsV3:{_enum:{Here:"Null",X1:"JunctionV3",X2:"(JunctionV3, JunctionV3)",X3:"(JunctionV3, JunctionV3, JunctionV3)",X4:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X5:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X6:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X7:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)",X8:"(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)"}},MaybeErrorCodeV3:{_enum:{Success:"Null",Error:"Bytes",TruncatedError:"Bytes"}},MaxPalletsInfo:"u32",MultiAssetV3:{id:"AssetIdV3",fun:"FungibilityV3"},MultiAssetsV3:"Vec<MultiAssetV3>",MultiAssetFilterV3:{_enum:{Definite:"MultiAssetsV3",Wild:"WildMultiAssetV3"}},MultiLocationV3:{parents:"u8",interior:"JunctionsV3"},MaxPalletNameLen:"u32",NetworkIdV3:{_enum:{ByGenesis:"[u8;32]",ByFork:{blockNumber:"u64",blockHash:"[u8;32]"},Polkadot:"Null",Kusama:"Null",Westend:"Null",Rococo:"Null",Wococo:"Null",Ethereum:{chainId:"Compact<u64>"},BitcoinCore:"Null",BitcoinCash:"Null",PolkadotBulletin:"Null"}},OriginKindV3:"OriginKindV2",PalletInfoV3:{index:"Compact<u32>",name:"Bytes",moduleName:"Bytes",major:"Compact<u32>",minor:"Compact<u32>",patch:"Compact<u32>"},WildFungibilityV3:"WildFungibilityV2",QueryResponseInfoV3:{destination:"MultiLocationV3",queryId:"Compact<u64>",maxWeight:"WeightV2"},ResponseV3:{_enum:{Null:"Null",Assets:"MultiAssetsV3",ExecutionResult:"Option<(u32,XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV3>",DispatchResult:"MaybeErrorCodeV3"}},XcmErrorV3:{_enum:{Overflow:"Null",Unimplemented:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",LocationFull:"Null",LocationNotInvertible:"Null",BadOrigin:"Null",InvalidLocation:"Null",AssetNotFound:"Null",FailedToTransactAsset:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",ExceedsMaxMessageSize:"Null",DestinationUnsupported:"Null",Transport:"Null",Unroutable:"Null",UnknownClaim:"Null",FailedToDecode:"Null",MaxWeightInvalid:"Null",NotHoldingFees:"Null",TooExpensive:"Null",Trap:"u64",ExpectationFalse:"Null",PalletNotFound:"Null",NameMismatch:"Null",VersionIncompatible:"Null",HoldingWouldOverflow:"Null",ExportError:"Null",ReanchorFailed:"Null",NoDeal:"Null",FeesNotMet:"Null",LockError:"Null",NoPermission:"Null",Unanchored:"Null",NotDepositable:"Null",UnhandledXcmVersion:"Null",WeightLimitReached:"WeightV2",Barrier:"Null",ExceedsStackLimit:"Null"}},ResponseV3Error:"(u32, XcmErrorV3)",ResponseV3Result:"Option<(u32, ResponseV3Error)>",WeightLimitV3:{_enum:{Unlimited:"Null",Limited:"WeightV2"}},InstructionV3:{_enum:{WithdrawAsset:"MultiAssetsV3",ReserveAssetDeposited:"MultiAssetsV3",ReceiveTeleportedAsset:"MultiAssetsV3",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV3",maxWeight:"WeightV2",querier:"Option<MultiLocationV3>"},TransferAsset:{assets:"MultiAssetsV3",beneficiary:"MultiLocationV3"},TransferReserveAsset:{assets:"MultiAssetsV3",dest:"MultiLocationV3",xcm:"XcmV3"},Transact:{originKind:"XcmOriginKind",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"JunctionsV3",ReportError:"QueryResponseInfoV3",DepositAsset:{assets:"MultiAssetFilterV3",beneficiary:"MultiLocationV3"},DepositReserveAsset:{assets:"MultiAssetFilterV3",dest:"MultiLocationV3",xcm:"XcmV3"},ExchangeAsset:{give:"MultiAssetFilterV3",want:"MultiAssetsV3",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV3",reserve:"MultiLocationV3",xcm:"XcmV3"},InitiateTeleport:{assets:"MultiAssetFilterV3",dest:"MultiLocationV3",xcm:"XcmV3"},ReportHolding:{responseInfo:"QueryResponseInfoV3",assets:"MultiAssetFilterV3"},BuyExecution:{fees:"MultiAssetV3",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV3<RuntimeCall>",SetAppendix:"XcmV3<RuntimeCall>",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV3",ticket:"MultiLocationV3"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV3",ExpectAsset:"MultiAssetsV3",ExpectOrigin:"Option<MultiLocationV3>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV3"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV3",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV3",ExportMessage:{network:"NetworkIdV3",destination:"JunctionsV3",xcm:"XcmV3"},LockAsset:{asset:"MultiAssetV3",unlocker:"MultiLocationV3"},UnlockAsset:{asset:"MultiAssetV3",target:"MultiLocationV3"},NoteUnlockable:{asset:"MultiAssetV3",owner:"MultiLocationV3"},RequestUnlock:{asset:"MultiAssetV3",locker:"MultiLocationV3"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8; 32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV3",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV3>"}}},WildMultiAssetV3:{_enum:{All:"Null",AllOf:{id:"AssetIdV3",fun:"WildFungibilityV2"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV3",fun:"WildFungibilityV2",count:"Compact<u32>"}}},VersionV3:"u32",XcmV3:"Vec<InstructionV3>"},v4={AssetIdV4:"MultiLocationV4",AssetInstanceV4:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},FungibilityV4:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV4"}},UncheckedFungibilityV4:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV4"}},JunctionV4:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV4>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV4>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV4>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV4"}},JunctionsV4:{_enum:{Here:"Null",X1:"[JunctionV4;1]",X2:"[JunctionV4;2]",X3:"[JunctionV4;3]",X4:"[JunctionV4;4]",X5:"[JunctionV4;5]",X6:"[JunctionV4;6]",X7:"[JunctionV4;7]",X8:"[JunctionV4;8]"}},MaxPalletsInfo:"u32",NetworkIdV4:"NetworkIdV3",MultiAssetV4:{id:"AssetIdV4",fun:"FungibilityV4"},MultiAssetsV4:"Vec<MultiAssetV4>",MultiAssetFilterV4:{_enum:{Definite:"MultiAssetsV4",Wild:"WildMultiAssetV4"}},MultiLocationV4:{parents:"u8",interior:"JunctionsV4"},OriginKindV4:"XcmOriginKind",PalletInfoV4:"PalletInfoV3",WildFungibilityV4:"WildFungibilityV2",QueryResponseInfoV4:{destination:"MultiLocationV4",queryId:"Compact<u64>",maxWeight:"WeightV2"},ResponseV4:{_enum:{Null:"Null",Assets:"MultiAssetsV4",ExecutionResult:"Option<(u32, XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV4>",DispatchResult:"MaybeErrorCodeV3"}},InstructionV4:{_enum:{WithdrawAsset:"MultiAssetsV4",ReserveAssetDeposited:"MultiAssetsV4",ReceiveTeleportedAsset:"MultiAssetsV4",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV4",maxWeight:"WeightV2",querier:"Option<MultiLocationV4>"},TransferAsset:{assets:"MultiAssetsV4",beneficiary:"MultiLocationV4"},TransferReserveAsset:{assets:"MultiAssetsV4",dest:"MultiLocationV4",xcm:"XcmV4"},Transact:{originKind:"OriginKindV4",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"JunctionsV4",ReportError:"QueryResponseInfoV4",DepositAsset:{assets:"MultiAssetFilterV4",beneficiary:"MultiLocationV4"},DepositReserveAsset:{assets:"MultiAssetFilterV4",dest:"MultiLocationV4",xcm:"XcmV4"},ExchangeAsset:{give:"MultiAssetFilterV4",want:"MultiAssetsV4",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV4",reserve:"MultiLocationV4",xcm:"XcmV4"},InitiateTeleport:{assets:"MultiAssetFilterV4",dest:"MultiLocationV4",xcm:"XcmV4"},ReportHolding:{responseInfo:"QueryResponseInfoV4",assets:"MultiAssetFilterV4"},BuyExecution:{fees:"MultiAssetV4",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV4",SetAppendix:"XcmV4",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV4",ticket:"MultiLocationV4"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV4",ExpectAsset:"MultiAssetsV4",ExpectOrigin:"Option<MultiLocationV4>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV4"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV4",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV4",ExportMessage:{network:"NetworkIdV4",destination:"JunctionsV4",xcm:"XcmV4"},LockAsset:{asset:"MultiAssetV4",unlocker:"MultiLocationV4"},UnlockAsset:{asset:"MultiAssetV4",target:"MultiLocationV4"},NoteUnlockable:{asset:"MultiAssetV4",owner:"MultiLocationV4"},RequestUnlock:{asset:"MultiAssetV4",locker:"MultiLocationV4"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8;32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV4",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV4>"}}},OutcomeV4:{_enum:{Complete:{used:"WeightV2"},Incomplete:{used:"WeightV2",error:"XcmErrorV3"},Error:{error:"XcmErrorV3"}}},WildMultiAssetV4:{_enum:{All:"Null",AllOf:{id:"AssetIdV4",fun:"WildFungibilityV4"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV4",fun:"WildFungibilityV4",count:"Compact<u32>"}}},VersionV4:"u32",XcmV4:"Vec<InstructionV4>",XcmErrorV4:"XcmErrorV3"},v5={AssetIdV5:"MultiLocationV5",AssetInstanceV5:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8;4]",Array8:"[u8;8]",Array16:"[u8;16]",Array32:"[u8;32]"}},MultiAssetV5:{id:"AssetIdV5",fun:"FungibilityV5"},MultiAssetsV5:"Vec<MultiAssetV5>",WildMultiAssetV5:{_enum:{All:"Null",AllOf:{id:"AssetIdV5",fun:"WildFungibilityV5"},AllCounted:"Compact<u32>",AllOfCounted:{id:"AssetIdV5",fun:"WildFungibilityV5",count:"Compact<u32>"}}},MultiAssetFilterV5:{_enum:{Definite:"MultiAssetsV5",Wild:"WildMultiAssetV5"}},MultiAssetTransferFilterV5:{_enum:{Teleport:"MultiAssetFilterV5",ReserveDeposit:"MultiAssetFilterV5",ReserveWithdraw:"MultiAssetFilterV5"}},FungibilityV5:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV5"}},UncheckedFungibilityV5:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV5"}},WildFungibilityV5:"WildFungibilityV2",JunctionV5:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"Option<NetworkIdV5>",id:"[u8;32]"},AccountIndex64:{network:"Option<NetworkIdV5>",index:"Compact<u64>"},AccountKey20:{network:"Option<NetworkIdV5>",key:"[u8;20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:{length:"u8",data:"[u8;32]"},OnlyChild:"Null",Plurality:{id:"BodyIdV3",part:"BodyPartV3"},GlobalConsensus:"NetworkIdV5"}},NetworkIdV5:{_enum:{ByGenesis:"[u8;32]",ByFork:{blockNumber:"u64",blockHash:"[u8;32]"},Polkadot:"Null",Kusama:"Null",Ethereum:{chainId:"Compact<u64>"},BitcoinCore:"Null",BitcoinCash:"Null",PolkadotBulletin:"Null"}},JunctionsV5:{_enum:{Here:"Null",X1:"[JunctionV5;1]",X2:"[JunctionV5;2]",X3:"[JunctionV5;3]",X4:"[JunctionV5;4]",X5:"[JunctionV5;5]",X6:"[JunctionV5;6]",X7:"[JunctionV5;7]",X8:"[JunctionV5;8]"}},MultiLocationV5:{parents:"u8",interior:"JunctionsV5"},InteriorMultiLocationV5:"JunctionsV5",XcmV5:"Vec<InstructionV5>",PalletInfoV5:"PalletInfoV3",ResponseV5:{_enum:{Null:"Null",Assets:"MultiAssetsV5",ExecutionResult:"Option<(u32, XcmErrorV3)>",Version:"u32",PalletsInfo:"Vec<PalletInfoV5>",DispatchResult:"MaybeErrorCodeV3"}},QueryResponseInfoV5:{destination:"MultiLocationV5",queryId:"Compact<u64>",maxWeight:"WeightV2"},InstructionV5:{_enum:{WithdrawAsset:"MultiAssetsV5",ReserveAssetDeposited:"MultiAssetsV5",ReceiveTeleportedAsset:"MultiAssetsV5",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV5",maxWeight:"WeightV2",querier:"Option<MultiLocationV5>"},TransferAsset:{assets:"MultiAssetsV5",beneficiary:"MultiLocationV5"},TransferReserveAsset:{assets:"MultiAssetsV5",dest:"MultiLocationV5",xcm:"XcmV5"},Transact:{originKind:"OriginKindV4",requireWeightAtMost:"WeightV2",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocationV5",ReportError:"QueryResponseInfoV4",DepositAsset:{assets:"MultiAssetFilterV5",beneficiary:"MultiLocationV5"},DepositReserveAsset:{assets:"MultiAssetFilterV5",dest:"MultiLocationV5",xcm:"XcmV5"},ExchangeAsset:{give:"MultiAssetFilterV5",want:"MultiAssetsV5",maximal:"bool"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV5",reserve:"MultiLocationV5",xcm:"XcmV5"},InitiateTeleport:{assets:"MultiAssetFilterV5",dest:"MultiLocationV5",xcm:"XcmV5"},ReportHolding:{responseInfo:"QueryResponseInfoV4",assets:"MultiAssetFilterV5"},BuyExecution:{fees:"MultiAssetV4",weightLimit:"WeightLimitV3"},RefundSurplus:"Null",SetErrorHandler:"XcmV5",SetAppendix:"XcmV5",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV5",ticket:"MultiLocationV5"},Trap:"Compact<u64>",SubscribeVersion:{queryId:"Compact<u64>",maxResponseWeight:"WeightV2"},UnsubscribeVersion:"Null",BurnAsset:"MultiAssetsV5",ExpectAsset:"MultiAssetsV5",ExpectOrigin:"Option<MultiLocationV5>",ExpectError:"Option<(u32, XcmErrorV3)>",ExpectTransactStatus:"MaybeErrorCodeV3",QueryPallet:{moduleName:"Vec<u8>",responseInfo:"QueryResponseInfoV4"},ExpectPallet:{index:"Compact<u32>",name:"Vec<u8>",moduleName:"Vec<u8>",crateMajor:"Compact<u32>",minCrateMinor:"Compact<u32>"},ReportTransactStatus:"QueryResponseInfoV4",ClearTransactStatus:"Null",UniversalOrigin:"JunctionV5",ExportMessage:{network:"NetworkIdV5",destination:"InteriorMultiLocationV5",xcm:"XcmV5"},LockAsset:{asset:"MultiAssetV5",unlocker:"MultiLocationV5"},UnlockAsset:{asset:"MultiAssetV5",target:"MultiLocationV5"},NoteUnlockable:{asset:"MultiAssetV5",owner:"MultiLocationV5"},RequestUnlock:{asset:"MultiAssetV5",locker:"MultiLocationV5"},SetFeesMode:{jitWithdraw:"bool"},SetTopic:"[u8;32]",ClearTopic:"Null",AliasOrigin:"MultiLocationV5",UnpaidExecution:{weightLimit:"WeightLimitV3",checkOrigin:"Option<MultiLocationV5>"},PayFees:{asset:"MultiAssetV5"},InitiateTransfer:{destination:"MultiLocationV5",remoteFees:"Option<MultiAssetTransferFilterV5>",preserveOrigin:"bool",assets:"Vec<MultiAssetTransferFilterV5>",remoteXcm:"XcmV5"},ExecuteWithOrigin:{descendant_origin:"Option<InteriorMultiLocationV5>",xcm:"XcmV5"},SetHints:{hints:"Vec<HintV5>"}}},HintV5:{_enum:{AssetClaimer:{location:"MultiLocationV5"}}},XcmErrorV5:"XcmErrorV3"},XCM_LATEST="V5",xcm={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},location={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}},definitions$e={rpc:{},types:{...location,...xcm,...v0,...v1,...v2,...v3,...v4,...v5,...mapXcmTypes(XCM_LATEST),DoubleEncodedCall:{encoded:"Bytes"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2",V3:"MultiAssetV3",V4:"MultiAssetV4",V5:"MultiAssetV5"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2",V3:"MultiAssetsV3",V4:"MultiAssetsV4",V5:"MultiAssetsV5"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2",V3:"MultiLocationV3",V4:"MultiLocationV4",v5:"MultiLocationV5"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2",V3:"ResponseV3",V4:"ResponseV4",V5:"ResponseV5"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2",V3:"XcmV3",V4:"XcmV4",V5:"XcmV5"}},XcmVersion:"u32"}},runtime$7={XcmPaymentApi:[{methods:{query_acceptable_payment_assets:{description:"The API to query acceptable payment assets",params:[{name:"version",type:"u32"}],type:"Result<Vec<XcmVersionedAssetId>, XcmPaymentApiError>"},query_weight_to_asset_fee:{description:"",params:[{name:"weight",type:"WeightV2"},{name:"asset",type:"XcmVersionedAssetId"}],type:"Result<u128, XcmPaymentApiError>"},query_xcm_weight:{description:"",params:[{name:"message",type:"XcmVersionedXcm"}],type:"Result<WeightV2, XcmPaymentApiError>"}},version:1}]},definitions$d={rpc:{},runtime:runtime$7,types:{XcmPaymentApiError:{_enum:["Unimplemented","VersionedConversionFailed","WeightNotComputable","UnhandledXcmVersion","AssetNotFound"]}}},runtime$6={LocationToAccountApi:[{methods:{convert_location:{description:"Converts `Location` to `AccountId`",params:[{name:"location",type:"XcmVersionedLocation"}],type:"Result<AccountId, Error>"}},version:1}]},definitions$c={rpc:{},runtime:runtime$6,types:{Error:{_enum:["Unsupported","VersionedConversionFailed"]}}},layout={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},spec={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV4:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>",default:"bool",returnType:"Option<ContractTypeSpec>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV4:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractContractSpecV5:{constructors:"Vec<ContractConstructorSpecV4>",messages:"Vec<ContractMessageSpecV3>",events:"Vec<ContractEventSpecV3>",docs:"Vec<Text>",environment:"ContractEnvironmentV4"},ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractEventSpecV3:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>",module_path:"Text",signature_topic:"Option<[u8; 32]>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV3:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>",default:"bool"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},latest={ContractConstructorSpecLatest:"ContractConstructorSpecV4",ContractEventSpecLatest:"ContractEventSpecV3",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV3",ContractMetadataLatest:"ContractMetadataV5"},definitions$b={rpc:{},types:{...layout,...spec,...latest,ContractProjectInfo:{source:"ContractProjectSource",contract:"ContractProjectContract"},ContractMetadataV0:{metadataVersion:"Text",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1:{types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2:{types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3:{types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractMetadataV4:{types:"Vec<PortableType>",spec:"ContractContractSpecV4",version:"Text"},ContractMetadataV5:{types:"Vec<PortableType>",spec:"ContractContractSpecV5",version:"u64"},ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3",V4:"ContractMetadataV4",V5:"ContractMetadataV5"}},ContractProjectV0:{metadataVersion:"Text",source:"ContractProjectSource",contract:"ContractProjectContract",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"},ContractEnvironmentV4:{_alias:{hashType:"hash"},accountId:"Option<ContractTypeSpec>",balance:"Option<ContractTypeSpec>",blockNumber:"Option<ContractTypeSpec>",hashType:"Option<ContractTypeSpec>",timestamp:"Option<ContractTypeSpec>",maxEventTopics:"Option<u32>"}}},netRpc={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"Text"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"Text"}},web3Rpc={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"Text"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}},rpc$7={...netRpc,...web3Rpc,accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},feeHistory:{description:"Returns fee history for given block count & reward percentiles",params:[{name:"blockCount",type:"U256"},{name:"newestBlock",type:"BlockNumber"},{name:"rewardPercentiles",type:"Option<Vec<f64>>"}],type:"EthFeeHistory"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},maxPriorityFeePerGas:{description:"Returns max priority fee per gas",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}},ethMethodsV4={account_basic:{description:"Returns pallet_evm::Accounts by address.",params:[{name:"address",type:"H160"}],type:"EvmAccount"},account_code_at:{description:"For a given account address, returns pallet_evm::AccountCodes.",params:[{name:"address",type:"H160"}],type:"Bytes"},author:{description:"Returns the converted FindAuthor::find_author authority id.",params:[],type:"H160"},call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfo, DispatchError>"},chain_id:{description:"Returns runtime defined pallet_evm::ChainId.",params:[],type:"u64"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfo, DispatchError>"},current_all:{description:"Return all the current data for a block in a single runtime call.",params:[],type:"(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)"},current_block:{description:"Return the current block.",params:[],type:"BlockV2"},current_receipts:{description:"Return the current receipt.",params:[],type:"Option<Vec<EthReceiptV3>>"},current_transaction_statuses:{description:"Return the current transaction status.",params:[],type:"Option<Vec<EthTransactionStatus>>"},elasticity:{description:"Return the elasticity multiplier.",params:[],type:"Option<Permill>"},extrinsic_filter:{description:"Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.",params:[{name:"xts",type:"Vec<Extrinsic>"}],type:"Vec<TransactionV2>"},gas_price:{description:"Returns FixedGasPrice::min_gas_price",params:[],type:"u256"},storage_at:{description:"For a given account address and index, returns pallet_evm::AccountStorages.",params:[{name:"address",type:"H160"},{name:"index",type:"u256"}],type:"H256"}},ethMethodsV5={call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfoV2, DispatchError>"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfoV2, DispatchError>"}},runtime$5={ConvertTransactionRuntimeApi:[{methods:{convert_transaction:{description:"Converts an Ethereum-style transaction to Extrinsic",params:[{name:"transaction",type:"TransactionV2"}],type:"Extrinsic"}},version:2}],DebugRuntimeApi:[{methods:{trace_block:{description:"Trace all block extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"knownTransactions",type:"Vec<H256>"}],type:"Result<(), DispatchError>"},trace_transaction:{description:"Trace transaction extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"transaction",type:"EthTransaction"}],type:"Result<(), DispatchError>"}},version:4}],EthereumRuntimeRPCApi:[{methods:{...ethMethodsV4},version:4},{methods:{...ethMethodsV4,...ethMethodsV5},version:5}]},V0={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},V1={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},V2={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},types={...V0,...V1,...V2,EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFeeHistory:{oldestBlock:"U256",baseFeePerGas:"Vec<U256>",gasUsedRatio:"Vec<f64>",reward:"Option<Vec<Vec<U256>>>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthReceiptV0:"EthReceipt",EthReceiptV3:"EthReceipt",EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:{hash:"H256",nonce:"U256",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionIndex:"Option<U256>",from:"H160",to:"Option<H160>",value:"U256",gasPrice:"Option<U256>",maxFeePerGas:"Option<U256>",maxPriorityFeePerGas:"Option<U256>",gas:"U256",input:"Bytes",creates:"Option<H160>",raw:"Bytes",publicKey:"Option<H512>",chainId:"Option<U64>",standardV:"U256",v:"U256",r:"U256",s:"U256",accessList:"Option<Vec<EthAccessListItem>>",transactionType:"Option<U256>"},EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}},definitions$a={rpc:rpc$7,runtime:runtime$5,types},runtime$4={AuthorFilterAPI:[{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:2},{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"}],type:"bool"}},version:1}],NimbusApi:[{methods:{can_author:{description:"The runtime api used to predict whether a Nimbus author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:1}]},definitions$9={rpc:{},runtime:runtime$4,types:{}},runtime$3={OracleApi:[{methods:{get_all_values:{description:"Retrieves all values",params:[{name:"providerId",type:"Raw"}],type:"Raw"},get_value:{description:"Retrieves a single value",params:[{name:"providerId",type:"Raw"},{name:"key",type:"Raw"}],type:"Option<Raw>"}},version:1}]},definitions$8={rpc:{},runtime:runtime$3,types:{}},runtime$2={TokensApi:[{methods:{query_existential_deposit:{description:"Query the existential amount for a specific currency",params:[{name:"currencyId",type:"Raw"}],type:"u128"}},version:1}]},definitions$7={rpc:{},runtime:runtime$2,types:{}},rpc$6={methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}},definitions$6={rpc:rpc$6,types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}},rpc$5={hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",isUnsafe:!0,params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",isUnsafe:!0,params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},insertKey:{description:"Insert a key into the keystore.",isUnsafe:!0,params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",isUnsafe:!0,params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",isUnsafe:!0,params:[],type:"Bytes"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"},submitExtrinsic:{description:"Submit a fully formatted extrinsic for block inclusion",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"}},definitions$5={rpc:rpc$5,types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}},rpc$4={getBlock:{description:"Get header and body of a relay chain block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{isOptional:!0,name:"blockNumber",type:"BlockNumber"}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"}},definitions$4={rpc:rpc$4,types:{BlockHash:"Hash"}},rpc$3={getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<u64>"}},definitions$3={rpc:rpc$3,types:{PrefixedStorageKey:"StorageKey"}},rpc$2={localStorageClear:{description:"Clear offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Null"},localStorageGet:{description:"Get offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},localStorageSet:{description:"Set offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"}},runtime$1={OffchainWorkerApi:[{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"header",type:"Header"}],type:"Null"}},version:2},{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"number",type:"BlockNumber"}],type:"Null"}},version:1}]},definitions$2={rpc:rpc$2,runtime:runtime$1,types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}},rpc$1={queryFeeDetails:{deprecated:"Use `api.call.transactionPaymentApi.queryFeeDetails` instead",description:"Query the detailed fee of a given encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"FeeDetails"},queryInfo:{deprecated:"Use `api.call.transactionPaymentApi.queryInfo` instead",description:"Retrieves the fee information for an encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeDispatchInfoV1"}},V1_TO_V4_SHARED_PAY={query_fee_details:{description:"The transaction fee details",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"FeeDetails"}},V1_TO_V3_SHARED_CALL={query_call_fee_details:{description:"The call fee details",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"FeeDetails"}},V2_TO_V4_SHARED_PAY={query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V2_V3_SHARED_CALL={query_call_info:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V3_SHARED_PAY_CALL={query_length_to_fee:{description:"Query the output of the current LengthToFee given some input",params:[{name:"length",type:"u32"}],type:"Balance"},query_weight_to_fee:{description:"Query the output of the current WeightToFee given some input",params:[{name:"weight",type:"Weight"}],type:"Balance"}},runtime={TransactionPaymentApi:[{methods:{...V3_SHARED_PAY_CALL,...V2_TO_V4_SHARED_PAY,...V1_TO_V4_SHARED_PAY},version:4},{methods:{...V3_SHARED_PAY_CALL,...V2_TO_V4_SHARED_PAY,...V1_TO_V4_SHARED_PAY},version:3},{methods:{...V2_TO_V4_SHARED_PAY,...V1_TO_V4_SHARED_PAY},version:2},{methods:{query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...V1_TO_V4_SHARED_PAY},version:1}],TransactionPaymentCallApi:[{methods:{...V3_SHARED_PAY_CALL,...V2_V3_SHARED_CALL,...V1_TO_V3_SHARED_CALL},version:3},{methods:{...V2_V3_SHARED_CALL,...V1_TO_V3_SHARED_CALL},version:2},{methods:{CALL:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"},...V1_TO_V3_SHARED_CALL},version:1}]},definitions$1={rpc:rpc$1,runtime,types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV1:{weight:"WeightV1",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV2:{weight:"WeightV2",class:"DispatchClass",partialFee:"Balance"}}},rpc={call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Bytes"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},getKeys:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getMetadata:{description:"Returns the runtime metadata",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Metadata"},getPairs:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",isUnsafe:!0,params:[{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<KeyValue>"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeVersion"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",isUnsafe:!0,params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{isOptional:!0,name:"toBlock",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{isOptional:!0,name:"keys",type:"Vec<StorageKey>"}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",isUnsafe:!0,params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",isUnsafe:!0,params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MigrationStatusResult"}},definitions={rpc,types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32",stateVersion:"u8"},RuntimeVersionPre4:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPre3:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32",apis:"Vec<RuntimeVersionApi>"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}},typeDefinitions=Object.freeze(Object.defineProperty({__proto__:null,assetConversion:definitions$19,assets:definitions$18,attestations:definitions$o,aura:definitions$17,author:definitions$5,authorship:definitions$16,babe:definitions$15,balances:definitions$14,beefy:definitions$13,benchmark:definitions$12,blockbuilder:definitions$11,bridges:definitions$n,chain:definitions$4,childstate:definitions$3,claims:definitions$m,collective:definitions$10,consensus:definitions$$,contracts:definitions$_,contractsAbi:definitions$b,crowdloan:definitions$l,cumulus:definitions$k,democracy:definitions$Z,dev:definitions$Y,discovery:definitions$X,dryRunApi:definitions$f,elections:definitions$W,engine:definitions$V,eth:definitions$a,evm:definitions$U,extrinsics:definitions$T,finality:definitions$j,fungibles:definitions$S,genericAsset:definitions$R,genesisBuilder:definitions$Q,gilt:definitions$P,grandpa:definitions$O,identity:definitions$N,imOnline:definitions$M,lottery:definitions$L,metadata:definitions$1c,mixnet:definitions$K,mmr:definitions$J,nfts:definitions$I,nimbus:definitions$9,nompools:definitions$H,offchain:definitions$2,offences:definitions$G,ormlOracle:definitions$8,ormlTokens:definitions$7,parachains:definitions$i,payment:definitions$1,poll:definitions$h,pow:definitions$F,proxy:definitions$E,purchase:definitions$g,recovery:definitions$D,rpc:definitions$6,runtime:definitions$1b,scaleInfo:definitions$1a,scheduler:definitions$C,session:definitions$B,society:definitions$A,staking:definitions$z,state:definitions,statement:definitions$y,support:definitions$x,syncstate:definitions$w,system:definitions$v,treasury:definitions$u,txpayment:definitions$t,txqueue:definitions$s,uniques:definitions$r,utility:definitions$q,vesting:definitions$p,xcm:definitions$e,xcmPaymentApi:definitions$d,xcmRuntimeApi:definitions$c},Symbol.toStringTag,{value:"Module"})),l$7=logger$2("PortableRegistry"),TYPE_UNWRAP={toNumber:()=>-1},PRIMITIVE_ALIAS={Char:"u32",Str:"Text"},PATHS_ALIAS=splitNamespace(["sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","fp_account::AccountId20","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight","*_democracy::vote::Vote","*_conviction_voting::vote::Vote","*_identity::types::Data","sp_core::OpaqueMetadata","sp_core::OpaquePeerId","sp_core::offchain::OpaqueMultiaddr","primitive_types::*","sp_arithmetic::per_things::*","*_runtime::RuntimeCall","*_runtime::RuntimeEvent","ink::env::types::*","ink::primitives::types::*","ink_env::types::*","ink_primitives::types::*"]),PATHS_SET=splitNamespace(["pallet_identity::types::BitFlags"]),BITVEC_NS_LSB=["bitvec::order::Lsb0","BitOrderLsb0"],BITVEC_NS_MSB=["bitvec::order::Msb0","BitOrderMsb0"],BITVEC_NS=[...BITVEC_NS_LSB,...BITVEC_NS_MSB],WRAPPERS=["BoundedBTreeMap","BoundedBTreeSet","BoundedVec","Box","BTreeMap","BTreeSet","Cow","Option","Range","RangeInclusive","Result","WeakBoundedVec","WrapperKeepOpaque","WrapperOpaque"],RESERVED=["entries","keys","new","size","hash","registry"],PATH_RM_INDEX_1=["generic","misc","pallet","traits","types"];function sanitizeDocs(et){const tt=et.length,ot=new Array(tt);for(let dt=0;dt<tt;dt++)ot[dt]=et[dt].toString();return ot}function splitNamespace(et){const tt=et.length,ot=new Array(tt);for(let dt=0;dt<tt;dt++)ot[dt]=et[dt].split("::");return ot}function matchParts(et,tt){return et.length===tt.length&&et.every((ot,dt)=>{const ft=tt[dt].toString();if(ot==="*"||ot===ft)return!0;if(ot.includes("*")&&ot.includes("_")&&ft.includes("_")){let pt=ot.split("_"),mt=ft.split("_");if(pt[0]==="*"){const ht=mt.indexOf(pt[1]);ht!==-1&&(pt=pt.slice(1),mt=mt.slice(ht))}return pt.length===2&&pt[1]==="*"&&pt[0]===mt[0]?!0:matchParts(pt,mt)}return!1})}function getAliasPath({def:et,path:tt}){return["frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight"].includes(tt.join("::"))?!et.isComposite||et.asComposite.fields.length===1?"WeightV1":null:tt.length&&PATHS_ALIAS.some(ot=>matchParts(ot,tt))?tt[tt.length-1].toString():null}function extractNameFlat(et,tt,ot,dt,ft=!1){const pt=dt.length;if(pt===0||WRAPPERS.includes(dt[pt-1].toString()))return null;const mt=new Array(pt),ht=new Array(pt);for(let yt=0;yt<pt;yt++){const xt=stringPascalCase$1(ft?dt[yt].replace("pallet_",""):dt[yt]),gt=xt.toLowerCase();mt[yt]=xt,ht[yt]=gt}let bt="";for(let yt=0;yt<pt;yt++){const xt=ht[yt];(yt!==1||!PATH_RM_INDEX_1.includes(xt))&&xt!==ht[yt+1]&&(bt+=mt[yt])}if(mt[1]==="RawOrigin"&&pt===2&&ot.length===2&&ot[1].type.isSome){const yt=et[ot[1].type.unwrap().toNumber()];yt.type.path.length===2&&(bt=`${bt}${yt.type.path[1].toString()}`)}return{lookupIndex:tt,name:bt,params:ot}}function extractName(et,tt,{type:{params:ot,path:dt}}){return extractNameFlat(et,tt,ot,dt)}function nextDupeMatches(et,tt,ot){const dt=[ot[tt]];for(let ft=tt+1,pt=ot.length;ft<pt;ft++){const mt=ot[ft];mt.name===et&&dt.push(mt)}return dt}function rewriteDupes(et,tt){const ot=et.length;for(let dt=0;dt<ot;dt++){const ft=et[dt];for(let pt=dt+1;pt<ot;pt++){const mt=et[pt];if(ft.lookupIndex!==mt.lookupIndex&&ft.name===mt.name)return!1}}for(let dt=0;dt<ot;dt++){const ft=et[dt];tt[ft.lookupIndex]=ft.name}return!0}function removeDupeNames(et,tt,ot){const dt={};return ot.map((ft,pt)=>{const{lookupIndex:mt,name:ht,params:bt}=ft;if(ht){if(dt[mt])return ft}else return null;const yt=nextDupeMatches(ht,pt,ot);if(yt.length===1||!yt.some(St=>bt.length!==St.params.length||bt.some((Et,Lt)=>!Et.name.eq(St.params[Lt].name)||Et.type.unwrapOr(TYPE_UNWRAP).toNumber()!==St.params[Lt].type.unwrapOr(TYPE_UNWRAP).toNumber())))return ft;const gt=bt.findIndex(({type:St},Et)=>yt.every(({params:Lt},It)=>Lt[Et].type.isSome&&(It===0||!Lt[Et].type.eq(St))));if(gt===-1)return ft;const wt=yt.length,Pt=new Array(wt);for(let St=0;St<wt;St++){const{lookupIndex:Et,name:Lt,params:It}=yt[St],{def:kt,path:Nt}=et.getSiType(It[gt].type.unwrap());if(!kt.isPrimitive&&!Nt.length)return null;Pt[St]={lookupIndex:Et,name:kt.isPrimitive?`${Lt}${kt.asPrimitive.toString()}`:`${Lt}${Nt[Nt.length-1].toString()}`}}if(rewriteDupes(Pt,dt))return ft;for(let St=0;St<wt;St++){const{lookupIndex:Et,name:Lt,params:It}=yt[St],{def:kt,path:Nt}=et.getSiType(It[gt].type.unwrap()),Ut=extractNameFlat(tt,Et,It,Nt,!0);if(kt.isPrimitive||!Ut)return null;Pt[St]={lookupIndex:Et,name:`${Lt}${Ut.name}`}}return rewriteDupes(Pt,dt)?ft:null}).filter(ft=>!!ft).map(({lookupIndex:ft,name:pt,params:mt})=>({lookupIndex:ft,name:dt[ft]||pt,params:mt}))}function registerTypes(et,tt,ot,dt){if(et.registry.register(tt),dt.SpRuntimeUncheckedExtrinsic){const[ft,,pt]=dt.SpRuntimeUncheckedExtrinsic,mt=et.getSiType(ft.type.unwrap()),bt=et.getSiType(pt.type.unwrap()).path.join("::");let yt=mt.path.join("::");const xt=yt==="sp_runtime::multiaddress::MultiAddress";if(xt){const[gt]=mt.params;yt=et.getSiType(gt.type.unwrap()).path.join("::")}et.registry.register({AccountId:yt.endsWith("::AccountId20")||yt.endsWith("::H160")?"AccountId20":"AccountId32",Address:xt?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(bt)?"MultiSignature":ot[pt.type.unwrap().toNumber()]||"MultiSignature"})}}function extractAliases(et,tt){const ot=Object.keys(et).some(ft=>!ft.startsWith("Pallet")),dt={};if(et.SpRuntimeUncheckedExtrinsic){const[,{type:ft}]=et.SpRuntimeUncheckedExtrinsic;dt[ft.unwrap().toNumber()]="Call"}else ot&&!tt&&l$7.warn("Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic");if(et.FrameSystemEventRecord){const[{type:ft}]=et.FrameSystemEventRecord;dt[ft.unwrap().toNumber()]="Event"}else ot&&!tt&&l$7.warn("Unable to determine runtime Event type, cannot inspect frame_system::EventRecord");return dt}function extractTypeInfo(et,tt){const ot=[],dt={};for(let bt=0,yt=tt.length;bt<yt;bt++){const xt=tt[bt],gt=xt.id.toNumber(),wt=extractName(tt,gt,tt[bt]);wt&&ot.push(wt),dt[gt]=xt}const ft={},pt={},mt={},ht=removeDupeNames(et,tt,ot);for(let bt=0,yt=ht.length;bt<yt;bt++){const{lookupIndex:xt,name:gt,params:wt}=ht[bt];pt[xt]=gt,ft[gt]=et.registry.createLookupType(xt),mt[gt]=wt}return{lookups:ft,names:pt,params:mt,types:dt}}class PortableRegistry extends Struct{constructor(ot,dt,ft){super(ot,{types:"Vec<PortableType>"},dt);Ot(this,"__internal__alias");Ot(this,"__internal__lookups");Ot(this,"__internal__names");Ot(this,"__internal__params");Ot(this,"__internal__typeDefs",{});Ot(this,"__internal__types");const{lookups:pt,names:mt,params:ht,types:bt}=extractTypeInfo(this,this.types);this.__internal__alias=extractAliases(ht,ft),this.__internal__lookups=pt,this.__internal__names=mt,this.__internal__params=ht,this.__internal__types=bt}get names(){return Object.values(this.__internal__names).sort()}get paramTypes(){return this.__internal__params}get types(){return this.getT("types")}register(){registerTypes(this,this.__internal__lookups,this.__internal__names,this.__internal__params)}getName(ot){return this.__internal__names[this.__internal__getLookupId(ot)]}getSiType(ot){const dt=(this.__internal__types||this.types)[this.__internal__getLookupId(ot)];if(!dt)throw new Error(`PortableRegistry: Unable to find type with lookupId ${ot.toString()}`);return dt.type}getTypeDef(ot){const dt=this.__internal__getLookupId(ot);if(!this.__internal__typeDefs[dt]){const ft=this.__internal__names[dt],pt={info:TypeDefInfo.DoNotConstruct,lookupIndex:dt,lookupName:ft,type:this.registry.createLookupType(dt)};ft&&(this.__internal__typeDefs[dt]=pt);const mt=this.__internal__extract(this.getSiType(ot),dt);ft||(this.__internal__typeDefs[dt]=pt),Object.keys(mt).forEach(ht=>{(ht!=="lookupName"||mt[ht])&&(this.__internal__typeDefs[dt][ht]=mt[ht])}),mt.info===TypeDefInfo.Plain&&(this.__internal__typeDefs[dt].lookupNameRoot=this.__internal__typeDefs[dt].lookupName,delete this.__internal__typeDefs[dt].lookupName)}return this.__internal__typeDefs[dt]}sanitizeField(ot){let dt=null,ft=null;return ot.isSome&&(dt=stringCamelCase$1(ot.unwrap()),dt.includes("#")?(ft=dt,dt=ft.replace(/#/g,"_")):RESERVED.includes(dt)&&(ft=dt,dt=`${dt}_`)),[dt,ft]}__internal__createSiDef(ot){const dt=this.getTypeDef(ot),ft=ot.toNumber();return[TypeDefInfo.DoNotConstruct,TypeDefInfo.Enum,TypeDefInfo.Struct].includes(dt.info)&&dt.lookupName?{docs:dt.docs,info:TypeDefInfo.Si,lookupIndex:ft,lookupName:this.__internal__names[ft],type:this.registry.createLookupType(ot)}:dt}__internal__getLookupId(ot){if(isString$3(ot)){if(!this.registry.isLookupType(ot))throw new Error(`PortableRegistry: Expected a lookup string type, found ${ot}`);return parseInt(ot.replace("Lookup",""),10)}else if(isNumber$3(ot))return ot;return ot.toNumber()}__internal__extract(ot,dt){const ft=ot.path.join("::");let pt;const mt=this.__internal__alias[dt]||getAliasPath(ot);try{if(mt)pt=this.__internal__extractAliasPath(dt,mt);else switch(ot.def.type){case"Array":pt=this.__internal__extractArray(dt,ot.def.asArray);break;case"BitSequence":pt=this.__internal__extractBitSequence(dt,ot.def.asBitSequence);break;case"Compact":pt=this.__internal__extractCompact(dt,ot.def.asCompact);break;case"Composite":pt=this.__internal__extractComposite(dt,ot,ot.def.asComposite);break;case"HistoricMetaCompat":pt=this.__internal__extractHistoric(dt,ot.def.asHistoricMetaCompat);break;case"Primitive":pt=this.__internal__extractPrimitive(dt,ot);break;case"Sequence":pt=this.__internal__extractSequence(dt,ot.def.asSequence);break;case"Tuple":pt=this.__internal__extractTuple(dt,ot.def.asTuple);break;case"Variant":pt=this.__internal__extractVariant(dt,ot,ot.def.asVariant);break;default:assertUnreachable(ot.def.type)}}catch(ht){throw new Error(`PortableRegistry: ${dt}${ft?` (${ft})`:""}: Error extracting ${stringify$4(ot)}: ${ht.message}`)}return objectSpread$4({docs:sanitizeDocs(ot.docs),namespace:ft},pt)}__internal__extractArray(ot,{len:dt,type:ft}){const pt=dt.toNumber();if(pt>2048)throw new Error("Only support for [Type; <length>], where length <= 2048");return withTypeString(this.registry,{info:TypeDefInfo.VecFixed,length:pt,sub:this.__internal__createSiDef(ft)})}__internal__extractBitSequence(ot,{bitOrderType:dt,bitStoreType:ft}){const pt=this.__internal__createSiDef(dt),mt=this.__internal__createSiDef(ft),[ht,bt]=BITVEC_NS.includes(pt.namespace||"")?[pt,mt]:[mt,pt];if(!ht.namespace||!BITVEC_NS.includes(ht.namespace))throw new Error(`Unexpected bitOrder found as ${ht.namespace||"<unknown>"}`);if(bt.info!==TypeDefInfo.Plain||bt.type!=="u8")throw new Error(`Only u8 bitStore is currently supported, found ${bt.type}`);return BITVEC_NS_LSB.includes(ht.namespace),{info:TypeDefInfo.Plain,type:"BitVec"}}__internal__extractCompact(ot,{type:dt}){return withTypeString(this.registry,{info:TypeDefInfo.Compact,sub:this.__internal__createSiDef(dt)})}__internal__extractComposite(ot,{params:dt,path:ft},{fields:pt}){if(ft.length){const mt=ft[0].toString(),ht=ft[ft.length-1].toString();if(ft.length===1&&mt==="BTreeMap"){if(dt.length!==2)throw new Error(`BTreeMap requires 2 parameters, found ${dt.length}`);return withTypeString(this.registry,{info:TypeDefInfo.BTreeMap,sub:dt.map(({type:bt})=>this.__internal__createSiDef(bt.unwrap()))})}else if(ft.length===1&&mt==="BTreeSet"){if(dt.length!==1)throw new Error(`BTreeSet requires 1 parameter, found ${dt.length}`);return withTypeString(this.registry,{info:TypeDefInfo.BTreeSet,sub:this.__internal__createSiDef(dt[0].type.unwrap())})}else if(["Range","RangeInclusive"].includes(mt)){if(dt.length!==1)throw new Error(`Range requires 1 parameter, found ${dt.length}`);return withTypeString(this.registry,{info:mt==="Range"?TypeDefInfo.Range:TypeDefInfo.RangeInclusive,sub:this.__internal__createSiDef(dt[0].type.unwrap()),type:mt})}else if(["WrapperKeepOpaque","WrapperOpaque"].includes(ht)){if(dt.length!==1)throw new Error(`WrapperOpaque requires 1 parameter, found ${dt.length}`);return withTypeString(this.registry,{info:ht==="WrapperKeepOpaque"?TypeDefInfo.WrapperKeepOpaque:TypeDefInfo.WrapperOpaque,sub:this.__internal__createSiDef(dt[0].type.unwrap()),type:ht})}}return PATHS_SET.some(mt=>matchParts(mt,ft))?this.__internal__extractCompositeSet(ot,dt,pt):this.__internal__extractFields(ot,pt)}__internal__extractCompositeSet(ot,dt,ft){if(dt.length!==1||ft.length!==1)throw new Error("Set handling expects param/field as single entries");return withTypeString(this.registry,{info:TypeDefInfo.Set,length:this.registry.createTypeUnsafe(this.registry.createLookupType(ft[0].type),[]).bitLength(),sub:this.getSiType(dt[0].type.unwrap()).def.asVariant.variants.map(({index:pt,name:mt})=>({index:pt.toNumber(),info:TypeDefInfo.Plain,name:mt.toString(),type:"Null"}))})}__internal__extractFields(ot,dt){let ft=!0,pt=!0;const mt=dt.length;for(let yt=0;yt<mt;yt++){const{name:xt}=dt[yt];ft=ft&&xt.isSome,pt=pt&&xt.isNone}if(!pt&&!ft)throw new Error("Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)");if(mt===0)return{info:TypeDefInfo.Null,type:"Null"};if(pt&&mt===1){const yt=this.__internal__createSiDef(dt[0].type);return objectSpread$4({},yt,ot===-1?null:{lookupIndex:ot,lookupName:this.__internal__names[ot],lookupNameRoot:yt.lookupName},dt[0].typeName.isSome?{typeName:sanitize(dt[0].typeName.unwrap())}:null)}const[ht,bt]=this.__internal__extractFieldsAlias(dt);return withTypeString(this.registry,objectSpread$4({info:pt?TypeDefInfo.Tuple:TypeDefInfo.Struct,sub:ht},bt.size?{alias:bt}:null,ot===-1?null:{lookupIndex:ot,lookupName:this.__internal__names[ot]}))}__internal__extractFieldsAlias(ot){const dt=new Map,ft=ot.length,pt=new Array(ft);for(let mt=0;mt<ft;mt++){const{docs:ht,name:bt,type:yt,typeName:xt}=ot[mt],gt=this.__internal__createSiDef(yt);if(bt.isNone)pt[mt]=gt;else{const[wt,Pt]=this.sanitizeField(bt);wt&&Pt&&dt.set(wt,Pt),pt[mt]=objectSpread$4({docs:sanitizeDocs(ht),name:wt},gt,xt.isSome?{typeName:sanitize(xt.unwrap())}:null)}}return[pt,dt]}__internal__extractHistoric(ot,dt){return objectSpread$4({displayName:dt.toString(),isFromSi:!0},getTypeDef(dt))}__internal__extractPrimitive(ot,dt){const ft=dt.def.asPrimitive.type.toString();return{info:TypeDefInfo.Plain,type:PRIMITIVE_ALIAS[ft]||ft.toLowerCase()}}__internal__extractAliasPath(ot,dt){return{info:TypeDefInfo.Plain,type:dt}}__internal__extractSequence(ot,{type:dt}){const ft=this.__internal__createSiDef(dt);return ft.type==="u8"?{info:TypeDefInfo.Plain,type:"Bytes"}:withTypeString(this.registry,{info:TypeDefInfo.Vec,lookupIndex:ot,lookupName:this.__internal__names[ot],sub:ft})}__internal__extractTuple(ot,dt){if(dt.length===0)return{info:TypeDefInfo.Null,type:"Null"};if(dt.length===1)return this.getTypeDef(dt[0]);const ft=dt.map(pt=>this.__internal__createSiDef(pt));return withTypeString(this.registry,{info:TypeDefInfo.Tuple,lookupIndex:ot,lookupName:this.__internal__names[ot],sub:ft})}__internal__extractVariant(ot,{params:dt,path:ft},{variants:pt}){if(ft.length){const mt=ft[0].toString();if(mt==="Option"){if(dt.length!==1)throw new Error(`Option requires 1 parameter, found ${dt.length}`);return withTypeString(this.registry,{info:TypeDefInfo.Option,sub:this.__internal__createSiDef(dt[0].type.unwrap())})}else if(mt==="Result"){if(dt.length!==2)throw new Error(`Result requires 2 parameters, found ${dt.length}`);return withTypeString(this.registry,{info:TypeDefInfo.Result,sub:dt.map(({type:ht},bt)=>objectSpread$4({name:["Ok","Error"][bt]},this.__internal__createSiDef(ht.unwrap())))})}}return pt.length===0?{info:TypeDefInfo.Null,type:"Null"}:this.__internal__extractVariantEnum(ot,pt)}__internal__extractVariantEnum(ot,dt){const ft=[];return dt.slice().sort((pt,mt)=>pt.index.cmp(mt.index)).forEach(({fields:pt,index:mt,name:ht})=>{const bt=mt.toNumber();for(;ft.length!==bt;)ft.push({index:ft.length,info:TypeDefInfo.Null,name:`__Unused${ft.length}`,type:"Null"});ft.push(objectSpread$4(this.__internal__extractFields(-1,pt),{index:bt,name:ht.toString()}))}),withTypeString(this.registry,{info:TypeDefInfo.Enum,lookupIndex:ot,lookupName:this.__internal__names[ot],sub:ft})}}function flattenUniq(et,tt=[]){for(let ot=0,dt=et.length;ot<dt;ot++){const ft=et[ot];Array.isArray(ft)?flattenUniq(ft,tt):tt.push(ft)}return[...new Set(tt)]}function getSiName(et,tt){const ot=et.getTypeDef(tt);return ot.lookupName||ot.type}function extractSubSingle(et,{sub:tt}){const{lookupName:ot,type:dt}=tt;return extractTypes$1([ot||dt])}function extractSubArray(et,{sub:tt}){return extractTypes$1(tt.map(({lookupName:ot,type:dt})=>ot||dt))}function unhandled(et,{info:tt}){throw new Error(`Unhandled: Unable to create and validate type from ${et} (info=${TypeDefInfo[tt]})`)}const mapping={[TypeDefInfo.BTreeMap]:extractSubArray,[TypeDefInfo.BTreeSet]:extractSubSingle,[TypeDefInfo.Compact]:extractSubSingle,[TypeDefInfo.DoNotConstruct]:unhandled,[TypeDefInfo.Enum]:extractSubArray,[TypeDefInfo.HashMap]:extractSubArray,[TypeDefInfo.Int]:unhandled,[TypeDefInfo.Linkage]:extractSubSingle,[TypeDefInfo.Null]:unhandled,[TypeDefInfo.Option]:extractSubSingle,[TypeDefInfo.Plain]:(et,tt)=>tt.lookupName||tt.type,[TypeDefInfo.Range]:extractSubSingle,[TypeDefInfo.RangeInclusive]:extractSubSingle,[TypeDefInfo.Result]:extractSubArray,[TypeDefInfo.Set]:extractSubArray,[TypeDefInfo.Si]:unhandled,[TypeDefInfo.Struct]:extractSubArray,[TypeDefInfo.Tuple]:extractSubArray,[TypeDefInfo.UInt]:unhandled,[TypeDefInfo.Vec]:extractSubSingle,[TypeDefInfo.VecFixed]:extractSubSingle,[TypeDefInfo.WrapperKeepOpaque]:extractSubSingle,[TypeDefInfo.WrapperOpaque]:extractSubSingle};function extractTypes$1(et){const tt=et.length,ot=new Array(tt);for(let dt=0;dt<tt;dt++){const ft=et[dt],pt=getTypeDef(ft);ot[dt]=mapping[pt.info](ft,pt)}return ot}const l$6=logger$2("metadata");function validateTypes(et,tt,ot){const dt=flattenUniq(extractTypes$1(ot)).filter(ft=>!et.hasType(ft)&&!et.isLookupType(ft)).sort();if(dt.length!==0){const ft=`Unknown types found, no types for ${dt.join(", ")}`;if(tt)throw new Error(ft);l$6.warn(ft)}return ot}function extractTypes(et,tt){return tt.map(({type:ot})=>et.getTypeDef(ot).type)}function extractFieldTypes(et,tt){return et.getSiType(tt).def.asVariant.variants.map(({fields:ot})=>extractTypes(et,ot))}function getPalletNames({lookup:et,pallets:tt}){return tt.reduce((ot,{calls:dt,constants:ft,events:pt,storage:mt})=>(ot.push([extractTypes(et,ft)]),dt.isSome&&ot.push(extractFieldTypes(et,dt.unwrap().type)),pt.isSome&&ot.push(extractFieldTypes(et,pt.unwrap().type)),mt.isSome&&ot.push(mt.unwrap().items.map(({type:ht})=>{if(ht.isPlain)return[et.getTypeDef(ht.asPlain).type];const{hashers:bt,key:yt,value:xt}=ht.asMap;return bt.length===1?[et.getTypeDef(xt).type,et.getTypeDef(yt).type]:[et.getTypeDef(xt).type,...et.getSiType(yt).def.asTuple.map(gt=>et.getTypeDef(gt).type)]})),ot),[])}function getUniqTypes(et,tt,ot){return validateTypes(et,ot,flattenUniq(getPalletNames(tt)))}function trimDocs(et){const tt=et.map(dt=>dt.toString().trim()),ot=tt.findIndex(dt=>!dt.length);return ot===-1?tt:tt.slice(0,ot)}function toCallsOnly(et,{extrinsic:tt,lookup:ot,pallets:dt}){return et.createTypeUnsafe("MetadataLatest",[{extrinsic:tt,lookup:{types:ot.types.map(({id:ft,type:pt})=>et.createTypeUnsafe("PortableType",[{id:ft,type:objectSpread$4({},pt,{docs:trimDocs(pt.docs)})}]))},pallets:dt.map(({calls:ft,index:pt,name:mt})=>({calls:et.createTypeUnsafe("Option<PalletCallMetadataLatest>",[ft.unwrapOr(null)]),index:pt,name:mt}))}]).toJSON()}function unwrapStorageSi(et){return et.isPlain?et.asPlain:et.asMap.value}function unwrapStorageType(et,tt,ot){const dt=getSiName(et.lookup,unwrapStorageSi(tt));return ot?`Option<${dt}>`:dt}function lazyVariants(et,{type:tt},ot,dt){const ft={},pt=et.getSiType(tt).def.asVariant.variants;for(let mt=0,ht=pt.length;mt<ht;mt++)lazyMethod$2(ft,pt[mt],dt,ot,mt);return ft}const emptyCheck={extrinsic:{},payload:{}},polkadot={LimitParathreadCommits:emptyCheck,OnlyStakingAndClaims:emptyCheck,PrevalidateAttests:emptyCheck,RestrictFunctionality:emptyCheck,TransactionCallFilter:emptyCheck,ValidateDoubleVoteReports:emptyCheck},shell={DisallowSigned:emptyCheck},statemint={ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"TAssetConversion"},payload:{}}},CheckMetadataHash={extrinsic:{mode:"u8"},payload:{metadataHash:"Option<[u8;32]>"}},CheckMortality={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}},ChargeTransactionPayment={extrinsic:{tip:"Compact<Balance>"},payload:{}},substrate$1={ChargeTransactionPayment,CheckBlockGasLimit:emptyCheck,CheckEra:CheckMortality,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMetadataHash,CheckMortality,CheckNonZeroSender:emptyCheck,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:emptyCheck,LockStakingStatus:emptyCheck,SkipCheckIfFeeless:ChargeTransactionPayment,ValidateEquivocationReport:emptyCheck,WeightReclaim:emptyCheck},allExtensions=objectSpread$4({},substrate$1,polkadot,shell,statemint),fallbackExtensions=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function findUnknownExtensions(et,tt={}){const ot=[...Object.keys(allExtensions),...Object.keys(tt)];return et.filter(dt=>!ot.includes(dt))}function expandExtensionTypes(et,tt,ot={}){return et.map(dt=>ot[dt]||allExtensions[dt]).filter(dt=>!!dt).reduce((dt,ft)=>objectSpread$4(dt,ft[tt]),{})}function decodeEvent(et,tt){if(!(tt!=null&&tt.length))return{DataType:Null};const ot=tt.subarray(0,2);return{DataType:et.findMetaEvent(ot),value:{data:tt.subarray(2),index:ot}}}class GenericEventData extends Tuple{constructor(ot,dt,ft,pt="<unknown>",mt="<unknown>"){const ht=(ft==null?void 0:ft.fields)||[];super(ot,ht.map(({type:yt})=>ot.createLookupType(yt)),dt);Ot(this,"__internal__meta");Ot(this,"__internal__method");Ot(this,"__internal__names",null);Ot(this,"__internal__section");Ot(this,"__internal__typeDef");this.__internal__meta=ft,this.__internal__method=mt,this.__internal__section=pt,this.__internal__typeDef=ht.map(({type:yt})=>ot.lookup.getTypeDef(yt));const bt=ht.map(({name:yt})=>ot.lookup.sanitizeField(yt)[0]).filter(yt=>!!yt);bt.length===ht.length&&(this.__internal__names=bt,objectProperties$1(this,bt,(yt,xt)=>this[xt]))}get meta(){return this.__internal__meta}get method(){return this.__internal__method}get names(){return this.__internal__names}get section(){return this.__internal__section}get typeDef(){return this.__internal__typeDef}toHuman(ot,dt){if(this.__internal__names!==null){const ft={};for(let pt=0,mt=this.__internal__names.length;pt<mt;pt++)ft[this.__internal__names[pt]]=this[pt].toHuman(ot,dt);return ft}return super.toHuman(ot)}}class GenericEvent extends Struct{constructor(tt,ot){const{DataType:dt,value:ft}=decodeEvent(tt,ot);super(tt,{index:"EventId",data:dt},ft)}get data(){return this.getT("data")}get index(){return this.getT("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(tt,ot){return objectSpread$4({method:this.method,section:this.section},tt?{docs:this.meta.docs.map(dt=>dt.toString())}:null,super.toHuman(tt,ot))}}const BIT_SIGNED=128,BIT_UNSIGNED=0,EMPTY_U8A=new Uint8Array,IMMORTAL_ERA=new Uint8Array([0]),UNMASK_VERSION=127,DEFAULT_PREAMBLE="bare",LATEST_EXTRINSIC_VERSION=5,VERSION_MASK=63,TYPE_MASK=192,BARE_EXTRINSIC=0,GENERAL_EXTRINSIC=64,LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION=4,VERSIONS$1=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4","ExtrinsicV5"],PREAMBLE={bare:"ExtrinsicV5",general:"GeneralExtrinsic"},PreambleMask={bare:BARE_EXTRINSIC,general:GENERAL_EXTRINSIC},preambleUnMask={0:"bare",64:"general"};function newFromValue(et,tt,ot,dt){if(tt instanceof GenericExtrinsic)return tt.unwrap();const ft=(ot&BIT_SIGNED)===BIT_SIGNED,pt=(ot&VERSION_MASK)===5?PREAMBLE[dt]:VERSIONS$1[ot&VERSION_MASK]||VERSIONS$1[0];return et.createTypeUnsafe(pt,[tt,{isSigned:ft,version:ot}])}function decodeExtrinsic(et,tt,ot=LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION,dt=DEFAULT_PREAMBLE){return isU8a$5(tt)||Array.isArray(tt)||isHex$6(tt)?decodeU8a$5(et,u8aToU8a$5(tt),ot,dt):tt instanceof et.createClassUnsafe("Call")?newFromValue(et,{method:tt},ot,dt):newFromValue(et,tt,ot,dt)}function decodeU8a$5(et,tt,ot,dt){if(!tt.length)return newFromValue(et,new Uint8Array,ot,dt);const[ft,pt]=compactFromU8a$1(tt),mt=ft+pt.toNumber();if(mt>tt.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${mt}, found ${tt.length}`);const ht=tt.subarray(ft,mt),bt=ht[0]&TYPE_MASK;return preambleUnMask[`${bt}`]==="general"?newFromValue(et,tt,ht[0],preambleUnMask[`${bt}`]||dt):newFromValue(et,ht.subarray(1),ht[0],preambleUnMask[`${bt}`]||dt)}class ExtrinsicBase extends AbstractBase{constructor(ot,dt,ft,pt){super(ot,dt,ft);Ot(this,"__internal__preamble");const mt=Object.keys(ot.getSignedExtensionTypes());if(this.version===5&&pt!=="general"){const bt=yt=>this.inner.signature[yt];for(let yt=0,xt=mt.length;yt<xt;yt++)objectProperty$1(this,mt[yt],bt)}const ht=this.type&TYPE_MASK;this.__internal__preamble=pt||preambleUnMask[`${ht}`]}isGeneral(){return this.__internal__preamble==="general"}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this.isGeneral()?this.inner.era:this.inner.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this.isGeneral()?!1:this.inner.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this.inner.method}get nonce(){return this.isGeneral()?this.inner.nonce:this.inner.signature.nonce}get signature(){if(this.isGeneral())throw new Error("Extrinsic: GeneralExtrinsic does not have signature implemented");return this.inner.signature.signature}get signer(){if(this.isGeneral())throw new Error("Extrinsic: GeneralExtrinsic does not have signer implemented");return this.inner.signature.signer}get tip(){return this.isGeneral()?this.inner.tip:this.inner.signature.tip}get assetId(){return this.isGeneral()?this.inner.assetId:this.inner.signature.assetId}get metadataHash(){return this.isGeneral()?this.inner.metadataHash:this.inner.signature.metadataHash}get mode(){return this.isGeneral()?this.inner.mode:this.inner.signature.mode}get type(){return this.inner.version}get inner(){return this.unwrap()}get version(){if(this.type<=LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION)return this.type|(this.isSigned?BIT_SIGNED:BIT_UNSIGNED);if(this.isSigned)throw new Error("Signed Extrinsics are currently only available for ExtrinsicV4");return this.type|(this.isGeneral()?PreambleMask.general:PreambleMask.bare)}is(ot){return this.method.is(ot)}unwrap(){return super.unwrap()}}class GenericExtrinsic extends ExtrinsicBase{constructor(ot,dt,{preamble:ft,version:pt}={}){const mt=ot.metadata.extrinsic.versions.length,ht=mt?ot.metadata.extrinsic.versions[mt-1]:void 0;super(ot,decodeExtrinsic(ot,dt,pt||ht,ft),void 0,ft);Ot(this,"__internal__hashCache")}get hash(){return this.__internal__hashCache||(this.__internal__hashCache=super.hash),this.__internal__hashCache}addSignature(ot,dt,ft){return this.inner.addSignature(ot,dt,ft),this.__internal__hashCache=void 0,this}inspect(){const ot=u8aConcat$3(...this.toU8aInner());return{inner:this.isSigned?this.inner.inspect().inner:this.inner.method.inspect().inner,outer:[compactToU8a$1(ot.length),new Uint8Array([this.version])]}}sign(ot,dt){return this.inner.sign(ot,dt),this.__internal__hashCache=void 0,this}signFake(ot,dt){return this.inner.signFake(ot,dt),this.__internal__hashCache=void 0,this}toHex(ot){return u8aToHex$5(this.toU8a(ot))}toHuman(ot,dt){return objectSpread$4({},{isSigned:this.isSigned,method:this.method.toHuman(ot,dt)},this.isSigned?{assetId:this.assetId?this.assetId.toHuman(ot,dt):null,era:this.era.toHuman(ot,dt),metadataHash:this.metadataHash?this.metadataHash.toHex():null,mode:this.mode?this.mode.toHuman():null,nonce:this.nonce.toHuman(ot,dt),signature:this.signature.toHex(),signer:this.signer.toHuman(ot,dt),tip:this.tip.toHuman(ot,dt)}:null)}toJSON(){return this.toHex()}toRawType(){return"Extrinsic"}toU8a(ot){const dt=u8aConcat$3(...this.toU8aInner());return ot?dt:compactAddLength$1(dt)}toU8aInner(){return[new Uint8Array([this.version]),this.inner.toU8a()]}}Ot(GenericExtrinsic,"LATEST_EXTRINSIC_VERSION",LATEST_EXTRINSIC_VERSION);function getTrailingZeros(et){const tt=et.toString(2);let ot=0;for(;tt[tt.length-1-ot]==="0";)ot++;return ot}function decodeMortalEra(et,tt){if(isU8a$5(tt)||isHex$6(tt)||Array.isArray(tt))return decodeMortalU8a(et,u8aToU8a$5(tt));if(tt){if(isObject$7(tt))return decodeMortalObject(et,tt)}else return[new u64(et),new u64(et)];throw new Error("Invalid data passed to Mortal era")}function decodeMortalObject(et,tt){const{current:ot,period:dt}=tt;let ft=Math.pow(2,Math.ceil(Math.log2(dt)));ft=Math.min(Math.max(ft,4),65536);const pt=ot%ft,mt=Math.max(ft>>12,1),ht=pt/mt*mt;return[new u64(et,ft),new u64(et,ht)]}function decodeMortalU8a(et,tt){if(tt.length===0)return[new u64(et),new u64(et)];const ot=u8aToBn$1(tt.subarray(0,1)).toNumber(),dt=u8aToBn$1(tt.subarray(1,2)).toNumber(),ft=ot+(dt<<8),pt=2<<ft%16,mt=Math.max(pt>>12,1),ht=(ft>>4)*mt;if(pt<4||ht>=pt)throw new Error("Invalid data passed to Mortal era");return[new u64(et,pt),new u64(et,ht)]}function decodeExtrinsicEra(et=new Uint8Array){if(isU8a$5(et))return!et.length||et[0]===0?new Uint8Array([0]):new Uint8Array([1,et[0],et[1]]);if(et){if(et instanceof GenericExtrinsicEra)return decodeExtrinsicEra(et.toU8a());if(isHex$6(et))return decodeExtrinsicEra(hexToU8a$6(et));if(isObject$7(et)){const tt=Object.entries(et).map(([ft,pt])=>[ft.toLowerCase(),pt]),ot=tt.find(([ft])=>ft.toLowerCase()==="mortalera"),dt=tt.find(([ft])=>ft.toLowerCase()==="immortalera");return ot?{MortalEra:ot[1]}:dt?{ImmortalEra:dt[1]}:{MortalEra:et}}}else return new Uint8Array([0]);throw new Error("Invalid data passed to Era")}class ImmortalEra extends Raw{constructor(tt,ot){super(tt,IMMORTAL_ERA)}}class MortalEra extends Tuple{constructor(tt,ot){super(tt,{period:u64,phase:u64},decodeMortalEra(tt,ot))}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return{period:formatNumber$1(this.period),phase:formatNumber$1(this.phase)}}toJSON(){return this.toHex()}toU8a(tt){const ot=this.period.toNumber(),dt=Math.min(15,Math.max(1,getTrailingZeros(ot)-1))+(this.phase.toNumber()/Math.max(ot>>12,1)<<4);return new Uint8Array([dt&255,dt>>8])}birth(tt){const ot=this.phase.toNumber(),dt=this.period.toNumber();return~~((Math.max(bnToBn$4(tt).toNumber(),ot)-ot)/dt)*dt+ot}death(tt){return this.birth(tt)+this.period.toNumber()}}class GenericExtrinsicEra extends Enum{constructor(tt,ot){super(tt,{ImmortalEra,MortalEra},decodeExtrinsicEra(ot))}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){if(!this.isImmortalEra)throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);return this.inner}get asMortalEra(){if(!this.isMortalEra)throw new Error(`Cannot convert '${this.type}' via asMortalEra`);return this.inner}get isImmortalEra(){return this.index===0}get isMortalEra(){return this.index>0}toU8a(tt){return this.isMortalEra?this.asMortalEra.toU8a(tt):this.asImmortalEra.toU8a(tt)}}const VERSIONS=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4","ExtrinsicPayloadV5"],PREAMBLES={bare:"ExtrinsicPayloadV5",general:"ExtrinsicPayloadV5"};function decodeAssetId(et,tt){const ot=tt==null?void 0:tt.assetId;if(ot&&isHex$6(ot)){const dt=et.createType("TAssetConversion",hexToU8a$6(ot));if(ot==="0x00"||ot==="0x01"+dt.toHex().slice(2))return{...tt,assetId:dt.toJSON()}}return tt}function decodeExtrinsicPayload(et,tt,ot=LATEST_EXTRINSIC_VERSION,dt=DEFAULT_PREAMBLE){if(tt instanceof GenericExtrinsicPayload)return tt.unwrap();const ft=ot===5?PREAMBLES[dt]:VERSIONS[ot]||VERSIONS[0],pt=decodeAssetId(et,tt);return et.createTypeUnsafe(ft,[pt,{version:ot}])}class GenericExtrinsicPayload extends AbstractBase{constructor(tt,ot,{preamble:dt,version:ft}={}){super(tt,decodeExtrinsicPayload(tt,ot,ft,dt))}get blockHash(){return this.inner.blockHash}get era(){return this.inner.era}get genesisHash(){return this.inner.genesisHash||this.registry.createTypeUnsafe("Hash",[])}get method(){return this.inner.method}get nonce(){return this.inner.nonce}get specVersion(){return this.inner.specVersion||this.registry.createTypeUnsafe("u32",[])}get tip(){return this.inner.tip||this.registry.createTypeUnsafe("Compact<Balance>",[])}get transactionVersion(){return this.inner.transactionVersion||this.registry.createTypeUnsafe("u32",[])}get assetId(){return this.inner.assetId}get metadataHash(){return this.inner.metadataHash}eq(tt){return this.inner.eq(tt)}sign(tt){const ot=this.inner.sign(tt);return{signature:u8aToHex$5(ot)}}toHuman(tt,ot){return this.inner.toHuman(tt,ot)}toJSON(){return this.toHex()}toRawType(){return"ExtrinsicPayload"}toString(){return this.toHex()}toU8a(tt){return super.toU8a(tt?{method:!0}:!1)}}class GenericExtrinsicPayloadUnknown extends Struct{constructor(tt,ot,{version:dt=0}={}){throw super(tt,{}),new Error(`Unsupported extrinsic payload version ${dt}`)}}class GenericExtrinsicUnknown extends Struct{constructor(tt,ot,{isSigned:dt=!1,version:ft=0}={}){throw super(tt,{}),new Error(`Unsupported ${dt?"":"un"}signed extrinsic version ${ft&UNMASK_VERSION}`)}}const knownTypes={address:"Address",assetId:"Option<TAssetConversion>",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",metadataHash:"Option<[u8;32]>",method:"Call",mode:"u8",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};class GenericSignerPayload extends Struct{constructor(ot,dt){const ft=objectSpread$4({},ot.getSignedExtensionTypes(),ot.getSignedExtensionExtra());super(ot,objectSpread$4({},ft,knownTypes,{withSignedTransaction:"bool"}),dt);Ot(this,"__internal__extraTypes");this.__internal__extraTypes={};const pt=mt=>this.get(mt);for(const[mt,ht]of Object.entries(ft))knownTypes[mt]||(this.__internal__extraTypes[mt]=ht),objectProperty$1(this,mt,pt)}get address(){return this.getT("address")}get blockHash(){return this.getT("blockHash")}get blockNumber(){return this.getT("blockNumber")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get runtimeVersion(){return this.getT("runtimeVersion")}get signedExtensions(){return this.getT("signedExtensions")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get version(){return this.getT("version")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}get withSignedTransaction(){return this.getT("withSignedTransaction").isTrue}toPayload(){const ot={},dt=Object.keys(this.__internal__extraTypes);for(let ft=0,pt=dt.length;ft<pt;ft++){const mt=dt[ft],ht=this.getT(mt);(!(ht instanceof Option)||ht.isSome)&&(ot[mt]=ht.toJSON())}return objectSpread$4(ot,{address:this.address.toString(),assetId:this.assetId&&this.assetId.isSome?this.assetId.toHex():null,blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),metadataHash:this.metadataHash.isSome?this.metadataHash.toHex():null,method:this.method.toHex(),mode:this.mode.toNumber(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map(ft=>ft.toString()),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber(),withSignedTransaction:this.withSignedTransaction})}toRaw(){const ot=this.toPayload(),dt=u8aToHex$5(this.registry.createTypeUnsafe("ExtrinsicPayload",[ot,{version:ot.version}]).toU8a({method:!0}));return{address:ot.address,data:dt,type:"payload"}}}const EXTRINSIC_VERSION$1=4;class GenericExtrinsicV4 extends Struct{constructor(tt,ot,{isSigned:dt}={}){super(tt,{signature:"ExtrinsicSignatureV4",method:"Call"},GenericExtrinsicV4.decodeExtrinsic(tt,ot,dt))}static decodeExtrinsic(tt,ot,dt=!1){if(ot instanceof GenericExtrinsicV4)return ot;if(ot instanceof tt.createClassUnsafe("Call"))return{method:ot};if(isU8a$5(ot)){const ft=tt.createTypeUnsafe("ExtrinsicSignatureV4",[ot,{isSigned:dt}]);return{method:tt.createTypeUnsafe("Call",[ot.subarray(ft.encodedLength)]),signature:ft}}return ot||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return EXTRINSIC_VERSION$1}addSignature(tt,ot,dt){return this.signature.addSignature(tt,ot,dt),this}sign(tt,ot){return this.signature.sign(this.method,tt,ot),this}signFake(tt,ot){return this.signature.signFake(this.method,tt,ot),this}}function sign(et,tt,ot,dt){const ft=ot.length>256?et.hash(ot):ot;return tt.sign(ft,dt)}class GenericExtrinsicPayloadV4 extends Struct{constructor(ot,dt){super(ot,objectSpread$4({method:"Bytes"},ot.getSignedExtensionTypes(),ot.getSignedExtensionExtra()),decodeAssetId(ot,dt));Ot(this,"__internal__signOptions");this.__internal__signOptions={withType:ot.createTypeUnsafe("ExtrinsicSignature",[])instanceof Enum}}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}get metadataHash(){return this.getT("metadataHash")}sign(ot){return sign(this.registry,ot,this.toU8a({method:!0}),this.__internal__signOptions)}}const FAKE_SIGNATURE=new Uint8Array(256).fill(1);function toAddress(et,tt){return et.createTypeUnsafe("Address",[isU8a$5(tt)?u8aToHex$5(tt):tt])}class GenericExtrinsicSignatureV4 extends Struct{constructor(ot,dt,{isSigned:ft}={}){const pt=ot.getSignedExtensionTypes();super(ot,objectSpread$4({signer:"Address",signature:"ExtrinsicSignature"},pt),GenericExtrinsicSignatureV4.decodeExtrinsicSignature(dt,ft));Ot(this,"__internal__signKeys");this.__internal__signKeys=Object.keys(pt),objectProperties$1(this,this.__internal__signKeys,mt=>this.get(mt))}static decodeExtrinsicSignature(ot,dt=!1){if(ot){if(ot instanceof GenericExtrinsicSignatureV4)return ot}else return EMPTY_U8A;return dt?ot:EMPTY_U8A}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}_injectSignature(ot,dt,ft){for(let pt=0,mt=this.__internal__signKeys.length;pt<mt;pt++){const ht=this.__internal__signKeys[pt],bt=ft.get(ht);isUndefined$5(bt)||this.set(ht,bt)}return this.set("signer",ot),this.set("signature",dt),this}addSignature(ot,dt,ft){return this._injectSignature(toAddress(this.registry,ot),this.registry.createTypeUnsafe("ExtrinsicSignature",[dt]),new GenericExtrinsicPayloadV4(this.registry,ft))}createPayload(ot,dt){const{era:ft,runtimeVersion:{specVersion:pt,transactionVersion:mt}}=dt;return new GenericExtrinsicPayloadV4(this.registry,objectSpread$4({},dt,{era:ft||IMMORTAL_ERA,method:ot.toHex(),specVersion:pt,transactionVersion:mt}))}sign(ot,dt,ft){if(!(dt!=null&&dt.addressRaw))throw new Error(`Expected a valid keypair for signing, found ${stringify$4(dt)}`);const pt=this.createPayload(ot,ft);return this._injectSignature(toAddress(this.registry,dt.addressRaw),this.registry.createTypeUnsafe("ExtrinsicSignature",[pt.sign(dt)]),pt)}signFake(ot,dt,ft){if(!dt)throw new Error(`Expected a valid address for signing, found ${stringify$4(dt)}`);const pt=this.createPayload(ot,ft);return this._injectSignature(toAddress(this.registry,dt),this.registry.createTypeUnsafe("ExtrinsicSignature",[FAKE_SIGNATURE]),pt)}toU8a(ot){return this.isSigned?super.toU8a(ot):EMPTY_U8A}}const EXTRINSIC_VERSION=5;class GenericExtrinsicV5 extends Struct{constructor(tt,ot,{isSigned:dt}={}){super(tt,{signature:"ExtrinsicSignatureV5",method:"Call"},GenericExtrinsicV5.decodeExtrinsic(tt,ot,dt))}static decodeExtrinsic(tt,ot,dt=!1){if(ot instanceof GenericExtrinsicV5)return ot;if(ot instanceof tt.createClassUnsafe("Call"))return{method:ot};if(isU8a$5(ot)){const ft=tt.createTypeUnsafe("ExtrinsicSignatureV5",[ot,{isSigned:dt}]);return{method:tt.createTypeUnsafe("Call",[ot.subarray(ft.encodedLength)]),signature:ft}}return ot||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return EXTRINSIC_VERSION}get preamble(){return this.getT("preamble")}addSignature(tt,ot,dt){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}sign(tt,ot){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}signFake(tt,ot){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}}class GenericExtrinsicPayloadV5 extends Struct{constructor(tt,ot){super(tt,objectSpread$4({method:"Bytes"},tt.getSignedExtensionTypes(),tt.getSignedExtensionExtra()),ot)}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}get metadataHash(){return this.getT("metadataHash")}sign(tt){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}}class GenericExtrinsicSignatureV5 extends Struct{constructor(ot,dt,{isSigned:ft}={}){const pt=ot.getSignedExtensionTypes();super(ot,objectSpread$4({signer:"Address",signature:"ExtrinsicSignature",transactionExtensionVersion:"u8"},pt),GenericExtrinsicSignatureV5.decodeExtrinsicSignature(dt,ft));Ot(this,"__internal__signKeys");this.__internal__signKeys=Object.keys(pt),objectProperties$1(this,this.__internal__signKeys,mt=>this.get(mt))}static decodeExtrinsicSignature(ot,dt=!1){if(ot){if(ot instanceof GenericExtrinsicSignatureV5)return ot}else return EMPTY_U8A;return dt?ot:EMPTY_U8A}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return!this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}get transactionExtensionVersion(){return this.getT("transactionExtensionVersion")}_injectSignature(ot,dt,ft){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}addSignature(ot,dt,ft){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}createPayload(ot,dt){const{era:ft,runtimeVersion:{specVersion:pt,transactionVersion:mt}}=dt;return new GenericExtrinsicPayloadV5(this.registry,objectSpread$4({},dt,{era:ft||IMMORTAL_ERA,method:ot.toHex(),specVersion:pt,transactionVersion:mt}))}sign(ot,dt,ft){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}signFake(ot,dt,ft){throw new Error("Extrinsic: ExtrinsicV5 does not include signing support")}toU8a(ot){return this.isSigned?super.toU8a(ot):EMPTY_U8A}}function decodeU8a$4(et){if(!et.length)return new Uint8Array;const[tt,ot]=compactFromU8a$1(et),dt=tt+ot.toNumber();if(dt>et.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${dt}, found ${et.length}`);const ft=et.subarray(tt,dt);if(ft[0]!==69)throw new Error(`Extrinsic: incorrect version for General Transactions, expected 5, found ${ft[0]&UNMASK_VERSION}`);return ft.subarray(1)}class GeneralExtrinsic extends Struct{constructor(ot,dt,ft){const pt=ot.getSignedExtensionTypes();super(ot,objectSpread$4({transactionExtensionVersion:"u8"},pt,{method:"Call"}),GeneralExtrinsic.decodeExtrinsic(ot,dt));Ot(this,"__internal__version");Ot(this,"__internal__preamble");this.__internal__version=(ft==null?void 0:ft.version)||5,this.__internal__preamble=64}static decodeExtrinsic(ot,dt){if(dt){if(dt instanceof GeneralExtrinsic)return dt;if(isU8a$5(dt)||Array.isArray(dt)||isHex$6(dt))return decodeU8a$4(u8aToU8a$5(dt));if(isObject$7(dt)){const{payload:ft,transactionExtensionVersion:pt}=dt;return objectSpread$4(ft||{},{transactionExtensionVersion:pt||ot.getTransactionExtensionVersion()})}}else return EMPTY_U8A;return{}}get encodedLength(){return super.encodedLength}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get tip(){return this.getT("tip")}get assetId(){return this.getT("assetId")}get mode(){return this.getT("mode")}get metadataHash(){return this.getT("metadataHash")}get transactionExtensionVersion(){return this.getT("transactionExtensionVersion")}get method(){return this.getT("method")}get version(){return this.__internal__version}get preamble(){return this.__internal__preamble}toHex(ot){return u8aToHex$5(this.toU8a(ot))}toU8a(ot){return ot?this.encode():compactAddLength$1(this.encode())}toRawType(){return"GeneralExt"}encode(){return u8aConcat$3(new Uint8Array([this.version|this.preamble]),super.toU8a())}signFake(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have signFake implemented")}addSignature(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have addSignature implemented")}sign(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have sign implemented")}signature(){throw new Error("Extrinsic: Type GeneralExtrinsic does not have the signature getter")}}function decodeAccountId$1(et){if(isU8a$5(et)||Array.isArray(et))return u8aToU8a$5(et);if(et){if(isHex$6(et))return hexToU8a$6(et);if(isString$3(et))return decodeAddress$2(et.toString())}else return new Uint8Array;throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof et}`)}class BaseAccountId extends U8aFixed{constructor(tt,ot=264,dt){const ft=decodeAccountId$1(dt);if(ft.length*8<ot&&ft.some(mt=>mt))throw new Error(`Invalid AccountId provided, expected ${ot>>3} bytes, found ${ft.length}`);super(tt,ft,ot)}eq(tt){return super.eq(decodeAccountId$1(tt))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return encodeAddress$1(this,this.registry.chainSS58)}toRawType(){return"AccountId"}}class GenericAccountId extends BaseAccountId{constructor(tt,ot){super(tt,256,ot)}}class GenericAccountId33 extends BaseAccountId{constructor(tt,ot){super(tt,264,ot)}}const PREFIX_1BYTE=239,PREFIX_2BYTE=252,PREFIX_4BYTE=253,PREFIX_8BYTE=254,MAX_1BYTE=new BN(PREFIX_1BYTE),MAX_2BYTE=new BN(1).shln(16),MAX_4BYTE=new BN(1).shln(32);function decodeAccountIndex(et){return et instanceof GenericAccountIndex?et.toBn():isBn$2(et)||isNumber$3(et)||isHex$6(et)||isU8a$5(et)||isBigInt$6(et)?et:decodeAccountIndex(decodeAddress$2(et))}class GenericAccountIndex extends u32$2{constructor(tt,ot=new BN(0)){super(tt,decodeAccountIndex(ot))}static calcLength(tt){const ot=bnToBn$4(tt);return ot.lte(MAX_1BYTE)?1:ot.lt(MAX_2BYTE)?2:ot.lt(MAX_4BYTE)?4:8}static readLength(tt){const ot=tt[0];return ot===PREFIX_2BYTE?[1,2]:ot===PREFIX_4BYTE?[1,4]:ot===PREFIX_8BYTE?[1,8]:[0,1]}static writeLength(tt){switch(tt.length){case 2:return new Uint8Array([PREFIX_2BYTE]);case 4:return new Uint8Array([PREFIX_4BYTE]);case 8:return new Uint8Array([PREFIX_8BYTE]);default:return new Uint8Array([])}}eq(tt){return isBn$2(tt)||isNumber$3(tt)?super.eq(tt):super.eq(this.registry.createTypeUnsafe("AccountIndex",[tt]))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){const tt=GenericAccountIndex.calcLength(this);return encodeAddress$1(this.toU8a().subarray(0,tt),this.registry.chainSS58)}toRawType(){return"AccountIndex"}}class GenericBlock extends Struct{constructor(tt,ot){super(tt,{header:"Header",extrinsics:"Vec<Extrinsic>"},ot)}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.getT("extrinsics")}get hash(){return this.header.hash}get header(){return this.getT("header")}}function getArgsDef(et,tt){return tt.fields.reduce((ot,{name:dt,type:ft},pt)=>(ot[dt.unwrapOr(`param${pt}`).toString()]=et.createLookupType(ft),ot),{})}function decodeCallViaObject(et,tt,ot){const{args:dt,callIndex:ft}=tt,pt=ft instanceof GenericCallIndex?ft.toU8a():ft,mt=ot||et.findMetaCall(pt).meta;return{args:dt,argsDef:getArgsDef(et,mt),callIndex:ft,meta:mt}}function decodeCallViaU8a(et,tt,ot){const dt=et.firstCallIndex.slice();dt.set(tt.subarray(0,2),0);const ft=ot||et.findMetaCall(dt).meta;return{args:tt.subarray(2),argsDef:getArgsDef(et,ft),callIndex:dt,meta:ft}}function decodeCall(et,tt=new Uint8Array,ot){if(isU8a$5(tt)||isHex$6(tt))return decodeCallViaU8a(et,u8aToU8a$5(tt),ot);if(isObject$7(tt)&&tt.callIndex&&tt.args)return decodeCallViaObject(et,tt,ot);throw new Error(`Call: Cannot decode value '${tt}' of type ${typeof tt}`)}class GenericCallIndex extends U8aFixed{constructor(tt,ot){super(tt,ot,16)}toPrimitive(){return this.toHex()}}class GenericCall extends Struct{constructor(ot,dt,ft){var tt=(...oo)=>(super(...oo),Ot(this,"_meta"),this);const pt=decodeCall(ot,dt,ft);try{tt(ot,{callIndex:GenericCallIndex,args:Struct.with(pt.argsDef)},pt)}catch(mt){let ht="unknown.unknown";try{const bt=ot.findMetaCall(pt.callIndex);ht=`${bt.section}.${bt.method}`}catch{}throw new Error(`Call: failed decoding ${ht}:: ${mt.message}`)}this._meta=pt.meta}get args(){return[...this.getT("args").values()]}get argsDef(){return getArgsDef(this.registry,this.meta)}get argsEntries(){return[...this.getT("args").entries()]}get callIndex(){return this.getT("callIndex").toU8a()}get data(){return this.getT("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(ot){return ot.callIndex[0]===this.callIndex[0]&&ot.callIndex[1]===this.callIndex[1]}toHuman(ot,dt){let ft;try{ft=this.registry.findMetaCall(this.callIndex)}catch{}return objectSpread$4({args:this.argsEntries.reduce((pt,[mt,ht])=>objectSpread$4(pt,{[mt]:ht.toHuman(ot,dt)}),{}),method:ft==null?void 0:ft.method,section:ft==null?void 0:ft.section},ot&&ft?{docs:ft.meta.docs.map(pt=>pt.toString())}:null)}toRawType(){return"Call"}}function createValue(et,tt,ot,dt=!0){return ot&&isFunction$9(ot.unwrapOrDefault)?ot:et.createTypeUnsafe(tt,[dt?isNull$2(ot)||isUndefined$5(ot)?null:Array.isArray(ot)?ot:[ot]:ot])}function decodeValue(et,tt,ot){return tt==="ss58Format"?createValue(et,"Option<u32>",ot,!1):tt==="tokenDecimals"?createValue(et,"Option<Vec<u32>>",ot):tt==="tokenSymbol"?createValue(et,"Option<Vec<Text>>",ot):tt==="isEthereum"?createValue(et,"Bool",ot,!1):ot}function decode(et,tt){return(tt&&isFunction$9(tt.entries)?[...tt.entries()]:Object.entries(tt||{})).reduce((ot,[dt,ft])=>(ot[dt]=decodeValue(et,dt,ft),ot),{isEthereum:et.createTypeUnsafe("Bool",[]),ss58Format:et.createTypeUnsafe("Option<u32>",[]),tokenDecimals:et.createTypeUnsafe("Option<Vec<u32>>",[]),tokenSymbol:et.createTypeUnsafe("Option<Vec<Text>>",[])})}class GenericChainProperties extends Json{constructor(tt,ot){super(tt,decode(tt,ot))}get isEthereum(){return this.getT("isEthereum")}get ss58Format(){return this.getT("ss58Format")}get tokenDecimals(){return this.getT("tokenDecimals")}get tokenSymbol(){return this.getT("tokenSymbol")}}const CID_AURA=stringToU8a$5("aura"),CID_BABE=stringToU8a$5("BABE"),CID_GRPA=stringToU8a$5("FRNK"),CID_POW=stringToU8a$5("pow_"),CID_NMBS=stringToU8a$5("nmbs");function getAuraAuthor(et,tt,ot){return ot[et.createTypeUnsafe("RawAuraPreDigest",[tt.toU8a(!0)]).slotNumber.mod(new BN(ot.length)).toNumber()]}function getBabeAuthor(et,tt,ot){const dt=et.createTypeUnsafe("RawBabePreDigestCompat",[tt.toU8a(!0)]);return ot[dt.value.toNumber()]}function getBytesAsAuthor(et,tt){return et.createTypeUnsafe("AccountId",[tt])}class GenericConsensusEngineId extends U8aFixed{constructor(tt,ot){super(tt,isNumber$3(ot)?bnToU8a$2(ot,{isLe:!1}):ot,32)}get isAura(){return this.eq(CID_AURA)}get isBabe(){return this.eq(CID_BABE)}get isGrandpa(){return this.eq(CID_GRPA)}get isPow(){return this.eq(CID_POW)}get isNimbus(){return this.eq(CID_NMBS)}extractAuthor(tt,ot){if(ot!=null&&ot.length){if(this.isAura)return getAuraAuthor(this.registry,tt,ot);if(this.isBabe)return getBabeAuthor(this.registry,tt,ot)}if(this.isPow||this.isNimbus)return getBytesAsAuthor(this.registry,tt)}toHuman(){return this.toString()}toRawType(){return"ConsensusEngineId"}toString(){return this.isAscii?u8aToString$3(this):u8aToHex$5(this)}}const ACCOUNT_ID_PREFIX$1=new Uint8Array([255]);function decodeString$1(et,tt){const ot=decodeAddress$2(tt);return ot.length===32?et.createTypeUnsafe("AccountId",[ot]):et.createTypeUnsafe("AccountIndex",[u8aToBn$1(ot)])}function decodeU8a$3(et,tt){if(tt.length===32)return et.createTypeUnsafe("AccountId",[tt]);if(tt[0]===255)return et.createTypeUnsafe("AccountId",[tt.subarray(1)]);const[ot,dt]=GenericAccountIndex.readLength(tt);return et.createTypeUnsafe("AccountIndex",[u8aToBn$1(tt.subarray(ot,ot+dt))])}function decodeAddressOrIndex$1(et,tt){return tt instanceof GenericLookupSource?tt.inner:tt instanceof GenericAccountId||tt instanceof GenericAccountIndex?tt:isBn$2(tt)||isNumber$3(tt)||isBigInt$6(tt)?et.createTypeUnsafe("AccountIndex",[tt]):Array.isArray(tt)||isHex$6(tt)||isU8a$5(tt)?decodeU8a$3(et,u8aToU8a$5(tt)):decodeString$1(et,tt)}class GenericLookupSource extends AbstractBase{constructor(tt,ot=new Uint8Array){super(tt,decodeAddressOrIndex$1(tt,ot))}get encodedLength(){const tt=this._rawLength;return tt+(tt>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}inspect(){const tt=this.inner.toU8a().subarray(0,this._rawLength);return{outer:[new Uint8Array(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(tt):ACCOUNT_ID_PREFIX$1),tt]}}toHex(){return u8aToHex$5(this.toU8a())}toRawType(){return"Address"}toU8a(tt){const ot=this.inner.toU8a().subarray(0,this._rawLength);return tt?ot:u8aConcat$3(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(ot):ACCOUNT_ID_PREFIX$1,ot)}}function decodeU8a$2(et,tt){return[0,32].includes(tt.length)?{Id:tt}:tt.length===20?{Address20:tt}:tt.length<=8?{Index:et.createTypeUnsafe("AccountIndex",[tt]).toNumber()}:tt}function decodeMultiAny(et,tt){return tt instanceof GenericAccountId?{Id:tt}:isU8a$5(tt)?decodeU8a$2(et,tt):tt instanceof GenericMultiAddress?tt:tt instanceof GenericAccountIndex||isBn$2(tt)||isNumber$3(tt)?{Index:isNumber$3(tt)?tt:tt.toNumber()}:isString$3(tt)?decodeU8a$2(et,decodeAddress$2(tt.toString())):tt}class GenericMultiAddress extends Enum{constructor(tt,ot){super(tt,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},decodeMultiAny(tt,ot))}inspect(){const{inner:tt,outer:ot=[]}=this.inner.inspect();return{inner:tt,outer:[new Uint8Array([this.index]),...ot]}}toString(){return this.value.toString()}}const AYE_BITS=128,NAY_BITS=0,CON_MASK=127,DEF_CONV=0;function decodeVoteBool(et){return et?new Uint8Array([AYE_BITS|DEF_CONV]):new Uint8Array([NAY_BITS])}function decodeVoteU8a(et){return et.length?et.subarray(0,1):new Uint8Array([NAY_BITS])}function decodeVoteType(et,tt){return new Uint8Array([(new bool(et,tt.aye).isTrue?AYE_BITS:NAY_BITS)|et.createTypeUnsafe("Conviction",[tt.conviction||DEF_CONV]).index])}function decodeVote(et,tt){return isU8a$5(tt)?decodeVoteU8a(tt):isUndefined$5(tt)||tt instanceof Boolean||isBoolean$1(tt)?decodeVoteBool(new bool(et,tt).isTrue):isNumber$3(tt)?decodeVoteBool(tt<0):decodeVoteType(et,tt)}class GenericVote extends U8aFixed{constructor(ot,dt){const ft=decodeVote(ot,dt);super(ot,ft,8);Ot(this,"__internal__aye");Ot(this,"__internal__conviction");this.__internal__aye=(ft[0]&AYE_BITS)===AYE_BITS,this.__internal__conviction=this.registry.createTypeUnsafe("Conviction",[ft[0]&CON_MASK])}get conviction(){return this.__internal__conviction}get isAye(){return this.__internal__aye}get isNay(){return!this.isAye}toHuman(ot){return{conviction:this.conviction.toHuman(ot),vote:this.isAye?"Aye":"Nay"}}toPrimitive(){return{aye:this.isAye,conviction:this.conviction.toPrimitive()}}toRawType(){return"Vote"}}function decodeAccountId(et){return isU8a$5(et)||Array.isArray(et)?u8aToU8a$5(et):isHex$6(et)||isEthereumAddress(et.toString())?hexToU8a$6(et.toString()):isString$3(et)?u8aToU8a$5(et):et}class GenericEthereumAccountId extends U8aFixed{constructor(tt,ot=new Uint8Array){super(tt,decodeAccountId(ot),160)}eq(tt){return!!tt&&super.eq(decodeAccountId(tt))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return ethereumEncode$1(this)}toRawType(){return"AccountId"}}const ACCOUNT_ID_PREFIX=new Uint8Array([255]);function decodeString(et,tt){const ot=decodeAddress$2(tt);return ot.length===20?et.createTypeUnsafe("EthereumAccountId",[ot]):et.createTypeUnsafe("AccountIndex",[u8aToBn$1(ot)])}function decodeU8a$1(et,tt){if(tt.length===20)return et.createTypeUnsafe("EthereumAccountId",[tt]);if(tt[0]===255)return et.createTypeUnsafe("EthereumAccountId",[tt.subarray(1)]);const[ot,dt]=GenericAccountIndex.readLength(tt);return et.createTypeUnsafe("AccountIndex",[u8aToBn$1(tt.subarray(ot,ot+dt))])}function decodeAddressOrIndex(et,tt){return tt instanceof GenericEthereumLookupSource?tt.inner:tt instanceof GenericEthereumAccountId||tt instanceof GenericAccountIndex?tt:isU8a$5(tt)||Array.isArray(tt)||isHex$6(tt)?decodeU8a$1(et,u8aToU8a$5(tt)):isBn$2(tt)||isNumber$3(tt)||isBigInt$6(tt)?et.createTypeUnsafe("AccountIndex",[tt]):decodeString(et,tt)}class GenericEthereumLookupSource extends AbstractBase{constructor(tt,ot=new Uint8Array){super(tt,decodeAddressOrIndex(tt,ot))}get encodedLength(){const tt=this._rawLength;return tt+(tt>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}toHex(){return u8aToHex$5(this.toU8a())}toRawType(){return"Address"}toU8a(tt){const ot=this.inner.toU8a().subarray(0,this._rawLength);return tt?ot:u8aConcat$3(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(ot):ACCOUNT_ID_PREFIX,ot)}}function decodeDataU8a(et,tt){const ot=tt[0];if(ot){if(ot>=1&&ot<=33){const dt=ot-1,ft=tt.subarray(1,dt+1);return[et.createTypeUnsafe("Raw",[ft]),1]}else if(ot>=34&&ot<=37)return[tt.subarray(1,33),ot-32]}else return[void 0,void 0];throw new Error(`Unable to decode Data, invalid indicator byte ${ot}`)}function decodeData(et,tt){return isU8a$5(tt)||isString$3(tt)?decodeDataU8a(et,u8aToU8a$5(tt)):tt?[tt,void 0]:[void 0,void 0]}class Data extends Enum{constructor(tt,ot){if(super(tt,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...decodeData(tt,ot)),this.isRaw&&this.asRaw.length>32)throw new Error("Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return this.index===2}get isKeccak256(){return this.index===4}get isNone(){return this.index===0}get isRaw(){return this.index===1}get isSha256(){return this.index===3}get isShaThree256(){return this.index===5}get encodedLength(){return this.toU8a().length}toU8a(){if(this.index===0)return new Uint8Array(1);if(this.index===1){const ot=this.value.toU8a(!0),dt=Math.min(ot.length,32),ft=new Uint8Array(dt+1);return ft.set([dt+1],0),ft.set(ot.subarray(0,dt),1),ft}const tt=new Uint8Array(33);return tt.set([this.index+32],0),tt.set(this.value.toU8a(),1),tt}}const HASHER_MAP={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function decodeStorageKey(et){if(isU8a$5(et)||!et||isString$3(et))return{key:et};if(et instanceof StorageKey)return{key:et,method:et.method,section:et.section};if(isFunction$9(et))return{key:et(),method:et.method,section:et.section};if(Array.isArray(et)){const[tt,ot=[]]=et;if(!isFunction$9(tt))throw new Error("Expected function input for key construction");if(tt.meta&&tt.meta.type.isMap){const dt=tt.meta.type.asMap;if(!Array.isArray(ot)||ot.length!==dt.hashers.length)throw new Error(`Expected an array of ${dt.hashers.length} values as params to a Map query`)}return{key:tt(...ot),method:tt.method,section:tt.section}}throw new Error(`Unable to convert input ${et} to StorageKey`)}function decodeHashers(et,tt,ot){let dt=32;const ft=ot.length,pt=new Array(ft);for(let mt=0;mt<ft;mt++){const[ht,bt]=ot[mt],[yt,xt]=HASHER_MAP[ht.type],gt=xt?et.createTypeUnsafe(getSiName(et.lookup,bt),[tt.subarray(dt+yt)]):et.createTypeUnsafe("Raw",[tt.subarray(dt,dt+yt)]);dt+=yt+(xt?gt.encodedLength:0),pt[mt]=gt}return pt}function decodeArgsFromMeta(et,tt,ot){if(!ot||!ot.type.isMap)return[];const{hashers:dt,key:ft}=ot.type.asMap,pt=dt.length===1?[ft]:et.lookup.getSiType(ft).def.asTuple;return decodeHashers(et,tt,dt.map((mt,ht)=>[mt,pt[ht]]))}function getMeta(et){if(et instanceof StorageKey)return et.meta;if(isFunction$9(et))return et.meta;if(Array.isArray(et)){const[tt]=et;return tt.meta}}function getType(et,tt){if(tt instanceof StorageKey)return tt.outputType;if(isFunction$9(tt))return unwrapStorageType(et,tt.meta.type);if(Array.isArray(tt)){const[ot]=tt;if(ot.meta)return unwrapStorageType(et,ot.meta.type)}return"Raw"}class StorageKey extends Bytes{constructor(ot,dt,ft={}){const{key:pt,method:mt,section:ht}=decodeStorageKey(dt);super(ot,pt);Ot(this,"__internal__args");Ot(this,"__internal__meta");Ot(this,"__internal__outputType");Ot(this,"__internal__method");Ot(this,"__internal__section");this.__internal__outputType=getType(ot,dt),this.setMeta(getMeta(dt),ft.section||ht,ft.method||mt)}get args(){return this.__internal__args}get meta(){return this.__internal__meta}get method(){return this.__internal__method}get outputType(){return this.__internal__outputType}get section(){return this.__internal__section}is(ot){return ot.section===this.section&&ot.method===this.method}setMeta(ot,dt,ft){this.__internal__meta=ot,this.__internal__method=ft||this.__internal__method,this.__internal__section=dt||this.__internal__section,ot&&(this.__internal__outputType=unwrapStorageType(this.registry,ot.type));try{this.__internal__args=decodeArgsFromMeta(this.registry,this.toU8a(!0),ot)}catch{}return this}toHuman(ot,dt){return this.__internal__args.length?this.__internal__args.map(ft=>ft.toHuman(void 0,dt)):super.toHuman(void 0,dt)}toRawType(){return"StorageKey"}}const baseTypes=Object.freeze(Object.defineProperty({__proto__:null,BitVec,Bool:bool,Bytes,Data,F32:f32,F64:f64,GeneralExtrinsic,GenericAccountId,GenericAccountId32:GenericAccountId,GenericAccountId33,GenericAccountIndex,GenericAddress:GenericMultiAddress,GenericBlock,GenericCall,GenericChainProperties,GenericConsensusEngineId,GenericEthereumAccountId,GenericEthereumLookupSource,GenericEvent,GenericEventData,GenericExtrinsic,GenericExtrinsicEra,GenericExtrinsicPayload,GenericExtrinsicPayloadUnknown,GenericExtrinsicPayloadV4,GenericExtrinsicPayloadV5,GenericExtrinsicSignatureV4,GenericExtrinsicSignatureV5,GenericExtrinsicUnknown,GenericExtrinsicV4,GenericExtrinsicV5,GenericImmortalEra:ImmortalEra,GenericLookupSource,GenericMortalEra:MortalEra,GenericMultiAddress,GenericSignerPayload,GenericVote,I128:i128,I16:i16,I256:i256,I32:i32,I64:i64,I8:i8,ISize:isize,Null,OptionBool,StorageKey,Text,Type,U128:u128,U16:u16$2,U256:u256,U32:u32$2,U64:u64,U8:u8$2,USize:usize,bool,f32,f64,i128,i16,i256,i32,i64,i8,isize,u128,u16:u16$2,u256,u32:u32$2,u64,u8:u8$2,usize},Symbol.toStringTag,{value:"Module"}));function convert(et){return({name:tt})=>et(tt)}const objectNameToCamel=convert(stringCamelCase$1),objectNameToString=convert(et=>et.toString());function isTx(et,tt){return et.callIndex[0]===tt[0]&&et.callIndex[1]===tt[1]}function createUnchecked(et,tt,ot,dt){const ft=dt.fields,pt=stringCamelCase$1(dt.name),mt=(...ht)=>{if(ft.length!==ht.length)throw new Error(`Extrinsic ${tt}.${pt} expects ${ft.length} arguments, got ${ht.length}.`);return et.createTypeUnsafe("Call",[{args:ht,callIndex:ot},dt])};return mt.is=ht=>isTx(ht,ot),mt.callIndex=ot,mt.meta=dt,mt.method=pt,mt.section=tt,mt.toJSON=()=>dt.toJSON(),mt}function filterCallsSome({calls:et}){return et.isSome}function createCallFunction(et,tt,ot,dt,ft){const{fields:pt,index:mt}=ot,ht=pt.length,bt=new Array(ht);for(let yt=0;yt<ht;yt++){const{name:xt,type:gt,typeName:wt}=pt[yt];bt[yt]=objectSpread$4({name:stringCamelCase$1(xt.unwrapOr(`param${yt}`)),type:getSiName(tt,gt)},wt.isSome?{typeName:wt.unwrap()}:null)}return createUnchecked(et,dt,new Uint8Array([ft,mt.toNumber()]),et.createTypeUnsafe("FunctionMetadataLatest",[objectSpread$4({args:bt},ot)]))}function decorateExtrinsics(et,{lookup:tt,pallets:ot},dt){const ft={},pt=ot.filter(filterCallsSome);for(let mt=0,ht=pt.length;mt<ht;mt++){const{calls:bt,index:yt,name:xt}=pt[mt],gt=stringCamelCase$1(xt),wt=dt>=12?yt.toNumber():mt;lazyMethod$2(ft,gt,()=>lazyVariants(tt,bt.unwrap(),objectNameToCamel,Pt=>createCallFunction(et,tt,Pt,gt,wt)))}return ft}function createStorageHasher(et,tt){return tt.toNumber()>=2?et.createTypeUnsafe("StorageHasherV10",[tt.toNumber()+1]):et.createTypeUnsafe("StorageHasherV10",[tt])}function createStorageType(et,tt){return tt.isMap?[objectSpread$4({},tt.asMap,{hasher:createStorageHasher(et,tt.asMap.hasher)}),1]:tt.isDoubleMap?[objectSpread$4({},tt.asDoubleMap,{hasher:createStorageHasher(et,tt.asDoubleMap.hasher),key2Hasher:createStorageHasher(et,tt.asDoubleMap.key2Hasher)}),2]:[tt.asPlain,0]}function convertModule(et,tt){const ot=tt.storage.unwrapOr(null);return et.createTypeUnsafe("ModuleMetadataV10",[objectSpread$4({},tt,{storage:ot?objectSpread$4({},ot,{items:ot.items.map(dt=>objectSpread$4({},dt,{type:et.createTypeUnsafe("StorageEntryTypeV10",createStorageType(et,dt.type))}))}):null})])}function toV10(et,{modules:tt}){return et.createTypeUnsafe("MetadataV10",[{modules:tt.map(ot=>convertModule(et,ot))}])}function toV11(et,{modules:tt}){return et.createTypeUnsafe("MetadataV11",[{extrinsic:{signedExtensions:[],version:0},modules:tt}])}function toV12(et,{extrinsic:tt,modules:ot}){return et.createTypeUnsafe("MetadataV12",[{extrinsic:tt,modules:ot.map(dt=>et.createTypeUnsafe("ModuleMetadataV12",[objectSpread$4({},dt,{index:255})]))}])}function toV13(et,tt){return et.createTypeUnsafe("MetadataV13",[tt])}const typesAlias={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};function getAliasTypes({knownTypes:et},tt){var ot;return{...typesAlias[tt]??{},...((ot=et.typesAlias)==null?void 0:ot[tt])??{}}}const BOXES=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function compatType(et,tt){const ot=tt.toString(),dt=et.findIndex(({def:ft})=>ft.HistoricMetaCompat===ot);return dt!==-1?dt:et.push({def:{HistoricMetaCompat:ot}})-1}function compatTypes(et,...tt){for(let ot=0,dt=tt.length;ot<dt;ot++)compatType(et,tt[ot])}function makeTupleType(et,tt){return et.push({def:{Tuple:tt}})-1}function makeVariantType(et,tt,ot,dt){return ot.push({def:{Variant:{variants:dt}},path:[`pallet_${et.toString()}`,"pallet",tt]})-1}function registerOriginCaller(et,tt,ot){et.register({OriginCaller:{_enum:tt.map((dt,ft)=>[dt.name.toString(),ot>=12?dt.index.toNumber():ft]).sort((dt,ft)=>dt[1]-ft[1]).reduce((dt,[ft,pt])=>{for(let mt=Object.keys(dt).length;mt<pt;mt++)dt[`Empty${mt}`]="Null";return dt[ft]=knownOrigins[ft]||"Null",dt},{})}})}function setTypeOverride(et,tt){tt.forEach(ot=>{const dt=Object.keys(et).find(ft=>ot.eq(ft));if(dt)ot.setOverride(et[dt]);else{const ft=ot.toString(),pt=Object.entries(et).reduce((mt,[ht,bt])=>BOXES.reduce((yt,[xt,gt])=>yt.replace(`${xt}${ht}${gt}`,`${xt}${bt}${gt}`),mt),ft);ft!==pt&&ot.setOverride(pt)}})}function convertCalls$1(et,tt,ot,dt,ft){const pt=dt.map(({args:mt,docs:ht,name:bt},yt)=>(setTypeOverride(ft,mt.map(({type:xt})=>xt)),tt.createTypeUnsafe("SiVariant",[{docs:ht,fields:mt.map(({name:xt,type:gt})=>tt.createTypeUnsafe("SiField",[{name:xt,type:compatType(et,gt)}])),index:yt,name:bt}])));return tt.createTypeUnsafe("PalletCallMetadataV14",[{type:makeVariantType(ot,"Call",et,pt)}])}function convertConstants$1(et,tt,ot,dt){return ot.map(({docs:ft,name:pt,type:mt,value:ht})=>(setTypeOverride(dt,[mt]),tt.createTypeUnsafe("PalletConstantMetadataV14",[{docs:ft,name:pt,type:compatType(et,mt),value:ht}])))}function convertErrors(et,tt,ot,dt,ft){const pt=dt.map(({docs:mt,name:ht},bt)=>tt.createTypeUnsafe("SiVariant",[{docs:mt,fields:[],index:bt,name:ht}]));return tt.createTypeUnsafe("PalletErrorMetadataV14",[{type:makeVariantType(ot,"Error",et,pt)}])}function convertEvents$1(et,tt,ot,dt,ft){const pt=dt.map(({args:mt,docs:ht,name:bt},yt)=>(setTypeOverride(ft,mt),tt.createTypeUnsafe("SiVariant",[{docs:ht,fields:mt.map(xt=>tt.createTypeUnsafe("SiField",[{type:compatType(et,xt)}])),index:yt,name:bt}])));return tt.createTypeUnsafe("PalletEventMetadataV14",[{type:makeVariantType(ot,"Event",et,pt)}])}function createMapEntry(et,tt,ot,{hashers:dt,isLinked:ft,isOptional:pt,keys:mt,value:ht}){return setTypeOverride(ot,[ht,...Array.isArray(mt)?mt:[mt]]),tt.createTypeUnsafe("StorageEntryTypeV14",[{Map:{hashers:dt,key:dt.length===1?compatType(et,mt[0]):makeTupleType(et,mt.map(bt=>compatType(et,bt))),value:ft?compatType(et,`(${pt?`Option<${ht.toString()}>`:ht.toString()}, Linkage<${mt[0].toString()}>)`):compatType(et,ht)}}])}function convertStorage$1(et,tt,{items:ot,prefix:dt},ft){return tt.createTypeUnsafe("PalletStorageMetadataV14",[{items:ot.map(({docs:pt,fallback:mt,modifier:ht,name:bt,type:yt})=>{let xt;if(yt.isPlain){const gt=yt.asPlain;setTypeOverride(ft,[gt]),xt=tt.createTypeUnsafe("StorageEntryTypeV14",[{Plain:compatType(et,gt)}])}else if(yt.isMap){const gt=yt.asMap;xt=createMapEntry(et,tt,ft,{hashers:[gt.hasher],isLinked:gt.linked.isTrue,isOptional:ht.isOptional,keys:[gt.key],value:gt.value})}else if(yt.isDoubleMap){const gt=yt.asDoubleMap;xt=createMapEntry(et,tt,ft,{hashers:[gt.hasher,gt.key2Hasher],isLinked:!1,isOptional:ht.isOptional,keys:[gt.key1,gt.key2],value:gt.value})}else{const gt=yt.asNMap;xt=createMapEntry(et,tt,ft,{hashers:gt.hashers,isLinked:!1,isOptional:ht.isOptional,keys:gt.keyVec,value:gt.value})}return tt.createTypeUnsafe("StorageEntryMetadataV14",[{docs:pt,fallback:mt,modifier:ht,name:bt,type:xt}])}),prefix:dt}])}function convertExtrinsic(et,{signedExtensions:tt,version:ot}){return et.createTypeUnsafe("ExtrinsicMetadataV14",[{signedExtensions:tt.map(dt=>({identifier:dt,type:0})),type:0,version:ot}])}function createPallet(et,tt,ot,{calls:dt,constants:ft,errors:pt,events:mt,storage:ht}){const bt=getAliasTypes(tt,stringCamelCase$1(ot.name));return tt.createTypeUnsafe("PalletMetadataV14",[{calls:dt&&convertCalls$1(et,tt,ot.name,dt,bt),constants:convertConstants$1(et,tt,ft,bt),errors:pt&&convertErrors(et,tt,ot.name,pt),events:mt&&convertEvents$1(et,tt,ot.name,mt,bt),index:ot.index,name:ot.name,storage:ht&&convertStorage$1(et,tt,ht,bt)}])}function toV14(et,tt,ot){const dt=[];compatTypes(dt,"Null","u8","u16","u32","u64"),registerOriginCaller(et,tt.modules,ot);const ft=convertExtrinsic(et,tt.extrinsic),pt=tt.modules.map(mt=>createPallet(dt,et,mt,{calls:mt.calls.unwrapOr(null),constants:mt.constants,errors:mt.errors.length?mt.errors:null,events:mt.events.unwrapOr(null),storage:mt.storage.unwrapOr(null)}));return et.createTypeUnsafe("MetadataV14",[{extrinsic:ft,lookup:{types:dt.map((mt,ht)=>et.createTypeUnsafe("PortableType",[{id:ht,type:mt}]))},pallets:pt}])}function toV15(et,tt,ot){var ft;const dt=tt.lookup.paramTypes.SpRuntimeUncheckedExtrinsic;return et.createTypeUnsafe("MetadataV15",[objectSpread$4({},tt,{extrinsic:et.createTypeUnsafe("ExtrinsicMetadataV15",[objectSpread$4({},tt.extrinsic,{addressType:dt==null?void 0:dt[0].type.unwrapOr(0),callType:dt==null?void 0:dt[1].type.unwrapOr(0),extraType:dt==null?void 0:dt[3].type.unwrapOr(0),signatureType:dt==null?void 0:dt[2].type.unwrapOr(0)})]),outerEnums:et.createTypeUnsafe("OuterEnums15",[{callType:dt==null?void 0:dt[1].type.unwrapOr(0),eventType:(ft=tt.lookup.paramTypes.FrameSystemEventRecord)==null?void 0:ft[0].type.unwrapOr(0)}])})])}function palletsFromV15(et,tt){const ot=et.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]),dt=et.createTypeUnsafe("Vec<PalletAssociatedTypeMetadataV16>",[[]]),ft=et.createTypeUnsafe("Vec<PalletViewFunctionMetadataV16>",[[]]);return et.createTypeUnsafe("PalletMetadataV16",[objectSpread$4({},tt,{associatedTypes:dt,calls:tt.calls.isSome?convertCalls(et,tt.calls.unwrap()):null,constants:convertConstants(et,tt.constants),deprecationInfo:ot,errors:tt.errors.isSome?converErrors(et,tt.errors.unwrap()):null,events:tt.events.isSome?convertEvents(et,tt.events.unwrap()):null,storage:tt.storage.isSome?convertStorage(et,tt.storage.unwrap()):null,viewFunctions:ft})])}function convertStorage(et,tt){const ot=et.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]),dt=tt.items.map(ft=>et.createTypeUnsafe("StorageEntryMetadataV16",[objectSpread$4({},ft,{deprecationInfo:ot})]));return et.createTypeUnsafe("PalletStorageMetadataV16",[{items:et.createTypeUnsafe("Vec<StorageEntryMetadataV16>",[dt]),prefix:tt.prefix}])}function convertCalls(et,tt){const ot=et.createTypeUnsafe("EnumDeprecationInfoV16",[]);return et.createTypeUnsafe("PalletCallMetadataV16",[{deprecationInfo:ot,type:tt.type}])}function convertEvents(et,tt){const ot=et.createTypeUnsafe("EnumDeprecationInfoV16",[]);return et.createTypeUnsafe("PalletEventMetadataV16",[{deprecationInfo:ot,type:tt.type}])}function convertConstants(et,tt){const ot=et.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]);return et.createTypeUnsafe("Vec<PalletConstantMetadataV16>",[tt.map(dt=>et.createTypeUnsafe("PalletConstantMetadataV16",[objectSpread$4({},dt,{deprecationInfo:ot})]))])}function converErrors(et,tt){const ot=et.createTypeUnsafe("EnumDeprecationInfoV16",[]);return et.createTypeUnsafe("PalletErrorMetadataV16",[{deprecationInfo:ot,type:tt.type}])}function extrinsicFromV15(et,tt){const ot=tt.signedExtensions.map(({additionalSigned:pt,identifier:mt,type:ht})=>et.createTypeUnsafe("TransactionExtensionMetadataV16",[{identifier:mt,implict:pt,type:ht}])),dt=ot.map((pt,mt)=>et.createTypeUnsafe("Compact<u32>",[mt])),ft=et.createTypeUnsafe("BTreeMap<u8, Vec<Compact<u32>>>",[new Map([[et.createTypeUnsafe("u8",[tt.version]),et.createTypeUnsafe("Vec<Compact<u32>>",[dt])]])]);return et.createTypeUnsafe("ExtrinsicMetadataV16",[{addressType:tt.addressType,callType:tt.callType,signatureType:tt.signatureType,transactionExtensions:ot,transactionExtensionsByVersion:ft,versions:[tt.version]}])}function apisFromV15(et,tt){const ot=et.createTypeUnsafe("ItemDeprecationInfoV16",["NotDeprecated"]),dt=tt.methods.map(ft=>et.createTypeUnsafe("RuntimeApiMethodMetadataV16",[objectSpread$4({},ft,{deprecationInfo:ot})]));return et.createTypeUnsafe("RuntimeApiMetadataV16",[objectSpread$4({},tt,{deprecationInfo:ot,methods:dt,version:et.createTypeUnsafe("Compact<u32>",[0])})])}function toV16(et,tt,ot){const dt=tt.pallets.map(mt=>palletsFromV15(et,mt)),ft=extrinsicFromV15(et,tt.extrinsic),pt=tt.apis.map(mt=>apisFromV15(et,mt));return et.createTypeUnsafe("MetadataV16",[objectSpread$4({},tt,{apis:pt,extrinsic:ft,pallets:dt})])}function toLatest(et,tt,ot){return tt}const MAGIC_NUMBER=1635018093;class MagicNumber extends u32$2{constructor(tt,ot){if(super(tt,ot),!this.isEmpty&&!this.eq(MAGIC_NUMBER))throw new Error(`MagicNumber mismatch: expected ${tt.createTypeUnsafe("u32",[MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`)}}const KNOWN_VERSIONS=[16,15,14,13,12,11,10,9],LATEST_VERSION=KNOWN_VERSIONS[0],TO_CALLS_VERSION=14;class MetadataVersioned extends Struct{constructor(ot,dt){super(ot,{magicNumber:MagicNumber,metadata:"MetadataAll"},dt);Ot(this,"__internal__converted",new Map);Ot(this,"__internal__assertVersion",ot=>{if(this.version>ot)throw new Error(`Cannot convert metadata from version ${this.version} to ${ot}`);return this.version===ot});Ot(this,"__internal__getVersion",(ot,dt)=>{if(ot!=="latest"&&this.__internal__assertVersion(ot)){const ft=`asV${ot}`;return this.__internal__metadata()[ft]}if(!this.__internal__converted.has(ot)){const ft=ot==="latest"?`asV${LATEST_VERSION}`:`asV${ot-1}`;this.__internal__converted.set(ot,dt(this.registry,this[ft],this.version))}return this.__internal__converted.get(ot)});Ot(this,"__internal__metadata",()=>this.getT("metadata"))}get asCallsOnly(){return new MetadataVersioned(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createTypeUnsafe("MetadataAll",[toCallsOnly(this.registry,this.asLatest),TO_CALLS_VERSION])})}get asV9(){return this.__internal__assertVersion(9),this.__internal__metadata().asV9}get asV10(){return this.__internal__getVersion(10,toV10)}get asV11(){return this.__internal__getVersion(11,toV11)}get asV12(){return this.__internal__getVersion(12,toV12)}get asV13(){return this.__internal__getVersion(13,toV13)}get asV14(){return this.__internal__getVersion(14,toV14)}get asV15(){return this.__internal__getVersion(15,toV15)}get asV16(){return this.__internal__getVersion(16,toV16)}get asLatest(){return this.__internal__getVersion("latest",toLatest)}get magicNumber(){return this.getT("magicNumber")}get version(){return this.__internal__metadata().index}getUniqTypes(ot){return getUniqTypes(this.registry,this.asLatest,ot)}toJSON(){return this.asLatest,super.toJSON()}}const EMPTY_METADATA=new Uint8Array([109,101,116,97,9]),VERSION_IDX=EMPTY_METADATA.length-1;function decodeU8a(et,tt){if(tt.length===0)return EMPTY_METADATA;if(tt[VERSION_IDX]===9)try{return new MetadataVersioned(et,tt)}catch{tt[VERSION_IDX]=10}return tt}class Metadata extends MetadataVersioned{constructor(tt,ot){super(tt,isU8a$5(ot)||isString$3(ot)?decodeU8a(tt,u8aToU8a$5(ot)):ot)}}function decorateConstants(et,{pallets:tt},ot){const dt={};for(let ft=0,pt=tt.length;ft<pt;ft++){const{constants:mt,name:ht}=tt[ft];mt.isEmpty||lazyMethod$2(dt,stringCamelCase$1(ht),()=>lazyMethods$1({},mt,bt=>{const yt=et.createTypeUnsafe(et.createLookupType(bt.type),[hexToU8a$6(bt.value.toHex())]);return yt.meta=bt,yt},objectNameToCamel))}return dt}function variantToMeta(et,tt){return objectSpread$4({args:tt.fields.map(({type:ot})=>et.getTypeDef(ot).type)},tt)}function decorateErrors(et,{lookup:tt,pallets:ot},dt){const ft={};for(let pt=0,mt=ot.length;pt<mt;pt++){const{errors:ht,index:bt,name:yt}=ot[pt];if(ht.isSome){const xt=dt>=12?bt.toNumber():pt;lazyMethod$2(ft,stringCamelCase$1(yt),()=>lazyVariants(tt,ht.unwrap(),objectNameToString,gt=>({is:wt=>isCodec$1(wt)&&isCodec$1(wt.index)&&wt.index.eq(xt)&&(isU8a$5(wt.error)?wt.error[0]===gt.index.toNumber():isCodec$1(wt.error)&&wt.error.eq(gt.index)),meta:et.createTypeUnsafe("ErrorMetadataLatest",[variantToMeta(tt,gt)])})))}}return ft}function filterEventsSome({events:et}){return et.isSome}function decorateEvents(et,{lookup:tt,pallets:ot},dt){const ft={},pt=ot.filter(filterEventsSome);for(let mt=0,ht=pt.length;mt<ht;mt++){const{events:bt,index:yt,name:xt}=pt[mt],gt=dt>=12?yt.toNumber():mt;lazyMethod$2(ft,stringCamelCase$1(xt),()=>lazyVariants(tt,bt.unwrap(),objectNameToString,wt=>({is:Pt=>isCodec$1(Pt)&&isU8a$5(Pt.index)&&gt===Pt.index[0]&&wt.index.eq(Pt.index[1]),meta:et.createTypeUnsafe("EventMetadataLatest",[variantToMeta(tt,wt)])})))}return ft}const DEFAULT_FN=et=>xxhashAsU8a(et,128),HASHERS={Blake2_128:et=>blake2AsU8a$2(et,128),Blake2_128Concat:et=>u8aConcat$3(blake2AsU8a$2(et,128),u8aToU8a$5(et)),Blake2_256:et=>blake2AsU8a$2(et,256),Identity:et=>u8aToU8a$5(et),Twox128:et=>xxhashAsU8a(et,128),Twox256:et=>xxhashAsU8a(et,256),Twox64Concat:et=>u8aConcat$3(xxhashAsU8a(et,64),u8aToU8a$5(et))};function getHasher(et){return HASHERS[et.type]||DEFAULT_FN}const NO_RAW_ARGS={args:[],hashers:[],keys:[]};function filterDefined(et){return!isUndefined$5(et)}function assertArgs({method:et,section:tt},{args:ot,keys:dt}){if(Array.isArray(ot)){if(ot.filter(filterDefined).length!==dt.length)throw new Error(`Call to ${stringCamelCase$1(tt||"unknown")}.${stringCamelCase$1(et||"unknown")} needs ${dt.length} arguments, found [${ot.join(", ")}]`)}else throw new Error(`Call to ${stringCamelCase$1(tt||"unknown")}.${stringCamelCase$1(et||"unknown")} needs ${dt.length} arguments`)}function createKeyRawParts(et,tt,{args:ot,hashers:dt,keys:ft}){const pt=ft.length,mt=new Array(pt);for(let ht=0;ht<pt;ht++)mt[ht]=getHasher(dt[ht])(et.createTypeUnsafe(et.createLookupType(ft[ht]),[ot[ht]]).toU8a());return[[xxhashAsU8a(tt.prefix,128),xxhashAsU8a(tt.method,128)],mt]}function createKeyInspect(et,tt,ot){assertArgs(tt,ot);const{meta:dt}=tt,[ft,pt]=createKeyRawParts(et,tt,ot);let mt=[];if(dt.type.isMap){const{hashers:bt,key:yt}=dt.type.asMap;mt=bt.length===1?[`${bt[0].type}(${getSiName(et.lookup,yt)})`]:et.lookup.getSiType(yt).def.asTuple.map((xt,gt)=>`${bt[gt].type}(${getSiName(et.lookup,xt)})`)}const ht=["module","method"].concat(...ot.args.map((bt,yt)=>mt[yt]));return{inner:ft.concat(...pt).map((bt,yt)=>({name:ht[yt],outer:[bt]}))}}function createKeyRaw(et,tt,ot){const[dt,ft]=createKeyRawParts(et,tt,ot);return u8aConcat$3(...dt,...ft)}function createKey(et,tt,ot){return assertArgs(tt,ot),compactAddLength$1(createKeyRaw(et,tt,ot))}function createStorageInspect(et,tt,ot){const{meta:{type:dt}}=tt;return(...ft)=>{if(dt.isPlain)return ot.skipHashing?{inner:[],name:"wellKnown",outer:[u8aToU8a$5(ot.key)]}:createKeyInspect(et,tt,NO_RAW_ARGS);const{hashers:pt,key:mt}=dt.asMap;return pt.length===1?createKeyInspect(et,tt,{args:ft,hashers:pt,keys:[mt]}):createKeyInspect(et,tt,{args:ft,hashers:pt,keys:et.lookup.getSiType(mt).def.asTuple})}}function createStorageFn(et,tt,ot){const{meta:{type:dt}}=tt;let ft=null;return(...pt)=>{if(dt.isPlain)return ft||(ft=ot.skipHashing?compactAddLength$1(u8aToU8a$5(ot.key)):createKey(et,tt,NO_RAW_ARGS)),ft;const{hashers:mt,key:ht}=dt.asMap;return mt.length===1?createKey(et,tt,{args:pt,hashers:mt,keys:[ht]}):createKey(et,tt,{args:pt,hashers:mt,keys:et.lookup.getSiType(ht).def.asTuple})}}function createWithMeta(et,tt,ot){const{meta:dt,method:ft,prefix:pt,section:mt}=tt,ht=createStorageFn(et,tt,ot);return ht.inspect=createStorageInspect(et,tt,ot),ht.meta=dt,ht.method=stringCamelCase$1(ft),ht.prefix=pt,ht.section=mt,ht.toJSON=()=>objectSpread$4({storage:{method:ft,prefix:pt,section:mt}},dt.toJSON()),ht}function extendHeadMeta(et,{meta:{docs:tt,name:ot,type:dt},section:ft},{method:pt},mt){const ht=et.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:tt,fallback:et.createTypeUnsafe("Bytes",[]),modifier:et.createTypeUnsafe("StorageEntryModifierLatest",[1]),name:ot,type:et.createTypeUnsafe("StorageEntryTypeLatest",[dt.asMap.key,0])}]);mt.meta=ht;const bt=(...yt)=>et.createTypeUnsafe("StorageKey",[mt(...yt),{method:pt,section:ft}]);return bt.meta=ht,bt}function extendPrefixedMap(et,tt,ot){const{meta:{type:dt},method:ft,section:pt}=tt;return ot.iterKey=extendHeadMeta(et,tt,ot,(...mt)=>{if(mt.length&&(dt.isPlain||mt.length>=dt.asMap.hashers.length))throw new Error(`Iteration of ${stringCamelCase$1(pt||"unknown")}.${stringCamelCase$1(ft||"unknown")} needs arguments to be at least one less than the full arguments, found [${mt.join(", ")}]`);if(mt.length&&dt.isMap){const{hashers:ht,key:bt}=dt.asMap,yt=ht.length===1?[bt]:et.lookup.getSiType(bt).def.asTuple;return new Raw(et,createKeyRaw(et,tt,{args:mt,hashers:ht.slice(0,mt.length),keys:yt.slice(0,mt.length)}))}return new Raw(et,createKeyRaw(et,tt,NO_RAW_ARGS))}),ot}function createFunction(et,tt,ot){const{meta:{type:dt}}=tt,ft=createWithMeta(et,tt,ot);return dt.isMap&&extendPrefixedMap(et,tt,ft),ft.keyPrefix=(...pt)=>ft.iterKey&&ft.iterKey(...pt)||compactStripLength$1(ft())[1],ft}function findSiPrimitive(et,tt){const ot=tt.toLowerCase();return et.lookup.types.find(dt=>dt.type.def.isPrimitive&&dt.type.def.asPrimitive.toString().toLowerCase()===ot||dt.type.def.isHistoricMetaCompat&&dt.type.def.asHistoricMetaCompat.toString().toLowerCase()===ot)}function findSiType(et,tt){let ot=findSiPrimitive(et,tt);if(!ot&&(tt==="Bytes"||tt.startsWith("[u8;"))){const dt=findSiPrimitive(et,"u8");if(dt)if(tt==="Bytes")ot=et.lookup.types.find(ft=>ft.type.def.isSequence&&ft.type.def.asSequence.type.eq(dt.id)||ft.type.def.isHistoricMetaCompat&&ft.type.def.asHistoricMetaCompat.eq(tt));else{const ft=getTypeDef(tt);ot=et.lookup.types.find(pt=>pt.type.def.isArray&&pt.type.def.asArray.eq({len:ft.length,type:dt.id})||pt.type.def.isHistoricMetaCompat&&pt.type.def.asHistoricMetaCompat.eq(tt))}}return ot||console.warn(`Unable to map ${tt} to a lookup index`),ot}function createRuntimeFunction({method:et,prefix:tt,section:ot},dt,{docs:ft,type:pt}){return mt=>{var ht;return createFunction(mt,{meta:mt.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:mt.createTypeUnsafe("Vec<Text>",[[ft]]),modifier:mt.createTypeUnsafe("StorageEntryModifierLatest",["Required"]),name:mt.createTypeUnsafe("Text",[et]),toJSON:()=>dt,type:mt.createTypeUnsafe("StorageEntryTypeLatest",[{Plain:((ht=findSiType(mt,pt))==null?void 0:ht.id)||0}])}]),method:et,prefix:tt,section:ot},{key:dt,skipHashing:!0})}}const prefix$1="Substrate",section="substrate";function createSubstrateFn(et,tt,ot){return createRuntimeFunction({method:et,prefix:prefix$1,section},tt,ot)}const substrate={changesTrieConfig:createSubstrateFn("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:createSubstrateFn("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:createSubstrateFn("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),defaultChildStorageKeyPrefix:createSubstrateFn("defaultChildStorageKeyPrefix",":child_storage:default:",{docs:"Prefix of the default child storage keys in the top trie.",type:"u32"}),extrinsicIndex:createSubstrateFn("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:createSubstrateFn("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"}),intrablockEntropy:createSubstrateFn("intrablockEntropy",":intrablock_entropy",{docs:"Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.",type:"[u8; 32]"}),storageVersionStorageKeyPostfix:createSubstrateFn("storageVersionStorageKeyPostfix",":__STORAGE_VERSION__:",{docs:"The storage key postfix that is used to store the [`StorageVersion`] per pallet.",type:"u16"}),transactionLevelKey:createSubstrateFn("transactionLevelKey",":transaction_level:",{docs:"The key that holds the current number of active layers.",type:"u32"})};function getStorage(et){const tt={},ot=Object.entries(substrate);for(let dt=0,ft=ot.length;dt<ft;dt++)tt[ot[dt][0]]=ot[dt][1](et);return{substrate:tt}}const VERSION_NAME="palletVersion",VERSION_KEY=":__STORAGE_VERSION__:",VERSION_DOCS={docs:"Returns the current pallet version from storage",type:"u16"};function decorateStorage(et,{pallets:tt},ot){const dt=getStorage(et);for(let ft=0,pt=tt.length;ft<pt;ft++){const{name:mt,storage:ht}=tt[ft];if(ht.isSome){const bt=stringCamelCase$1(mt),{items:yt,prefix:xt}=ht.unwrap(),gt=xt.toString();lazyMethod$2(dt,bt,()=>lazyMethods$1({palletVersion:createRuntimeFunction({method:VERSION_NAME,prefix:gt,section:bt},createKeyRaw(et,{method:VERSION_KEY,prefix:mt.toString()},NO_RAW_ARGS),VERSION_DOCS)(et)},yt,wt=>createFunction(et,{meta:wt,method:wt.name.toString(),prefix:gt,section:bt},{}),objectNameToCamel))}}return dt}function expandMetadata(et,tt){if(!(tt instanceof Metadata))throw new Error("You need to pass a valid Metadata instance to Decorated");const ot=tt.asLatest,dt=tt.version;return{consts:decorateConstants(et,ot),errors:decorateErrors(et,ot,dt),events:decorateEvents(et,ot,dt),query:decorateStorage(et,ot),registry:et,tx:decorateExtrinsics(et,ot,dt)}}const DEFAULT_FIRST_CALL_IDX=new Uint8Array(2),l$5=logger$2("registry");function sortDecimalStrings(et,tt){return parseInt(et,10)-parseInt(tt,10)}function valueToString(et){return et.toString()}function getFieldArgs(et,tt){const ot=tt.length,dt=new Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=et.getTypeDef(tt[ft].type).type;return dt}function clearRecord(et){const tt=Object.keys(et);for(let ot=0,dt=tt.length;ot<dt;ot++)delete et[tt[ot]]}function getVariantStringIdx({index:et}){return et.toString()}function injectErrors(et,{lookup:tt,pallets:ot},dt,ft){clearRecord(ft);for(let pt=0,mt=ot.length;pt<mt;pt++){const{errors:ht,index:bt,name:yt}=ot[pt];if(ht.isSome){const xt=stringCamelCase$1(yt);lazyMethod$2(ft,dt>=12?bt.toNumber():pt,()=>lazyVariants(tt,ht.unwrap(),getVariantStringIdx,({docs:gt,fields:wt,index:Pt,name:St})=>({args:getFieldArgs(tt,wt),docs:gt.map(valueToString),fields:wt,index:Pt.toNumber(),method:St.toString(),name:St.toString(),section:xt})))}}}function injectEvents(et,{lookup:tt,pallets:ot},dt,ft){const pt=ot.filter(filterEventsSome);clearRecord(ft);for(let mt=0,ht=pt.length;mt<ht;mt++){const{events:bt,index:yt,name:xt}=pt[mt];lazyMethod$2(ft,dt>=12?yt.toNumber():mt,()=>lazyVariants(tt,bt.unwrap(),getVariantStringIdx,gt=>{const wt=et.createType("EventMetadataLatest",objectSpread$4({},gt,{args:getFieldArgs(tt,gt.fields)}));return class extends GenericEventData{constructor(Pt,St){super(Pt,St,wt,stringCamelCase$1(xt),gt.name.toString())}}}))}}function injectExtrinsics(et,{lookup:tt,pallets:ot},dt,ft,pt){const mt=ot.filter(filterCallsSome);clearRecord(ft),clearRecord(pt);for(let ht=0,bt=mt.length;ht<bt;ht++){const{calls:yt,index:xt,name:gt}=mt[ht],wt=dt>=12?xt.toNumber():ht,Pt=stringCamelCase$1(gt),St=yt.unwrap();lazyMethod$2(ft,wt,()=>lazyVariants(tt,St,getVariantStringIdx,It=>createCallFunction(et,tt,It,Pt,wt)));const{path:Et}=et.lookup.getSiType(St.type),Lt=Et.findIndex(It=>It.eq("pallet"));if(Lt!==-1){const It=stringCamelCase$1(Et.slice(0,Lt).map((kt,Nt)=>Nt===0?kt.replace(/^(frame|pallet)_/,""):kt).join(" "));pt[It]?pt[It].push(Pt):pt[It]=[Pt]}}}function extractProperties(et,tt){const ot=et.getChainProperties(),dt=decorateConstants(et,tt.asLatest,tt.version),ft=dt.system&&(dt.system.sS58Prefix||dt.system.ss58Prefix);if(!ft)return ot;const{isEthereum:pt,tokenDecimals:mt,tokenSymbol:ht}=ot||{};return et.createTypeUnsafe("ChainProperties",[{isEthereum:pt,ss58Format:ft,tokenDecimals:mt,tokenSymbol:ht}])}class TypeRegistry{constructor(tt){Ot(this,"__internal__chainProperties");Ot(this,"__internal__classes",new Map);Ot(this,"__internal__definitions",new Map);Ot(this,"__internal__firstCallIndex",null);Ot(this,"__internal__hasher",blake2AsU8a$2);Ot(this,"__internal__knownTypes",{});Ot(this,"__internal__lookup");Ot(this,"__internal__metadata");Ot(this,"__internal__metadataVersion",0);Ot(this,"__internal__signedExtensions",fallbackExtensions);Ot(this,"__internal__unknownTypes",new Map);Ot(this,"__internal__userExtensions");Ot(this,"__internal__knownDefaults");Ot(this,"__internal__knownDefaultsEntries");Ot(this,"__internal__knownDefinitions");Ot(this,"__internal__metadataCalls",{});Ot(this,"__internal__metadataErrors",{});Ot(this,"__internal__metadataEvents",{});Ot(this,"__internal__moduleMap",{});Ot(this,"createdAtHash");Ot(this,"__internal__registerObject",tt=>{const ot=Object.entries(tt);for(let dt=0,ft=ot.length;dt<ft;dt++){const[pt,mt]=ot[dt];if(isFunction$9(mt))this.__internal__classes.set(pt,mt);else{const ht=isString$3(mt)?mt:stringify$4(mt);if(pt===ht)throw new Error(`Unable to register circular ${pt} === ${ht}`);this.__internal__classes.has(pt)&&this.__internal__classes.delete(pt),this.__internal__definitions.set(pt,ht)}}});Ot(this,"__internal__registerLookup",tt=>{this.setLookup(tt);let ot=null;if(this.hasType("SpWeightsWeightV2Weight")){const dt=this.createType("SpWeightsWeightV2Weight");ot=dt.refTime&&dt.proofSize?"SpWeightsWeightV2Weight":"WeightV1"}else isBn$2(this.createType("Weight"))||(ot="WeightV1");ot&&this.register({Weight:ot})});this.__internal__knownDefaults=new Map(Object.entries({Json,Metadata,PortableRegistry,Raw,...baseTypes})),this.__internal__knownDefaultsEntries=Array.from(this.__internal__knownDefaults.entries()),this.__internal__knownDefinitions=typeDefinitions;const ot=Object.values(this.__internal__knownDefinitions);for(let dt=0,ft=ot.length;dt<ft;dt++)this.register(ot[dt].types);tt&&(this.createdAtHash=this.createType("BlockHash",tt))}get chainDecimals(){var tt;if((tt=this.__internal__chainProperties)!=null&&tt.tokenDecimals.isSome){const ot=this.__internal__chainProperties.tokenDecimals.unwrap();if(ot.length)return ot.map(dt=>dt.toNumber())}return[12]}get chainIsEthereum(){var tt;return((tt=this.__internal__chainProperties)==null?void 0:tt.isEthereum.isTrue)||!1}get chainSS58(){var tt;return(tt=this.__internal__chainProperties)!=null&&tt.ss58Format.isSome?this.__internal__chainProperties.ss58Format.unwrap().toNumber():void 0}get chainTokens(){var tt;if((tt=this.__internal__chainProperties)!=null&&tt.tokenSymbol.isSome){const ot=this.__internal__chainProperties.tokenSymbol.unwrap();if(ot.length)return ot.map(valueToString)}return[formatBalance$2.getDefaults().unit]}get firstCallIndex(){return this.__internal__firstCallIndex||DEFAULT_FIRST_CALL_IDX}isLookupType(tt){return/Lookup\d+$/.test(tt)}createLookupType(tt){return`Lookup${typeof tt=="number"?tt:tt.toNumber()}`}get knownTypes(){return this.__internal__knownTypes}get lookup(){return assertReturn$1(this.__internal__lookup,"PortableRegistry has not been set on this registry")}get metadata(){return assertReturn$1(this.__internal__metadata,"Metadata has not been set on this registry")}get unknownTypes(){return[...this.__internal__unknownTypes.keys()]}get signedExtensions(){return this.__internal__signedExtensions}clearCache(){this.__internal__classes=new Map}createClass(tt){return createClassUnsafe(this,tt)}createClassUnsafe(tt){return createClassUnsafe(this,tt)}createType(tt,...ot){return createTypeUnsafe(this,tt,ot)}createTypeUnsafe(tt,ot,dt){return createTypeUnsafe(this,tt,ot,dt)}findMetaCall(tt){const[ot,dt]=[tt[0],tt[1]];return assertReturn$1(this.__internal__metadataCalls[`${ot}`]&&this.__internal__metadataCalls[`${ot}`][`${dt}`],()=>`findMetaCall: Unable to find Call with index [${ot}, ${dt}]/[${tt.toString()}]`)}findMetaError(tt){const[ot,dt]=isU8a$5(tt)?[tt[0],tt[1]]:[tt.index.toNumber(),isU8a$5(tt.error)?tt.error[0]:tt.error.toNumber()];return assertReturn$1(this.__internal__metadataErrors[`${ot}`]&&this.__internal__metadataErrors[`${ot}`][`${dt}`],()=>`findMetaError: Unable to find Error with index [${ot}, ${dt}]/[${tt.toString()}]`)}findMetaEvent(tt){const[ot,dt]=[tt[0],tt[1]];return assertReturn$1(this.__internal__metadataEvents[`${ot}`]&&this.__internal__metadataEvents[`${ot}`][`${dt}`],()=>`findMetaEvent: Unable to find Event with index [${ot}, ${dt}]/[${tt.toString()}]`)}get(tt,ot,dt){return this.getUnsafe(tt,ot,dt)}getUnsafe(tt,ot,dt){let ft=this.__internal__classes.get(tt)||this.__internal__knownDefaults.get(tt);if(!ft){const pt=this.__internal__definitions.get(tt);let mt;pt?mt=createClassUnsafe(this,pt):dt?mt=constructTypeClass(this,dt):ot&&(l$5.warn(`Unable to resolve type ${tt}, it will fail on construction`),this.__internal__unknownTypes.set(tt,!0),mt=DoNotConstruct.with(tt)),mt&&(ft=class extends mt{},this.__internal__classes.set(tt,ft),dt&&isNumber$3(dt.lookupIndex)&&this.__internal__classes.set(this.createLookupType(dt.lookupIndex),ft))}return ft}getChainProperties(){return this.__internal__chainProperties}getClassName(tt){const ot=[];for(const[dt,ft]of this.__internal__knownDefaultsEntries)tt===ft&&ot.push(dt);for(const[dt,ft]of this.__internal__classes.entries())tt===ft&&ot.push(dt);return ot.length?ot.sort().reverse()[0]:void 0}getDefinition(tt){return this.__internal__definitions.get(tt)}getModuleInstances(tt,ot){var dt,ft,pt,mt,ht;return((ht=(mt=(pt=(ft=(dt=this.__internal__knownTypes)==null?void 0:dt.typesBundle)==null?void 0:ft.spec)==null?void 0:pt[tt.toString()])==null?void 0:mt.instances)==null?void 0:ht[ot])||this.__internal__moduleMap[ot]}getOrThrow(tt){const ot=this.get(tt);if(!ot)throw new Error(`type ${tt} not found`);return ot}getOrUnknown(tt){return this.get(tt,!0)}getTransactionExtensionVersion(){return 0}getSignedExtensionExtra(){return expandExtensionTypes(this.__internal__signedExtensions,"payload",this.__internal__userExtensions)}getSignedExtensionTypes(){return expandExtensionTypes(this.__internal__signedExtensions,"extrinsic",this.__internal__userExtensions)}hasClass(tt){return this.__internal__classes.has(tt)||!!this.__internal__knownDefaults.has(tt)}hasDef(tt){return this.__internal__definitions.has(tt)}hasType(tt){return!this.__internal__unknownTypes.get(tt)&&(this.hasClass(tt)||this.hasDef(tt))}hash(tt){return this.createType("CodecHash",this.__internal__hasher(tt))}register(tt,ot){if(isFunction$9(tt))this.__internal__classes.set(tt.name,tt);else if(isString$3(tt)){if(isFunction$9(ot)){if(tt===ot.toString())throw new Error(`Unable to register circular ${tt} === ${tt}`)}else throw new Error(`Expected class definition passed to '${tt}' registration`);this.__internal__classes.set(tt,ot)}else this.__internal__registerObject(tt)}setChainProperties(tt){tt&&(this.__internal__chainProperties=tt)}setHasher(tt){this.__internal__hasher=tt||blake2AsU8a$2}setKnownTypes(tt){this.__internal__knownTypes=tt}setLookup(tt){this.__internal__lookup=tt,tt.register()}setMetadata(tt,ot,dt,ft){this.__internal__metadata=tt.asLatest,this.__internal__metadataVersion=tt.version,this.__internal__firstCallIndex=null,this.__internal__registerLookup(this.__internal__metadata.lookup),injectExtrinsics(this,this.__internal__metadata,this.__internal__metadataVersion,this.__internal__metadataCalls,this.__internal__moduleMap),injectErrors(this,this.__internal__metadata,this.__internal__metadataVersion,this.__internal__metadataErrors),injectEvents(this,this.__internal__metadata,this.__internal__metadataVersion,this.__internal__metadataEvents);const[pt]=Object.keys(this.__internal__metadataCalls).sort(sortDecimalStrings);if(pt){const[mt]=Object.keys(this.__internal__metadataCalls[pt]).sort(sortDecimalStrings);mt&&(this.__internal__firstCallIndex=new Uint8Array([parseInt(pt,10),parseInt(mt,10)]))}this.setSignedExtensions(ot||(this.__internal__metadata.extrinsic.versions.length>0&&this.__internal__metadata.extrinsic.versions.every(mt=>mt>0)?this.__internal__metadata.extrinsic.transactionExtensions.map(({identifier:mt})=>mt.toString()):fallbackExtensions),dt,ft),this.setChainProperties(extractProperties(this,tt))}setSignedExtensions(tt=fallbackExtensions,ot,dt){if(this.__internal__signedExtensions=tt,this.__internal__userExtensions=ot,!dt){const ft=findUnknownExtensions(this.__internal__signedExtensions,this.__internal__userExtensions);ft.length&&l$5.warn(`Unknown signed extensions ${ft.join(", ")} found, treating them as no-effect`)}}}function isFunction$3(et){return typeof et=="function"}const CHR$2="0123456789abcdef",U8$2=new Uint8Array(256),U16$2=new Uint8Array(256*256);for(let et=0,tt=CHR$2.length;et<tt;et++)U8$2[CHR$2[et].charCodeAt(0)|0]=et|0,et>9&&(U8$2[CHR$2[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$2[tt|ot]=U8$2[et]<<4|U8$2[ot]}function hexToU8a$1(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$2[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}const REGEX_HEX_PREFIXED$1=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX$1=/^[\da-fA-F]+$/;function isHex$1(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED$1.test(et))&&(tt===-1?et.length%2===0:et.length===2+Math.ceil(tt/4))}function isObject$3(et){return!!et&&typeof et=="object"}function isOn$1(...et){return tt=>(isObject$3(tt)||isFunction$3(tt))&&et.every(ot=>isFunction$3(tt[ot]))}const isToBigInt$1=isOn$1("toBigInt"),isToBn$1=isOn$1("toBn");function hexStripPrefix$1(et){if(!et||et==="0x")return"";if(REGEX_HEX_PREFIXED$1.test(et))return et.substring(2);if(REGEX_HEX_NOPREFIX$1.test(et))return et;throw new Error(`Expected hex value to convert, found '${et}'`)}function hexToBn$1(et,{isLe:tt=!1,isNegative:ot=!1}={}){if(!et||et==="0x")return new BN(0);const dt=hexStripPrefix$1(et),ft=new BN(dt,16,tt?"le":"be");return ot?ft.fromTwos(dt.length*4):ft}function isBigInt$1(et){return typeof et=="bigint"}function bnToBn$1(et){return et?BN.isBN(et)?et:isHex$1(et)?hexToBn$1(et.toString()):isBigInt$1(et)?new BN(et.toString()):isToBn$1(et)?et.toBn():isToBigInt$1(et)?new BN(et.toBigInt().toString()):new BN(et):new BN(0)}const typesChain={},sharedTypes$7={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},DispatchErrorModule:"DispatchErrorModuleU8",PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},standaloneTypes={...sharedTypes$7,AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"},versioned$a=[{minmax:[240,243],types:{...standaloneTypes,ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}}},{minmax:[244,999],types:{...standaloneTypes}},{minmax:[1e3,void 0],types:{...sharedTypes$7}}],sharedTypes$6={CompactAssignments:"CompactAssignmentsWith24",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]},Weight:"WeightV1"},addrIndicesTypes={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},addrAccountIdTypes$2={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$9=[{minmax:[1019,1031],types:{...addrIndicesTypes,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1032,1042],types:{...addrIndicesTypes,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1043,1045],types:{...addrIndicesTypes,BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"}},{minmax:[1046,1049],types:{...sharedTypes$6,...addrAccountIdTypes$2,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo223",Weight:"u32"}},{minmax:[1050,1054],types:{...sharedTypes$6,...addrAccountIdTypes$2,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo240",Weight:"u32"}},{minmax:[1055,1056],types:{...sharedTypes$6,...addrAccountIdTypes$2,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Scheduled:"ScheduledTo254",StakingLedger:"StakingLedgerTo240",Weight:"u32"}},{minmax:[1057,1061],types:{...sharedTypes$6,...addrAccountIdTypes$2,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Scheduled:"ScheduledTo254"}},{minmax:[1062,2012],types:{...sharedTypes$6,...addrAccountIdTypes$2,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[2013,2022],types:{...sharedTypes$6,...addrAccountIdTypes$2,CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"}},{minmax:[2023,2024],types:{...sharedTypes$6,...addrAccountIdTypes$2,RefCount:"RefCountTo259"}},{minmax:[2025,2027],types:{...sharedTypes$6,...addrAccountIdTypes$2}},{minmax:[2028,2029],types:{...sharedTypes$6,AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"}},{minmax:[2030,9e3],types:{...sharedTypes$6,CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"}},{minmax:[9010,9099],types:{...sharedTypes$6,...mapXcmTypes("V0")}},{minmax:[9100,9105],types:{...sharedTypes$6,...mapXcmTypes("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],versioned$8=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}],versioned$7=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}],sharedTypes$5={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}},Weight:"WeightV1"},addrAccountIdTypes$1={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",DispatchErrorModule:"DispatchErrorModuleU8",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$6=[{minmax:[0,10],types:{...sharedTypes$5,...addrAccountIdTypes$1,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ElectionResult:"ElectionResultToSpec10"}},{minmax:[11,12],types:{...sharedTypes$5,...addrAccountIdTypes$1,CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[13,22],types:{...sharedTypes$5,...addrAccountIdTypes$1,CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"}},{minmax:[23,24],types:{...sharedTypes$5,...addrAccountIdTypes$1,RefCount:"RefCountTo259"}},{minmax:[25,27],types:{...sharedTypes$5,...addrAccountIdTypes$1}},{minmax:[28,29],types:{...sharedTypes$5,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[30,9109],types:{...sharedTypes$5}},{minmax:[9110,void 0],types:{Weight:"WeightV1"}}],sharedTypes$4={DispatchErrorModule:"DispatchErrorModuleU8",FullIdentification:"()",Keys:"SessionKeys7B",Weight:"WeightV1"},versioned$5=[{minmax:[0,200],types:{...sharedTypes$4,AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"}},{minmax:[201,214],types:{...sharedTypes$4,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[215,228],types:{...sharedTypes$4,Keys:"SessionKeys6"}},{minmax:[229,9099],types:{...sharedTypes$4,...mapXcmTypes("V0")}},{minmax:[9100,9105],types:{...sharedTypes$4,...mapXcmTypes("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],versioned$4=[{minmax:[0,void 0],types:{}}],sharedTypes$3={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},versioned$3=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...sharedTypes$3,...mapXcmTypes("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...sharedTypes$3,...mapXcmTypes("V1")}},{minmax:[500,9999],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[1e4,void 0],types:{Weight:"WeightV1"}}],sharedTypes$2={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},versioned$2=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...sharedTypes$2,...mapXcmTypes("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...sharedTypes$2,...mapXcmTypes("V1")}},{minmax:[500,1001003],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[1002e3,void 0],types:{Weight:"WeightV1"}}],sharedTypes$1={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]},Weight:"WeightV1"},addrAccountIdTypes={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$1=[{minmax:[1,2],types:{...sharedTypes$1,...addrAccountIdTypes,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"}},{minmax:[3,22],types:{...sharedTypes$1,...addrAccountIdTypes,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"}},{minmax:[23,42],types:{...sharedTypes$1,...addrAccountIdTypes,CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"}},{minmax:[43,44],types:{...sharedTypes$1,...addrAccountIdTypes,DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"}},{minmax:[45,47],types:{...sharedTypes$1,...addrAccountIdTypes}},{minmax:[48,49],types:{...sharedTypes$1,AccountInfo:"AccountInfoWithDualRefCount"}},{minmax:[50,9099],types:{...sharedTypes$1,...mapXcmTypes("V0")}},{minmax:[9100,9105],types:{...sharedTypes$1,...mapXcmTypes("V1")}},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}],sharedTypes={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},versioned=[{minmax:[0,3],types:{DispatchError:"DispatchErrorPre6First",...sharedTypes,...mapXcmTypes("V0")}},{minmax:[4,5],types:{DispatchError:"DispatchErrorPre6First",...sharedTypes,...mapXcmTypes("V1")}},{minmax:[500,9434],types:{Weight:"WeightV1",TAssetConversion:"Option<AssetId>"}},{minmax:[9435,void 0],types:{Weight:"WeightV1"}}],typesSpec={"centrifuge-chain":versioned$a,kusama:versioned$9,node:versioned$8,"node-template":versioned$7,polkadot:versioned$6,rococo:versioned$5,shell:versioned$4,statemine:versioned$3,statemint:versioned$2,westend:versioned$1,westmint:versioned},knownSubstrate$1=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"Hydration",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydration.net"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2024,network:"vow-chain",displayName:"Enigmatic Smile",symbols:["VOW"],decimals:[18],standardAccount:"*25519",website:"https://www.vow.foundation/"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"autonomys",displayName:"Autonomys",symbols:["AI3"],decimals:[18],standardAccount:"*25519",website:"https://autonomys.xyz"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:12850,network:"analog-timechain",displayName:"Analog Timechain",symbols:["ANLOG"],decimals:[12],standardAccount:"*25519",website:"https://analog.one"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:14998,network:"mosaic-chain",displayName:"Mosaic Chain",symbols:["MOS"],decimals:[18],standardAccount:"*25519",website:"https://mosaicchain.io"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"},{prefix:8888,network:"xcavate",displayName:"Xcavate Protocol",symbols:["XCAV"],decimals:[12],standardAccount:"*25519",website:"https://xcavate.io/"}],knownGenesis$1={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],encointer:["0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],frequency:["0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],integritee:["0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da","0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],peaq:["0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polimec:["0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vara:["0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},knownIcon$1={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},knownLedger$1={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,bittensor:354,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,encointer:434,enjin:1155,equilibrium:99999997,frequency:2091,genshiro:99999996,hydradx:354,integritee:2015,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,peaq:3338,pendulum:354,phala:354,picasso:434,polimec:3344,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vara:4976,vtb:694,xxnetwork:1955,zeitgeist:354},knownTestnet$1={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},UNSORTED$1=[0,2,42],TESTNETS$1=["testnet"];function toExpanded$1(et){var ft,pt;const tt=et.network||"",ot=tt.replace(/_/g,"-").split("-"),dt=et;return dt.slip44=knownLedger$1[tt],dt.hasLedgerSupport=!!dt.slip44,dt.genesisHash=knownGenesis$1[tt]||[],dt.icon=knownIcon$1[tt]||"substrate",dt.isTestnet=!!knownTestnet$1[tt]||TESTNETS$1.includes(ot[ot.length-1]),dt.isIgnored=dt.isTestnet||!(et.standardAccount&&((ft=et.decimals)!=null&&ft.length)&&((pt=et.symbols)!=null&&pt.length))&&et.prefix!==42,dt}function filterSelectable$1({genesisHash:et,prefix:tt}){return!!et.length||tt===42}function filterAvailable$1(et){return!et.isIgnored&&!!et.network}function sortNetworks$1(et,tt){const ot=UNSORTED$1.includes(et.prefix),dt=UNSORTED$1.includes(tt.prefix);return ot===dt?ot?0:et.displayName.localeCompare(tt.displayName):ot?-1:1}const allNetworks$1=knownSubstrate$1.map(toExpanded$1),availableNetworks$1=allNetworks$1.filter(filterAvailable$1).sort(sortNetworks$1),selectableNetworks=availableNetworks$1.filter(filterSelectable$1),upgrades$3=[[0,1020,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[26669,1021,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[38245,1022,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[54248,1023,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[59659,1024,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[67651,1025,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[82191,1027,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[83238,1028,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[101503,1029,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[203466,1030,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[295787,1031,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[461692,1032,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[504329,1033,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[569327,1038,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[587687,1039,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[653183,1040,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[693488,1042,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[901442,1045,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1375086,1050,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1445458,1051,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1472960,1052,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1475648,1053,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1491596,1054,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1574408,1055,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2064961,1058,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2201991,1062,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2671528,2005,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2704202,2007,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2728002,2008,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2832534,2011,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2962294,2012,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[324e4,2013,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3274408,2015,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3323565,2019,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3534175,2022,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3860281,2023,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4143129,2024,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4401242,2025,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4841367,2026,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5961600,2027,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6137912,2028,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6561855,2029,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7100891,2030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7468792,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7668600,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7812476,9040,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8010981,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8073833,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8555825,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8945245,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9611377,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9625129,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9866422,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10403784,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10960765,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11006614,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11404482,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11601803,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12008022,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12405451,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12665416,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12909508,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13109752,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13555777,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13727747,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[14248044,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[14433840,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[14645900,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15048375,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15426015,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15680713,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15756296,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15912007,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[16356547,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[17335450,9381,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1]]],[18062739,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[18625e3,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[20465806,1e6,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[2157e4,1001e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21786291,1001002,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22515962,1001003,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[2279e4,1002e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23176015,1002001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23450253,1002004,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23565293,1002005,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23780224,1002006,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[24786390,1003e3,[["0xc51ff1fa3f5d0cca",1],["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]]],upgrades$2=[[0,0,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[29231,1,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[188836,5,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[199405,6,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[214264,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[244358,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[303079,9,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[314201,10,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[342400,11,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[443963,12,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[528470,13,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[687751,14,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[746085,15,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[787923,16,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[799302,17,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1205128,18,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1603423,23,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1733218,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2005673,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2436698,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3613564,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3899547,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4345767,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4876134,30,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5661442,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6321619,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6713249,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7217907,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7229126,9110,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7560558,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8115869,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8638103,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9280179,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9738717,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10156856,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10458576,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10655116,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10879371,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11328884,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11532856,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11933818,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12217535,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12245277,9281,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12532644,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12876189,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[13800015,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[14188833,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[14543918,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2]]],[15978362,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[1645e4,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[1784e4,9431,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[18407475,1000001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3]]],[19551e3,1001002,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[20181758,1001003,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",5],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[20438530,1002e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21169168,1002004,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21455374,1002005,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21558004,1002006,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]],[21800141,1002007,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0xfbc577b9d747efd6",1]]]],upgrades$1=[[214356,4,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[392764,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[409740,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[809976,20,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[877581,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[879238,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[889472,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[902937,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[932751,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[991142,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1030162,31,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1119657,32,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1199282,33,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1342534,34,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1392263,35,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1431703,36,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1433369,37,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1490972,41,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2087397,43,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2316688,44,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2549864,45,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925782,46,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925843,47,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4207800,48,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4627944,49,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5124076,50,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5478664,900,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5482450,9e3,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5584305,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5784566,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5879822,9031,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5896856,9032,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5897316,9033,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6117927,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6210274,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6379314,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6979141,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7568453,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7766394,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7911691,9120,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7968866,9121,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7982889,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8514322,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091726,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091774,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9406726,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9921066,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10007115,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10480973,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10578091,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10678509,9210,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10811001,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11096116,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11409279,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11584820,9251,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11716837,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11876919,9261,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11987927,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12077324,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12301871,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12604343,9290,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12841034,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13128237,9310,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13272363,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13483497,9330,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13649433,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13761100,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13847400,9360,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[14249200,9370,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[14576855,9380,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1]]],[14849830,9390,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15146832,9400,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15332317,9401,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",3],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[15661793,9420,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[16165469,9430,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",4],["0x49eaaf1b548a0cb0",2],["0x91d5df18b0d2cf58",2],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1]]],[18293984,102e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",7],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18293991,103e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",8],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18451783,104e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",9],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[18679741,1005e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",9],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19166695,1006e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19234157,1006001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19542944,1007e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19621258,1007001,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[19761406,1008e3,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20056997,1009e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20368318,101e4,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",10],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[20649086,1011e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21217837,1011001,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21300429,1013e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21460051,1014e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",3],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[21925427,1015e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",4],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22500517,1016e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[22759684,1016001,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23056976,1016002,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1]]],[23544582,1017e3,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1],["0x2609be83ac4468dc",1]]],[24002343,1017001,[["0xdf6acb689907609b",5],["0x37e397fc7c91f5e4",2],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",11],["0x49eaaf1b548a0cb0",5],["0x91d5df18b0d2cf58",2],["0x2a5e924655399e60",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",4],["0xf3ff14d5ab527059",3],["0x6ff52ee858e6c5bd",1],["0x91b1c8b16328eb92",1],["0x9ffb505aa738d69c",1],["0x17a6bc0d0062aeb3",1],["0x18ef58a3b67ba770",1],["0xfbc577b9d747efd6",1],["0x2609be83ac4468dc",1]]]],allKnown=Object.freeze(Object.defineProperty({__proto__:null,kusama:upgrades$3,polkadot:upgrades$2,westend:upgrades$1},Symbol.toStringTag,{value:"Module"})),NET_EXTRA={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function mapRaw([et,tt]){const ot=selectableNetworks.find(dt=>dt.network===et)||NET_EXTRA[et];if(!ot)throw new Error(`Unable to find info for chain ${et}`);return{genesisHash:hexToU8a$1(ot.genesisHash[0]),network:et,versions:tt.map(([dt,ft,pt])=>({apis:pt,blockNumber:new BN(dt),specVersion:new BN(ft)}))}}const upgrades=Object.entries(allKnown).map(mapRaw);function withNames(et,tt,ot){return ot(et.toString(),tt.toString())}function filterVersions(et=[],tt){return et.filter(({minmax:[ot,dt]})=>(ot==null||tt>=ot)&&(dt==null||tt<=dt)).reduce((ot,{types:dt})=>({...ot,...dt}),{})}function getSpecExtensions({knownTypes:et},tt,ot){return withNames(tt,ot,(dt,ft)=>{var pt,mt,ht,bt,yt,xt;return{...((ht=(mt=(pt=et.typesBundle)==null?void 0:pt.spec)==null?void 0:mt[ft])==null?void 0:ht.signedExtensions)??{},...((xt=(yt=(bt=et.typesBundle)==null?void 0:bt.chain)==null?void 0:yt[dt])==null?void 0:xt.signedExtensions)??{}}})}function getSpecTypes({knownTypes:et},tt,ot,dt){const ft=bnToBn$1(dt).toNumber();return withNames(tt,ot,(pt,mt)=>{var ht,bt,yt,xt,gt,wt,Pt,St;return{...filterVersions(typesSpec[mt],ft),...filterVersions(typesChain[pt],ft),...filterVersions((yt=(bt=(ht=et.typesBundle)==null?void 0:ht.spec)==null?void 0:bt[mt])==null?void 0:yt.types,ft),...filterVersions((wt=(gt=(xt=et.typesBundle)==null?void 0:xt.chain)==null?void 0:gt[pt])==null?void 0:wt.types,ft),...((Pt=et.typesSpec)==null?void 0:Pt[mt])??{},...((St=et.typesChain)==null?void 0:St[pt])??{},...et.types??{}}})}function getSpecHasher({knownTypes:et},tt,ot){return withNames(tt,ot,(dt,ft)=>{var pt,mt,ht,bt,yt,xt;return et.hasher||((ht=(mt=(pt=et.typesBundle)==null?void 0:pt.chain)==null?void 0:mt[dt])==null?void 0:ht.hasher)||((xt=(yt=(bt=et.typesBundle)==null?void 0:bt.spec)==null?void 0:yt[ft])==null?void 0:xt.hasher)||null})}function getSpecRpc({knownTypes:et},tt,ot){return withNames(tt,ot,(dt,ft)=>{var pt,mt,ht,bt,yt,xt;return{...((ht=(mt=(pt=et.typesBundle)==null?void 0:pt.spec)==null?void 0:mt[ft])==null?void 0:ht.rpc)??{},...((xt=(yt=(bt=et.typesBundle)==null?void 0:bt.chain)==null?void 0:yt[dt])==null?void 0:xt.rpc)??{}}})}function getSpecRuntime({knownTypes:et},tt,ot){return withNames(tt,ot,(dt,ft)=>{var pt,mt,ht,bt,yt,xt;return{...((ht=(mt=(pt=et.typesBundle)==null?void 0:pt.spec)==null?void 0:mt[ft])==null?void 0:ht.runtime)??{},...((xt=(yt=(bt=et.typesBundle)==null?void 0:bt.chain)==null?void 0:yt[dt])==null?void 0:xt.runtime)??{}}})}function getSpecAlias({knownTypes:et},tt,ot){return withNames(tt,ot,(dt,ft)=>{var pt,mt,ht,bt,yt,xt;return{...((ht=(mt=(pt=et.typesBundle)==null?void 0:pt.spec)==null?void 0:mt[ft])==null?void 0:ht.alias)??{},...((xt=(yt=(bt=et.typesBundle)==null?void 0:bt.chain)==null?void 0:yt[dt])==null?void 0:xt.alias)??{},...et.typesAlias??{}}})}function getUpgradeVersion(et,tt){const ot=upgrades.find(dt=>et.eq(dt.genesisHash));return ot?[ot.versions.reduce((dt,ft)=>tt.gt(ft.blockNumber)?ft:dt,void 0),ot.versions.find(dt=>tt.lte(dt.blockNumber))]:[void 0,void 0]}const l$4=logger$2("api/augment");function logLength(et,tt,ot=[]){return tt.length?` ${tt.length} ${et}${ot.length?" and":""}`:""}function logValues(et,tt){return tt.length?`
	${et.padStart(7)}: ${tt.sort().join(", ")}`:""}function warn$1(et,tt,[ot,dt]){(ot.length||dt.length)&&l$4.warn(`api.${et}: Found${logLength("added",ot,dt)}${logLength("removed",dt)} ${tt}:${logValues("added",ot)}${logValues("removed",dt)}`)}function findSectionExcludes(et,tt){return et.filter(ot=>!tt.includes(ot))}function findSectionIncludes(et,tt){return et.filter(ot=>tt.includes(ot))}function extractSections(et,tt){const ot=Object.keys(et),dt=Object.keys(tt);return[findSectionExcludes(ot,dt),findSectionExcludes(dt,ot)]}function findMethodExcludes(et,tt){const ot=Object.keys(et),dt=findSectionIncludes(Object.keys(tt),ot),ft=[];for(let pt=0,mt=dt.length;pt<mt;pt++){const ht=dt[pt],bt=Object.keys(et[ht]),yt=Object.keys(tt[ht]);for(let xt=0,gt=yt.length;xt<gt;xt++){const wt=yt[xt];bt.includes(wt)||ft.push(`${ht}.${wt}`)}}return ft}function extractMethods(et,tt){return[findMethodExcludes(tt,et),findMethodExcludes(et,tt)]}function augmentObject(et,tt,ot,dt=!1){dt&&objectClear(ot),et&&Object.keys(ot).length&&(warn$1(et,"modules",extractSections(tt,ot)),warn$1(et,"calls",extractMethods(tt,ot)));const ft=Object.keys(tt);for(let pt=0,mt=ft.length;pt<mt;pt++){const ht=ft[pt],bt=tt[ht];ot[ht]||(ot[ht]={}),lazyMethods$1(ot[ht],Object.keys(bt),yt=>bt[yt])}return ot}function sig({lookup:et},{method:tt,section:ot},dt){return`${ot}.${tt}(${dt.map(ft=>et.getTypeDef(ft).type).join(", ")})`}function extractStorageArgs(et,tt,ot){const dt=ot.filter(ft=>!isUndefined$5(ft));if(tt.meta.type.isPlain){if(dt.length!==0)throw new Error(`${sig(et,tt,[])} does not take any arguments, ${dt.length} found`)}else{const{hashers:ft,key:pt}=tt.meta.type.asMap,mt=ft.length===1?[pt]:et.lookup.getSiType(pt).def.asTuple.map(ht=>ht);if(dt.length!==mt.length)throw new Error(`${sig(et,tt,mt)} is a map, requiring ${mt.length} arguments, ${dt.length} found`)}return[tt,dt]}class Events{constructor(){Ot(this,"__internal__eventemitter",new EventEmitter)}emit(tt,...ot){return this.__internal__eventemitter.emit(tt,...ot)}on(tt,ot){return this.__internal__eventemitter.on(tt,ot),this}off(tt,ot){return this.__internal__eventemitter.removeListener(tt,ot),this}once(tt,ot){return this.__internal__eventemitter.once(tt,ot),this}}const PAGE_SIZE_K=1e3,PAGE_SIZE_V=250,PAGE_SIZE_Q=50,l$3=logger$2("api/init");let instanceCounter=0;function getAtQueryFn(et,{method:tt,section:ot}){return assertReturn$1(et.rx.query[ot]&&et.rx.query[ot][tt],()=>`query.${ot}.${tt} is not available in this version of the metadata`)}class Decorate extends Events{constructor(ot,dt,ft){var mt;super();Ot(this,"__internal__instanceId");Ot(this,"__internal__runtimeLog",{});Ot(this,"__internal__registry");Ot(this,"__internal__storageGetQ",[]);Ot(this,"__internal__storageSubQ",[]);Ot(this,"__phantom",new BN(0));Ot(this,"_type");Ot(this,"_call",{});Ot(this,"_consts",{});Ot(this,"_derive");Ot(this,"_errors",{});Ot(this,"_events",{});Ot(this,"_extrinsics");Ot(this,"_extrinsicType",GenericExtrinsic.LATEST_EXTRINSIC_VERSION);Ot(this,"_genesisHash");Ot(this,"_isConnected");Ot(this,"_isReady",!1);Ot(this,"_query",{});Ot(this,"_queryMulti");Ot(this,"_rpc");Ot(this,"_rpcCore");Ot(this,"_runtimeMap",{});Ot(this,"_runtimeChain");Ot(this,"_runtimeMetadata");Ot(this,"_runtimeVersion");Ot(this,"_rx",{call:{},consts:{},query:{},tx:{}});Ot(this,"_options");Ot(this,"_decorateMethod");Ot(this,"_rxDecorateMethod",ot=>ot);this.__internal__instanceId=`${++instanceCounter}`,this.__internal__registry=((mt=ot.source)==null?void 0:mt.registry)||ot.registry||new TypeRegistry,this._rx.callAt=(ht,bt)=>from$1(this.at(ht,bt)).pipe(map$3(yt=>yt.rx.call)),this._rx.queryAt=(ht,bt)=>from$1(this.at(ht,bt)).pipe(map$3(yt=>yt.rx.query)),this._rx.registry=this.__internal__registry,this._decorateMethod=ft,this._options=ot,this._type=dt;const pt=ot.source?ot.source._rpcCore.provider.isClonable?ot.source._rpcCore.provider.clone():ot.source._rpcCore.provider:ot.provider||new WsProvider;this._rpcCore=new RpcCore(this.__internal__instanceId,this.__internal__registry,{isPedantic:this._options.isPedantic,provider:pt,rpcCacheCapacity:this._options.rpcCacheCapacity,userRpc:this._options.rpc}),this._isConnected=new BehaviorSubject(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions}get registry(){return this.__internal__registry}createType(ot,...dt){return this.__internal__registry.createType(ot,...dt)}registerTypes(ot){ot&&this.__internal__registry.register(ot)}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_emptyDecorated(ot,dt){return{call:{},consts:{},errors:{},events:{},query:{},registry:ot,rx:{call:{},query:{}},tx:createSubmittable(this._type,this._rx,this._decorateMethod,ot,dt)}}_createDecorated(ot,dt,ft,pt){ft||(ft=this._emptyDecorated(ot.registry,pt)),(dt||!ot.decoratedMeta)&&(ot.decoratedMeta=expandMetadata(ot.registry,ot.metadata));const mt=this._decorateCalls(ot,this._decorateMethod,pt),ht=this._decorateCalls(ot,this._rxDecorateMethod,pt),bt=this._decorateStorage(ot.decoratedMeta,this._decorateMethod,pt),yt=this._decorateStorage(ot.decoratedMeta,this._rxDecorateMethod,pt);return augmentObject("consts",ot.decoratedMeta.consts,ft.consts,dt),augmentObject("errors",ot.decoratedMeta.errors,ft.errors,dt),augmentObject("events",ot.decoratedMeta.events,ft.events,dt),augmentObject("query",bt,ft.query,dt),augmentObject("query",yt,ft.rx.query,dt),augmentObject("call",mt,ft.call,dt),augmentObject("call",ht,ft.rx.call,dt),ft.findCall=xt=>findCall(ot.registry,xt),ft.findError=xt=>findError(ot.registry,xt),ft.queryMulti=pt?this._decorateMultiAt(ft,this._decorateMethod,pt):this._decorateMulti(this._decorateMethod),ft.runtimeVersion=ot.runtimeVersion,{createdAt:pt,decoratedApi:ft,decoratedMeta:ot.decoratedMeta}}_injectMetadata(ot,dt=!1){(dt||!ot.decoratedApi)&&(ot.decoratedApi=this._emptyDecorated(ot.registry));const{decoratedApi:ft,decoratedMeta:pt}=this._createDecorated(ot,dt,ot.decoratedApi);this._call=ft.call,this._consts=ft.consts,this._errors=ft.errors,this._events=ft.events,this._query=ft.query,this._rx.call=ft.rx.call,this._rx.query=ft.rx.query;const mt=this._decorateExtrinsics(pt,this._decorateMethod),ht=this._decorateExtrinsics(pt,this._rxDecorateMethod);dt||!this._extrinsics?(this._extrinsics=mt,this._rx.tx=ht):(augmentObject("tx",mt,this._extrinsics,!1),augmentObject(null,ht,this._rx.tx,!1)),augmentObject(null,pt.consts,this._rx.consts,dt),this.emit("decorated")}injectMetadata(ot,dt,ft){this._injectMetadata({counter:0,metadata:ot,registry:ft||this.__internal__registry,runtimeVersion:this.__internal__registry.createType("RuntimeVersionPartial")},dt)}_decorateFunctionMeta(ot,dt){return dt.meta=ot.meta,dt.method=ot.method,dt.section=ot.section,dt.toJSON=ot.toJSON,ot.callIndex&&(dt.callIndex=ot.callIndex),dt}_filterRpc(ot,dt){Object.keys(dt).length!==0&&(this._rpcCore.addUserInterfaces(dt),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc));const ft={};for(let mt=0,ht=ot.length;mt<ht;mt++){const[bt]=ot[mt].split("_");ft[bt]=!0}const pt=Object.keys(ft);for(let mt=0,ht=pt.length;mt<ht;mt++){const bt=stringUpperFirst(pt[mt]),yt=`${bt}Api`;this._runtimeMap[blake2AsHex(bt,64)]=bt,this._runtimeMap[blake2AsHex(yt,64)]=yt}this._filterRpcMethods(ot)}_filterRpcMethods(ot){const dt=ot.length!==0,ft=[...this._rpcCore.mapping.entries()],pt=[],mt=ft.length;for(let bt=0;bt<mt;bt++){const[,{alias:yt,endpoint:xt,method:gt,pubsub:wt,section:Pt}]=ft[bt];pt.push(`${Pt}_${gt}`),wt&&(pt.push(`${Pt}_${wt[1]}`),pt.push(`${Pt}_${wt[2]}`)),yt&&pt.push(...yt),xt&&pt.push(xt)}const ht=ot.filter(bt=>!pt.includes(bt)&&!bt.includes("_unstable_"));ht.length&&!this._options.noInitWarn&&l$3.warn(`RPC methods not decorated: ${ht.join(", ")}`);for(let bt=0;bt<mt;bt++){const[yt,{method:xt,section:gt}]=ft[bt];dt&&!ot.includes(yt)&&yt!=="rpc_methods"&&this._rpc[gt]&&(delete this._rpc[gt][xt],delete this._rx.rpc[gt][xt])}}_rpcSubmitter(ot){return ot((ft,...pt)=>from$1(this._rpcCore.provider.send(ft,pt)))}_decorateRpc(ot,dt,ft=this._rpcSubmitter(dt)){const pt=ft,mt=(ht,bt)=>{const yt=ot[ht][bt],xt=dt(yt,{methodName:bt});return xt.meta=yt.meta,xt.raw=dt(yt.raw,{methodName:bt}),xt};for(let ht=0,bt=ot.sections.length;ht<bt;ht++){const yt=ot.sections[ht];if(!Object.prototype.hasOwnProperty.call(pt,yt)){const xt=Object.keys(ot[yt]),gt=wt=>mt(yt,wt);for(let wt=0,Pt=xt.length;wt<Pt;wt++){const St=xt[wt];(this.hasSubscriptions||!(St.startsWith("subscribe")||St.startsWith("unsubscribe")))&&(Object.prototype.hasOwnProperty.call(pt,yt)||(pt[yt]={}),lazyMethod$2(pt[yt],St,gt))}}}return pt}_addRuntimeDef(ot,dt){if(!dt)return;const ft=Object.entries(dt);for(let pt=0,mt=ft.length;pt<mt;pt++){const[ht,bt]=ft[pt];if(ot[ht])for(let yt=0,xt=bt.length;yt<xt;yt++){const gt=bt[yt],wt=ot[ht].find(({version:Pt})=>gt.version===Pt);wt?objectSpread$4(wt.methods,gt.methods):ot[ht].push(gt)}else ot[ht]=bt}}_getRuntimeDefs(ot,dt,ft=""){const pt={},mt=Object.values(typeDefinitions);for(let ht=0,bt=mt.length;ht<bt;ht++)this._addRuntimeDef(pt,mt[ht].runtime);return this._addRuntimeDef(pt,getSpecRuntime(ot,ft,dt)),this._addRuntimeDef(pt,this._options.runtime),Object.entries(pt)}_getMethods(ot,dt){const ft={};return dt.forEach(pt=>{const{docs:mt,inputs:ht,name:bt,output:yt}=pt;ft[bt.toString()]={description:mt.map(xt=>xt.toString()).join(),params:ht.map(({name:xt,type:gt})=>({name:xt.toString(),type:ot.lookup.getName(gt)||ot.lookup.getTypeDef(gt).type})),type:ot.lookup.getName(yt)||ot.lookup.getTypeDef(yt).type}}),ft}_getRuntimeDefsViaMetadata(ot){const dt={},{apis:ft}=ot.metadata;for(let pt=0,mt=ft.length;pt<mt;pt++){const{methods:ht,name:bt}=ft[pt];dt[bt.toString()]=[{methods:this._getMethods(ot,ht),version:0}]}return Object.entries(dt)}_decorateCalls({registry:ot,runtimeVersion:{apis:dt,specName:ft,specVersion:pt}},mt,ht){const bt={},yt={},xt={},gt=ot.metadata.apis.length>0,wt=gt?this._getRuntimeDefsViaMetadata(ot):this._getRuntimeDefs(ot,ft,this._runtimeChain),Pt=[],St=`${ft.toString()}/${pt.toString()}`,Et=this.__internal__runtimeLog[St]||!1;if(this.__internal__runtimeLog[St]=!0,gt)for(let Nt=0,Ut=wt.length;Nt<Ut;Nt++){const[Ft,jt]=wt[Nt],Xt=jt[0],Wt=blake2AsHex(Ft,64),qt=stringCamelCase$1(Ft),Zt=Object.entries(Xt.methods);yt[qt]||(yt[qt]={});for(let Gt=0,Qt=Zt.length;Gt<Qt;Gt++){const[Ht,vt]=Zt[Gt],Vt=stringCamelCase$1(Ht);yt[qt][Vt]=objectSpread$4({method:Vt,name:`${Ft}_${Ht}`,section:qt,sectionHash:Wt},vt)}}else{for(let Ut=0,Ft=wt.length;Ut<Ft;Ut++){const[jt,Xt]=wt[Ut],Wt=blake2AsHex(jt,64),qt=dt.find(([Zt])=>Zt.eq(Wt));if(xt[Wt]=!0,qt){const Zt=Xt.map(({version:Qt})=>Qt).sort(),Gt=Xt.find(({version:Qt})=>qt[1].eq(Qt));if(Gt){const Qt=stringCamelCase$1(jt),Ht=Object.entries(Gt.methods);if(Ht.length){yt[Qt]||(yt[Qt]={});for(let vt=0,Vt=Ht.length;vt<Vt;vt++){const[At,Bt]=Ht[vt],Mt=stringCamelCase$1(At);yt[Qt][Mt]=objectSpread$4({method:Mt,name:`${jt}_${At}`,section:Qt,sectionHash:Wt},Bt)}}}else Pt.push(`${jt}/${qt[1].toString()} (${Zt.join("/")} known)`)}}const Nt=dt.map(([Ut,Ft])=>[Ut.toHex(),Ft.toString()]).filter(([Ut])=>!xt[Ut]).map(([Ut,Ft])=>`${this._runtimeMap[Ut]||Ut}/${Ft}`);!this._options.noInitWarn&&!Et&&(Pt.length&&l$3.warn(`${St}: Not decorating runtime apis without matching versions: ${Pt.join(", ")}`),Nt.length&&l$3.warn(`${St}: Not decorating unknown runtime apis: ${Nt.join(", ")}`))}const Lt=ht?(Nt,Ut)=>this._rpcCore.state.call(Nt,Ut,ht):(Nt,Ut)=>this._rpcCore.state.call(Nt,Ut),It=Nt=>lazyMethods$1({},Object.keys(yt[Nt]),Ut=>this._decorateCall(ot,yt[Nt][Ut],Lt,mt)),kt=Object.keys(yt);for(let Nt=0,Ut=kt.length;Nt<Ut;Nt++)lazyMethod$2(bt,kt[Nt],It);return bt}_decorateCall(ot,dt,ft,pt){const mt=pt((...ht)=>{if(ht.length!==dt.params.length)throw new Error(`${dt.name}:: Expected ${dt.params.length} arguments, found ${ht.length}`);const bt=ot.createType("Raw",u8aConcatStrict$4(ht.map((yt,xt)=>ot.createTypeUnsafe(dt.params[xt].type,[yt]).toU8a())));return ft(dt.name,bt).pipe(map$3(yt=>ot.createTypeUnsafe(dt.type,[yt])))});return mt.meta=dt,mt}_decorateMulti(ot){return ot(dt=>dt.length?(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(dt.map(ft=>Array.isArray(ft)?ft[0].creator.meta.type.isPlain?[ft[0].creator]:ft[0].creator.meta.type.asMap.hashers.length===1?[ft[0].creator,ft.slice(1)]:[ft[0].creator,...ft.slice(1)]:[ft.creator])):of([]))}_decorateMultiAt(ot,dt,ft){return dt(pt=>pt.length?this._rpcCore.state.queryStorageAt(pt.map(mt=>{if(Array.isArray(mt)){const{creator:ht}=getAtQueryFn(ot,mt[0].creator);return ht.meta.type.isPlain?[ht]:ht.meta.type.asMap.hashers.length===1?[ht,mt.slice(1)]:[ht,...mt.slice(1)]}return[getAtQueryFn(ot,mt.creator).creator]}),ft):of([]))}_decorateExtrinsics({tx:ot},dt){const ft=createSubmittable(this._type,this._rx,dt),pt=ht=>lazyMethods$1({},Object.keys(ot[ht]),bt=>bt.startsWith("$")?ot[ht][bt]:this._decorateExtrinsicEntry(ot[ht][bt],ft)),mt=Object.keys(ot);for(let ht=0,bt=mt.length;ht<bt;ht++)lazyMethod$2(ft,mt[ht],pt);return ft}_decorateExtrinsicEntry(ot,dt){const ft=(...pt)=>dt(ot(...pt));return ft.is=pt=>ot.is(pt),this._decorateFunctionMeta(ot,ft)}_decorateStorage({query:ot,registry:dt},ft,pt){const mt={},ht=yt=>lazyMethods$1({},Object.keys(ot[yt]),xt=>pt?this._decorateStorageEntryAt(dt,ot[yt][xt],ft,pt):this._decorateStorageEntry(ot[yt][xt],ft)),bt=Object.keys(ot);for(let yt=0,xt=bt.length;yt<xt;yt++)lazyMethod$2(mt,bt[yt],ht);return mt}_decorateStorageEntry(ot,dt){const ft=(ht,bt)=>extractStorageArgs(bt||this.__internal__registry,ot,ht),pt=ht=>from$1(this.at(ht)).pipe(map$3(bt=>getAtQueryFn(bt,ot))),mt=this._decorateStorageCall(ot,dt);return mt.creator=ot,mt.at=dt((ht,...bt)=>pt(ht).pipe(switchMap(yt=>yt(...bt)))),mt.hash=dt((...ht)=>this._rpcCore.state.getStorageHash(ft(ht))),mt.is=ht=>ht.section===ot.section&&ht.method===ot.method,mt.key=(...ht)=>u8aToHex$5(compactStripLength$1(ot(...ht))[1]),mt.keyPrefix=(...ht)=>u8aToHex$5(ot.keyPrefix(...ht)),mt.size=dt((...ht)=>this._rpcCore.state.getStorageSize(ft(ht))),mt.sizeAt=dt((ht,...bt)=>pt(ht).pipe(switchMap(yt=>this._rpcCore.state.getStorageSize(ft(bt,yt.creator.meta.registry),ht)))),ot.iterKey&&ot.meta.type.isMap&&(mt.entries=dt(memo(this.__internal__instanceId,(...ht)=>this._retrieveMapEntries(ot,null,ht))),mt.entriesAt=dt(memo(this.__internal__instanceId,(ht,...bt)=>pt(ht).pipe(switchMap(yt=>this._retrieveMapEntries(yt.creator,ht,bt))))),mt.entriesPaged=dt(memo(this.__internal__instanceId,ht=>this._retrieveMapEntriesPaged(ot,void 0,ht))),mt.keys=dt(memo(this.__internal__instanceId,(...ht)=>this._retrieveMapKeys(ot,null,ht))),mt.keysAt=dt(memo(this.__internal__instanceId,(ht,...bt)=>pt(ht).pipe(switchMap(yt=>this._retrieveMapKeys(yt.creator,ht,bt))))),mt.keysPaged=dt(memo(this.__internal__instanceId,ht=>this._retrieveMapKeysPaged(ot,void 0,ht)))),this.supportMulti&&ot.meta.type.isMap&&(mt.multi=dt(ht=>ot.meta.type.asMap.hashers.length===1?this._retrieveMulti(ht.map(bt=>[ot,[bt]])):this._retrieveMulti(ht.map(bt=>[ot,bt])))),this._decorateFunctionMeta(ot,mt)}_decorateStorageEntryAt(ot,dt,ft,pt){const mt=bt=>extractStorageArgs(ot,dt,bt),ht=ft((...bt)=>this._rpcCore.state.getStorage(mt(bt),pt));return ht.creator=dt,ht.hash=ft((...bt)=>this._rpcCore.state.getStorageHash(mt(bt),pt)),ht.is=bt=>bt.section===dt.section&&bt.method===dt.method,ht.key=(...bt)=>u8aToHex$5(compactStripLength$1(dt(...bt))[1]),ht.keyPrefix=(...bt)=>u8aToHex$5(dt.keyPrefix(...bt)),ht.size=ft((...bt)=>this._rpcCore.state.getStorageSize(mt(bt),pt)),dt.iterKey&&dt.meta.type.isMap&&(ht.entries=ft(memo(this.__internal__instanceId,(...bt)=>this._retrieveMapEntries(dt,pt,bt))),ht.entriesPaged=ft(memo(this.__internal__instanceId,bt=>this._retrieveMapEntriesPaged(dt,pt,bt))),ht.keys=ft(memo(this.__internal__instanceId,(...bt)=>this._retrieveMapKeys(dt,pt,bt))),ht.keysPaged=ft(memo(this.__internal__instanceId,bt=>this._retrieveMapKeysPaged(dt,pt,bt)))),this.supportMulti&&dt.meta.type.isMap&&(ht.multi=ft(bt=>dt.meta.type.asMap.hashers.length===1?this._retrieveMulti(bt.map(yt=>[dt,[yt]]),pt):this._retrieveMulti(bt.map(yt=>[dt,yt]),pt))),this._decorateFunctionMeta(dt,ht)}_queueStorage(ot,dt){const ft=dt===this.__internal__storageSubQ?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;let pt=dt.length-1,mt=0,ht;return pt===-1||!dt[pt]||dt[pt][1].length===PAGE_SIZE_Q?(pt++,ht=from$1(new Promise(bt=>{nextTick$1(()=>{const yt=dt[pt][1];delete dt[pt],bt(yt)})})).pipe(switchMap(bt=>ft(bt))),dt.push([ht,[ot]])):(ht=dt[pt][0],mt=dt[pt][1].length,dt[pt][1].push(ot)),ht.pipe(map$3(bt=>bt[mt]))}_decorateStorageCall(ot,dt){const ft=memo(this.__internal__instanceId,(...pt)=>{const mt=extractStorageArgs(this.__internal__registry,ot,pt);return this.hasSubscriptions?this._queueStorage(mt,this.__internal__storageSubQ):this._rpcCore.state.getStorage(mt)});return dt(ft,{methodName:ot.method,overrideNoSub:(...pt)=>this._queueStorage(extractStorageArgs(this.__internal__registry,ot,pt),this.__internal__storageGetQ)})}_retrieveMulti(ot,dt){if(!ot.length)return of([]);const ft=this.hasSubscriptions&&!dt?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return ot.length<=PAGE_SIZE_V?dt?ft(ot,dt):ft(ot):combineLatest(arrayChunk$1(ot,PAGE_SIZE_V).map(pt=>dt?ft(pt,dt):ft(pt))).pipe(map$3(arrayFlatten$1))}_retrieveMapKeys({iterKey:ot,meta:dt,method:ft,section:pt},mt,ht){if(!ot||!dt.type.isMap)throw new Error("keys can only be retrieved on maps");const bt=ot(...ht).toHex(),yt=new BehaviorSubject(bt),xt=mt?wt=>this._rpcCore.state.getKeysPaged(bt,PAGE_SIZE_K,wt,mt):wt=>this._rpcCore.state.getKeysPaged(bt,PAGE_SIZE_K,wt),gt=wt=>wt.setMeta(dt,pt,ft);return yt.pipe(switchMap(xt),map$3(wt=>wt.map(gt)),tap(wt=>nextTick$1(()=>{wt.length===PAGE_SIZE_K?yt.next(wt[PAGE_SIZE_K-1].toHex()):yt.complete()})),toArray(),map$3(arrayFlatten$1))}_retrieveMapKeysPaged({iterKey:ot,meta:dt,method:ft,section:pt},mt,ht){if(!ot||!dt.type.isMap)throw new Error("keys can only be retrieved on maps");const bt=xt=>xt.setMeta(dt,pt,ft);return(mt?xt=>this._rpcCore.state.getKeysPaged(xt,ht.pageSize,ht.startKey||xt,mt):xt=>this._rpcCore.state.getKeysPaged(xt,ht.pageSize,ht.startKey||xt))(ot(...ht.args).toHex()).pipe(map$3(xt=>xt.map(bt)))}_retrieveMapEntries(ot,dt,ft){const pt=dt?mt=>this._rpcCore.state.queryStorageAt(mt,dt):mt=>this._rpcCore.state.queryStorageAt(mt);return this._retrieveMapKeys(ot,dt,ft).pipe(switchMap(mt=>mt.length?combineLatest(arrayChunk$1(mt,PAGE_SIZE_V).map(pt)).pipe(map$3(ht=>arrayFlatten$1(ht).map((bt,yt)=>[mt[yt],bt]))):of([])))}_retrieveMapEntriesPaged(ot,dt,ft){const pt=dt?mt=>this._rpcCore.state.queryStorageAt(mt,dt):mt=>this._rpcCore.state.queryStorageAt(mt);return this._retrieveMapKeysPaged(ot,dt,ft).pipe(switchMap(mt=>mt.length?pt(mt).pipe(map$3(ht=>ht.map((bt,yt)=>[mt[yt],bt]))):of([])))}_decorateDeriveRx(ot){var pt,mt,ht,bt;const dt=(pt=this._runtimeVersion)==null?void 0:pt.specName.toString(),ft=getAvailableDerives(this.__internal__instanceId,this._rx,objectSpread$4({},this._options.derives,(bt=(ht=(mt=this._options.typesBundle)==null?void 0:mt.spec)==null?void 0:ht[dt||""])==null?void 0:bt.derives));return decorateDeriveSections(ot,ft)}_decorateDerive(ot){return decorateDeriveSections(ot,this._rx.derive)}}const KEEPALIVE_INTERVAL=1e4,SUPPORTED_METADATA_VERSIONS=[16,15,14],l$2=logger$2("api/init");function textToString(et){return et.toString()}class Init extends Decorate{constructor(ot,dt,ft){super(ot,dt,ft);Ot(this,"__internal__atLast",null);Ot(this,"__internal__healthTimer",null);Ot(this,"__internal__registries",[]);Ot(this,"__internal__updateSub",null);Ot(this,"__internal__waitingRegistries",{});this.registry.setKnownTypes(ot),ot.source?this.__internal__registries=ot.source.__internal__registries:this.registerTypes(ot.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=ot.signer,this._rpcCore.setRegistrySwap(pt=>this.getBlockRegistry(pt)),this._rpcCore.setResolveBlockHash(pt=>firstValueFrom(this._rpcCore.chain.getBlockHash(pt))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",()=>this.__internal__onProviderDisconnect()),this._rpcCore.provider.on("error",pt=>this.__internal__onProviderError(pt)),this._rpcCore.provider.on("connected",()=>this.__internal__onProviderConnect())):this._options.noInitWarn||l$2.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&this.__internal__onProviderConnect().catch(noop$3)}_initRegistry(ot,dt,ft,pt,mt){ot.clearCache(),ot.setChainProperties(mt||this.registry.getChainProperties()),ot.setKnownTypes(this._options),ot.register(getSpecTypes(ot,dt,ft.specName,ft.specVersion)),ot.setHasher(getSpecHasher(ot,dt,ft.specName)),ot.knownTypes.typesBundle&&(ot.knownTypes.typesAlias=getSpecAlias(ot,dt,ft.specName)),ot.setMetadata(pt,void 0,objectSpread$4({},getSpecExtensions(ot,dt,ft.specName),this._options.signedExtensions),this._options.noInitWarn)}_getDefaultRegistry(){return assertReturn$1(this.__internal__registries.find(({isDefault:ot})=>ot),"Initialization error, cannot find the default registry")}async at(ot,dt){const ft=u8aToU8a$5(ot),pt=u8aToHex$5(ft),mt=await this.getBlockRegistry(ft,dt);return(!this.__internal__atLast||this.__internal__atLast[0]!==pt)&&(this.__internal__atLast=[pt,this._createDecorated(mt,!0,null,ft).decoratedApi]),this.__internal__atLast[1]}async _createBlockRegistry(ot,dt,ft){const pt=new TypeRegistry(ot),mt=await this._retrieveMetadata(ft.apis,dt.parentHash,pt),ht=this._runtimeChain;if(!ht)throw new Error("Invalid initializion order, runtimeChain is not available");this._initRegistry(pt,ht,ft,mt);const bt={counter:0,lastBlockHash:ot,metadata:mt,registry:pt,runtimeVersion:ft};return this.__internal__registries.push(bt),bt}_cacheBlockRegistryProgress(ot,dt){let ft=this.__internal__waitingRegistries[ot];return isUndefined$5(ft)&&(ft=this.__internal__waitingRegistries[ot]=new Promise((pt,mt)=>{dt().then(ht=>{delete this.__internal__waitingRegistries[ot],pt(ht)}).catch(ht=>{delete this.__internal__waitingRegistries[ot],mt(ht)})})),ft}_getBlockRegistryViaVersion(ot,dt){if(dt){const ft=this.__internal__registries.find(({runtimeVersion:{specName:pt,specVersion:mt}})=>pt.eq(dt.specName)&&mt.eq(dt.specVersion));if(ft)return ft.counter++,ft.lastBlockHash=ot,ft}return null}async _getBlockRegistryViaHash(ot){if(!this._genesisHash||!this._runtimeVersion)throw new Error("Cannot retrieve data on an uninitialized chain");const dt=this.registry.createType("HeaderPartial",this._genesisHash.eq(ot)?{number:BN_ZERO$1,parentHash:this._genesisHash}:await firstValueFrom(this._rpcCore.chain.getHeader.raw(ot)));if(dt.parentHash.isEmpty)throw l$2.warn(`Unable to retrieve header ${ot.toString()} and parent ${dt.parentHash.toString()} from supplied hash`),new Error("Unable to retrieve header and parent from supplied hash");getUpgradeVersion(this._genesisHash,dt.number);const ft=this.registry.createType("RuntimeVersionPartial",await firstValueFrom(this._rpcCore.state.getRuntimeVersion.raw(dt.parentHash)));return this._getBlockRegistryViaVersion(ot,ft)||await this._cacheBlockRegistryProgress(ft.toHex(),()=>this._createBlockRegistry(ot,dt,ft))}async getBlockRegistry(ot,dt){return this.__internal__registries.find(({lastBlockHash:ft})=>ft&&u8aEq$2(ft,ot))||this._getBlockRegistryViaVersion(ot,dt)||await this._cacheBlockRegistryProgress(u8aToHex$5(ot),()=>this._getBlockRegistryViaHash(ot))}async _loadMeta(){var ot;return this._isReady?(this._options.source||this._subscribeUpdates(),!0):(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=(ot=this._options.source)!=null&&ot._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(ot){this._extrinsicType=ot.extrinsicVersion,this._runtimeChain=ot.runtimeChain,this._runtimeVersion=ot.runtimeVersion;const dt=Object.keys(ot.rpc),ft=[];for(let pt=0,mt=dt.length;pt<mt;pt++){const ht=dt[pt],bt=Object.keys(ot.rpc[ht]);for(let yt=0,xt=bt.length;yt<xt;yt++)ft.push(`${ht}_${bt[yt]}`)}return this._filterRpc(ft,getSpecRpc(this.registry,ot.runtimeChain,ot.runtimeVersion.specName)),[ot.genesisHash,ot.runtimeMetadata]}_subscribeUpdates(){this.__internal__updateSub||!this.hasSubscriptions||(this.__internal__updateSub=this._rpcCore.state.subscribeRuntimeVersion().pipe(switchMap(ot=>{var dt;return(dt=this._runtimeVersion)!=null&&dt.specVersion.eq(ot.specVersion)?of(!1):this._rpcCore.state.getMetadata().pipe(map$3(ft=>{l$2.log(`Runtime version updated to spec=${ot.specVersion.toString()}, tx=${ot.transactionVersion.toString()}`),this._runtimeMetadata=ft,this._runtimeVersion=ot,this._rx.runtimeVersion=ot;const pt=this._getDefaultRegistry(),mt=this._runtimeChain;if(!mt)throw new Error("Invalid initializion order, runtimeChain is not available");return pt.metadata=ft,pt.runtimeVersion=ot,this._initRegistry(this.registry,mt,ot,ft),this._injectMetadata(pt,!0),!0}))})).subscribe())}async _metaFromChain(ot){const[dt,ft,pt,mt,ht]=await Promise.all([firstValueFrom(this._rpcCore.chain.getBlockHash(0)),firstValueFrom(this._rpcCore.state.getRuntimeVersion()),firstValueFrom(this._rpcCore.system.chain()),firstValueFrom(this._rpcCore.system.properties()),firstValueFrom(this._rpcCore.rpc.methods())]);this._runtimeChain=pt,this._runtimeVersion=ft,this._rx.runtimeVersion=ft;const bt=`${dt.toHex()||"0x"}-${ft.specVersion.toString()}`,yt=ot!=null&&ot[bt]?new Metadata(this.registry,ot[bt]):await this._retrieveMetadata(ft.apis);return this._initRegistry(this.registry,pt,ft,yt,mt),this._filterRpc(ht.methods.map(textToString),getSpecRpc(this.registry,pt,ft.specName)),this._subscribeUpdates(),this.__internal__registries.length||this.__internal__registries.push({counter:0,isDefault:!0,metadata:yt,registry:this.registry,runtimeVersion:ft}),yt.getUniqTypes(this._options.throwOnUnknown||!1),[dt,yt]}_initFromMeta(ot){const dt=this._runtimeVersion;if(!dt)throw new Error("Invalid initializion order, runtimeVersion is not available");return this._extrinsicType=ot.asLatest.extrinsic.versions.at(-1)||LATEST_EXTRINSIC_VERSION,this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=dt,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),!0}async _retrieveMetadata(ot,dt,ft){let pt=null;const mt=ot.find(([bt])=>bt.eq(blake2AsHex("Metadata",64))),ht=ft||this.registry;if(!mt||mt[1].toNumber()<2)return l$2.warn("MetadataApi not available, rpc::state::get_metadata will be used."),dt?new Metadata(ht,await firstValueFrom(this._rpcCore.state.getMetadata.raw(dt))):await firstValueFrom(this._rpcCore.state.getMetadata());try{const bt=dt?await firstValueFrom(this._rpcCore.state.call.raw("Metadata_metadata_versions","0x",dt)):await firstValueFrom(this._rpcCore.state.call("Metadata_metadata_versions","0x"));pt=ht.createType("Vec<u32>",bt).filter(xt=>SUPPORTED_METADATA_VERSIONS.includes(xt.toNumber())).reduce((xt,gt)=>gt.gt(xt)?gt:xt)}catch(bt){l$2.debug(bt.message),l$2.warn("error with state_call::Metadata_metadata_versions, rpc::state::get_metadata will be used")}if(pt&&!SUPPORTED_METADATA_VERSIONS.includes(pt.toNumber())&&(pt=null),pt)try{const bt=dt?await firstValueFrom(this._rpcCore.state.call.raw("Metadata_metadata_at_version",u8aToHex$5(pt.toU8a()),dt)):await firstValueFrom(this._rpcCore.state.call("Metadata_metadata_at_version",u8aToHex$5(pt.toU8a()))),yt=dt?ht.createType("Raw",bt).toU8a():bt,xt=ht.createType("Option<OpaqueMetadata>",yt).unwrapOr(null);if(xt)return new Metadata(ht,xt.toHex())}catch(bt){l$2.debug(bt.message),l$2.warn("error with state_call::Metadata_metadata_at_version, rpc::state::get_metadata will be used")}return dt?new Metadata(ht,await firstValueFrom(this._rpcCore.state.getMetadata.raw(dt))):await firstValueFrom(this._rpcCore.state.getMetadata())}_subscribeHealth(){this._unsubscribeHealth(),this.__internal__healthTimer=this.hasSubscriptions?setInterval(()=>{firstValueFrom(this._rpcCore.system.health.raw()).catch(noop$3)},KEEPALIVE_INTERVAL):null}_unsubscribeHealth(){this.__internal__healthTimer&&(clearInterval(this.__internal__healthTimer),this.__internal__healthTimer=null)}_unsubscribeUpdates(){this.__internal__updateSub&&(this.__internal__updateSub.unsubscribe(),this.__internal__updateSub=null)}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates()}async __internal__onProviderConnect(){this._isConnected.next(!0),this.emit("connected");try{const ot=this._options.initWasm===!1?!0:await cryptoWaitReady(),dt=await this._loadMeta();this._subscribeHealth(),dt&&!this._isReady&&ot&&(this._isReady=!0,this.emit("ready",this))}catch(ot){const dt=new Error(`FATAL: Unable to initialize the API: ${ot.message}`);l$2.error(dt),this.emit("error",dt)}}__internal__onProviderDisconnect(){this._isConnected.next(!1),this._unsubscribe(),this.emit("disconnected")}__internal__onProviderError(ot){this.emit("error",ot)}}function assertResult(et){if(et===void 0)throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");return et}class Getters extends Init{get call(){return assertResult(this._call)}get consts(){return assertResult(this._consts)}get derive(){return assertResult(this._derive)}get errors(){return assertResult(this._errors)}get events(){return assertResult(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return assertResult(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return`${packageInfo$3.name} v${packageInfo$3.version}`}get query(){return assertResult(this._query)}get queryMulti(){return assertResult(this._queryMulti)}get rpc(){return assertResult(this._rpc)}get runtimeChain(){return assertResult(this._runtimeChain)}get runtimeMetadata(){return assertResult(this._runtimeMetadata)}get runtimeVersion(){return assertResult(this._runtimeVersion)}get rx(){return assertResult(this._rx)}get stats(){return this._rpcCore.stats}get type(){return this._type}get tx(){return assertResult(this._extrinsics)}findCall(tt){return findCall(this.registry,tt)}findError(tt){return findError(this.registry,tt)}}class ApiBase extends Getters{constructor(tt={},ot,dt){super(tt,ot,dt)}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(tt){this._rx.signer=tt}async sign(tt,ot,{signer:dt}={}){if(isString$3(tt)){const ft=dt||this._rx.signer;if(!(ft!=null&&ft.signRaw))throw new Error("No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");return(await ft.signRaw(objectSpread$4({type:"bytes"},ot,{address:tt}))).signature}return u8aToHex$5(tt.sign(u8aToU8a$5(ot.data)))}}class Combinator{constructor(tt,ot){Ot(this,"__internal__allHasFired",!1);Ot(this,"__internal__callback");Ot(this,"__internal__fired",[]);Ot(this,"__internal__fns",[]);Ot(this,"__internal__isActive",!0);Ot(this,"__internal__results",[]);Ot(this,"__internal__subscriptions",[]);this.__internal__callback=ot,this.__internal__subscriptions=tt.map(async(dt,ft)=>{const[pt,...mt]=Array.isArray(dt)?dt:[dt];return this.__internal__fired.push(!1),this.__internal__fns.push(pt),pt(...mt,this._createCallback(ft))})}_allHasFired(){return this.__internal__allHasFired||(this.__internal__allHasFired=this.__internal__fired.filter(tt=>!tt).length===0),this.__internal__allHasFired}_createCallback(tt){return ot=>{this.__internal__fired[tt]=!0,this.__internal__results[tt]=ot,this._triggerUpdate()}}_triggerUpdate(){if(!(!this.__internal__isActive||!isFunction$9(this.__internal__callback)||!this._allHasFired()))try{Promise.resolve(this.__internal__callback(this.__internal__results)).catch(noop$3)}catch{}}unsubscribe(){this.__internal__isActive&&(this.__internal__isActive=!1,Promise.all(this.__internal__subscriptions.map(async tt=>{try{const ot=await tt;isFunction$9(ot)&&ot()}catch{}})).catch(()=>{}))}}function promiseTracker(et,tt){let ot=!1;return{reject:dt=>(ot||(ot=!0,tt(dt)),EMPTY),resolve:dt=>{ot||(ot=!0,et(dt))}}}function extractArgs(et,tt){const ot=et.slice(),dt=et.length&&isFunction$9(et[et.length-1])?ot.pop():void 0;if(tt&&!isFunction$9(dt))throw new Error("Expected a callback to be passed with subscriptions");return[ot,dt]}function decorateCall(et,tt){return new Promise((ot,dt)=>{const ft=promiseTracker(ot,dt),pt=et(...tt).pipe(catchError(mt=>ft.reject(mt))).subscribe(mt=>{ft.resolve(mt),nextTick$1(()=>pt.unsubscribe())})})}function decorateSubscribe(et,tt,ot){return new Promise((dt,ft)=>{const pt=promiseTracker(dt,ft),mt=et(...tt).pipe(catchError(ht=>pt.reject(ht)),tap(()=>pt.resolve(()=>mt.unsubscribe()))).subscribe(ht=>{nextTick$1(()=>ot(ht))})})}function toPromiseMethod(et,tt){const ot=!!(tt!=null&&tt.methodName&&tt.methodName.includes("subscribe"));return function(...dt){const[ft,pt]=extractArgs(dt,ot);return pt?decorateSubscribe(et,ft,pt):decorateCall((tt==null?void 0:tt.overrideNoSub)||et,ft)}}class ApiPromise extends ApiBase{constructor(ot){super(ot,"promise",toPromiseMethod);Ot(this,"__internal__isReadyPromise");Ot(this,"__internal__isReadyOrErrorPromise");this.__internal__isReadyPromise=new Promise(dt=>{super.once("ready",()=>dt(this))}),this.__internal__isReadyOrErrorPromise=new Promise((dt,ft)=>{const pt=promiseTracker(dt,ft);super.once("ready",()=>pt.resolve(this)),super.once("error",mt=>pt.reject(mt))})}static create(ot){const dt=new ApiPromise(ot);return ot&&ot.throwOnConnect?dt.isReadyOrError:(dt.isReadyOrError.catch(noop$3),dt.isReady)}get isReady(){return this.__internal__isReadyPromise}get isReadyOrError(){return this.__internal__isReadyOrErrorPromise}clone(){return new ApiPromise(objectSpread$4({},this._options,{source:this}))}async combineLatest(ot,dt){const ft=new Combinator(ot,dt);return()=>{ft.unsubscribe()}}}function evaluateThis(et){return et("return this")}const xglobal=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:evaluateThis(Function);function extractGlobal(et,tt){return typeof xglobal[et]>"u"?tt:xglobal[et]}let TextDecoder$1=class{constructor(tt){Ot(this,"__encoding");this.__encoding=tt}decode(tt){let ot="";for(let dt=0,ft=tt.length;dt<ft;dt++)ot+=String.fromCharCode(tt[dt]);return ot}};const TextDecoder=extractGlobal("TextDecoder",TextDecoder$1);let TextEncoder$2=class{encode(tt){const ot=tt.length,dt=new Uint8Array(ot);for(let ft=0;ft<ot;ft++)dt[ft]=tt.charCodeAt(ft);return dt}};const TextEncoder$1=extractGlobal("TextEncoder",TextEncoder$2);function isFunction$2(et){return typeof et=="function"}const DEDUPE=`Either remove and explicitly install matching versions or dedupe using your package manager.
The following conflicting packages were found:`,POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG="POLKADOTJS_DISABLE_ESM_CJS_WARNING";function getEntry(et){const tt=xglobal;return tt.__polkadotjs||(tt.__polkadotjs={}),tt.__polkadotjs[et]||(tt.__polkadotjs[et]=[]),tt.__polkadotjs[et]}function formatDisplay(et,tt){let ot=0;for(let dt=0,ft=et.length;dt<ft;dt++)ot=Math.max(ot,et[dt].version.length);return et.map(dt=>`	${tt(dt.version.padEnd(ot),dt).join("	")}`).join(`
`)}function formatInfo(et,{name:tt}){return[et,tt]}function formatVersion(et,{path:tt,type:ot}){let dt;if(tt&&tt.length>=5){const ft=tt.indexOf("node_modules");dt=ft===-1?tt:tt.substring(ft)}else dt="<unknown>";return[`${`${ot||""}`.padStart(3)} ${et}`,dt]}function getPath(et,tt){if(et)return et;if(isFunction$2(tt))try{return tt()||""}catch{return""}return tt||""}function warn(et,tt,ot){console.warn(`${et}
${DEDUPE}
${formatDisplay(tt,ot)}`)}function detectPackage({name:et,path:tt,type:ot,version:dt},ft,pt=[]){var gt,wt;if(!et.startsWith("@polkadot"))throw new Error(`Invalid package descriptor ${et}`);const mt=getEntry(et);mt.push({path:getPath(tt,ft),type:ot,version:dt});const ht=mt.every(Pt=>Pt.version===dt),bt=((wt=(gt=xglobal.process)==null?void 0:gt.env)==null?void 0:wt[POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG])==="1";if(mt.length!==1&&!(bt&&ht))warn(`${et} has multiple versions, ensure that there is only one installed.`,mt,formatVersion);else{const Pt=pt.filter(St=>St&&St.version!==dt);Pt.length&&warn(`${et} requires direct dependencies exactly matching version ${dt}.`,Pt,formatInfo)}}function invalidFallback(){return Number.NaN}const BigInt$1=extractGlobal("BigInt",invalidFallback),CHR$1="0123456789abcdef",U8$1=new Uint8Array(256),U16$1=new Uint8Array(256*256);for(let et=0,tt=CHR$1.length;et<tt;et++)U8$1[CHR$1[et].charCodeAt(0)|0]=et|0,et>9&&(U8$1[CHR$1[et].toUpperCase().charCodeAt(0)|0]=et|0);for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16$1[tt|ot]=U8$1[et]<<4|U8$1[ot]}function hexToU8a(et,tt=-1){if(!et)return new Uint8Array;let ot=et.startsWith("0x")?2:0;const dt=Math.ceil((et.length-ot)/2),ft=Math.ceil(tt===-1?dt:tt/8),pt=new Uint8Array(ft),mt=ft>dt?ft-dt:0;for(let ht=mt;ht<ft;ht++,ot+=2)pt[ht]=U16$1[et.charCodeAt(ot)<<8|et.charCodeAt(ot+1)];return pt}const REGEX_HEX_PREFIXED=/^0x[\da-fA-F]+$/,REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/;function isHex(et,tt=-1,ot){return typeof et=="string"&&(et==="0x"||REGEX_HEX_PREFIXED.test(et))&&(tt===-1?et.length%2===0:et.length===2+Math.ceil(tt/4))}function isObject$2(et){return!!et&&typeof et=="object"}function isOn(...et){return tt=>(isObject$2(tt)||isFunction$2(tt))&&et.every(ot=>isFunction$2(tt[ot]))}function isOnObject(...et){return tt=>isObject$2(tt)&&et.every(ot=>isFunction$2(tt[ot]))}const isToBigInt=isOn("toBigInt"),isToBn=isOn("toBn"),hasBigInt=typeof BigInt$1=="function"&&typeof BigInt$1.asIntN=="function",hasBuffer=typeof xglobal.Buffer=="function"&&typeof xglobal.Buffer.isBuffer=="function",hasProcess=typeof xglobal.process=="object";function isBuffer(et){return hasBuffer&&!!et&&isFunction$2(et.readDoubleLE)&&xglobal.Buffer.isBuffer(et)}function isU8a(et){return(et&&et.constructor)===Uint8Array||et instanceof Uint8Array}const encoder=new TextEncoder$1;function stringToU8a(et){return et?encoder.encode(et.toString()):new Uint8Array}function u8aToU8a(et){return isU8a(et)?isBuffer(et)?new Uint8Array(et):et:isHex(et)?hexToU8a(et):Array.isArray(et)?new Uint8Array(et):stringToU8a(et)}function u8aConcat(...et){const tt=et.length,ot=new Array(tt);let dt=0;for(let ft=0;ft<tt;ft++)ot[ft]=u8aToU8a(et[ft]),dt+=ot[ft].length;return u8aConcatStrict(ot,dt)}function u8aConcatStrict(et,tt=0){const ot=et.length;let dt=0;if(!tt)for(let pt=0;pt<ot;pt++)tt+=et[pt].length;const ft=new Uint8Array(tt);for(let pt=0;pt<ot;pt++)ft.set(et[pt],dt),dt+=et[pt].length;return ft}function u8aEq(et,tt){const ot=u8aToU8a(et),dt=u8aToU8a(tt);if(ot.length===dt.length){const ft=new DataView(ot.buffer,ot.byteOffset),pt=new DataView(dt.buffer,dt.byteOffset),mt=ot.length%4|0,ht=ot.length-mt|0;for(let bt=0;bt<ht;bt+=4)if(ft.getUint32(bt)!==pt.getUint32(bt))return!1;for(let bt=ht,yt=ot.length;bt<yt;bt++)if(ot[bt]!==dt[bt])return!1;return!0}return!1}const U8=new Array(256),U16=new Array(256*256);for(let et=0;et<256;et++)U8[et]=et.toString(16).padStart(2,"0");for(let et=0;et<256;et++){const tt=et<<8;for(let ot=0;ot<256;ot++)U16[tt|ot]=U8[et]+U8[ot]}function hex(et,tt){const ot=et.length%2|0,dt=et.length-ot|0;for(let ft=0;ft<dt;ft+=2)tt+=U16[et[ft]<<8|et[ft+1]];return ot&&(tt+=U8[et[dt]|0]),tt}function u8aToHex(et,tt=-1,ot=!0){const dt=ot?"0x":"";if(et!=null&&et.length){if(tt>0){const ft=Math.ceil(tt/8);if(et.length>ft)return`${hex(et.subarray(0,ft/2),dt)}…${hex(et.subarray(et.length-ft/2),"")}`}}else return dt;return hex(et,dt)}const decoder=new TextDecoder("utf-8");function u8aToString(et){return et?decoder.decode(et):""}function hexStripPrefix(et){if(!et||et==="0x")return"";if(REGEX_HEX_PREFIXED.test(et))return et.substring(2);if(REGEX_HEX_NOPREFIX.test(et))return et;throw new Error(`Expected hex value to convert, found '${et}'`)}function hexToBn(et,{isLe:tt=!1,isNegative:ot=!1}={}){if(!et||et==="0x")return new BN(0);const dt=hexStripPrefix(et),ft=new BN(dt,16,tt?"le":"be");return ot?ft.fromTwos(dt.length*4):ft}function isBigInt(et){return typeof et=="bigint"}function bnToBn(et){return et?BN.isBN(et)?et:isHex(et)?hexToBn(et.toString()):isBigInt(et)?new BN(et.toString()):isToBn(et)?et.toBn():isToBigInt(et)?new BN(et.toBigInt().toString()):new BN(et):new BN(0)}const DEFAULT_OPTS={bitLength:-1,isLe:!0,isNegative:!1};function bnToU8a(et,{bitLength:tt=-1,isLe:ot=!0,isNegative:dt=!1}=DEFAULT_OPTS){const ft=bnToBn(et),pt=Math.ceil(tt===-1?ft.bitLength()/8:(tt||0)/8);if(!et)return tt===-1?new Uint8Array(1):new Uint8Array(pt);const mt=new Uint8Array(pt),ht=dt?ft.toTwos(pt*8):ft;return mt.set(ht.toArray(ot?"le":"be",pt),0),mt}const isPromise=isOnObject("catch","then");function isUndefined(et){return et===void 0}function objectSpread(et,...tt){for(let ot=0,dt=tt.length;ot<dt;ot++){const ft=tt[ot];if(ft)if(typeof ft.entries=="function")for(const[pt,mt]of ft.entries())et[pt]=mt;else Object.assign(et,ft)}return et}const crypto=xglobal.crypto;function getRandomValues(et){return crypto.getRandomValues(et)}const DEFAULT_CRYPTO={getRandomValues},DEFAULT_SELF={crypto:DEFAULT_CRYPTO};class Wbg{constructor(tt){Ot(this,"__internal__bridge");Ot(this,"abort",()=>{throw new Error("abort")});Ot(this,"__wbindgen_is_undefined",tt=>this.__internal__bridge.getObject(tt)===void 0);Ot(this,"__wbindgen_throw",(tt,ot)=>{throw new Error(this.__internal__bridge.getString(tt,ot))});Ot(this,"__wbg_self_1b7a39e3a92c949c",()=>this.__internal__bridge.addObject(DEFAULT_SELF));Ot(this,"__wbg_require_604837428532a733",(tt,ot)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(tt,ot)}`)});Ot(this,"__wbg_crypto_968f1772287e2df0",tt=>this.__internal__bridge.addObject(DEFAULT_CRYPTO));Ot(this,"__wbg_getRandomValues_a3d34b4fee3c2869",tt=>this.__internal__bridge.addObject(DEFAULT_CRYPTO.getRandomValues));Ot(this,"__wbg_getRandomValues_f5e14ab7ac8e995d",(tt,ot,dt)=>{DEFAULT_CRYPTO.getRandomValues(this.__internal__bridge.getU8a(ot,dt))});Ot(this,"__wbg_randomFillSync_d5bd2d655fdf256a",(tt,ot,dt)=>{throw new Error("randomFillsync is not available")});Ot(this,"__wbindgen_object_drop_ref",tt=>{this.__internal__bridge.takeObject(tt)});this.__internal__bridge=tt}}class Bridge{constructor(tt){Ot(this,"__internal__createWasm");Ot(this,"__internal__heap");Ot(this,"__internal__wbg");Ot(this,"__internal__cachegetInt32");Ot(this,"__internal__cachegetUint8");Ot(this,"__internal__heapNext");Ot(this,"__internal__wasm");Ot(this,"__internal__wasmError");Ot(this,"__internal__wasmPromise");Ot(this,"__internal__type");this.__internal__createWasm=tt,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new Wbg(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(tt){(!this.__internal__wasmPromise||tt)&&(this.__internal__wasmPromise=(tt||this.__internal__createWasm)(this.__internal__wbg));const{error:ot,type:dt,wasm:ft}=await this.__internal__wasmPromise;return this.__internal__type=dt,this.__internal__wasm=ft,this.__internal__wasmError=ot,this.__internal__wasm}getObject(tt){return this.__internal__heap[tt]}dropObject(tt){tt<36||(this.__internal__heap[tt]=this.__internal__heapNext,this.__internal__heapNext=tt)}takeObject(tt){const ot=this.getObject(tt);return this.dropObject(tt),ot}addObject(tt){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const ot=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[ot],this.__internal__heap[ot]=tt,ot}getInt32(){return(this.__internal__cachegetInt32===null||this.__internal__cachegetInt32.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return(this.__internal__cachegetUint8===null||this.__internal__cachegetUint8.buffer!==this.__internal__wasm.memory.buffer)&&(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(tt,ot){return this.getUint8().subarray(tt/1,tt/1+ot)}getString(tt,ot){return u8aToString(this.getU8a(tt,ot))}allocU8a(tt){const ot=this.__internal__wasm.__wbindgen_malloc(tt.length*1);return this.getUint8().set(tt,ot/1),[ot,tt.length]}allocString(tt){return this.allocU8a(stringToU8a(tt))}resultU8a(){const tt=this.getInt32()[2],ot=this.getInt32()[8/4+1],dt=this.getU8a(tt,ot).slice();return this.__internal__wasm.__wbindgen_free(tt,ot*1),dt}resultString(){return u8aToString(this.resultU8a())}}function createWasmFn(et,tt,ot){return async dt=>{const ft={error:null,type:"none",wasm:null};try{if(tt!=null&&tt.length){if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment")}else throw new Error("No WebAssembly provided for initialization");const pt=await WebAssembly.instantiate(tt,{wbg:dt});ft.wasm=pt.instance.exports,ft.type="wasm"}catch(pt){ft.error=`FATAL: Unable to initialize @polkadot/wasm-${et}:: ${pt.message}`,console.error(ft.error)}return ft}}const CHR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",map$1=new Array(256);for(let et=0,tt=CHR.length;et<tt;et++)map$1[CHR.charCodeAt(et)]=et;function base64Decode(et,tt){let ot=0,dt=0,ft=-1;for(let pt=0,mt=tt.length-1;ft!==mt;pt++)ot=ot<<6|map$1[et.charCodeAt(pt)],(dt+=6)>=8&&(tt[++ft]=ot>>>(dt-=8)&255);return tt}const u8=Uint8Array,u16=Uint16Array,u32=Uint32Array,clim=new u8([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),fleb=new u8([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb=(et,tt)=>{const ot=new u16(31);for(let ft=0;ft<31;++ft)ot[ft]=tt+=1<<et[ft-1];const dt=new u32(ot[30]);for(let ft=1;ft<30;++ft)for(let pt=ot[ft];pt<ot[ft+1];++pt)dt[pt]=pt-ot[ft]<<5|ft;return[ot,dt]},[fl,revfl]=freb(fleb,2);fl[28]=258,revfl[258]=28;const[fd]=freb(fdeb,0),rev=new u16(32768);for(let et=0;et<32768;++et){let tt=(et&43690)>>>1|(et&21845)<<1;tt=(tt&52428)>>>2|(tt&13107)<<2,tt=(tt&61680)>>>4|(tt&3855)<<4,rev[et]=((tt&65280)>>>8|(tt&255)<<8)>>>1}const hMap=(et,tt,ot)=>{const dt=et.length;let ft=0;const pt=new u16(tt);for(;ft<dt;++ft)et[ft]&&++pt[et[ft]-1];const mt=new u16(tt);for(ft=1;ft<tt;++ft)mt[ft]=mt[ft-1]+pt[ft-1]<<1;let ht;{ht=new u16(1<<tt);const bt=15-tt;for(ft=0;ft<dt;++ft)if(et[ft]){const yt=ft<<4|et[ft],xt=tt-et[ft];let gt=mt[et[ft]-1]++<<xt;for(const wt=gt|(1<<xt)-1;gt<=wt;++gt)ht[rev[gt]>>bt]=yt}}return ht},flt=new u8(288);for(let et=0;et<144;++et)flt[et]=8;for(let et=144;et<256;++et)flt[et]=9;for(let et=256;et<280;++et)flt[et]=7;for(let et=280;et<288;++et)flt[et]=8;const fdt=new u8(32);for(let et=0;et<32;++et)fdt[et]=5;const flrm=hMap(flt,9),fdrm=hMap(fdt,5),bits=(et,tt,ot)=>{const dt=tt>>>3;return(et[dt]|et[dt+1]<<8)>>>(tt&7)&ot},bits16=(et,tt)=>{const ot=tt>>>3;return(et[ot]|et[ot+1]<<8|et[ot+2]<<16)>>>(tt&7)},shft=et=>(et>>>3)+(et&7&&1),slc=(et,tt,ot)=>{(ot==null||ot>et.length)&&(ot=et.length);const dt=new(et instanceof u16?u16:et instanceof u32?u32:u8)(ot-tt);return dt.set(et.subarray(tt,ot)),dt},max=et=>{let tt=et[0];for(let ot=1,dt=et.length;ot<dt;++ot)et[ot]>tt&&(tt=et[ot]);return tt},inflt=(et,tt,ot)=>{const dt=!ot||ot.i;ot||(ot={});const ft=et.length,pt=!tt||!dt;tt||(tt=new u8(ft*3));const mt=Et=>{let Lt=tt.length;if(Et>Lt){const It=new u8(Math.max(Lt<<1,Et));It.set(tt),tt=It}};let ht=ot.f||0,bt=ot.p||0,yt=ot.b||0,xt=ot.l,gt=ot.d,wt=ot.m,Pt=ot.n;if(ht&&!xt)return tt;const St=ft<<3;do{if(!xt){ot.f=ht=bits(et,bt,1);const kt=bits(et,bt+1,3);if(bt+=3,kt)if(kt==1)xt=flrm,gt=fdrm,wt=9,Pt=5;else if(kt==2){const Nt=bits(et,bt,31)+257,Ut=bits(et,bt+10,15)+4,Ft=Nt+bits(et,bt+5,31)+1;bt+=14;const jt=new u8(Ft),Xt=new u8(19);for(let Ht=0;Ht<Ut;++Ht)Xt[clim[Ht]]=bits(et,bt+Ht*3,7);bt+=Ut*3;const Wt=max(Xt),qt=(1<<Wt)-1;if(!dt&&bt+Ft*(Wt+7)>St)break;const Zt=hMap(Xt,Wt);for(let Ht=0;Ht<Ft;){const vt=Zt[bits(et,bt,qt)];bt+=vt&15;const Vt=vt>>>4;if(Vt<16)jt[Ht++]=Vt;else{let At=0,Bt=0;for(Vt==16?(Bt=3+bits(et,bt,3),bt+=2,At=jt[Ht-1]):Vt==17?(Bt=3+bits(et,bt,7),bt+=3):Vt==18&&(Bt=11+bits(et,bt,127),bt+=7);Bt--;)jt[Ht++]=At}}const Gt=jt.subarray(0,Nt),Qt=jt.subarray(Nt);wt=max(Gt),Pt=max(Qt),xt=hMap(Gt,wt),gt=hMap(Qt,Pt)}else throw"invalid block type";else{const Nt=shft(bt)+4,Ut=et[Nt-4]|et[Nt-3]<<8,Ft=Nt+Ut;if(Ft>ft){if(dt)throw"unexpected EOF";break}pt&&mt(yt+Ut),tt.set(et.subarray(Nt,Ft),yt),ot.b=yt+=Ut,ot.p=bt=Ft<<3;continue}if(bt>St)throw"unexpected EOF"}pt&&mt(yt+131072);const Et=(1<<wt)-1,Lt=(1<<Pt)-1,It=wt+Pt+18;for(;dt||bt+It<St;){const kt=xt[bits16(et,bt)&Et],Nt=kt>>>4;if(bt+=kt&15,bt>St)throw"unexpected EOF";if(!kt)throw"invalid length/literal";if(Nt<256)tt[yt++]=Nt;else if(Nt==256){xt=void 0;break}else{let Ut=Nt-254;if(Nt>264){const qt=Nt-257,Zt=fleb[qt];Ut=bits(et,bt,(1<<Zt)-1)+fl[qt],bt+=Zt}const Ft=gt[bits16(et,bt)&Lt],jt=Ft>>>4;if(!Ft)throw"invalid distance";bt+=Ft&15;let Xt=fd[jt];if(jt>3){const qt=fdeb[jt];Xt+=bits16(et,bt)&(1<<qt)-1,bt+=qt}if(bt>St)throw"unexpected EOF";pt&&mt(yt+131072);const Wt=yt+Ut;for(;yt<Wt;yt+=4)tt[yt]=tt[yt-Xt],tt[yt+1]=tt[yt+1-Xt],tt[yt+2]=tt[yt+2-Xt],tt[yt+3]=tt[yt+3-Xt];yt=Wt}}ot.l=xt,ot.p=bt,ot.b=yt,xt&&(ht=1,ot.m=wt,ot.d=gt,ot.n=Pt)}while(!ht);return yt==tt.length?tt:slc(tt,0,yt)},zlv=et=>{if((et[0]&15)!=8||et[0]>>>4>7||(et[0]<<8|et[1])%31)throw"invalid zlib data";if(et[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function unzlibSync(et,tt){return inflt((zlv(et),et.subarray(2,-4)),tt)}var lenIn=171008,lenOut=339468,bytes_1="";const wasmBytes=unzlibSync(base64Decode(bytes_1,new Uint8Array(lenIn)),new Uint8Array(lenOut)),createWasm=createWasmFn("crypto",wasmBytes),bridge=new Bridge(createWasm);function withWasm(et){return(...tt)=>{if(!bridge.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return et(bridge.wasm,...tt)}}const secp256k1Expand$1=withWasm((et,tt)=>(et.ext_secp_pub_expand(8,...bridge.allocU8a(tt)),bridge.resultU8a())),blake2b=withWasm((et,tt,ot,dt)=>(et.ext_blake2b(8,...bridge.allocU8a(tt),...bridge.allocU8a(ot),dt),bridge.resultU8a())),keccak256=withWasm((et,tt)=>(et.ext_keccak256(8,...bridge.allocU8a(tt)),bridge.resultU8a())),keccak512=withWasm((et,tt)=>(et.ext_keccak512(8,...bridge.allocU8a(tt)),bridge.resultU8a()));function isReady(){return!!bridge.wasm}/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function isBytes(et){return et instanceof Uint8Array||et!=null&&typeof et=="object"&&et.constructor.name==="Uint8Array"}function chain(...et){const tt=pt=>pt,ot=(pt,mt)=>ht=>pt(mt(ht)),dt=et.map(pt=>pt.encode).reduceRight(ot,tt),ft=et.map(pt=>pt.decode).reduce(ot,tt);return{encode:dt,decode:ft}}function alphabet(et){return{encode:tt=>{if(!Array.isArray(tt)||tt.length&&typeof tt[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return tt.map(ot=>{if(ot<0||ot>=et.length)throw new Error(`Digit index outside alphabet: ${ot} (alphabet: ${et.length})`);return et[ot]})},decode:tt=>{if(!Array.isArray(tt)||tt.length&&typeof tt[0]!="string")throw new Error("alphabet.decode input should be array of strings");return tt.map(ot=>{if(typeof ot!="string")throw new Error(`alphabet.decode: not string element=${ot}`);const dt=et.indexOf(ot);if(dt===-1)throw new Error(`Unknown letter: "${ot}". Allowed: ${et}`);return dt})}}}function join(et=""){if(typeof et!="string")throw new Error("join separator should be string");return{encode:tt=>{if(!Array.isArray(tt)||tt.length&&typeof tt[0]!="string")throw new Error("join.encode input should be array of strings");for(let ot of tt)if(typeof ot!="string")throw new Error(`join.encode: non-string input=${ot}`);return tt.join(et)},decode:tt=>{if(typeof tt!="string")throw new Error("join.decode input should be string");return tt.split(et)}}}function convertRadix(et,tt,ot){if(tt<2)throw new Error(`convertRadix: wrong from=${tt}, base cannot be less than 2`);if(ot<2)throw new Error(`convertRadix: wrong to=${ot}, base cannot be less than 2`);if(!Array.isArray(et))throw new Error("convertRadix: data should be array");if(!et.length)return[];let dt=0;const ft=[],pt=Array.from(et);for(pt.forEach(mt=>{if(mt<0||mt>=tt)throw new Error(`Wrong integer: ${mt}`)});;){let mt=0,ht=!0;for(let bt=dt;bt<pt.length;bt++){const yt=pt[bt],xt=tt*mt+yt;if(!Number.isSafeInteger(xt)||tt*mt/tt!==mt||xt-yt!==tt*mt)throw new Error("convertRadix: carry overflow");mt=xt%ot;const gt=Math.floor(xt/ot);if(pt[bt]=gt,!Number.isSafeInteger(gt)||gt*ot+mt!==xt)throw new Error("convertRadix: carry overflow");if(ht)gt?ht=!1:dt=bt;else continue}if(ft.push(mt),ht)break}for(let mt=0;mt<et.length-1&&et[mt]===0;mt++)ft.push(0);return ft.reverse()}function radix(et){return{encode:tt=>{if(!isBytes(tt))throw new Error("radix.encode input should be Uint8Array");return convertRadix(Array.from(tt),2**8,et)},decode:tt=>{if(!Array.isArray(tt)||tt.length&&typeof tt[0]!="number")throw new Error("radix.decode input should be array of numbers");return Uint8Array.from(convertRadix(tt,et,2**8))}}}const genBase58=et=>chain(radix(58),alphabet(et),join("")),base58=genBase58("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function createDecode({coder:et,ipfs:tt},ot){return(dt,ft)=>(ot(dt,ft),et.decode(tt&&ft?dt.substring(1):dt))}function createEncode({coder:et,ipfs:tt}){return(ot,dt)=>{const ft=et.encode(u8aToU8a(ot));return tt&&dt?`${tt}${ft}`:ft}}function createValidate({chars:et,ipfs:tt,type:ot,withPadding:dt}){return(ft,pt)=>{if(typeof ft!="string")throw new Error(`Expected ${ot} string input`);if(tt&&pt&&!ft.startsWith(tt))throw new Error(`Expected ipfs-compatible ${ot} to start with '${tt}'`);for(let mt=pt?1:0,ht=ft.length;mt<ht;mt++)if(!et.includes(ft[mt]))if(dt&&ft[mt]==="="){if(mt!==ht-1){if(ft[mt+1]!=="=")throw new Error(`Invalid ${ot} padding sequence "${ft[mt]}${ft[mt+1]}" at index ${mt}`)}}else throw new Error(`Invalid ${ot} character "${ft[mt]}" (0x${ft.charCodeAt(mt).toString(16)}) at index ${mt}`);return!0}}const config={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:base58,ipfs:"z",type:"base58"},base58Validate=createValidate(config),base58Decode=createDecode(config,base58Validate),base58Encode=createEncode(config);function createDualHasher(et,tt){return(ot,dt=256,ft)=>{const pt=u8aToU8a(ot);return!hasBigInt||!ft&&isReady()?et[dt](pt):tt[dt](pt)}}function blake2AsU8a(et,tt=256,ot,dt){const ft=Math.ceil(tt/8),pt=u8aToU8a(et);return!hasBigInt||!dt&&isReady()?blake2b(pt,u8aToU8a(ot),ft):ot?blake2b$2(pt,{dkLen:ft,key:ot}):blake2b$2(pt,{dkLen:ft})}const SS58_PREFIX=stringToU8a("SS58PRE");function sshash(et){return blake2AsU8a(u8aConcat(SS58_PREFIX,et),512)}function checkAddressChecksum(et){const tt=et[0]&64?2:1,ot=tt===1?et[0]:(et[0]&63)<<2|et[1]>>6|(et[1]&63)<<8,dt=[34+tt,35+tt].includes(et.length),ft=et.length-(dt?2:1),pt=sshash(et.subarray(0,ft));return[(et[0]&128)===0&&![46,47].includes(et[0])&&(dt?et[et.length-2]===pt[0]&&et[et.length-1]===pt[1]:et[et.length-1]===pt[0]),ft,tt,ot]}const knownSubstrate=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING"],decimals:[18],standardAccount:"secp256k1",website:"https://darwinia.network"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"karmachain",displayName:"Karmacoin",symbols:["KCOIN"],decimals:[6],standardAccount:"*25519",website:"https://karmaco.in"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"polimec",displayName:"Polimec Protocol",symbols:["PLMC"],decimals:[10],standardAccount:"*25519",website:"https://www.polimec.org/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable Finance",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:58,network:"eternal-civilization",displayName:"Eternal Civilization",symbols:["ECC"],decimals:[12],standardAccount:"*25519",website:"http://www.ysknfr.cn/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"Aventus Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara.network/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:440,network:"allfeat_network",displayName:"Allfeat Network",symbols:["AFT"],decimals:[12],standardAccount:"*25519",website:"https://allfeat.network"},{prefix:666,network:"metaquity_network",displayName:"Metaquity Network",symbols:["MQTY"],decimals:[18],standardAccount:"*25519",website:"https://metaquity.xyz/"},{prefix:777,network:"curio",displayName:"Curio",symbols:["CGT"],decimals:[18],standardAccount:"*25519",website:"https://parachain.capitaldex.exchange/"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2021,network:"logion",displayName:"logion network",symbols:["LGNT"],decimals:[18],standardAccount:"*25519",website:"https://logion.network"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2199,network:"moonsama",displayName:"Moonsama",symbols:["SAMA"],decimals:[18],standardAccount:"secp256k1",website:"https://moonsama.com"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3333,network:"peerplays",displayName:"Peerplays",symbols:["PPY"],decimals:[18],standardAccount:"secp256k1",website:"https://www.peerplays.com/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:5845,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.tangle.tools/"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7306,network:"krigan",displayName:"Krigan Network",symbols:["KRGN"],decimals:[9],standardAccount:"*25519",website:"https://krigan.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8866,network:"golden_gate",displayName:"Golden Gate",symbols:["GGX"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8886,network:"golden_gate_sydney",displayName:"Golden Gate Sydney",symbols:["GGXT"],decimals:[18],standardAccount:"*25519",website:"https://ggxchain.io/"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[18],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12155,network:"impact",displayName:"Impact Protocol Network",symbols:["BSTY"],decimals:[18],standardAccount:"*25519",website:"https://impactprotocol.network/"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"},{prefix:14697,network:"goro",displayName:"GORO Network",symbols:["GORO"],decimals:[9],standardAccount:"*25519",website:"https://goro.network"},{prefix:29972,network:"mythos",displayName:"Mythos",symbols:["MYTH"],decimals:[18],standardAccount:"secp256k1",website:"https://mythos.foundation"}],knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},knownLedger={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,enjin:1155,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vtb:694,xxnetwork:1955,zeitgeist:354},knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},UNSORTED=[0,2,42],TESTNETS=["testnet"];function toExpanded(et){var ft,pt;const tt=et.network||"",ot=tt.replace(/_/g,"-").split("-"),dt=et;return dt.slip44=knownLedger[tt],dt.hasLedgerSupport=!!dt.slip44,dt.genesisHash=knownGenesis[tt]||[],dt.icon=knownIcon[tt]||"substrate",dt.isTestnet=!!knownTestnet[tt]||TESTNETS.includes(ot[ot.length-1]),dt.isIgnored=dt.isTestnet||!(et.standardAccount&&((ft=et.decimals)!=null&&ft.length)&&((pt=et.symbols)!=null&&pt.length))&&et.prefix!==42,dt}function filterSelectable({genesisHash:et,prefix:tt}){return!!et.length||tt===42}function filterAvailable(et){return!et.isIgnored&&!!et.network}function sortNetworks(et,tt){const ot=UNSORTED.includes(et.prefix),dt=UNSORTED.includes(tt.prefix);return ot===dt?ot?0:et.displayName.localeCompare(tt.displayName):ot?-1:1}const allNetworks=knownSubstrate.map(toExpanded),availableNetworks=allNetworks.filter(filterAvailable).sort(sortNetworks);availableNetworks.filter(filterSelectable);const defaults={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:availableNetworks.map(({prefix:et})=>et),prefix:42};function decodeAddress(et,tt,ot=-1){if(!et)throw new Error("Invalid empty address passed");if(isU8a(et)||isHex(et))return u8aToU8a(et);try{const dt=base58Decode(et);if(!defaults.allowedEncodedLengths.includes(dt.length))throw new Error("Invalid decoded address length");const[ft,pt,mt,ht]=checkAddressChecksum(dt);if(!ft&&!tt)throw new Error("Invalid decoded address checksum");if(ot!==-1&&ot!==ht)throw new Error(`Expected ss58Format ${ot}, received ${ht}`);return dt.slice(mt,pt)}catch(dt){throw new Error(`Decoding ${et}: ${dt.message}`)}}const BN_BE_256_OPTS={bitLength:256,isLe:!1};function encodeAddress(et,tt=defaults.prefix){const ot=decodeAddress(et);if(tt<0||tt>16383||[46,47].includes(tt))throw new Error("Out of range ss58Format specified");if(!defaults.allowedDecodedLengths.includes(ot.length))throw new Error(`Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(", ")}`);const dt=u8aConcat(tt<64?[tt]:[(tt&252)>>2|64,tt>>8|(tt&3)<<6],ot);return base58Encode(u8aConcat(dt,sshash(dt).subarray(0,[32,33].includes(ot.length)?2:1)))}const keccakAsU8a=createDualHasher({256:keccak256,512:keccak512},{256:keccak_256,512:keccak_512});function secp256k1Expand(et,tt){if(![33,65].includes(et.length))throw new Error(`Invalid publicKey provided, received ${et.length} bytes input`);if(et.length===65)return et.subarray(1);if(!hasBigInt||isReady())return secp256k1Expand$1(et).subarray(1);const{px:ot,py:dt}=secp256k1.ProjectivePoint.fromHex(et);return u8aConcat(bnToU8a(ot,BN_BE_256_OPTS),bnToU8a(dt,BN_BE_256_OPTS))}function getH160(et){return[33,65].includes(et.length)&&(et=keccakAsU8a(secp256k1Expand(et))),et.slice(-20)}function ethereumEncode(et){if(!et)return"0x";const tt=u8aToU8a(et);if(![20,32,33,65].includes(tt.length))throw new Error(`Invalid address or publicKey provided, received ${tt.length} bytes input`);const ot=u8aToHex(getH160(tt),-1,!1),dt=u8aToHex(keccakAsU8a(ot),-1,!1);let ft="";for(let pt=0;pt<40;pt++)ft=`${ft}${parseInt(dt[pt],16)>7?ot[pt].toUpperCase():ot[pt]}`;return`0x${ft}`}function documentReadyPromise(et){return new Promise(tt=>{document.readyState==="complete"?tt(et()):window.addEventListener("load",()=>tt(et()))})}const win=window;win.injectedWeb3=win.injectedWeb3||{};let isWeb3Injected=web3IsInjected(),web3EnablePromise=null;function web3IsInjected(){return Object.values(win.injectedWeb3).filter(({connect:et,enable:tt})=>!!(et||tt)).length!==0}function throwError(et){throw new Error(`${et}: web3Enable(originName) needs to be called before ${et}`)}function mapAccounts(et,tt,ot){return tt.map(({address:dt,genesisHash:ft,name:pt,type:mt})=>({address:dt.length===42?dt:encodeAddress(decodeAddress(dt),ot),meta:{genesisHash:ft,name:pt,source:et},type:mt}))}function filterAccounts(et,tt,ot){return et.filter(dt=>(!dt.type||!ot||ot.includes(dt.type))&&(!dt.genesisHash||!tt||dt.genesisHash===tt))}function getWindowExtensions(et){return Promise.all(Object.entries(win.injectedWeb3).map(([tt,{connect:ot,enable:dt,version:ft}])=>Promise.resolve().then(()=>ot?ot(et):dt?dt(et).then(pt=>objectSpread({name:tt,version:ft||"unknown"},pt)):Promise.reject(new Error("No connect(..) or enable(...) hook found"))).catch(({message:pt})=>{console.error(`Error initializing ${tt}: ${pt}`)}))).then(tt=>tt.filter(ot=>!!ot))}async function filterEnable(et,tt){return web3EnablePromise?(await web3EnablePromise).filter(({name:dt})=>!tt||tt.includes(dt)):throwError(et)}function web3Enable(et,tt=[]){if(!et)throw new Error("You must pass a name for your app to the web3Enable function");const ot=tt.length?Promise.all(tt.map(dt=>dt().catch(()=>!1))):Promise.resolve([!0]);return web3EnablePromise=documentReadyPromise(()=>ot.then(()=>getWindowExtensions(et).then(dt=>dt.map(ft=>(ft.accounts.subscribe||(ft.accounts.subscribe=pt=>(ft.accounts.get().then(pt).catch(console.error),()=>{})),ft))).catch(()=>[]).then(dt=>{const ft=dt.map(({name:pt,version:mt})=>`${pt}/${mt}`);return isWeb3Injected=web3IsInjected(),console.info(`web3Enable: Enabled ${dt.length} extension${dt.length!==1?"s":""}: ${ft.join(", ")}`),dt}))),web3EnablePromise}async function web3Accounts({accountType:et,extensions:tt,genesisHash:ot,ss58Format:dt}={}){const ft=[],pt=await filterEnable("web3Accounts",tt);return(await Promise.all(pt.map(async({accounts:ht,name:bt})=>{try{const yt=await ht.get();return mapAccounts(bt,filterAccounts(yt,ot,et),dt)}catch{return[]}}))).forEach(ht=>{ft.push(...ht)}),console.info(`web3Accounts: Found ${ft.length} address${ft.length!==1?"es":""}`),ft}async function web3AccountsSubscribe(et,{accountType:tt,extensions:ot,genesisHash:dt,ss58Format:ft}={}){const pt=await filterEnable("web3AccountsSubscribe",ot),mt={},ht=()=>et(Object.entries(mt).reduce((yt,[xt,gt])=>(yt.push(...mapAccounts(xt,filterAccounts(gt,dt,tt),ft)),yt),[])),bt=pt.map(({accounts:{subscribe:yt},name:xt})=>yt(gt=>{mt[xt]=gt;try{const wt=ht();wt&&isPromise(wt)&&wt.catch(console.error)}catch(wt){console.error(wt)}}));return()=>{bt.forEach(yt=>{yt()})}}async function web3FromSource(et){if(!web3EnablePromise)return throwError("web3FromSource");const tt=await web3EnablePromise,ot=et&&tt.find(({name:dt})=>dt===et);if(!ot)throw new Error(`web3FromSource: Unable to find an injected ${et}`);return ot}async function web3FromAddress(et){if(!web3EnablePromise)return throwError("web3FromAddress");const tt=await web3Accounts();let ot;if(et){const dt=decodeAddress(et);ot=tt.find(ft=>u8aEq(decodeAddress(ft.address),dt))}if(!ot)throw new Error(`web3FromAddress: Unable to find injected ${et}`);return web3FromSource(ot.meta.source)}async function web3ListRpcProviders(et){const{provider:tt}=await web3FromSource(et);return tt?tt.listProviders():(console.warn(`Extension ${et} does not expose any provider`),null)}async function web3UseRpcProvider(et,tt){const{provider:ot}=await web3FromSource(et);if(!ot)throw new Error(`Extension ${et} does not expose any provider`);return{meta:await ot.startProvider(tt),provider:ot}}const packageInfo$2={name:"@polkadot/ui-settings",path:import.meta&&import.meta.url?new URL(import.meta.url).pathname.substring(0,new URL(import.meta.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"3.6.6"},packageInfo$1={name:"@polkadot/ui-shared",path:import.meta&&import.meta.url?new URL(import.meta.url).pathname.substring(0,new URL(import.meta.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"3.6.6"},packageInfo={name:"@polkadot/react-identicon",path:import.meta&&import.meta.url?new URL(import.meta.url).pathname.substring(0,new URL(import.meta.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"3.6.6"};detectPackage(packageInfo,null,[packageInfo$2,packageInfo$1]);const COLORS=["#ffe119","#4363d8","#f58231","#fabebe","#e6beff","#800000","#000075","#a9a9a9","#ffffff","#000000"],SHAPE_COUNT=5,SVG_NS="http://www.w3.org/2000/svg";function svg(et){return document.createElementNS(SVG_NS,et)}function circle$1(et,tt,ot){const dt=svg("circle");return dt.setAttributeNS("","cx",`${tt}`),dt.setAttributeNS("","cy",`${ot}`),dt.setAttributeNS("","r",`${et}`),dt}function circle(et,tt,ot,dt){const ft=ot/2,pt=et()*360,mt=(SHAPE_COUNT-dt)/SHAPE_COUNT*(ot/2)+ot/8*et(),ht=ot/4*(et()+(dt+1)/SHAPE_COUNT),bt=ht*Math.sin(pt)+ft,yt=ht*Math.cos(pt)+ft,xt=circle$1(mt,bt,yt);return xt.setAttributeNS("","fill",tt),xt}function element(et,tt="svg",ot=0,dt=0){const ft=svg(tt);return ft.setAttributeNS("","x",`${ot}`),ft.setAttributeNS("","y",`${dt}`),ft.setAttributeNS("","width",`${et}`),ft.setAttributeNS("","height",`${et}`),ft}var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t$1=function(et){return typeof et=="string"?et.length>0:typeof et=="number"},n$2=function(et,tt,ot){return tt===void 0&&(tt=0),ot===void 0&&(ot=Math.pow(10,tt)),Math.round(ot*et)/ot+0},e$1=function(et,tt,ot){return tt===void 0&&(tt=0),ot===void 0&&(ot=1),et>ot?ot:et>tt?et:tt},u$2=function(et){return(et=isFinite(et)?et%360:0)>0?et:et+360},a$1=function(et){return{r:e$1(et.r,0,255),g:e$1(et.g,0,255),b:e$1(et.b,0,255),a:e$1(et.a)}},o$1=function(et){return{r:n$2(et.r),g:n$2(et.g),b:n$2(et.b),a:n$2(et.a,3)}},i$1=/^#([0-9a-f]{3,8})$/i,s$1=function(et){var tt=et.toString(16);return tt.length<2?"0"+tt:tt},h$2=function(et){var tt=et.r,ot=et.g,dt=et.b,ft=et.a,pt=Math.max(tt,ot,dt),mt=pt-Math.min(tt,ot,dt),ht=mt?pt===tt?(ot-dt)/mt:pt===ot?2+(dt-tt)/mt:4+(tt-ot)/mt:0;return{h:60*(ht<0?ht+6:ht),s:pt?mt/pt*100:0,v:pt/255*100,a:ft}},b$1=function(et){var tt=et.h,ot=et.s,dt=et.v,ft=et.a;tt=tt/360*6,ot/=100,dt/=100;var pt=Math.floor(tt),mt=dt*(1-ot),ht=dt*(1-(tt-pt)*ot),bt=dt*(1-(1-tt+pt)*ot),yt=pt%6;return{r:255*[dt,ht,mt,mt,bt,dt][yt],g:255*[bt,dt,dt,ht,mt,mt][yt],b:255*[mt,mt,bt,dt,dt,ht][yt],a:ft}},g$2=function(et){return{h:u$2(et.h),s:e$1(et.s,0,100),l:e$1(et.l,0,100),a:e$1(et.a)}},d$1=function(et){return{h:n$2(et.h),s:n$2(et.s),l:n$2(et.l),a:n$2(et.a,3)}},f$2=function(et){return b$1((ot=(tt=et).s,{h:tt.h,s:(ot*=((dt=tt.l)<50?dt:100-dt)/100)>0?2*ot/(dt+ot)*100:0,v:dt+ot,a:tt.a}));var tt,ot,dt},c$1=function(et){return{h:(tt=h$2(et)).h,s:(ft=(200-(ot=tt.s))*(dt=tt.v)/100)>0&&ft<200?ot*dt/100/(ft<=100?ft:200-ft)*100:0,l:ft/2,a:tt.a};var tt,ot,dt,ft},l$1=/^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i,p$1=/^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i,v$2=/^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i,m$2=/^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i,y$1={string:[[function(et){var tt=i$1.exec(et);return tt?(et=tt[1]).length<=4?{r:parseInt(et[0]+et[0],16),g:parseInt(et[1]+et[1],16),b:parseInt(et[2]+et[2],16),a:et.length===4?n$2(parseInt(et[3]+et[3],16)/255,2):1}:et.length===6||et.length===8?{r:parseInt(et.substr(0,2),16),g:parseInt(et.substr(2,2),16),b:parseInt(et.substr(4,2),16),a:et.length===8?n$2(parseInt(et.substr(6,2),16)/255,2):1}:null:null},"hex"],[function(et){var tt=v$2.exec(et)||m$2.exec(et);return tt?tt[2]!==tt[4]||tt[4]!==tt[6]?null:a$1({r:Number(tt[1])/(tt[2]?100/255:1),g:Number(tt[3])/(tt[4]?100/255:1),b:Number(tt[5])/(tt[6]?100/255:1),a:tt[7]===void 0?1:Number(tt[7])/(tt[8]?100:1)}):null},"rgb"],[function(et){var tt=l$1.exec(et)||p$1.exec(et);if(!tt)return null;var ot,dt,ft=g$2({h:(ot=tt[1],dt=tt[2],dt===void 0&&(dt="deg"),Number(ot)*(r[dt]||1)),s:Number(tt[3]),l:Number(tt[4]),a:tt[5]===void 0?1:Number(tt[5])/(tt[6]?100:1)});return f$2(ft)},"hsl"]],object:[[function(et){var tt=et.r,ot=et.g,dt=et.b,ft=et.a,pt=ft===void 0?1:ft;return t$1(tt)&&t$1(ot)&&t$1(dt)?a$1({r:Number(tt),g:Number(ot),b:Number(dt),a:Number(pt)}):null},"rgb"],[function(et){var tt=et.h,ot=et.s,dt=et.l,ft=et.a,pt=ft===void 0?1:ft;if(!t$1(tt)||!t$1(ot)||!t$1(dt))return null;var mt=g$2({h:Number(tt),s:Number(ot),l:Number(dt),a:Number(pt)});return f$2(mt)},"hsl"],[function(et){var tt=et.h,ot=et.s,dt=et.v,ft=et.a,pt=ft===void 0?1:ft;if(!t$1(tt)||!t$1(ot)||!t$1(dt))return null;var mt=function(ht){return{h:u$2(ht.h),s:e$1(ht.s,0,100),v:e$1(ht.v,0,100),a:e$1(ht.a)}}({h:Number(tt),s:Number(ot),v:Number(dt),a:Number(pt)});return b$1(mt)},"hsv"]]},N=function(et,tt){for(var ot=0;ot<tt.length;ot++){var dt=tt[ot][0](et);if(dt)return[dt,tt[ot][1]]}return[null,void 0]},x$1=function(et){return typeof et=="string"?N(et.trim(),y$1.string):typeof et=="object"&&et!==null?N(et,y$1.object):[null,void 0]},M$2=function(et,tt){var ot=c$1(et);return{h:ot.h,s:e$1(ot.s+100*tt,0,100),l:ot.l,a:ot.a}},H$1=function(et){return(299*et.r+587*et.g+114*et.b)/1e3/255},$$2=function(et,tt){var ot=c$1(et);return{h:ot.h,s:ot.s,l:e$1(ot.l+100*tt,0,100),a:ot.a}},j$2=function(){function et(tt){this.parsed=x$1(tt)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return et.prototype.isValid=function(){return this.parsed!==null},et.prototype.brightness=function(){return n$2(H$1(this.rgba),2)},et.prototype.isDark=function(){return H$1(this.rgba)<.5},et.prototype.isLight=function(){return H$1(this.rgba)>=.5},et.prototype.toHex=function(){return tt=o$1(this.rgba),ot=tt.r,dt=tt.g,ft=tt.b,mt=(pt=tt.a)<1?s$1(n$2(255*pt)):"","#"+s$1(ot)+s$1(dt)+s$1(ft)+mt;var tt,ot,dt,ft,pt,mt},et.prototype.toRgb=function(){return o$1(this.rgba)},et.prototype.toRgbString=function(){return tt=o$1(this.rgba),ot=tt.r,dt=tt.g,ft=tt.b,(pt=tt.a)<1?"rgba("+ot+", "+dt+", "+ft+", "+pt+")":"rgb("+ot+", "+dt+", "+ft+")";var tt,ot,dt,ft,pt},et.prototype.toHsl=function(){return d$1(c$1(this.rgba))},et.prototype.toHslString=function(){return tt=d$1(c$1(this.rgba)),ot=tt.h,dt=tt.s,ft=tt.l,(pt=tt.a)<1?"hsla("+ot+", "+dt+"%, "+ft+"%, "+pt+")":"hsl("+ot+", "+dt+"%, "+ft+"%)";var tt,ot,dt,ft,pt},et.prototype.toHsv=function(){return tt=h$2(this.rgba),{h:n$2(tt.h),s:n$2(tt.s),v:n$2(tt.v),a:n$2(tt.a,3)};var tt},et.prototype.invert=function(){return w$2({r:255-(tt=this.rgba).r,g:255-tt.g,b:255-tt.b,a:tt.a});var tt},et.prototype.saturate=function(tt){return tt===void 0&&(tt=.1),w$2(M$2(this.rgba,tt))},et.prototype.desaturate=function(tt){return tt===void 0&&(tt=.1),w$2(M$2(this.rgba,-tt))},et.prototype.grayscale=function(){return w$2(M$2(this.rgba,-1))},et.prototype.lighten=function(tt){return tt===void 0&&(tt=.1),w$2($$2(this.rgba,tt))},et.prototype.darken=function(tt){return tt===void 0&&(tt=.1),w$2($$2(this.rgba,-tt))},et.prototype.rotate=function(tt){return tt===void 0&&(tt=15),this.hue(this.hue()+tt)},et.prototype.alpha=function(tt){return typeof tt=="number"?w$2({r:(ot=this.rgba).r,g:ot.g,b:ot.b,a:tt}):n$2(this.rgba.a,3);var ot},et.prototype.hue=function(tt){var ot=c$1(this.rgba);return typeof tt=="number"?w$2({h:tt,s:ot.s,l:ot.l,a:ot.a}):n$2(ot.h)},et.prototype.isEqual=function(tt){return this.toHex()===w$2(tt).toHex()},et}(),w$2=function(et){return et instanceof j$2?et:new j$2(et)};const WOBBLE=30;function colors(et){const tt=et()*WOBBLE-WOBBLE/2,ot=COLORS.map(dt=>w$2(dt).rotate(tt));return(dt=1)=>{const ft=Math.floor(ot.length*et());return ot.splice(ft,1)[0].alpha(dt).toHslString()}}function container(et,tt="white",ot="",dt={}){const ft=document.createElement("div"),pt=Object.assign({background:tt,borderRadius:`${et/2}px`,display:"inline-block",height:`${et}px`,margin:"0px",overflow:"hidden",padding:"0px",width:`${et}px`},dt);return ft.className=ot,ft.style.background=tt,Object.keys(pt).forEach(mt=>{ft.style[mt]=pt[mt]}),ft}const DIVISOR=256*256;function seeder(et=new Uint8Array(32)){const tt=isU8a(et)?et:stringToU8a(et);let ot=tt[Math.floor(tt.length/2)]%tt.length-1;const dt=()=>(ot+=1,ot===tt.length&&(ot=0),tt[ot]);return()=>(dt()*256+dt())/DIVISOR}function beachballIcon(et,{size:tt=256},ot="",dt){const ft=seeder(et),pt=colors(ft),mt=container(tt,"white",ot,dt),ht=container(tt,pt()),bt=element(tt);mt.appendChild(ht),ht.appendChild(bt);for(let yt=0;yt<SHAPE_COUNT;yt++){const xt=pt(),gt=circle(ft,xt,tt,yt);bt.appendChild(gt)}return mt}const S$2=64,C$1=S$2/2,Z$2=S$2/64*5,SCHEMES=[{colors:[0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,1],freq:1},{colors:[0,1,3,2,4,3,0,1,3,2,4,3,0,1,3,2,4,3,5],freq:20},{colors:[1,2,3,1,2,4,5,5,4,1,2,3,1,2,4,5,5,4,0],freq:16},{colors:[0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,3],freq:32},{colors:[0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,6],freq:32},{colors:[0,1,2,3,4,5,3,4,2,0,1,6,7,8,9,7,8,6,10],freq:128},{colors:[0,1,2,3,4,5,6,7,8,9,10,8,6,7,5,3,4,2,11],freq:128}],SCHEMES_TOTAL=SCHEMES.map(et=>et.freq).reduce((et,tt)=>et+tt),OUTER_CIRCLE={cx:C$1,cy:C$1,fill:"#eee",r:C$1};let zeroHash=new Uint8Array;function getRotation(et){const tt=et?C$1/8*5:C$1/4*3,ot=tt*Math.sqrt(3)/2,dt=tt/2,ft=tt*Math.sqrt(3)/4,pt=tt/4,mt=tt*3/4;return{r:tt,r3o4:mt,ro2:dt,ro4:pt,rroot3o2:ot,rroot3o4:ft}}function getCircleXY(et=!1){const{r:tt,r3o4:ot,ro2:dt,ro4:ft,rroot3o2:pt,rroot3o4:mt}=getRotation(et);return[[C$1,C$1-tt],[C$1,C$1-dt],[C$1-mt,C$1-ot],[C$1-pt,C$1-dt],[C$1-mt,C$1-ft],[C$1-pt,C$1],[C$1-pt,C$1+dt],[C$1-mt,C$1+ft],[C$1-mt,C$1+ot],[C$1,C$1+tt],[C$1,C$1+dt],[C$1+mt,C$1+ot],[C$1+pt,C$1+dt],[C$1+mt,C$1+ft],[C$1+pt,C$1],[C$1+pt,C$1-dt],[C$1+mt,C$1-ft],[C$1+mt,C$1-ot],[C$1,C$1]]}function findScheme(et){let tt=0;const ot=SCHEMES.find(dt=>(tt+=dt.freq,et<tt));if(!ot)throw new Error("Unable to find schema");return ot}function addressToId(et){return zeroHash.length||(zeroHash=blake2AsU8a(new Uint8Array(32),512)),blake2AsU8a(decodeAddress(et),512).map((tt,ot)=>(tt+256-zeroHash[ot])%256)}function getColors(et){const tt=addressToId(et),ot=Math.floor((tt[30]+tt[31]*256)%SCHEMES_TOTAL),dt=tt[28]%6*3,ft=Math.floor(tt[29]*70/256+26)%80+30,pt=findScheme(ot),mt=Array.from(tt).map((ht,bt)=>{const yt=(ht+bt%28*58)%256;if(yt===0)return"#444";if(yt===255)return"transparent";const xt=Math.floor(yt%64*360/64),gt=[53,15,35,75][Math.floor(yt/64)];return`hsl(${xt}, ${ft}%, ${gt}%)`});return pt.colors.map((ht,bt)=>mt[pt.colors[bt<18?(bt+dt)%18:18]])}function polkadotIcon(et,{isAlternative:tt}){const ot=getCircleXY(tt);let dt;try{dt=getColors(et)}catch{dt=new Array(ot.length).fill("#ddd")}return[OUTER_CIRCLE].concat(ot.map(([ft,pt],mt)=>({cx:ft,cy:pt,fill:dt[mt],r:Z$2})))}function Identicon$5({address:et,className:tt="",size:ot,style:dt={}}){const ft=reactExports.useCallback(pt=>{pt==null||pt.appendChild(beachballIcon(et,{isAlternative:!1,size:ot}))},[et,ot]);return jsxRuntimeExports.jsx("div",{className:tt,ref:ft,style:dt})}const Beachball=React.memo(Identicon$5);function Identicon$4({className:et="",size:tt,style:ot={}}){return jsxRuntimeExports.jsx("svg",{className:et,height:tt,style:ot,viewBox:"0 0 64 64",width:tt})}const Empty=React.memo(Identicon$4);var main={exports:{}};(function(et,tt){(function(dt,ft){et.exports=ft()})(commonjsGlobal,function(){return function(ot){var dt={};function ft(pt){if(dt[pt])return dt[pt].exports;var mt=dt[pt]={exports:{},id:pt,loaded:!1};return ot[pt].call(mt.exports,mt,mt.exports,ft),mt.loaded=!0,mt.exports}return ft.m=ot,ft.c=dt,ft.p="",ft(0)}([function(ot,dt,ft){const pt=ft(1),mt=ft(2),ht=new Array(4);function bt(Et){for(let Lt=0;Lt<ht.length;Lt++)ht[Lt]=0;for(let Lt=0;Lt<Et.length;Lt++)ht[Lt%4]=(ht[Lt%4]<<5)-ht[Lt%4]+Et.charCodeAt(Lt)}function yt(){const Et=ht[0]^ht[0]<<11;return ht[0]=ht[1],ht[1]=ht[2],ht[2]=ht[3],ht[3]=ht[3]^ht[3]>>19^Et^Et>>8,(ht[3]>>>0)/(1<<31>>>0)}function xt(){const Et=Math.floor(yt()*360),Lt=yt()*60+40,It=(yt()+yt()+yt()+yt())*25;return[Et/360,Lt/100,It/100]}function gt(Et){const Lt=Et,It=Et,kt=Math.ceil(Lt/2),Nt=Lt-kt,Ut=[];for(let Ft=0;Ft<It;Ft++){let jt=[];for(let Wt=0;Wt<kt;Wt++)jt[Wt]=Math.floor(yt()*2.3);const Xt=jt.slice(0,Nt).reverse();jt=jt.concat(Xt);for(let Wt=0;Wt<jt.length;Wt++)Ut.push(jt[Wt])}return Ut}function wt(Et,Lt,It,kt,Nt,Ut){for(let Ft=0;Ft<kt;Ft++)for(let jt=0;jt<Nt;jt++)Et.buffer[Et.index(Lt+Ft,It+jt)]=Ut}function Pt(Et){if(!Et.seed)throw new Error("No seed provided");return bt(Et.seed),Object.assign({size:8,scale:16,color:xt(),bgcolor:xt(),spotcolor:xt()},Et)}function St(Et){const Lt=Pt({seed:Et.toLowerCase()}),It=gt(Lt.size),kt=Math.sqrt(It.length),Nt=new pt(Lt.size*Lt.scale,Lt.size*Lt.scale,3);Nt.color(...mt(...Lt.bgcolor));const Ut=Nt.color(...mt(...Lt.color)),Ft=Nt.color(...mt(...Lt.spotcolor));for(let jt=0;jt<It.length;jt++){const Xt=Math.floor(jt/kt),Wt=jt%kt;if(It[jt]){const qt=It[jt]==1?Ut:Ft;wt(Nt,Wt*Lt.scale,Xt*Lt.scale,Lt.scale,Lt.scale,qt)}}return`data:image/png;base64,${Nt.getBase64()}`}ot.exports=St},function(ot,dt){/**
 * A handy class to calculate color values.
 *
 * @version 1.0
 * @author Robert Eisele <robert@xarg.org>
 * @copyright Copyright (c) 2010, Robert Eisele
 * @link http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/
 * @license http://www.opensource.org/licenses/bsd-license.php BSD License
 *
 */ot.exports=function(ft,pt,mt){function ht(kt,Nt){for(var Ut=2;Ut<arguments.length;Ut++)for(var Ft=0;Ft<arguments[Ut].length;Ft++)kt[Nt++]=arguments[Ut].charAt(Ft)}function bt(kt){return String.fromCharCode(kt>>8&255,kt&255)}function yt(kt){return String.fromCharCode(kt>>24&255,kt>>16&255,kt>>8&255,kt&255)}function xt(kt){return String.fromCharCode(kt&255,kt>>8&255)}this.width=ft,this.height=pt,this.depth=mt,this.pix_size=pt*(ft+1),this.data_size=2+this.pix_size+5*Math.floor((65534+this.pix_size)/65535)+4,this.ihdr_offs=0,this.ihdr_size=25,this.plte_offs=this.ihdr_offs+this.ihdr_size,this.plte_size=8+3*mt+4,this.trns_offs=this.plte_offs+this.plte_size,this.trns_size=8+mt+4,this.idat_offs=this.trns_offs+this.trns_size,this.idat_size=8+this.data_size+4,this.iend_offs=this.idat_offs+this.idat_size,this.iend_size=12,this.buffer_size=this.iend_offs+this.iend_size,this.buffer=new Array,this.palette=new Object,this.pindex=0;for(var gt=new Array,wt=0;wt<this.buffer_size;wt++)this.buffer[wt]="\0";ht(this.buffer,this.ihdr_offs,yt(this.ihdr_size-12),"IHDR",yt(ft),yt(pt),"\b"),ht(this.buffer,this.plte_offs,yt(this.plte_size-12),"PLTE"),ht(this.buffer,this.trns_offs,yt(this.trns_size-12),"tRNS"),ht(this.buffer,this.idat_offs,yt(this.idat_size-12),"IDAT"),ht(this.buffer,this.iend_offs,yt(this.iend_size-12),"IEND");var Pt=30912;Pt+=31-Pt%31,ht(this.buffer,this.idat_offs+8,bt(Pt));for(var wt=0;(wt<<16)-1<this.pix_size;wt++){var St,Et;wt+65535<this.pix_size?(St=65535,Et="\0"):(St=this.pix_size-(wt<<16)-wt,Et=""),ht(this.buffer,this.idat_offs+8+2+(wt<<16)+(wt<<2),Et,xt(St),xt(~St))}for(var wt=0;wt<256;wt++){for(var Lt=wt,It=0;It<8;It++)Lt&1?Lt=-306674912^Lt>>1&2147483647:Lt=Lt>>1&2147483647;gt[wt]=Lt}this.index=function(kt,Nt){var Ut=Nt*(this.width+1)+kt+1,Ft=this.idat_offs+8+2+5*Math.floor(Ut/65535+1)+Ut;return Ft},this.color=function(kt,Nt,Ut,Ft){Ft=Ft>=0?Ft:255;var jt=((Ft<<8|kt)<<8|Nt)<<8|Ut;if(typeof this.palette[jt]>"u"){if(this.pindex==this.depth)return"\0";var Xt=this.plte_offs+8+3*this.pindex;this.buffer[Xt+0]=String.fromCharCode(kt),this.buffer[Xt+1]=String.fromCharCode(Nt),this.buffer[Xt+2]=String.fromCharCode(Ut),this.buffer[this.trns_offs+8+this.pindex]=String.fromCharCode(Ft),this.palette[jt]=String.fromCharCode(this.pindex++)}return this.palette[jt]},this.getBase64=function(){var kt=this.getDump(),Nt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",Ut,Ft,jt,Xt,Wt,qt,Zt,Gt=kt.length,Qt=0,Ht="";do Ut=kt.charCodeAt(Qt),Xt=Ut>>2,Ft=kt.charCodeAt(Qt+1),Wt=(Ut&3)<<4|Ft>>4,jt=kt.charCodeAt(Qt+2),Gt<Qt+2?qt=64:qt=(Ft&15)<<2|jt>>6,Gt<Qt+3?Zt=64:Zt=jt&63,Ht+=Nt.charAt(Xt)+Nt.charAt(Wt)+Nt.charAt(qt)+Nt.charAt(Zt);while((Qt+=3)<Gt);return Ht},this.getDump=function(){for(var kt=65521,Nt=5552,Ut=1,Ft=0,jt=Nt,Xt=0;Xt<this.height;Xt++)for(var Wt=-1;Wt<this.width;Wt++)Ut+=this.buffer[this.index(Wt,Xt)].charCodeAt(0),Ft+=Ut,(jt-=1)==0&&(Ut%=kt,Ft%=kt,jt=Nt);Ut%=kt,Ft%=kt,ht(this.buffer,this.idat_offs+this.idat_size-8,yt(Ft<<16|Ut));function qt(Zt,Gt,Qt){for(var Ht=-1,vt=4;vt<Qt-4;vt+=1)Ht=gt[(Ht^Zt[Gt+vt].charCodeAt(0))&255]^Ht>>8&16777215;ht(Zt,Gt+Qt-4,yt(Ht^-1))}return qt(this.buffer,this.ihdr_offs,this.ihdr_size),qt(this.buffer,this.plte_offs,this.plte_size),qt(this.buffer,this.trns_offs,this.trns_size),qt(this.buffer,this.idat_offs,this.idat_size),qt(this.buffer,this.iend_offs,this.iend_size),`PNG\r

`+this.buffer.join("")}}},function(ot,dt){function ft(mt,ht,bt){return bt<0&&(bt+=1),bt>1&&(bt-=1),bt<1/6?mt+(ht-mt)*6*bt:bt<1/2?ht:bt<2/3?mt+(ht-mt)*(2/3-bt)*6:mt}function pt(mt,ht,bt){let yt,xt,gt;if(ht==0)yt=xt=gt=bt;else{const wt=bt<.5?bt*(1+ht):bt+ht-bt*ht,Pt=2*bt-wt;yt=ft(Pt,wt,mt+1/3),xt=ft(Pt,wt,mt),gt=ft(Pt,wt,mt-1/3)}return[Math.round(yt*255),Math.round(xt*255),Math.round(gt*255),255]}ot.exports=pt}])})})(main);var mainExports=main.exports;const makeBlockie=getDefaultExportFromCjs(mainExports);var __assign=function(){return __assign=Object.assign||function(tt){for(var ot,dt=1,ft=arguments.length;dt<ft;dt++){ot=arguments[dt];for(var pt in ot)Object.prototype.hasOwnProperty.call(ot,pt)&&(tt[pt]=ot[pt])}return tt},__assign.apply(this,arguments)};function __spreadArray(et,tt,ot){if(ot||arguments.length===2)for(var dt=0,ft=tt.length,pt;dt<ft;dt++)(pt||!(dt in tt))&&(pt||(pt=Array.prototype.slice.call(tt,0,dt)),pt[dt]=tt[dt]);return et.concat(pt||Array.prototype.slice.call(tt))}var MS="-ms-",MOZ="-moz-",WEBKIT="-webkit-",COMMENT="comm",RULESET="rule",DECLARATION="decl",IMPORT="@import",KEYFRAMES="@keyframes",LAYER="@layer",abs=Math.abs,from=String.fromCharCode,assign$1=Object.assign;function hash(et,tt){return charat(et,0)^45?(((tt<<2^charat(et,0))<<2^charat(et,1))<<2^charat(et,2))<<2^charat(et,3):0}function trim$2(et){return et.trim()}function match(et,tt){return(et=tt.exec(et))?et[0]:et}function replace(et,tt,ot){return et.replace(tt,ot)}function indexof(et,tt,ot){return et.indexOf(tt,ot)}function charat(et,tt){return et.charCodeAt(tt)|0}function substr(et,tt,ot){return et.slice(tt,ot)}function strlen(et){return et.length}function sizeof(et){return et.length}function append(et,tt){return tt.push(et),et}function combine(et,tt){return et.map(tt).join("")}function filter(et,tt){return et.filter(function(ot){return!match(ot,tt)})}var line=1,column=1,length=0,position=0,character=0,characters="";function node(et,tt,ot,dt,ft,pt,mt,ht){return{value:et,root:tt,parent:ot,type:dt,props:ft,children:pt,line,column,length:mt,return:"",siblings:ht}}function copy$1(et,tt){return assign$1(node("",null,null,"",null,null,0,et.siblings),et,{length:-et.length},tt)}function lift(et){for(;et.root;)et=copy$1(et.root,{children:[et]});append(et,et.siblings)}function char(){return character}function prev(){return character=position>0?charat(characters,--position):0,column--,character===10&&(column=1,line--),character}function next(){return character=position<length?charat(characters,position++):0,column++,character===10&&(column=1,line++),character}function peek(){return charat(characters,position)}function caret(){return position}function slice$2(et,tt){return substr(characters,et,tt)}function token(et){switch(et){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function alloc(et){return line=column=1,length=strlen(characters=et),position=0,[]}function dealloc(et){return characters="",et}function delimit(et){return trim$2(slice$2(position-1,delimiter(et===91?et+2:et===40?et+1:et)))}function whitespace(et){for(;(character=peek())&&character<33;)next();return token(et)>2||token(character)>3?"":" "}function escaping(et,tt){for(;--tt&&next()&&!(character<48||character>102||character>57&&character<65||character>70&&character<97););return slice$2(et,caret()+(tt<6&&peek()==32&&next()==32))}function delimiter(et){for(;next();)switch(character){case et:return position;case 34:case 39:et!==34&&et!==39&&delimiter(character);break;case 40:et===41&&delimiter(et);break;case 92:next();break}return position}function commenter(et,tt){for(;next()&&et+character!==57;)if(et+character===84&&peek()===47)break;return"/*"+slice$2(tt,position-1)+"*"+from(et===47?et:next())}function identifier(et){for(;!token(peek());)next();return slice$2(et,position)}function compile(et){return dealloc(parse("",null,null,null,[""],et=alloc(et),0,[0],et))}function parse(et,tt,ot,dt,ft,pt,mt,ht,bt){for(var yt=0,xt=0,gt=mt,wt=0,Pt=0,St=0,Et=1,Lt=1,It=1,kt=0,Nt="",Ut=ft,Ft=pt,jt=dt,Xt=Nt;Lt;)switch(St=kt,kt=next()){case 40:if(St!=108&&charat(Xt,gt-1)==58){indexof(Xt+=replace(delimit(kt),"&","&\f"),"&\f",abs(yt?ht[yt-1]:0))!=-1&&(It=-1);break}case 34:case 39:case 91:Xt+=delimit(kt);break;case 9:case 10:case 13:case 32:Xt+=whitespace(St);break;case 92:Xt+=escaping(caret()-1,7);continue;case 47:switch(peek()){case 42:case 47:append(comment(commenter(next(),caret()),tt,ot,bt),bt);break;default:Xt+="/"}break;case 123*Et:ht[yt++]=strlen(Xt)*It;case 125*Et:case 59:case 0:switch(kt){case 0:case 125:Lt=0;case 59+xt:It==-1&&(Xt=replace(Xt,/\f/g,"")),Pt>0&&strlen(Xt)-gt&&append(Pt>32?declaration(Xt+";",dt,ot,gt-1,bt):declaration(replace(Xt," ","")+";",dt,ot,gt-2,bt),bt);break;case 59:Xt+=";";default:if(append(jt=ruleset(Xt,tt,ot,yt,xt,ft,ht,Nt,Ut=[],Ft=[],gt,pt),pt),kt===123)if(xt===0)parse(Xt,tt,jt,jt,Ut,pt,gt,ht,Ft);else switch(wt===99&&charat(Xt,3)===110?100:wt){case 100:case 108:case 109:case 115:parse(et,jt,jt,dt&&append(ruleset(et,jt,jt,0,0,ft,ht,Nt,ft,Ut=[],gt,Ft),Ft),ft,Ft,gt,ht,dt?Ut:Ft);break;default:parse(Xt,jt,jt,jt,[""],Ft,0,ht,Ft)}}yt=xt=Pt=0,Et=It=1,Nt=Xt="",gt=mt;break;case 58:gt=1+strlen(Xt),Pt=St;default:if(Et<1){if(kt==123)--Et;else if(kt==125&&Et++==0&&prev()==125)continue}switch(Xt+=from(kt),kt*Et){case 38:It=xt>0?1:(Xt+="\f",-1);break;case 44:ht[yt++]=(strlen(Xt)-1)*It,It=1;break;case 64:peek()===45&&(Xt+=delimit(next())),wt=peek(),xt=gt=strlen(Nt=Xt+=identifier(caret())),kt++;break;case 45:St===45&&strlen(Xt)==2&&(Et=0)}}return pt}function ruleset(et,tt,ot,dt,ft,pt,mt,ht,bt,yt,xt,gt){for(var wt=ft-1,Pt=ft===0?pt:[""],St=sizeof(Pt),Et=0,Lt=0,It=0;Et<dt;++Et)for(var kt=0,Nt=substr(et,wt+1,wt=abs(Lt=mt[Et])),Ut=et;kt<St;++kt)(Ut=trim$2(Lt>0?Pt[kt]+" "+Nt:replace(Nt,/&\f/g,Pt[kt])))&&(bt[It++]=Ut);return node(et,tt,ot,ft===0?RULESET:ht,bt,yt,xt,gt)}function comment(et,tt,ot,dt){return node(et,tt,ot,COMMENT,from(char()),substr(et,2,-2),0,dt)}function declaration(et,tt,ot,dt,ft){return node(et,tt,ot,DECLARATION,substr(et,0,dt),substr(et,dt+1,-1),dt,ft)}function prefix(et,tt,ot){switch(hash(et,tt)){case 5103:return WEBKIT+"print-"+et+et;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return WEBKIT+et+et;case 4789:return MOZ+et+et;case 5349:case 4246:case 4810:case 6968:case 2756:return WEBKIT+et+MOZ+et+MS+et+et;case 5936:switch(charat(et,tt+11)){case 114:return WEBKIT+et+MS+replace(et,/[svh]\w+-[tblr]{2}/,"tb")+et;case 108:return WEBKIT+et+MS+replace(et,/[svh]\w+-[tblr]{2}/,"tb-rl")+et;case 45:return WEBKIT+et+MS+replace(et,/[svh]\w+-[tblr]{2}/,"lr")+et}case 6828:case 4268:case 2903:return WEBKIT+et+MS+et+et;case 6165:return WEBKIT+et+MS+"flex-"+et+et;case 5187:return WEBKIT+et+replace(et,/(\w+).+(:[^]+)/,WEBKIT+"box-$1$2"+MS+"flex-$1$2")+et;case 5443:return WEBKIT+et+MS+"flex-item-"+replace(et,/flex-|-self/g,"")+(match(et,/flex-|baseline/)?"":MS+"grid-row-"+replace(et,/flex-|-self/g,""))+et;case 4675:return WEBKIT+et+MS+"flex-line-pack"+replace(et,/align-content|flex-|-self/g,"")+et;case 5548:return WEBKIT+et+MS+replace(et,"shrink","negative")+et;case 5292:return WEBKIT+et+MS+replace(et,"basis","preferred-size")+et;case 6060:return WEBKIT+"box-"+replace(et,"-grow","")+WEBKIT+et+MS+replace(et,"grow","positive")+et;case 4554:return WEBKIT+replace(et,/([^-])(transform)/g,"$1"+WEBKIT+"$2")+et;case 6187:return replace(replace(replace(et,/(zoom-|grab)/,WEBKIT+"$1"),/(image-set)/,WEBKIT+"$1"),et,"")+et;case 5495:case 3959:return replace(et,/(image-set\([^]*)/,WEBKIT+"$1$`$1");case 4968:return replace(replace(et,/(.+:)(flex-)?(.*)/,WEBKIT+"box-pack:$3"+MS+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+WEBKIT+et+et;case 4200:if(!match(et,/flex-|baseline/))return MS+"grid-column-align"+substr(et,tt)+et;break;case 2592:case 3360:return MS+replace(et,"template-","")+et;case 4384:case 3616:return ot&&ot.some(function(dt,ft){return tt=ft,match(dt.props,/grid-\w+-end/)})?~indexof(et+(ot=ot[tt].value),"span",0)?et:MS+replace(et,"-start","")+et+MS+"grid-row-span:"+(~indexof(ot,"span",0)?match(ot,/\d+/):+match(ot,/\d+/)-+match(et,/\d+/))+";":MS+replace(et,"-start","")+et;case 4896:case 4128:return ot&&ot.some(function(dt){return match(dt.props,/grid-\w+-start/)})?et:MS+replace(replace(et,"-end","-span"),"span ","")+et;case 4095:case 3583:case 4068:case 2532:return replace(et,/(.+)-inline(.+)/,WEBKIT+"$1$2")+et;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(strlen(et)-1-tt>6)switch(charat(et,tt+1)){case 109:if(charat(et,tt+4)!==45)break;case 102:return replace(et,/(.+:)(.+)-([^]+)/,"$1"+WEBKIT+"$2-$3$1"+MOZ+(charat(et,tt+3)==108?"$3":"$2-$3"))+et;case 115:return~indexof(et,"stretch",0)?prefix(replace(et,"stretch","fill-available"),tt,ot)+et:et}break;case 5152:case 5920:return replace(et,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,function(dt,ft,pt,mt,ht,bt,yt){return MS+ft+":"+pt+yt+(mt?MS+ft+"-span:"+(ht?bt:+bt-+pt)+yt:"")+et});case 4949:if(charat(et,tt+6)===121)return replace(et,":",":"+WEBKIT)+et;break;case 6444:switch(charat(et,charat(et,14)===45?18:11)){case 120:return replace(et,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+WEBKIT+(charat(et,14)===45?"inline-":"")+"box$3$1"+WEBKIT+"$2$3$1"+MS+"$2box$3")+et;case 100:return replace(et,":",":"+MS)+et}break;case 5719:case 2647:case 2135:case 3927:case 2391:return replace(et,"scroll-","scroll-snap-")+et}return et}function serialize(et,tt){for(var ot="",dt=0;dt<et.length;dt++)ot+=tt(et[dt],dt,et,tt)||"";return ot}function stringify(et,tt,ot,dt){switch(et.type){case LAYER:if(et.children.length)break;case IMPORT:case DECLARATION:return et.return=et.return||et.value;case COMMENT:return"";case KEYFRAMES:return et.return=et.value+"{"+serialize(et.children,dt)+"}";case RULESET:if(!strlen(et.value=et.props.join(",")))return""}return strlen(ot=serialize(et.children,dt))?et.return=et.value+"{"+ot+"}":""}function middleware(et){var tt=sizeof(et);return function(ot,dt,ft,pt){for(var mt="",ht=0;ht<tt;ht++)mt+=et[ht](ot,dt,ft,pt)||"";return mt}}function rulesheet(et){return function(tt){tt.root||(tt=tt.return)&&et(tt)}}function prefixer(et,tt,ot,dt){if(et.length>-1&&!et.return)switch(et.type){case DECLARATION:et.return=prefix(et.value,et.length,ot);return;case KEYFRAMES:return serialize([copy$1(et,{value:replace(et.value,"@","@"+WEBKIT)})],dt);case RULESET:if(et.length)return combine(ot=et.props,function(ft){switch(match(ft,dt=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":lift(copy$1(et,{props:[replace(ft,/:(read-\w+)/,":"+MOZ+"$1")]})),lift(copy$1(et,{props:[ft]})),assign$1(et,{props:filter(ot,dt)});break;case"::placeholder":lift(copy$1(et,{props:[replace(ft,/:(plac\w+)/,":"+WEBKIT+"input-$1")]})),lift(copy$1(et,{props:[replace(ft,/:(plac\w+)/,":"+MOZ+"$1")]})),lift(copy$1(et,{props:[replace(ft,/:(plac\w+)/,MS+"input-$1")]})),lift(copy$1(et,{props:[ft]})),assign$1(et,{props:filter(ot,dt)});break}return""})}}var unitlessKeys={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},define_process_env_default$1={},f$1=typeof process<"u"&&define_process_env_default$1!==void 0&&(define_process_env_default$1.REACT_APP_SC_ATTR||define_process_env_default$1.SC_ATTR)||"data-styled",m$1="active",y="data-styled-version",v$1="6.1.8",g$1=`/*!sc*/
`,S$1=typeof window<"u"&&"HTMLElement"in window,w$1=!!(typeof SC_DISABLE_SPEEDY=="boolean"?SC_DISABLE_SPEEDY:typeof process<"u"&&define_process_env_default$1!==void 0&&define_process_env_default$1.REACT_APP_SC_DISABLE_SPEEDY!==void 0&&define_process_env_default$1.REACT_APP_SC_DISABLE_SPEEDY!==""?define_process_env_default$1.REACT_APP_SC_DISABLE_SPEEDY!=="false"&&define_process_env_default$1.REACT_APP_SC_DISABLE_SPEEDY:typeof process<"u"&&define_process_env_default$1!==void 0&&define_process_env_default$1.SC_DISABLE_SPEEDY!==void 0&&define_process_env_default$1.SC_DISABLE_SPEEDY!==""&&define_process_env_default$1.SC_DISABLE_SPEEDY!=="false"&&define_process_env_default$1.SC_DISABLE_SPEEDY),_$1=Object.freeze([]),C=Object.freeze({});function I$1(et,tt,ot){return ot===void 0&&(ot=C),et.theme!==ot.theme&&et.theme||tt||ot.theme}var A$1=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),O$1=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,D$1=/(^-|-$)/g;function R(et){return et.replace(O$1,"-").replace(D$1,"")}var T$1=/(a)(d)/gi,k=52,j$1=function(et){return String.fromCharCode(et+(et>25?39:97))};function x(et){var tt,ot="";for(tt=Math.abs(et);tt>k;tt=tt/k|0)ot=j$1(tt%k)+ot;return(j$1(tt%k)+ot).replace(T$1,"$1-$2")}var V$1,F$1=5381,M$1=function(et,tt){for(var ot=tt.length;ot;)et=33*et^tt.charCodeAt(--ot);return et},$$1=function(et){return M$1(F$1,et)};function z(et){return x($$1(et)>>>0)}function B(et){return et.displayName||et.name||"Component"}function L(et){return typeof et=="string"&&!0}var G$1=typeof Symbol=="function"&&Symbol.for,Y$1=G$1?Symbol.for("react.memo"):60115,W$1=G$1?Symbol.for("react.forward_ref"):60112,q={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},H={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},U$1={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},J$1=((V$1={})[W$1]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},V$1[Y$1]=U$1,V$1);function X$1(et){return("type"in(tt=et)&&tt.type.$$typeof)===Y$1?U$1:"$$typeof"in et?J$1[et.$$typeof]:q;var tt}var Z$1=Object.defineProperty,K=Object.getOwnPropertyNames,Q$1=Object.getOwnPropertySymbols,ee$1=Object.getOwnPropertyDescriptor,te=Object.getPrototypeOf,ne$1=Object.prototype;function oe$1(et,tt,ot){if(typeof tt!="string"){if(ne$1){var dt=te(tt);dt&&dt!==ne$1&&oe$1(et,dt,ot)}var ft=K(tt);Q$1&&(ft=ft.concat(Q$1(tt)));for(var pt=X$1(et),mt=X$1(tt),ht=0;ht<ft.length;++ht){var bt=ft[ht];if(!(bt in H||ot&&ot[bt]||mt&&bt in mt||pt&&bt in pt)){var yt=ee$1(tt,bt);try{Z$1(et,bt,yt)}catch{}}}}return et}function re$1(et){return typeof et=="function"}function se$1(et){return typeof et=="object"&&"styledComponentId"in et}function ie(et,tt){return et&&tt?"".concat(et," ").concat(tt):et||tt||""}function ae(et,tt){if(et.length===0)return"";for(var ot=et[0],dt=1;dt<et.length;dt++)ot+=et[dt];return ot}function ce(et){return et!==null&&typeof et=="object"&&et.constructor.name===Object.name&&!("props"in et&&et.$$typeof)}function le$1(et,tt,ot){if(ot===void 0&&(ot=!1),!ot&&!ce(et)&&!Array.isArray(et))return tt;if(Array.isArray(tt))for(var dt=0;dt<tt.length;dt++)et[dt]=le$1(et[dt],tt[dt]);else if(ce(tt))for(var dt in tt)et[dt]=le$1(et[dt],tt[dt]);return et}function ue$1(et,tt){Object.defineProperty(et,"toString",{value:tt})}function he$1(et){for(var tt=[],ot=1;ot<arguments.length;ot++)tt[ot-1]=arguments[ot];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(et," for more information.").concat(tt.length>0?" Args: ".concat(tt.join(", ")):""))}var fe$1=function(){function et(tt){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=tt}return et.prototype.indexOfGroup=function(tt){for(var ot=0,dt=0;dt<tt;dt++)ot+=this.groupSizes[dt];return ot},et.prototype.insertRules=function(tt,ot){if(tt>=this.groupSizes.length){for(var dt=this.groupSizes,ft=dt.length,pt=ft;tt>=pt;)if((pt<<=1)<0)throw he$1(16,"".concat(tt));this.groupSizes=new Uint32Array(pt),this.groupSizes.set(dt),this.length=pt;for(var mt=ft;mt<pt;mt++)this.groupSizes[mt]=0}for(var ht=this.indexOfGroup(tt+1),bt=(mt=0,ot.length);mt<bt;mt++)this.tag.insertRule(ht,ot[mt])&&(this.groupSizes[tt]++,ht++)},et.prototype.clearGroup=function(tt){if(tt<this.length){var ot=this.groupSizes[tt],dt=this.indexOfGroup(tt),ft=dt+ot;this.groupSizes[tt]=0;for(var pt=dt;pt<ft;pt++)this.tag.deleteRule(dt)}},et.prototype.getGroup=function(tt){var ot="";if(tt>=this.length||this.groupSizes[tt]===0)return ot;for(var dt=this.groupSizes[tt],ft=this.indexOfGroup(tt),pt=ft+dt,mt=ft;mt<pt;mt++)ot+="".concat(this.tag.getRule(mt)).concat(g$1);return ot},et}(),me=new Map,ye$1=new Map,ve$1=1,ge$1=function(et){if(me.has(et))return me.get(et);for(;ye$1.has(ve$1);)ve$1++;var tt=ve$1++;return me.set(et,tt),ye$1.set(tt,et),tt},Se$1=function(et,tt){ve$1=tt+1,me.set(et,tt),ye$1.set(tt,et)},we="style[".concat(f$1,"][").concat(y,'="').concat(v$1,'"]'),be$1=new RegExp("^".concat(f$1,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),Ee$1=function(et,tt,ot){for(var dt,ft=ot.split(","),pt=0,mt=ft.length;pt<mt;pt++)(dt=ft[pt])&&et.registerName(tt,dt)},Ne=function(et,tt){for(var ot,dt=((ot=tt.textContent)!==null&&ot!==void 0?ot:"").split(g$1),ft=[],pt=0,mt=dt.length;pt<mt;pt++){var ht=dt[pt].trim();if(ht){var bt=ht.match(be$1);if(bt){var yt=0|parseInt(bt[1],10),xt=bt[2];yt!==0&&(Se$1(xt,yt),Ee$1(et,xt,bt[3]),et.getTag().insertRules(yt,ft)),ft.length=0}else ft.push(ht)}}};function Pe(){return typeof __webpack_nonce__<"u"?__webpack_nonce__:null}var _e=function(et){var tt=document.head,ot=et||tt,dt=document.createElement("style"),ft=function(ht){var bt=Array.from(ht.querySelectorAll("style[".concat(f$1,"]")));return bt[bt.length-1]}(ot),pt=ft!==void 0?ft.nextSibling:null;dt.setAttribute(f$1,m$1),dt.setAttribute(y,v$1);var mt=Pe();return mt&&dt.setAttribute("nonce",mt),ot.insertBefore(dt,pt),dt},Ce=function(){function et(tt){this.element=_e(tt),this.element.appendChild(document.createTextNode("")),this.sheet=function(ot){if(ot.sheet)return ot.sheet;for(var dt=document.styleSheets,ft=0,pt=dt.length;ft<pt;ft++){var mt=dt[ft];if(mt.ownerNode===ot)return mt}throw he$1(17)}(this.element),this.length=0}return et.prototype.insertRule=function(tt,ot){try{return this.sheet.insertRule(ot,tt),this.length++,!0}catch{return!1}},et.prototype.deleteRule=function(tt){this.sheet.deleteRule(tt),this.length--},et.prototype.getRule=function(tt){var ot=this.sheet.cssRules[tt];return ot&&ot.cssText?ot.cssText:""},et}(),Ie$1=function(){function et(tt){this.element=_e(tt),this.nodes=this.element.childNodes,this.length=0}return et.prototype.insertRule=function(tt,ot){if(tt<=this.length&&tt>=0){var dt=document.createTextNode(ot);return this.element.insertBefore(dt,this.nodes[tt]||null),this.length++,!0}return!1},et.prototype.deleteRule=function(tt){this.element.removeChild(this.nodes[tt]),this.length--},et.prototype.getRule=function(tt){return tt<this.length?this.nodes[tt].textContent:""},et}(),Ae$1=function(){function et(tt){this.rules=[],this.length=0}return et.prototype.insertRule=function(tt,ot){return tt<=this.length&&(this.rules.splice(tt,0,ot),this.length++,!0)},et.prototype.deleteRule=function(tt){this.rules.splice(tt,1),this.length--},et.prototype.getRule=function(tt){return tt<this.length?this.rules[tt]:""},et}(),Oe=S$1,De={isServer:!S$1,useCSSOMInjection:!w$1},Re$1=function(){function et(tt,ot,dt){tt===void 0&&(tt=C),ot===void 0&&(ot={});var ft=this;this.options=__assign(__assign({},De),tt),this.gs=ot,this.names=new Map(dt),this.server=!!tt.isServer,!this.server&&S$1&&Oe&&(Oe=!1,function(pt){for(var mt=document.querySelectorAll(we),ht=0,bt=mt.length;ht<bt;ht++){var yt=mt[ht];yt&&yt.getAttribute(f$1)!==m$1&&(Ne(pt,yt),yt.parentNode&&yt.parentNode.removeChild(yt))}}(this)),ue$1(this,function(){return function(pt){for(var mt=pt.getTag(),ht=mt.length,bt="",yt=function(gt){var wt=function(It){return ye$1.get(It)}(gt);if(wt===void 0)return"continue";var Pt=pt.names.get(wt),St=mt.getGroup(gt);if(Pt===void 0||St.length===0)return"continue";var Et="".concat(f$1,".g").concat(gt,'[id="').concat(wt,'"]'),Lt="";Pt!==void 0&&Pt.forEach(function(It){It.length>0&&(Lt+="".concat(It,","))}),bt+="".concat(St).concat(Et,'{content:"').concat(Lt,'"}').concat(g$1)},xt=0;xt<ht;xt++)yt(xt);return bt}(ft)})}return et.registerId=function(tt){return ge$1(tt)},et.prototype.reconstructWithOptions=function(tt,ot){return ot===void 0&&(ot=!0),new et(__assign(__assign({},this.options),tt),this.gs,ot&&this.names||void 0)},et.prototype.allocateGSInstance=function(tt){return this.gs[tt]=(this.gs[tt]||0)+1},et.prototype.getTag=function(){return this.tag||(this.tag=(tt=function(ot){var dt=ot.useCSSOMInjection,ft=ot.target;return ot.isServer?new Ae$1(ft):dt?new Ce(ft):new Ie$1(ft)}(this.options),new fe$1(tt)));var tt},et.prototype.hasNameForId=function(tt,ot){return this.names.has(tt)&&this.names.get(tt).has(ot)},et.prototype.registerName=function(tt,ot){if(ge$1(tt),this.names.has(tt))this.names.get(tt).add(ot);else{var dt=new Set;dt.add(ot),this.names.set(tt,dt)}},et.prototype.insertRules=function(tt,ot,dt){this.registerName(tt,ot),this.getTag().insertRules(ge$1(tt),dt)},et.prototype.clearNames=function(tt){this.names.has(tt)&&this.names.get(tt).clear()},et.prototype.clearRules=function(tt){this.getTag().clearGroup(ge$1(tt)),this.clearNames(tt)},et.prototype.clearTag=function(){this.tag=void 0},et}(),Te$1=/&/g,ke=/^\s*\/\/.*$/gm;function je(et,tt){return et.map(function(ot){return ot.type==="rule"&&(ot.value="".concat(tt," ").concat(ot.value),ot.value=ot.value.replaceAll(",",",".concat(tt," ")),ot.props=ot.props.map(function(dt){return"".concat(tt," ").concat(dt)})),Array.isArray(ot.children)&&ot.type!=="@keyframes"&&(ot.children=je(ot.children,tt)),ot})}function xe$1(et){var tt,ot,dt,ft=C,pt=ft.options,mt=pt===void 0?C:pt,ht=ft.plugins,bt=ht===void 0?_$1:ht,yt=function(wt,Pt,St){return St.startsWith(ot)&&St.endsWith(ot)&&St.replaceAll(ot,"").length>0?".".concat(tt):wt},xt=bt.slice();xt.push(function(wt){wt.type===RULESET&&wt.value.includes("&")&&(wt.props[0]=wt.props[0].replace(Te$1,ot).replace(dt,yt))}),mt.prefix&&xt.push(prefixer),xt.push(stringify);var gt=function(wt,Pt,St,Et){Pt===void 0&&(Pt=""),St===void 0&&(St=""),Et===void 0&&(Et="&"),tt=Et,ot=Pt,dt=new RegExp("\\".concat(ot,"\\b"),"g");var Lt=wt.replace(ke,""),It=compile(St||Pt?"".concat(St," ").concat(Pt," { ").concat(Lt," }"):Lt);mt.namespace&&(It=je(It,mt.namespace));var kt=[];return serialize(It,middleware(xt.concat(rulesheet(function(Nt){return kt.push(Nt)})))),kt};return gt.hash=bt.length?bt.reduce(function(wt,Pt){return Pt.name||he$1(15),M$1(wt,Pt.name)},F$1).toString():"",gt}var Ve=new Re$1,Fe=xe$1(),Me=React.createContext({shouldForwardProp:void 0,styleSheet:Ve,stylis:Fe});Me.Consumer;React.createContext(void 0);function Be(){return reactExports.useContext(Me)}var Ge=function(){function et(tt,ot){var dt=this;this.inject=function(ft,pt){pt===void 0&&(pt=Fe);var mt=dt.name+pt.hash;ft.hasNameForId(dt.id,mt)||ft.insertRules(dt.id,mt,pt(dt.rules,mt,"@keyframes"))},this.name=tt,this.id="sc-keyframes-".concat(tt),this.rules=ot,ue$1(this,function(){throw he$1(12,String(dt.name))})}return et.prototype.getName=function(tt){return tt===void 0&&(tt=Fe),this.name+tt.hash},et}(),Ye=function(et){return et>="A"&&et<="Z"};function We(et){for(var tt="",ot=0;ot<et.length;ot++){var dt=et[ot];if(ot===1&&dt==="-"&&et[0]==="-")return et;Ye(dt)?tt+="-"+dt.toLowerCase():tt+=dt}return tt.startsWith("ms-")?"-"+tt:tt}var qe=function(et){return et==null||et===!1||et===""},He=function(et){var tt,ot,dt=[];for(var ft in et){var pt=et[ft];et.hasOwnProperty(ft)&&!qe(pt)&&(Array.isArray(pt)&&pt.isCss||re$1(pt)?dt.push("".concat(We(ft),":"),pt,";"):ce(pt)?dt.push.apply(dt,__spreadArray(__spreadArray(["".concat(ft," {")],He(pt),!1),["}"],!1)):dt.push("".concat(We(ft),": ").concat((tt=ft,(ot=pt)==null||typeof ot=="boolean"||ot===""?"":typeof ot!="number"||ot===0||tt in unitlessKeys||tt.startsWith("--")?String(ot).trim():"".concat(ot,"px")),";")))}return dt};function Ue(et,tt,ot,dt){if(qe(et))return[];if(se$1(et))return[".".concat(et.styledComponentId)];if(re$1(et)){if(!re$1(pt=et)||pt.prototype&&pt.prototype.isReactComponent||!tt)return[et];var ft=et(tt);return Ue(ft,tt,ot,dt)}var pt;return et instanceof Ge?ot?(et.inject(ot,dt),[et.getName(dt)]):[et]:ce(et)?He(et):Array.isArray(et)?Array.prototype.concat.apply(_$1,et.map(function(mt){return Ue(mt,tt,ot,dt)})):[et.toString()]}function Je(et){for(var tt=0;tt<et.length;tt+=1){var ot=et[tt];if(re$1(ot)&&!se$1(ot))return!1}return!0}var Xe=$$1(v$1),Ze=function(){function et(tt,ot,dt){this.rules=tt,this.staticRulesId="",this.isStatic=(dt===void 0||dt.isStatic)&&Je(tt),this.componentId=ot,this.baseHash=M$1(Xe,ot),this.baseStyle=dt,Re$1.registerId(ot)}return et.prototype.generateAndInjectStyles=function(tt,ot,dt){var ft=this.baseStyle?this.baseStyle.generateAndInjectStyles(tt,ot,dt):"";if(this.isStatic&&!dt.hash)if(this.staticRulesId&&ot.hasNameForId(this.componentId,this.staticRulesId))ft=ie(ft,this.staticRulesId);else{var pt=ae(Ue(this.rules,tt,ot,dt)),mt=x(M$1(this.baseHash,pt)>>>0);if(!ot.hasNameForId(this.componentId,mt)){var ht=dt(pt,".".concat(mt),void 0,this.componentId);ot.insertRules(this.componentId,mt,ht)}ft=ie(ft,mt),this.staticRulesId=mt}else{for(var bt=M$1(this.baseHash,dt.hash),yt="",xt=0;xt<this.rules.length;xt++){var gt=this.rules[xt];if(typeof gt=="string")yt+=gt;else if(gt){var wt=ae(Ue(gt,tt,ot,dt));bt=M$1(bt,wt+xt),yt+=wt}}if(yt){var Pt=x(bt>>>0);ot.hasNameForId(this.componentId,Pt)||ot.insertRules(this.componentId,Pt,dt(yt,".".concat(Pt),void 0,this.componentId)),ft=ie(ft,Pt)}}return ft},et}(),Ke=React.createContext(void 0);Ke.Consumer;var nt={};function rt(et,tt,ot){var dt=se$1(et),ft=et,pt=!L(et),mt=tt.attrs,ht=mt===void 0?_$1:mt,bt=tt.componentId,yt=bt===void 0?function(Ut,Ft){var jt=typeof Ut!="string"?"sc":R(Ut);nt[jt]=(nt[jt]||0)+1;var Xt="".concat(jt,"-").concat(z(v$1+jt+nt[jt]));return Ft?"".concat(Ft,"-").concat(Xt):Xt}(tt.displayName,tt.parentComponentId):bt,xt=tt.displayName,gt=xt===void 0?function(Ut){return L(Ut)?"styled.".concat(Ut):"Styled(".concat(B(Ut),")")}(et):xt,wt=tt.displayName&&tt.componentId?"".concat(R(tt.displayName),"-").concat(tt.componentId):tt.componentId||yt,Pt=dt&&ft.attrs?ft.attrs.concat(ht).filter(Boolean):ht,St=tt.shouldForwardProp;if(dt&&ft.shouldForwardProp){var Et=ft.shouldForwardProp;if(tt.shouldForwardProp){var Lt=tt.shouldForwardProp;St=function(Ut,Ft){return Et(Ut,Ft)&&Lt(Ut,Ft)}}else St=Et}var It=new Ze(ot,wt,dt?ft.componentStyle:void 0);function kt(Ut,Ft){return function(jt,Xt,Wt){var qt=jt.attrs,Zt=jt.componentStyle,Gt=jt.defaultProps,Qt=jt.foldedComponentIds,Ht=jt.styledComponentId,vt=jt.target,Vt=React.useContext(Ke),At=Be(),Bt=jt.shouldForwardProp||At.shouldForwardProp,Mt=I$1(Xt,Vt,Gt)||C,Ct=function(Jt,Yt,$t){for(var tn,en=__assign(__assign({},Yt),{className:void 0,theme:$t}),sn=0;sn<Jt.length;sn+=1){var rn=re$1(tn=Jt[sn])?tn(en):tn;for(var nn in rn)en[nn]=nn==="className"?ie(en[nn],rn[nn]):nn==="style"?__assign(__assign({},en[nn]),rn[nn]):rn[nn]}return Yt.className&&(en.className=ie(en.className,Yt.className)),en}(qt,Xt,Mt),Dt=Ct.as||vt,Rt={};for(var Tt in Ct)Ct[Tt]===void 0||Tt[0]==="$"||Tt==="as"||Tt==="theme"&&Ct.theme===Mt||(Tt==="forwardedAs"?Rt.as=Ct.forwardedAs:Bt&&!Bt(Tt,Dt)||(Rt[Tt]=Ct[Tt]));var zt=function(Jt,Yt){var $t=Be(),tn=Jt.generateAndInjectStyles(Yt,$t.styleSheet,$t.stylis);return tn}(Zt,Ct),Kt=ie(Qt,Ht);return zt&&(Kt+=" "+zt),Ct.className&&(Kt+=" "+Ct.className),Rt[L(Dt)&&!A$1.has(Dt)?"class":"className"]=Kt,Rt.ref=Wt,reactExports.createElement(Dt,Rt)}(Nt,Ut,Ft)}kt.displayName=gt;var Nt=React.forwardRef(kt);return Nt.attrs=Pt,Nt.componentStyle=It,Nt.displayName=gt,Nt.shouldForwardProp=St,Nt.foldedComponentIds=dt?ie(ft.foldedComponentIds,ft.styledComponentId):"",Nt.styledComponentId=wt,Nt.target=dt?ft.target:et,Object.defineProperty(Nt,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(Ut){this._foldedDefaultProps=dt?function(Ft){for(var jt=[],Xt=1;Xt<arguments.length;Xt++)jt[Xt-1]=arguments[Xt];for(var Wt=0,qt=jt;Wt<qt.length;Wt++)le$1(Ft,qt[Wt],!0);return Ft}({},ft.defaultProps,Ut):Ut}}),ue$1(Nt,function(){return".".concat(Nt.styledComponentId)}),pt&&oe$1(Nt,et,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),Nt}function st(et,tt){for(var ot=[et[0]],dt=0,ft=tt.length;dt<ft;dt+=1)ot.push(tt[dt],et[dt+1]);return ot}var it=function(et){return Object.assign(et,{isCss:!0})};function at(et){for(var tt=[],ot=1;ot<arguments.length;ot++)tt[ot-1]=arguments[ot];if(re$1(et)||ce(et))return it(Ue(st(_$1,__spreadArray([et],tt,!0))));var dt=et;return tt.length===0&&dt.length===1&&typeof dt[0]=="string"?Ue(dt):it(Ue(st(dt,tt)))}function ct(et,tt,ot){if(ot===void 0&&(ot=C),!tt)throw he$1(1,tt);var dt=function(ft){for(var pt=[],mt=1;mt<arguments.length;mt++)pt[mt-1]=arguments[mt];return et(tt,ot,at.apply(void 0,__spreadArray([ft],pt,!1)))};return dt.attrs=function(ft){return ct(et,tt,__assign(__assign({},ot),{attrs:Array.prototype.concat(ot.attrs,ft).filter(Boolean)}))},dt.withConfig=function(ft){return ct(et,tt,__assign(__assign({},ot),ft))},dt}var lt=function(et){return ct(rt,et)},ut=lt;A$1.forEach(function(et){ut[et]=lt(et)});function Identicon$3({address:et,className:tt="",size:ot,style:dt={}}){const ft=reactExports.useMemo(()=>makeBlockie(et),[et]);return jsxRuntimeExports.jsx(StyledImg,{className:tt,size:ot,src:ft,style:dt})}const StyledImg=ut.img(({size:et})=>`
  display: block;
  height: ${et}px;
  width: ${et}px;
`),Ethereum=React.memo(Identicon$3);function parseHex(et,tt,ot){return parseInt(et.substr(tt,ot),16)}function decToHex(et){return et|=0,et<0?"00":et<16?"0"+et.toString(16):et<256?et.toString(16):"ff"}function hueToRgb(et,tt,ot){return ot=ot<0?ot+6:ot>6?ot-6:ot,decToHex(255*(ot<1?et+(tt-et)*ot:ot<3?tt:ot<4?et+(tt-et)*(4-ot):et))}function parseColor(et){if(/^#[0-9a-f]{3,8}$/i.test(et)){let tt;const ot=et.length;if(ot<6){const dt=et[1],ft=et[2],pt=et[3],mt=et[4]||"";tt="#"+dt+dt+ft+ft+pt+pt+mt+mt}return(ot==7||ot>8)&&(tt=et),tt}}function hsl(et,tt,ot){let dt;if(tt==0){const ft=decToHex(ot*255);dt=ft+ft+ft}else{const ft=ot<=.5?ot*(tt+1):ot+tt-ot*tt,pt=ot*2-ft;dt=hueToRgb(pt,ft,et*6+2)+hueToRgb(pt,ft,et*6)+hueToRgb(pt,ft,et*6-2)}return"#"+dt}function correctedHsl(et,tt,ot){const dt=[.55,.5,.5,.46,.6,.55,.55],ft=dt[et*6+.5|0];return ot=ot<.5?ot*ft*2:ft+(ot-.5)*(1-ft)*2,hsl(et,tt,ot)}const GLOBAL=typeof window<"u"?window:typeof self<"u"?self:typeof global<"u"?global:{},CONFIG_PROPERTIES={V:"jdenticon_config",n:"config"};var rootConfigurationHolder={};function getConfiguration(et,tt){const ot=rootConfigurationHolder[CONFIG_PROPERTIES.n]||GLOBAL[CONFIG_PROPERTIES.V]||{},dt=ot.lightness||{},ft=ot.saturation||{},pt="color"in ft?ft.color:ft,mt=ft.grayscale,ht=ot.backColor,bt=ot.padding;function yt(gt,wt){let Pt=dt[gt];return Pt&&Pt.length>1||(Pt=wt),function(St){return St=Pt[0]+St*(Pt[1]-Pt[0]),St<0?0:St>1?1:St}}function xt(gt){const wt=ot.hues;let Pt;return wt&&wt.length>0&&(Pt=wt[0|.999*gt*wt.length]),typeof Pt=="number"?(Pt/360%1+1)%1:gt}return{W:xt,o:typeof pt=="number"?pt:.5,D:typeof mt=="number"?mt:0,p:yt("color",[.4,.8]),F:yt("grayscale",[.3,.9]),G:parseColor(ht),X:typeof bt=="number"?bt:tt}}class Point{constructor(tt,ot){this.x=tt,this.y=ot}}class Transform{constructor(tt,ot,dt,ft){this.q=tt,this.t=ot,this.H=dt,this.Y=ft}I(tt,ot,dt,ft){const pt=this.q+this.H,mt=this.t+this.H,ht=this.Y;return ht===1?new Point(pt-ot-(ft||0),this.t+tt):ht===2?new Point(pt-tt-(dt||0),mt-ot-(ft||0)):ht===3?new Point(this.q+ot,mt-tt-(dt||0)):new Point(this.q+tt,this.t+ot)}}const NO_TRANSFORM=new Transform(0,0,0,0);class Graphics{constructor(tt){this.J=tt,this.u=NO_TRANSFORM}g(tt,ot){const dt=ot?-2:2,ft=[];for(let pt=ot?tt.length-2:0;pt<tt.length&&pt>=0;pt+=dt)ft.push(this.u.I(tt[pt],tt[pt+1]));this.J.g(ft)}h(tt,ot,dt,ft){const pt=this.u.I(tt,ot,dt,dt);this.J.h(pt,dt,ft)}i(tt,ot,dt,ft,pt){this.g([tt,ot,tt+dt,ot,tt+dt,ot+ft,tt,ot+ft],pt)}j(tt,ot,dt,ft,pt,mt){const ht=[tt+dt,ot,tt+dt,ot+ft,tt,ot+ft,tt,ot];ht.splice((pt||0)%4*2,2),this.g(ht,mt)}K(tt,ot,dt,ft,pt){this.g([tt+dt/2,ot,tt+dt,ot+ft/2,tt+dt/2,ot+ft,tt,ot+ft/2],pt)}}function centerShape(et,tt,ot,dt){et=et%14;let ft,pt,mt,ht,bt,yt;et?et==1?(mt=0|ot*.5,ht=0|ot*.8,tt.j(ot-mt,0,mt,ht,2)):et==2?(mt=0|ot/3,tt.i(mt,mt,ot-mt,ot-mt)):et==3?(bt=ot*.1,yt=ot<6?1:ot<8?2:0|ot*.25,bt=bt>1?0|bt:bt>.5?1:bt,tt.i(yt,yt,ot-bt-yt,ot-bt-yt)):et==4?(pt=0|ot*.15,mt=0|ot*.5,tt.h(ot-mt-pt,ot-mt-pt,mt)):et==5?(bt=ot*.1,yt=bt*4,yt>3&&(yt=0|yt),tt.i(0,0,ot,ot),tt.g([yt,yt,ot-bt,yt,yt+(ot-yt-bt)/2,ot-bt],!0)):et==6?tt.g([0,0,ot,0,ot,ot*.7,ot*.4,ot*.4,ot*.7,ot,0,ot]):et==7?tt.j(ot/2,ot/2,ot/2,ot/2,3):et==8?(tt.i(0,0,ot,ot/2),tt.i(0,ot/2,ot/2,ot/2),tt.j(ot/2,ot/2,ot/2,ot/2,1)):et==9?(bt=ot*.14,yt=ot<4?1:ot<6?2:0|ot*.35,bt=ot<8?bt:0|bt,tt.i(0,0,ot,ot),tt.i(yt,yt,ot-yt-bt,ot-yt-bt,!0)):et==10?(bt=ot*.12,yt=bt*3,tt.i(0,0,ot,ot),tt.h(yt,yt,ot-bt-yt,!0)):et==11?tt.j(ot/2,ot/2,ot/2,ot/2,3):et==12?(pt=ot*.25,tt.i(0,0,ot,ot),tt.K(pt,pt,ot-pt,ot-pt,!0)):!dt&&(pt=ot*.4,mt=ot*1.2,tt.h(pt,pt,mt)):(ft=ot*.42,tt.g([0,0,ot,0,ot,ot-ft*2,ot-ft,ot,0,ot]))}function outerShape(et,tt,ot){et=et%4;let dt;et?et==1?tt.j(0,ot/2,ot,ot/2,0):et==2?tt.K(0,0,ot,ot):(dt=ot/6,tt.h(dt,dt,ot-2*dt)):tt.j(0,0,ot,ot,0)}function colorTheme(et,tt){return et=tt.W(et),[correctedHsl(et,tt.D,tt.F(0)),correctedHsl(et,tt.o,tt.p(.5)),correctedHsl(et,tt.D,tt.F(1)),correctedHsl(et,tt.o,tt.p(1)),correctedHsl(et,tt.o,tt.p(0))]}function iconGenerator(et,tt,ot){const dt=getConfiguration(ot,.08);dt.G&&et.m(dt.G);let ft=et.k;const pt=.5+ft*dt.X|0;ft-=pt*2;const mt=new Graphics(et),ht=0|ft/4,bt=0|pt+ft/2-ht*2,yt=0|pt+ft/2-ht*2;function xt(Lt,It,kt,Nt,Ut){const Ft=parseHex(tt,kt,1);let jt=Nt?parseHex(tt,Nt,1):0;et.L(wt[Pt[Lt]]);for(let Xt=0;Xt<Ut.length;Xt++)mt.u=new Transform(bt+Ut[Xt][0]*ht,yt+Ut[Xt][1]*ht,ht,jt++%4),It(Ft,mt,ht,Xt);et.M()}const gt=parseHex(tt,-7)/268435455,wt=colorTheme(gt,dt),Pt=[];let St;function Et(Lt){if(Lt.indexOf(St)>=0){for(let It=0;It<Lt.length;It++)if(Pt.indexOf(Lt[It])>=0)return!0}}for(let Lt=0;Lt<3;Lt++)St=parseHex(tt,8+Lt,1)%wt.length,(Et([0,4])||Et([2,3]))&&(St=1),Pt.push(St);xt(0,outerShape,2,3,[[1,0],[2,0],[2,3],[1,3],[0,1],[3,1],[3,2],[0,2]]),xt(1,outerShape,4,5,[[0,0],[3,0],[3,3],[0,3]]),xt(2,centerShape,1,null,[[1,1],[2,1],[2,2],[1,2]]),et.finish()}function sha1(et){var dt=0,ft=0,pt=encodeURI(et)+"%80",mt=[],ht,bt=[],yt=1732584193,xt=4023233417,gt=~yt,wt=~xt,Pt=3285377520,St=[yt,xt,gt,wt,Pt],Et=0,Lt="";function It(kt,Nt){return kt<<Nt|kt>>>32-Nt}for(;dt<pt.length;ft++)mt[ft>>2]=mt[ft>>2]|(pt[dt]=="%"?parseInt(pt.substring(dt+1,dt+=3),16):pt.charCodeAt(dt++))<<(3-(ft&3))*8;for(ht=((ft+7>>6)+1)*16,mt[ht-1]=ft*8-8;Et<ht;Et+=16){for(dt=0;dt<80;dt++)ft=It(yt,5)+Pt+(dt<20?(xt&gt^~xt&wt)+1518500249:dt<40?(xt^gt^wt)+1859775393:dt<60?(xt&gt^xt&wt^gt&wt)+2400959708:(xt^gt^wt)+3395469782)+(bt[dt]=dt<16?mt[Et+dt]|0:It(bt[dt-3]^bt[dt-8]^bt[dt-14]^bt[dt-16],1)),Pt=wt,wt=gt,gt=It(xt,30),xt=yt,yt=ft;St[0]=yt=St[0]+yt|0,St[1]=xt=St[1]+xt|0,St[2]=gt=St[2]+gt|0,St[3]=wt=St[3]+wt|0,St[4]=Pt=St[4]+Pt|0}for(dt=0;dt<40;dt++)Lt+=(St[dt>>3]>>>(7-(dt&7))*4&15).toString(16);return Lt}function isValidHash(et){return/^[0-9a-f]{11,}$/i.test(et)&&et}function computeHash(et){return sha1(et==null?"":""+et)}function svgValue(et){return(et*10+.5|0)/10}class SvgPath{constructor(){this.v=""}g(tt){let ot="";for(let dt=0;dt<tt.length;dt++)ot+=(dt?"L":"M")+svgValue(tt[dt].x)+" "+svgValue(tt[dt].y);this.v+=ot+"Z"}h(tt,ot,dt){const ft=dt?0:1,pt=svgValue(ot/2),mt=svgValue(ot),ht="a"+pt+","+pt+" 0 1,"+ft+" ";this.v+="M"+svgValue(tt.x)+" "+svgValue(tt.y+ot/2)+ht+mt+",0"+ht+-mt+",0"}}class SvgRenderer{constructor(tt){this.A,this.B={},this.N=tt,this.k=tt.k}m(tt){const ot=/^(#......)(..)?/.exec(tt),dt=ot[2]?parseHex(ot[2],0)/255:1;this.N.m(ot[1],dt)}L(tt){this.A=this.B[tt]||(this.B[tt]=new SvgPath)}M(){}g(tt){this.A.g(tt)}h(tt,ot,dt){this.A.h(tt,ot,dt)}finish(){const tt=this.B;for(let ot in tt)tt.hasOwnProperty(ot)&&this.N.O(ot,tt[ot].v)}}const SVG_CONSTANTS={P:"http://www.w3.org/2000/svg",R:"width",S:"height"};class SvgWriter{constructor(tt){this.k=tt,this.C='<svg xmlns="'+SVG_CONSTANTS.P+'" width="'+tt+'" height="'+tt+'" viewBox="0 0 '+tt+" "+tt+'">'}m(tt,ot){ot&&(this.C+='<rect width="100%" height="100%" fill="'+tt+'" opacity="'+ot.toFixed(2)+'"/>')}O(tt,ot){this.C+='<path fill="'+tt+'" d="'+ot+'"/>'}toString(){return this.C+"</svg>"}}function toSvg(et,tt,ot){const dt=new SvgWriter(tt);return iconGenerator(new SvgRenderer(dt),isValidHash(et)||computeHash(et),ot),dt.toString()}typeof document<"u"&&document.querySelectorAll.bind(document);function Identicon$2({className:et="",publicKey:tt,size:ot,style:dt={}}){const ft=reactExports.useMemo(()=>({__html:toSvg(tt.substring(2),ot)}),[tt,ot]);return jsxRuntimeExports.jsx("div",{className:et,dangerouslySetInnerHTML:ft,style:dt})}const Jdenticon=React.memo(Identicon$2);function renderCircle({cx:et,cy:tt,fill:ot,r:dt},ft){return jsxRuntimeExports.jsx("circle",{cx:et,cy:tt,fill:ot,r:dt},ft)}function Identicon$1({address:et,className:tt="",isAlternative:ot=!1,size:dt,style:ft={}}){const pt=reactExports.useMemo(()=>polkadotIcon(et,{isAlternative:ot}),[et,ot]);return jsxRuntimeExports.jsx("svg",{className:tt,height:dt,id:et,name:et,style:ft,viewBox:"0 0 64 64",width:dt,children:pt.map(renderCircle)})}const Polkadot=React.memo(Identicon$1);var Component={},toggleSelection=function(){var et=document.getSelection();if(!et.rangeCount)return function(){};for(var tt=document.activeElement,ot=[],dt=0;dt<et.rangeCount;dt++)ot.push(et.getRangeAt(dt));switch(tt.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":tt.blur();break;default:tt=null;break}return et.removeAllRanges(),function(){et.type==="Caret"&&et.removeAllRanges(),et.rangeCount||ot.forEach(function(ft){et.addRange(ft)}),tt&&tt.focus()}},deselectCurrent=toggleSelection,clipboardToIE11Formatting={"text/plain":"Text","text/html":"Url",default:"Text"},defaultMessage="Copy to clipboard: #{key}, Enter";function format(et){var tt=(/mac os x/i.test(navigator.userAgent)?"⌘":"Ctrl")+"+C";return et.replace(/#{\s*key\s*}/g,tt)}function copy(et,tt){var ot,dt,ft,pt,mt,ht,bt=!1;tt||(tt={}),ot=tt.debug||!1;try{ft=deselectCurrent(),pt=document.createRange(),mt=document.getSelection(),ht=document.createElement("span"),ht.textContent=et,ht.ariaHidden="true",ht.style.all="unset",ht.style.position="fixed",ht.style.top=0,ht.style.clip="rect(0, 0, 0, 0)",ht.style.whiteSpace="pre",ht.style.webkitUserSelect="text",ht.style.MozUserSelect="text",ht.style.msUserSelect="text",ht.style.userSelect="text",ht.addEventListener("copy",function(xt){if(xt.stopPropagation(),tt.format)if(xt.preventDefault(),typeof xt.clipboardData>"u"){ot&&console.warn("unable to use e.clipboardData"),ot&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var gt=clipboardToIE11Formatting[tt.format]||clipboardToIE11Formatting.default;window.clipboardData.setData(gt,et)}else xt.clipboardData.clearData(),xt.clipboardData.setData(tt.format,et);tt.onCopy&&(xt.preventDefault(),tt.onCopy(xt.clipboardData))}),document.body.appendChild(ht),pt.selectNodeContents(ht),mt.addRange(pt);var yt=document.execCommand("copy");if(!yt)throw new Error("copy command was unsuccessful");bt=!0}catch(xt){ot&&console.error("unable to copy using execCommand: ",xt),ot&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(tt.format||"text",et),tt.onCopy&&tt.onCopy(window.clipboardData),bt=!0}catch(gt){ot&&console.error("unable to copy using clipboardData: ",gt),ot&&console.error("falling back to prompt"),dt=format("message"in tt?tt.message:defaultMessage),window.prompt(dt,et)}}finally{mt&&(typeof mt.removeRange=="function"?mt.removeRange(pt):mt.removeAllRanges()),ht&&document.body.removeChild(ht),ft()}return bt}var copyToClipboard=copy;function _typeof(et){"@babel/helpers - typeof";return _typeof=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(tt){return typeof tt}:function(tt){return tt&&typeof Symbol=="function"&&tt.constructor===Symbol&&tt!==Symbol.prototype?"symbol":typeof tt},_typeof(et)}Object.defineProperty(Component,"__esModule",{value:!0});Component.CopyToClipboard=void 0;var _react=_interopRequireDefault(reactExports),_copyToClipboard=_interopRequireDefault(copyToClipboard),_excluded=["text","onCopy","options","children"];function _interopRequireDefault(et){return et&&et.__esModule?et:{default:et}}function ownKeys(et,tt){var ot=Object.keys(et);if(Object.getOwnPropertySymbols){var dt=Object.getOwnPropertySymbols(et);tt&&(dt=dt.filter(function(ft){return Object.getOwnPropertyDescriptor(et,ft).enumerable})),ot.push.apply(ot,dt)}return ot}function _objectSpread(et){for(var tt=1;tt<arguments.length;tt++){var ot=arguments[tt]!=null?arguments[tt]:{};tt%2?ownKeys(Object(ot),!0).forEach(function(dt){_defineProperty(et,dt,ot[dt])}):Object.getOwnPropertyDescriptors?Object.defineProperties(et,Object.getOwnPropertyDescriptors(ot)):ownKeys(Object(ot)).forEach(function(dt){Object.defineProperty(et,dt,Object.getOwnPropertyDescriptor(ot,dt))})}return et}function _objectWithoutProperties(et,tt){if(et==null)return{};var ot=_objectWithoutPropertiesLoose(et,tt),dt,ft;if(Object.getOwnPropertySymbols){var pt=Object.getOwnPropertySymbols(et);for(ft=0;ft<pt.length;ft++)dt=pt[ft],!(tt.indexOf(dt)>=0)&&Object.prototype.propertyIsEnumerable.call(et,dt)&&(ot[dt]=et[dt])}return ot}function _objectWithoutPropertiesLoose(et,tt){if(et==null)return{};var ot={},dt=Object.keys(et),ft,pt;for(pt=0;pt<dt.length;pt++)ft=dt[pt],!(tt.indexOf(ft)>=0)&&(ot[ft]=et[ft]);return ot}function _classCallCheck(et,tt){if(!(et instanceof tt))throw new TypeError("Cannot call a class as a function")}function _defineProperties(et,tt){for(var ot=0;ot<tt.length;ot++){var dt=tt[ot];dt.enumerable=dt.enumerable||!1,dt.configurable=!0,"value"in dt&&(dt.writable=!0),Object.defineProperty(et,dt.key,dt)}}function _createClass(et,tt,ot){return tt&&_defineProperties(et.prototype,tt),Object.defineProperty(et,"prototype",{writable:!1}),et}function _inherits(et,tt){if(typeof tt!="function"&&tt!==null)throw new TypeError("Super expression must either be null or a function");et.prototype=Object.create(tt&&tt.prototype,{constructor:{value:et,writable:!0,configurable:!0}}),Object.defineProperty(et,"prototype",{writable:!1}),tt&&_setPrototypeOf(et,tt)}function _setPrototypeOf(et,tt){return _setPrototypeOf=Object.setPrototypeOf||function(dt,ft){return dt.__proto__=ft,dt},_setPrototypeOf(et,tt)}function _createSuper(et){var tt=_isNativeReflectConstruct();return function(){var dt=_getPrototypeOf(et),ft;if(tt){var pt=_getPrototypeOf(this).constructor;ft=Reflect.construct(dt,arguments,pt)}else ft=dt.apply(this,arguments);return _possibleConstructorReturn(this,ft)}}function _possibleConstructorReturn(et,tt){if(tt&&(_typeof(tt)==="object"||typeof tt=="function"))return tt;if(tt!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(et)}function _assertThisInitialized(et){if(et===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return et}function _isNativeReflectConstruct(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function _getPrototypeOf(et){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(ot){return ot.__proto__||Object.getPrototypeOf(ot)},_getPrototypeOf(et)}function _defineProperty(et,tt,ot){return tt in et?Object.defineProperty(et,tt,{value:ot,enumerable:!0,configurable:!0,writable:!0}):et[tt]=ot,et}var CopyToClipboard$2=function(et){_inherits(ot,et);var tt=_createSuper(ot);function ot(){var dt;_classCallCheck(this,ot);for(var ft=arguments.length,pt=new Array(ft),mt=0;mt<ft;mt++)pt[mt]=arguments[mt];return dt=tt.call.apply(tt,[this].concat(pt)),_defineProperty(_assertThisInitialized(dt),"onClick",function(ht){var bt=dt.props,yt=bt.text,xt=bt.onCopy,gt=bt.children,wt=bt.options,Pt=_react.default.Children.only(gt),St=(0,_copyToClipboard.default)(yt,wt);xt&&xt(yt,St),Pt&&Pt.props&&typeof Pt.props.onClick=="function"&&Pt.props.onClick(ht)}),dt}return _createClass(ot,[{key:"render",value:function(){var ft=this.props;ft.text,ft.onCopy,ft.options;var pt=ft.children,mt=_objectWithoutProperties(ft,_excluded),ht=_react.default.Children.only(pt);return _react.default.cloneElement(ht,_objectSpread(_objectSpread({},mt),{},{onClick:this.onClick}))}}]),ot}(_react.default.PureComponent);Component.CopyToClipboard=CopyToClipboard$2;_defineProperty(CopyToClipboard$2,"defaultProps",{onCopy:void 0,options:void 0});var _require=Component,CopyToClipboard=_require.CopyToClipboard;CopyToClipboard.CopyToClipboard=CopyToClipboard;var lib=CopyToClipboard;const CopyToClipboard$1=getDefaultExportFromCjs(lib);var assign=make_assign(),create$1=make_create(),trim$1=make_trim(),Global$5=typeof window<"u"?window:commonjsGlobal,util$6={assign,create:create$1,trim:trim$1,bind:bind$1,slice:slice$1,each:each$7,map,pluck:pluck$1,isList:isList$1,isFunction:isFunction$1,isObject:isObject$1,Global:Global$5};function make_assign(){return Object.assign?Object.assign:function(tt,ot,dt,ft){for(var pt=1;pt<arguments.length;pt++)each$7(Object(arguments[pt]),function(mt,ht){tt[ht]=mt});return tt}}function make_create(){if(Object.create)return function(tt,ot,dt,ft){var pt=slice$1(arguments,1);return assign.apply(this,[Object.create(tt)].concat(pt))};{let et=function(){};return function(ot,dt,ft,pt){var mt=slice$1(arguments,1);return et.prototype=ot,assign.apply(this,[new et].concat(mt))}}}function make_trim(){return String.prototype.trim?function(tt){return String.prototype.trim.call(tt)}:function(tt){return tt.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}}function bind$1(et,tt){return function(){return tt.apply(et,Array.prototype.slice.call(arguments,0))}}function slice$1(et,tt){return Array.prototype.slice.call(et,tt||0)}function each$7(et,tt){pluck$1(et,function(ot,dt){return tt(ot,dt),!1})}function map(et,tt){var ot=isList$1(et)?[]:{};return pluck$1(et,function(dt,ft){return ot[ft]=tt(dt,ft),!1}),ot}function pluck$1(et,tt){if(isList$1(et)){for(var ot=0;ot<et.length;ot++)if(tt(et[ot],ot))return et[ot]}else for(var dt in et)if(et.hasOwnProperty(dt)&&tt(et[dt],dt))return et[dt]}function isList$1(et){return et!=null&&typeof et!="function"&&typeof et.length=="number"}function isFunction$1(et){return et&&{}.toString.call(et)==="[object Function]"}function isObject$1(et){return et&&{}.toString.call(et)==="[object Object]"}var util$5=util$6,slice=util$5.slice,pluck=util$5.pluck,each$6=util$5.each,bind=util$5.bind,create=util$5.create,isList=util$5.isList,isFunction=util$5.isFunction,isObject=util$5.isObject,storeEngine={createStore},storeAPI={version:"2.0.12",enabled:!1,get:function(et,tt){var ot=this.storage.read(this._namespacePrefix+et);return this._deserialize(ot,tt)},set:function(et,tt){return tt===void 0?this.remove(et):(this.storage.write(this._namespacePrefix+et,this._serialize(tt)),tt)},remove:function(et){this.storage.remove(this._namespacePrefix+et)},each:function(et){var tt=this;this.storage.each(function(ot,dt){et.call(tt,tt._deserialize(ot),(dt||"").replace(tt._namespaceRegexp,""))})},clearAll:function(){this.storage.clearAll()},hasNamespace:function(et){return this._namespacePrefix=="__storejs_"+et+"_"},createStore:function(){return createStore.apply(this,arguments)},addPlugin:function(et){this._addPlugin(et)},namespace:function(et){return createStore(this.storage,this.plugins,et)}};function _warn(){var et=typeof console>"u"?null:console;if(et){var tt=et.warn?et.warn:et.log;tt.apply(et,arguments)}}function createStore(et,tt,ot){ot||(ot=""),et&&!isList(et)&&(et=[et]),tt&&!isList(tt)&&(tt=[tt]);var dt=ot?"__storejs_"+ot+"_":"",ft=ot?new RegExp("^"+dt):null,pt=/^[a-zA-Z0-9_\-]*$/;if(!pt.test(ot))throw new Error("store.js namespaces can only have alphanumerics + underscores and dashes");var mt={_namespacePrefix:dt,_namespaceRegexp:ft,_testStorage:function(bt){try{var yt="__storejs__test__";bt.write(yt,yt);var xt=bt.read(yt)===yt;return bt.remove(yt),xt}catch{return!1}},_assignPluginFnProp:function(bt,yt){var xt=this[yt];this[yt]=function(){var wt=slice(arguments,0),Pt=this;function St(){if(xt)return each$6(arguments,function(Lt,It){wt[It]=Lt}),xt.apply(Pt,wt)}var Et=[St].concat(wt);return bt.apply(Pt,Et)}},_serialize:function(bt){return JSON.stringify(bt)},_deserialize:function(bt,yt){if(!bt)return yt;var xt="";try{xt=JSON.parse(bt)}catch{xt=bt}return xt!==void 0?xt:yt},_addStorage:function(bt){this.enabled||this._testStorage(bt)&&(this.storage=bt,this.enabled=!0)},_addPlugin:function(bt){var yt=this;if(isList(bt)){each$6(bt,function(wt){yt._addPlugin(wt)});return}var xt=pluck(this.plugins,function(wt){return bt===wt});if(!xt){if(this.plugins.push(bt),!isFunction(bt))throw new Error("Plugins must be function values that return objects");var gt=bt.call(this);if(!isObject(gt))throw new Error("Plugins must return an object of function properties");each$6(gt,function(wt,Pt){if(!isFunction(wt))throw new Error("Bad plugin property: "+Pt+" from plugin "+bt.name+". Plugins should only return functions.");yt._assignPluginFnProp(wt,Pt)})}},addStorage:function(bt){_warn("store.addStorage(storage) is deprecated. Use createStore([storages])"),this._addStorage(bt)}},ht=create(mt,storeAPI,{plugins:[]});return ht.raw={},each$6(ht,function(bt,yt){isFunction(bt)&&(ht.raw[yt]=bind(ht,bt))}),each$6(et,function(bt){ht._addStorage(bt)}),each$6(tt,function(bt){ht._addPlugin(bt)}),ht}var util$4=util$6,Global$4=util$4.Global,localStorage_1={name:"localStorage",read:read$5,write:write$5,each:each$5,remove:remove$5,clearAll:clearAll$5};function localStorage(){return Global$4.localStorage}function read$5(et){return localStorage().getItem(et)}function write$5(et,tt){return localStorage().setItem(et,tt)}function each$5(et){for(var tt=localStorage().length-1;tt>=0;tt--){var ot=localStorage().key(tt);et(read$5(ot),ot)}}function remove$5(et){return localStorage().removeItem(et)}function clearAll$5(){return localStorage().clear()}var util$3=util$6,Global$3=util$3.Global,oldFFGlobalStorage={name:"oldFF-globalStorage",read:read$4,write:write$4,each:each$4,remove:remove$4,clearAll:clearAll$4},globalStorage=Global$3.globalStorage;function read$4(et){return globalStorage[et]}function write$4(et,tt){globalStorage[et]=tt}function each$4(et){for(var tt=globalStorage.length-1;tt>=0;tt--){var ot=globalStorage.key(tt);et(globalStorage[ot],ot)}}function remove$4(et){return globalStorage.removeItem(et)}function clearAll$4(){each$4(function(et,tt){delete globalStorage[et]})}var util$2=util$6,Global$2=util$2.Global,oldIEUserDataStorage={name:"oldIE-userDataStorage",write:write$3,read:read$3,each:each$3,remove:remove$3,clearAll:clearAll$3},storageName="storejs",doc$1=Global$2.document,_withStorageEl=_makeIEStorageElFunction(),disable=(Global$2.navigator?Global$2.navigator.userAgent:"").match(/ (MSIE 8|MSIE 9|MSIE 10)\./);function write$3(et,tt){if(!disable){var ot=fixKey(et);_withStorageEl(function(dt){dt.setAttribute(ot,tt),dt.save(storageName)})}}function read$3(et){if(!disable){var tt=fixKey(et),ot=null;return _withStorageEl(function(dt){ot=dt.getAttribute(tt)}),ot}}function each$3(et){_withStorageEl(function(tt){for(var ot=tt.XMLDocument.documentElement.attributes,dt=ot.length-1;dt>=0;dt--){var ft=ot[dt];et(tt.getAttribute(ft.name),ft.name)}})}function remove$3(et){var tt=fixKey(et);_withStorageEl(function(ot){ot.removeAttribute(tt),ot.save(storageName)})}function clearAll$3(){_withStorageEl(function(et){var tt=et.XMLDocument.documentElement.attributes;et.load(storageName);for(var ot=tt.length-1;ot>=0;ot--)et.removeAttribute(tt[ot].name);et.save(storageName)})}var forbiddenCharsRegex=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g");function fixKey(et){return et.replace(/^\d/,"___$&").replace(forbiddenCharsRegex,"___")}function _makeIEStorageElFunction(){if(!doc$1||!doc$1.documentElement||!doc$1.documentElement.addBehavior)return null;var et="script",tt,ot,dt;try{ot=new ActiveXObject("htmlfile"),ot.open(),ot.write("<"+et+">document.w=window</"+et+'><iframe src="/favicon.ico"></iframe>'),ot.close(),tt=ot.w.frames[0].document,dt=tt.createElement("div")}catch{dt=doc$1.createElement("div"),tt=doc$1.body}return function(ft){var pt=[].slice.call(arguments,0);pt.unshift(dt),tt.appendChild(dt),dt.addBehavior("#default#userData"),dt.load(storageName),ft.apply(this,pt),tt.removeChild(dt)}}var util$1=util$6,Global$1=util$1.Global,trim=util$1.trim,cookieStorage={name:"cookieStorage",read:read$2,write:write$2,each:each$2,remove:remove$2,clearAll:clearAll$2},doc=Global$1.document;function read$2(et){if(!et||!_has(et))return null;var tt="(?:^|.*;\\s*)"+escape(et).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*";return unescape(doc.cookie.replace(new RegExp(tt),"$1"))}function each$2(et){for(var tt=doc.cookie.split(/; ?/g),ot=tt.length-1;ot>=0;ot--)if(trim(tt[ot])){var dt=tt[ot].split("="),ft=unescape(dt[0]),pt=unescape(dt[1]);et(pt,ft)}}function write$2(et,tt){et&&(doc.cookie=escape(et)+"="+escape(tt)+"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/")}function remove$2(et){!et||!_has(et)||(doc.cookie=escape(et)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/")}function clearAll$2(){each$2(function(et,tt){remove$2(tt)})}function _has(et){return new RegExp("(?:^|;\\s*)"+escape(et).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(doc.cookie)}var util=util$6,Global=util.Global,sessionStorage_1={name:"sessionStorage",read:read$1,write:write$1,each:each$1,remove:remove$1,clearAll:clearAll$1};function sessionStorage(){return Global.sessionStorage}function read$1(et){return sessionStorage().getItem(et)}function write$1(et,tt){return sessionStorage().setItem(et,tt)}function each$1(et){for(var tt=sessionStorage().length-1;tt>=0;tt--){var ot=sessionStorage().key(tt);et(read$1(ot),ot)}}function remove$1(et){return sessionStorage().removeItem(et)}function clearAll$1(){return sessionStorage().clear()}var memoryStorage_1={name:"memoryStorage",read,write,each,remove,clearAll},memoryStorage={};function read(et){return memoryStorage[et]}function write(et,tt){memoryStorage[et]=tt}function each(et){for(var tt in memoryStorage)memoryStorage.hasOwnProperty(tt)&&et(memoryStorage[tt],tt)}function remove(et){delete memoryStorage[et]}function clearAll(et){memoryStorage={}}var all=[localStorage_1,oldFFGlobalStorage,oldIEUserDataStorage,cookieStorage,sessionStorage_1,memoryStorage_1],json2$1={},hasRequiredJson2;function requireJson2(){return hasRequiredJson2||(hasRequiredJson2=1,typeof JSON!="object"&&(JSON={}),function(){var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;function f(et){return et<10?"0"+et:et}function this_value(){return this.valueOf()}typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value);var gap,indent,meta,rep;function quote(et){return rx_escapable.lastIndex=0,rx_escapable.test(et)?'"'+et.replace(rx_escapable,function(tt){var ot=meta[tt];return typeof ot=="string"?ot:"\\u"+("0000"+tt.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+et+'"'}function str(et,tt){var ot,dt,ft,pt,mt=gap,ht,bt=tt[et];switch(bt&&typeof bt=="object"&&typeof bt.toJSON=="function"&&(bt=bt.toJSON(et)),typeof rep=="function"&&(bt=rep.call(tt,et,bt)),typeof bt){case"string":return quote(bt);case"number":return isFinite(bt)?String(bt):"null";case"boolean":case"null":return String(bt);case"object":if(!bt)return"null";if(gap+=indent,ht=[],Object.prototype.toString.apply(bt)==="[object Array]"){for(pt=bt.length,ot=0;ot<pt;ot+=1)ht[ot]=str(ot,bt)||"null";return ft=ht.length===0?"[]":gap?`[
`+gap+ht.join(`,
`+gap)+`
`+mt+"]":"["+ht.join(",")+"]",gap=mt,ft}if(rep&&typeof rep=="object")for(pt=rep.length,ot=0;ot<pt;ot+=1)typeof rep[ot]=="string"&&(dt=rep[ot],ft=str(dt,bt),ft&&ht.push(quote(dt)+(gap?": ":":")+ft));else for(dt in bt)Object.prototype.hasOwnProperty.call(bt,dt)&&(ft=str(dt,bt),ft&&ht.push(quote(dt)+(gap?": ":":")+ft));return ft=ht.length===0?"{}":gap?`{
`+gap+ht.join(`,
`+gap)+`
`+mt+"}":"{"+ht.join(",")+"}",gap=mt,ft}}typeof JSON.stringify!="function"&&(meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(et,tt,ot){var dt;if(gap="",indent="",typeof ot=="number")for(dt=0;dt<ot;dt+=1)indent+=" ";else typeof ot=="string"&&(indent=ot);if(rep=tt,tt&&typeof tt!="function"&&(typeof tt!="object"||typeof tt.length!="number"))throw new Error("JSON.stringify");return str("",{"":et})}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){var j;function walk(et,tt){var ot,dt,ft=et[tt];if(ft&&typeof ft=="object")for(ot in ft)Object.prototype.hasOwnProperty.call(ft,ot)&&(dt=walk(ft,ot),dt!==void 0?ft[ot]=dt:delete ft[ot]);return reviver.call(et,tt,ft)}if(text=String(text),rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,function(et){return"\\u"+("0000"+et.charCodeAt(0).toString(16)).slice(-4)})),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),typeof reviver=="function"?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}()),json2$1}var json2=json2Plugin;function json2Plugin(){return requireJson2(),{}}var engine=storeEngine,storages=all,plugins=[json2],store_legacy=engine.createStore(storages,plugins);const store=getDefaultExportFromCjs(store_legacy),CRYPTOS=[{info:"sr25519",text:"Schnorrkel (sr25519, recommended)",value:"sr25519"},{info:"ed25519",text:"Edwards (ed25519, alternative)",value:"ed25519"},{info:"ecdsa",text:"ECDSA (Non BTC/ETH compatible)",value:"ecdsa"}],CRYPTOS_ETH=[{info:"ethereum",text:"ECDSA (ETH compatible)",value:"ethereum"}],CRYPTOS_LEDGER=[...CRYPTOS,{info:"ed25519-ledger",text:"Ledger (ed25519, BIP32 derivation)",value:"ed25519-ledger"}],ENDPOINTS=[{info:"local",text:"Local Node (Own, 127.0.0.1:9944)",value:"ws://127.0.0.1:9944/"}],ENDPOINT_DEFAULT=ENDPOINTS[0],LEDGER_CONN_DEFAULT="none",LEDGER_CONN=[{info:"none",text:"Do not attach Ledger devices",value:"none"},{info:"webusb",text:"Attach Ledger via WebUSB (Chrome, recommended)",value:"webusb"},{info:"hid",text:"Attach Ledger via WebHID (Chrome, experimental)",value:"hid"}],PREFIX_DEFAULT=-1,defaultNetwork={info:"default",text:"Default for the connected node",value:-1},networks=availableNetworks.map(({displayName:et,network:tt,prefix:ot})=>({info:tt,text:et,value:ot})),PREFIXES=[defaultNetwork,...networks],isPolkadot=typeof window<"u"&&window.location.host.includes("polkadot"),UIMODE_DEFAULT=!isPolkadot&&typeof window<"u"&&window.location.host.includes("ui-light")?"light":"full",UIMODES=[{info:"full",text:"Fully featured",value:"full"},{info:"light",text:"Basic features only",value:"light"}],UITHEME_DEFAULT=isPolkadot?"polkadot":"substrate",UITHEMES=[{info:"polkadot",text:"Polkadot",value:"polkadot"},{info:"substrate",text:"Substrate",value:"substrate"}],ICON_DEFAULT="default",ICON_DEFAULT_HOST=isPolkadot?"polkadot":"substrate",ICONS=[{info:"default",text:"Default for the connected node",value:"default"},{info:"polkadot",text:"Polkadot",value:"polkadot"},{info:"substrate",text:"Substrate",value:"substrate"},{info:"beachball",text:"Beachball",value:"beachball"}],NOTIFICATION_DEFAULT="popup",CAMERA_DEFAULT="off",CAMERA=[{info:"on",text:"Allow camera access",value:"on"},{info:"off",text:"Do not allow camera access",value:"off"}],LANGUAGE_DEFAULT="default",LOCKING_DEFAULT="session",LOCKING=[{info:"session",text:"Once per session",value:"session"},{info:"tx",text:"On each transaction",value:"tx"}],METADATA_UP_DEFAULT="off",METADATA_UP=[{info:"off",text:"Do not auto-update extension metadata",value:"off"},{info:"on",text:"Auto-update extension metadata",value:"on"}],STORAGE_DEFAULT="off",STORAGE=[{info:"on",text:"Allow local in-browser account storage",value:"on"},{info:"off",text:"Do not allow local in-browser account storage",value:"off"}];var define_process_env_default={};function withDefault(et,tt,ot){const dt=tt||ot;return et.some(({value:ft})=>ft===dt)?dt:ot}class Settings{constructor(){Ot(this,"__internal__emitter");Ot(this,"__internal__apiType");Ot(this,"__internal__apiUrl");Ot(this,"__internal__camera");Ot(this,"__internal__i18nLang");Ot(this,"__internal__icon");Ot(this,"__internal__ledgerConn");Ot(this,"__internal__locking");Ot(this,"__internal__metadataUp");Ot(this,"__internal__prefix");Ot(this,"__internal__storage");Ot(this,"__internal__uiMode");Ot(this,"__internal__uiTheme");Ot(this,"__internal__notification");const tt=store.get("settings")||{};this.__internal__emitter=new EventEmitter,this.__internal__apiUrl=typeof tt.apiUrl=="string"&&tt.apiUrl||hasProcess&&(define_process_env_default==null?void 0:define_process_env_default.WS_URL)||ENDPOINT_DEFAULT.value,this.__internal__apiType={param:this.__internal__apiUrl,type:"json-rpc"},this.__internal__camera=withDefault(CAMERA,tt.camera,CAMERA_DEFAULT),this.__internal__ledgerConn=withDefault(LEDGER_CONN,tt.ledgerConn,LEDGER_CONN_DEFAULT),this.__internal__i18nLang=tt.i18nLang||LANGUAGE_DEFAULT,this.__internal__icon=tt.icon||ICON_DEFAULT,this.__internal__locking=tt.locking||LOCKING_DEFAULT,this.__internal__metadataUp=withDefault(METADATA_UP,tt.storage,METADATA_UP_DEFAULT),this.__internal__notification=tt.notification||NOTIFICATION_DEFAULT,this.__internal__prefix=isUndefined(tt.prefix)?PREFIX_DEFAULT:tt.prefix,this.__internal__storage=withDefault(STORAGE,tt.storage,STORAGE_DEFAULT),this.__internal__uiMode=tt.uiMode||UIMODE_DEFAULT,this.__internal__uiTheme=tt.uiTheme||UITHEME_DEFAULT}get camera(){return this.__internal__camera}get apiType(){return this.__internal__apiType}get apiUrl(){return this.__internal__apiUrl}get i18nLang(){return this.__internal__i18nLang}get icon(){return this.__internal__icon}get notification(){return this.__internal__notification}get ledgerConn(){return this.__internal__ledgerConn}get locking(){return this.__internal__locking}get metadataUp(){return this.__internal__metadataUp}get prefix(){return this.__internal__prefix}get storage(){return this.__internal__storage}get uiMode(){return this.__internal__uiMode}get uiTheme(){return this.__internal__uiTheme}get availableCamera(){return CAMERA}get availableCryptos(){return CRYPTOS}get availableCryptosEth(){return CRYPTOS_ETH}get availableCryptosLedger(){return CRYPTOS_LEDGER}get availableIcons(){return ICONS}get availableLedgerConn(){return LEDGER_CONN}get availableLocking(){return LOCKING}get availableMetadataUp(){return METADATA_UP}get availableNodes(){return ENDPOINTS}get availablePrefixes(){return PREFIXES}get availableStorage(){return STORAGE}get availableUIModes(){return UIMODES}get availableUIThemes(){return UITHEMES}get(){return{apiType:this.__internal__apiType,apiUrl:this.__internal__apiUrl,camera:this.__internal__camera,i18nLang:this.__internal__i18nLang,icon:this.__internal__icon,ledgerConn:this.__internal__ledgerConn,locking:this.__internal__locking,metadataUp:this.__internal__metadataUp,notification:this.__internal__notification,prefix:this.__internal__prefix,storage:this.__internal__storage,uiMode:this.__internal__uiMode,uiTheme:this.__internal__uiTheme}}set(tt){this.__internal__apiType=tt.apiType||this.__internal__apiType,this.__internal__apiUrl=tt.apiUrl||this.__internal__apiUrl,this.__internal__camera=tt.camera||this.__internal__camera,this.__internal__ledgerConn=tt.ledgerConn||this.__internal__ledgerConn,this.__internal__i18nLang=tt.i18nLang||this.__internal__i18nLang,this.__internal__icon=tt.icon||this.__internal__icon,this.__internal__locking=tt.locking||this.__internal__locking,this.__internal__metadataUp=tt.metadataUp||this.__internal__metadataUp,this.__internal__notification=tt.notification||this.__internal__notification,this.__internal__prefix=isUndefined(tt.prefix)?this.__internal__prefix:tt.prefix,this.__internal__storage=tt.storage||this.__internal__storage,this.__internal__uiMode=tt.uiMode||this.__internal__uiMode,this.__internal__uiTheme=tt.uiTheme||this.__internal__uiTheme;const ot=this.get();store.set("settings",ot),this.__internal__emitter.emit("change",ot)}on(tt,ot){this.__internal__emitter.on(tt,ot)}}const settings=new Settings,Fallback=Beachball,DEFAULT_SIZE=64,Components={beachball:Beachball,empty:Empty,ethereum:Ethereum,jdenticon:Jdenticon,polkadot:Polkadot,substrate:Jdenticon},_n=class _n extends React.PureComponent{constructor(){super(...arguments);Ot(this,"state",{address:"",publicKey:"0x"});Ot(this,"onCopy",()=>{const{onCopy:ot}=this.props,{address:dt}=this.state;dt&&ot&&ot(dt)})}static setDefaultPrefix(ot){_n.prefix=ot}static getDerivedStateFromProps({prefix:ot=_n.prefix,theme:dt,value:ft},pt){if(dt==="ethereum")return{address:isU8a(ft)?ethereumEncode(ft):ft||"",publicKey:""};try{const mt=isU8a(ft)||isHex(ft)?encodeAddress(ft,ot):ft||"",ht=u8aToHex(decodeAddress(mt,!1,ot));return mt===pt.address?null:{address:mt,publicKey:ht}}catch{return{address:"",publicKey:"0x"}}}render(){const{address:ot}=this.state,dt=this.getWrapped(this.state,this.props);return ot?jsxRuntimeExports.jsx(CopyToClipboard$1,{onCopy:this.onCopy,text:ot,children:dt}):dt}getWrapped({address:ot,publicKey:dt},{Custom:ft}){const{className:pt="",isAlternative:mt,isHighlight:ht,size:bt=DEFAULT_SIZE,style:yt={},theme:xt=settings.icon}=this.props,gt=ot?ft||Components[xt==="default"?ICON_DEFAULT_HOST:xt]||Fallback:Empty;return jsxRuntimeExports.jsx(StyledDiv,{className:`ui--IdentityIcon  ${pt}`,style:yt,children:jsxRuntimeExports.jsx(gt,{address:ot,className:ht?"highlight":"",isAlternative:mt,publicKey:dt,size:bt})},ot)}};Ot(_n,"prefix");let BaseIcon=_n;function Icon(et){return jsxRuntimeExports.jsx(BaseIcon,{...et})}const StyledDiv=ut.div`
  cursor: copy;
  display: inline-block;
  line-height: 0;

  > .container {
    position: relative;

    > div,
    > svg {
      position: relative;
    }

    &.highlight:before {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: 50%;
      box-shadow: 0 0 5px 2px #aaa;
      content: '';
    }
  }
`,Identicon=React.memo(Icon),AccountContext=reactExports.createContext({accounts:[],selectedAccount:void 0,updateAccounts:()=>{},selectAccount:()=>{}}),useAccount=()=>{const et=reactExports.useContext(AccountContext);if(et===void 0)throw new Error("useAccount must be used within an AccountProvider");return et},WS_URL="wss://polkadot-asset-hub-rpc.polkadot.io",POLKADOT_ASSET_HUB=0,DECIMAL=1e6,USDC={ASSET_ID:1337,DECIMAL:1e6},USDT={ASSET_ID:1984,DECIMAL:1e6};function formatBalance(et,tt){return(parseFloat(et)/DECIMAL).toFixed(tt)}async function getTokenBalance(et,tt,ot){try{const dt=await(ot==null?void 0:ot.query.assets.account(tt,et));if(!dt)return"0";const{balance:ft}=(dt==null?void 0:dt.toJSON())||{balance:"0"};return ft}catch(dt){return console.error("Error fetching token balance:",dt),"0"}}async function estimateFee(et,tt,ot,dt,ft){if(!tt||!ot||!dt||!ft)return"";try{const pt=parseFloat(ot)*DECIMAL,mt=await ft.tx.assets.transferKeepAlive(`${et}`,tt,BigInt(pt)).paymentInfo(dt.address);console.log(mt);const ht=await ft.call.assetConversionApi.quotePriceExactTokensForTokens({parents:1,interior:{Here:""}},{parents:0,interior:{X2:[{PalletInstance:50},{GeneralIndex:et}]}},mt.partialFee,!0);return console.log("estimating fee"),ht.toString()}catch(pt){return console.log(pt),""}}function ListItem({account:et,selectAccount:tt,setOpen:ot,api:dt}){const[ft,pt]=reactExports.useState("0"),[mt,ht]=reactExports.useState("0");return reactExports.useEffect(()=>{const bt=async()=>{try{const xt=await getTokenBalance(et.address,`${USDC.ASSET_ID}`,dt);ht(xt??"0");const gt=await getTokenBalance(et.address,`${USDT.ASSET_ID}`,dt);pt(gt??"0")}catch(xt){console.error("Error fetching data:",xt)}};bt();const yt=setInterval(bt,3e4);return()=>clearInterval(yt)}),jsxRuntimeExports.jsxs("li",{className:"border-b border-black px-4 py-2 space-y-2 cursor-pointer hover:bg-gray-200",onClick:()=>{tt(et),ot(!1)},children:[jsxRuntimeExports.jsxs("div",{className:"flex items-center justify-center space-x-8",children:[jsxRuntimeExports.jsx(Identicon,{value:et.address,size:64,theme:"polkadot"}),jsxRuntimeExports.jsxs("div",{className:"text-left",children:[jsxRuntimeExports.jsx("h1",{className:"font-bold",children:"Balance"}),jsxRuntimeExports.jsxs("h2",{children:[formatBalance(mt,2)," USDC"]}),jsxRuntimeExports.jsxs("h2",{children:[formatBalance(ft,2)," USDT"]})]})]}),jsxRuntimeExports.jsx("p",{children:et.address})]})}const AccountSelector=({api:et})=>{const{accounts:tt,selectedAccount:ot,selectAccount:dt,updateAccounts:ft}=useAccount(),[pt,mt]=reactExports.useState(!1),[ht,bt]=reactExports.useState("0"),[yt,xt]=reactExports.useState("0"),gt=()=>{ft([]),dt(void 0)};return reactExports.useEffect(()=>{if(!ot)return;const wt=async()=>{try{const St=await getTokenBalance(ot.address,`${USDC.ASSET_ID}`,et);xt(St??"0");const Et=await getTokenBalance(ot.address,`${USDT.ASSET_ID}`,et);bt(Et??"0")}catch(St){console.error("Error fetching data:",St)}};wt();const Pt=setInterval(wt,3e4);return()=>clearInterval(Pt)}),jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment,{children:jsxRuntimeExports.jsx("div",{children:pt?jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsx("h1",{className:"pt-4 pb-2 pl-2",children:"Select an account"}),jsxRuntimeExports.jsxs("ul",{className:"border border-black rounded-lg text-center",children:[tt.map(wt=>jsxRuntimeExports.jsx(ListItem,{account:wt,selectAccount:dt,setOpen:mt,api:et},wt.address)),jsxRuntimeExports.jsx("li",{onClick:gt,className:"py-4 hover:bg-red-400 cursor-pointer font-bold",children:"Disconnect"})]})]}):jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsx("h1",{className:"pb-2 pl-2 font-bold",children:"My account"}),jsxRuntimeExports.jsxs("button",{className:"w-full border border-black rounded-lg px-4 py-2 space-y-2 cursor-pointer hover:bg-gray-200",onClick:()=>mt(!0),children:[jsxRuntimeExports.jsxs("div",{className:"flex items-center justify-center space-x-8",children:[jsxRuntimeExports.jsx(Identicon,{value:ot?ot.address:tt[0].address,size:64,theme:"polkadot"}),jsxRuntimeExports.jsxs("div",{className:"text-left",children:[jsxRuntimeExports.jsx("h1",{className:"font-bold",children:"Balance"}),jsxRuntimeExports.jsxs("h2",{children:[formatBalance(yt,2)," USDC"]}),jsxRuntimeExports.jsxs("h2",{children:[formatBalance(ht,2)," USDT"]})]})]}),jsxRuntimeExports.jsx("p",{children:ot==null?void 0:ot.address})]})]})})})},scriptRel="modulepreload",assetsURL=function(et){return"/mobypay-web/"+et},seen={},__vitePreload=function et(tt,ot,dt){let ft=Promise.resolve();if(ot&&ot.length>0){document.getElementsByTagName("link");const pt=document.querySelector("meta[property=csp-nonce]"),mt=(pt==null?void 0:pt.nonce)||(pt==null?void 0:pt.getAttribute("nonce"));ft=Promise.all(ot.map(ht=>{if(ht=assetsURL(ht),ht in seen)return;seen[ht]=!0;const bt=ht.endsWith(".css"),yt=bt?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${ht}"]${yt}`))return;const xt=document.createElement("link");if(xt.rel=bt?"stylesheet":scriptRel,bt||(xt.as="script",xt.crossOrigin=""),xt.href=ht,mt&&xt.setAttribute("nonce",mt),document.head.appendChild(xt),bt)return new Promise((gt,wt)=>{xt.addEventListener("load",gt),xt.addEventListener("error",()=>wt(new Error(`Unable to preload CSS for ${ht}`)))})}))}return ft.then(()=>tt()).catch(pt=>{const mt=new Event("vite:preloadError",{cancelable:!0});if(mt.payload=pt,window.dispatchEvent(mt),!mt.defaultPrevented)throw pt})};function formatAddress(et,tt){const ot=new Keyring;return et.map(dt=>({...dt,address:ot.encodeAddress(dt.address,tt)}))}const ConnectWallet=()=>{const{selectAccount:et,updateAccounts:tt}=useAccount(),[ot,dt]=reactExports.useState(!1),ft=async()=>{dt(!0);const{web3Enable:pt,web3Accounts:mt}=await __vitePreload(()=>import("./index-DmeR0_Fv.js"),[]);try{if((await pt("MobyPay")).length===0)tt([]);else{const bt=formatAddress(await mt({extensions:["talisman"]}),POLKADOT_ASSET_HUB);tt(bt),et(bt[0])}}catch(ht){console.log(ht)}finally{dt(!1)}};return jsxRuntimeExports.jsxs("div",{children:[jsxRuntimeExports.jsx("h1",{className:"text-gray-600 text-xs text-center",children:"Polkadot.js Extension doesn't work"}),jsxRuntimeExports.jsx("button",{className:"w-full border border-black px-4 py-2 rounded-xl hover:bg-gray-200",onClick:ft,disabled:ot,children:ot?"Connecting wallet...":"Connect Wallet"})]})};let e={data:""},t=et=>typeof window=="object"?((et?et.querySelector("#_goober"):window._goober)||Object.assign((et||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:et||e,l=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,a=/\/\*[^]*?\*\/|  +/g,n$1=/\n+/g,o=(et,tt)=>{let ot="",dt="",ft="";for(let pt in et){let mt=et[pt];pt[0]=="@"?pt[1]=="i"?ot=pt+" "+mt+";":dt+=pt[1]=="f"?o(mt,pt):pt+"{"+o(mt,pt[1]=="k"?"":tt)+"}":typeof mt=="object"?dt+=o(mt,tt?tt.replace(/([^,])+/g,ht=>pt.replace(/(^:.*)|([^,])+/g,bt=>/&/.test(bt)?bt.replace(/&/g,ht):ht?ht+" "+bt:bt)):pt):mt!=null&&(pt=/^--/.test(pt)?pt:pt.replace(/[A-Z]/g,"-$&").toLowerCase(),ft+=o.p?o.p(pt,mt):pt+":"+mt+";")}return ot+(tt&&ft?tt+"{"+ft+"}":ft)+dt},c={},s=et=>{if(typeof et=="object"){let tt="";for(let ot in et)tt+=ot+s(et[ot]);return tt}return et},i=(et,tt,ot,dt,ft)=>{let pt=s(et),mt=c[pt]||(c[pt]=(bt=>{let yt=0,xt=11;for(;yt<bt.length;)xt=101*xt+bt.charCodeAt(yt++)>>>0;return"go"+xt})(pt));if(!c[mt]){let bt=pt!==et?et:(yt=>{let xt,gt,wt=[{}];for(;xt=l.exec(yt.replace(a,""));)xt[4]?wt.shift():xt[3]?(gt=xt[3].replace(n$1," ").trim(),wt.unshift(wt[0][gt]=wt[0][gt]||{})):wt[0][xt[1]]=xt[2].replace(n$1," ").trim();return wt[0]})(et);c[mt]=o(ft?{["@keyframes "+mt]:bt}:bt,ot?"":"."+mt)}let ht=ot&&c.g?c.g:null;return ot&&(c.g=c[mt]),((bt,yt,xt,gt)=>{gt?yt.data=yt.data.replace(gt,bt):yt.data.indexOf(bt)===-1&&(yt.data=xt?bt+yt.data:yt.data+bt)})(c[mt],tt,dt,ht),mt},p=(et,tt,ot)=>et.reduce((dt,ft,pt)=>{let mt=tt[pt];if(mt&&mt.call){let ht=mt(ot),bt=ht&&ht.props&&ht.props.className||/^go/.test(ht)&&ht;mt=bt?"."+bt:ht&&typeof ht=="object"?ht.props?"":o(ht,""):ht===!1?"":ht}return dt+ft+(mt??"")},"");function u$1(et){let tt=this||{},ot=et.call?et(tt.p):et;return i(ot.unshift?ot.raw?p(ot,[].slice.call(arguments,1),tt.p):ot.reduce((dt,ft)=>Object.assign(dt,ft&&ft.call?ft(tt.p):ft),{}):ot,t(tt.target),tt.g,tt.o,tt.k)}let d,f,g;u$1.bind({g:1});let h$1=u$1.bind({k:1});function m(et,tt,ot,dt){o.p=tt,d=et,f=ot,g=dt}function j(et,tt){let ot=this||{};return function(){let dt=arguments;function ft(pt,mt){let ht=Object.assign({},pt),bt=ht.className||ft.className;ot.p=Object.assign({theme:f&&f()},ht),ot.o=/ *go\d+/.test(bt),ht.className=u$1.apply(ot,dt)+(bt?" "+bt:"");let yt=et;return et[0]&&(yt=ht.as||et,delete ht.as),g&&yt[0]&&g(ht),d(yt,ht)}return ft}}var W=et=>typeof et=="function",T=(et,tt)=>W(et)?et(tt):et,U=(()=>{let et=0;return()=>(++et).toString()})(),b=(()=>{let et;return()=>{if(et===void 0&&typeof window<"u"){let tt=matchMedia("(prefers-reduced-motion: reduce)");et=!tt||tt.matches}return et}})(),Q=20,S=new Map,X=1e3,$=et=>{if(S.has(et))return;let tt=setTimeout(()=>{S.delete(et),u({type:4,toastId:et})},X);S.set(et,tt)},J=et=>{let tt=S.get(et);tt&&clearTimeout(tt)},v=(et,tt)=>{switch(tt.type){case 0:return{...et,toasts:[tt.toast,...et.toasts].slice(0,Q)};case 1:return tt.toast.id&&J(tt.toast.id),{...et,toasts:et.toasts.map(pt=>pt.id===tt.toast.id?{...pt,...tt.toast}:pt)};case 2:let{toast:ot}=tt;return et.toasts.find(pt=>pt.id===ot.id)?v(et,{type:1,toast:ot}):v(et,{type:0,toast:ot});case 3:let{toastId:dt}=tt;return dt?$(dt):et.toasts.forEach(pt=>{$(pt.id)}),{...et,toasts:et.toasts.map(pt=>pt.id===dt||dt===void 0?{...pt,visible:!1}:pt)};case 4:return tt.toastId===void 0?{...et,toasts:[]}:{...et,toasts:et.toasts.filter(pt=>pt.id!==tt.toastId)};case 5:return{...et,pausedAt:tt.time};case 6:let ft=tt.time-(et.pausedAt||0);return{...et,pausedAt:void 0,toasts:et.toasts.map(pt=>({...pt,pauseDuration:pt.pauseDuration+ft}))}}},A=[],P={toasts:[],pausedAt:void 0},u=et=>{P=v(P,et),A.forEach(tt=>{tt(P)})},Y={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},I=(et={})=>{let[tt,ot]=reactExports.useState(P);reactExports.useEffect(()=>(A.push(ot),()=>{let ft=A.indexOf(ot);ft>-1&&A.splice(ft,1)}),[tt]);let dt=tt.toasts.map(ft=>{var pt,mt;return{...et,...et[ft.type],...ft,duration:ft.duration||((pt=et[ft.type])==null?void 0:pt.duration)||(et==null?void 0:et.duration)||Y[ft.type],style:{...et.style,...(mt=et[ft.type])==null?void 0:mt.style,...ft.style}}});return{...tt,toasts:dt}},G=(et,tt="blank",ot)=>({createdAt:Date.now(),visible:!0,type:tt,ariaProps:{role:"status","aria-live":"polite"},message:et,pauseDuration:0,...ot,id:(ot==null?void 0:ot.id)||U()}),h=et=>(tt,ot)=>{let dt=G(tt,et,ot);return u({type:2,toast:dt}),dt.id},n=(et,tt)=>h("blank")(et,tt);n.error=h("error");n.success=h("success");n.loading=h("loading");n.custom=h("custom");n.dismiss=et=>{u({type:3,toastId:et})};n.remove=et=>u({type:4,toastId:et});n.promise=(et,tt,ot)=>{let dt=n.loading(tt.loading,{...ot,...ot==null?void 0:ot.loading});return et.then(ft=>(n.success(T(tt.success,ft),{id:dt,...ot,...ot==null?void 0:ot.success}),ft)).catch(ft=>{n.error(T(tt.error,ft),{id:dt,...ot,...ot==null?void 0:ot.error})}),et};var Z=(et,tt)=>{u({type:1,toast:{id:et,height:tt}})},ee=()=>{u({type:5,time:Date.now()})},D=et=>{let{toasts:tt,pausedAt:ot}=I(et);reactExports.useEffect(()=>{if(ot)return;let pt=Date.now(),mt=tt.map(ht=>{if(ht.duration===1/0)return;let bt=(ht.duration||0)+ht.pauseDuration-(pt-ht.createdAt);if(bt<0){ht.visible&&n.dismiss(ht.id);return}return setTimeout(()=>n.dismiss(ht.id),bt)});return()=>{mt.forEach(ht=>ht&&clearTimeout(ht))}},[tt,ot]);let dt=reactExports.useCallback(()=>{ot&&u({type:6,time:Date.now()})},[ot]),ft=reactExports.useCallback((pt,mt)=>{let{reverseOrder:ht=!1,gutter:bt=8,defaultPosition:yt}=mt||{},xt=tt.filter(Pt=>(Pt.position||yt)===(pt.position||yt)&&Pt.height),gt=xt.findIndex(Pt=>Pt.id===pt.id),wt=xt.filter((Pt,St)=>St<gt&&Pt.visible).length;return xt.filter(Pt=>Pt.visible).slice(...ht?[wt+1]:[0,wt]).reduce((Pt,St)=>Pt+(St.height||0)+bt,0)},[tt]);return{toasts:tt,handlers:{updateHeight:Z,startPause:ee,endPause:dt,calculateOffset:ft}}},oe=h$1`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`,re=h$1`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`,se=h$1`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`,_=j("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${et=>et.primary||"#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${oe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${re} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${et=>et.secondary||"#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${se} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`,ne=h$1`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`,V=j("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${et=>et.secondary||"#e0e0e0"};
  border-right-color: ${et=>et.primary||"#616161"};
  animation: ${ne} 1s linear infinite;
`,pe=h$1`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`,de=h$1`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`,w=j("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${et=>et.primary||"#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${pe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${de} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${et=>et.secondary||"#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`,ue=j("div")`
  position: absolute;
`,le=j("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`,Te=h$1`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`,fe=j("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${Te} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`,M=({toast:et})=>{let{icon:tt,type:ot,iconTheme:dt}=et;return tt!==void 0?typeof tt=="string"?reactExports.createElement(fe,null,tt):tt:ot==="blank"?null:reactExports.createElement(le,null,reactExports.createElement(V,{...dt}),ot!=="loading"&&reactExports.createElement(ue,null,ot==="error"?reactExports.createElement(_,{...dt}):reactExports.createElement(w,{...dt})))},ye=et=>`
0% {transform: translate3d(0,${et*-200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`,ge=et=>`
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${et*-150}%,-1px) scale(.6); opacity:0;}
`,he="0%{opacity:0;} 100%{opacity:1;}",xe="0%{opacity:1;} 100%{opacity:0;}",be=j("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`,Se=j("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`,Ae=(et,tt)=>{let ot=et.includes("top")?1:-1,[dt,ft]=b()?[he,xe]:[ye(ot),ge(ot)];return{animation:tt?`${h$1(dt)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${h$1(ft)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},F=reactExports.memo(({toast:et,position:tt,style:ot,children:dt})=>{let ft=et.height?Ae(et.position||tt||"top-center",et.visible):{opacity:0},pt=reactExports.createElement(M,{toast:et}),mt=reactExports.createElement(Se,{...et.ariaProps},T(et.message,et));return reactExports.createElement(be,{className:et.className,style:{...ft,...ot,...et.style}},typeof dt=="function"?dt({icon:pt,message:mt}):reactExports.createElement(reactExports.Fragment,null,pt,mt))});m(reactExports.createElement);var Ee=({id:et,className:tt,style:ot,onHeightUpdate:dt,children:ft})=>{let pt=reactExports.useCallback(mt=>{if(mt){let ht=()=>{let bt=mt.getBoundingClientRect().height;dt(et,bt)};ht(),new MutationObserver(ht).observe(mt,{subtree:!0,childList:!0,characterData:!0})}},[et,dt]);return reactExports.createElement("div",{ref:pt,className:tt,style:ot},ft)},Re=(et,tt)=>{let ot=et.includes("top"),dt=ot?{top:0}:{bottom:0},ft=et.includes("center")?{justifyContent:"center"}:et.includes("right")?{justifyContent:"flex-end"}:{};return{left:0,right:0,display:"flex",position:"absolute",transition:b()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:`translateY(${tt*(ot?1:-1)}px)`,...dt,...ft}},ve=u$1`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`,O=16,Ie=({reverseOrder:et,position:tt="top-center",toastOptions:ot,gutter:dt,children:ft,containerStyle:pt,containerClassName:mt})=>{let{toasts:ht,handlers:bt}=D(ot);return reactExports.createElement("div",{style:{position:"fixed",zIndex:9999,top:O,left:O,right:O,bottom:O,pointerEvents:"none",...pt},className:mt,onMouseEnter:bt.startPause,onMouseLeave:bt.endPause},ht.map(yt=>{let xt=yt.position||tt,gt=bt.calculateOffset(yt,{reverseOrder:et,gutter:dt,defaultPosition:tt}),wt=Re(xt,gt);return reactExports.createElement(Ee,{id:yt.id,key:yt.id,onHeightUpdate:bt.updateHeight,className:yt.visible?ve:"",style:wt},yt.type==="custom"?T(yt.message,yt):ft?ft(yt):reactExports.createElement(F,{toast:yt,position:xt}))}))},_t=n;const App=()=>{const{selectedAccount:et}=useAccount(),[tt,ot]=reactExports.useState(""),[dt,ft]=reactExports.useState(""),[pt,mt]=reactExports.useState(),[ht,bt]=reactExports.useState("USDC"),[yt,xt]=reactExports.useState("0"),[gt,wt]=reactExports.useState(!1),[Pt,St]=reactExports.useState(""),Et=kt=>{ot(kt.target.value)},Lt=async kt=>{ft(kt.target.value),St(await estimateFee(ht=="USDC"?USDC.ASSET_ID:USDT.ASSET_ID,tt,kt.target.value,et,pt))},It=async()=>{if(et){if(wt(!0),!pt){_t.error("Cannot connect to the blockchain!"),wt(!1);return}if(!tt){_t.error("Recipient cannot be empty!"),wt(!1);return}if(!dt){_t.error("Amount cannot be empty!"),wt(!1);return}try{const kt=ht=="USDC"?USDC.ASSET_ID:USDT.ASSET_ID,Nt=parseFloat(dt)*DECIMAL,Ut=pt==null?void 0:pt.tx.assets.transferKeepAlive(`${kt}`,tt,BigInt(Nt)),Ft=await web3FromSource(et.meta.source);Ut.signAndSend(et.address,{signer:Ft.signer,assetId:{parents:0,interior:{X2:[{PalletInstance:50},{GeneralIndex:kt}]}}},({status:jt})=>{jt.isInBlock?(_t.success(`Completed at block hash #${jt.asInBlock.toString()}`),wt(!1)):_t(`Current status: ${jt.type}`)}).catch(jt=>{_t.error(`:( transaction failed ${jt}`),wt(!1)})}catch(kt){_t.error(`${kt}`),wt(!1)}}};return reactExports.useEffect(()=>{(async()=>{try{const kt=await ApiPromise.create({provider:new WsProvider(WS_URL),noInitWarn:!0});mt(kt),console.log(kt)}catch(kt){console.log(kt)}})()},[]),reactExports.useEffect(()=>{if(!et)return;const kt=async()=>{try{const Ut=ht=="USDC"?`${USDC.ASSET_ID}`:`${USDT.ASSET_ID}`,Ft=await getTokenBalance(et.address,Ut,pt);xt(Ft)}catch(Ut){console.error("Error fetching data:",Ut)}};kt();const Nt=setInterval(kt,3e4);return()=>clearInterval(Nt)}),jsxRuntimeExports.jsxs("div",{className:"min-h-screen flex items-center justify-center",children:[pt?jsxRuntimeExports.jsxs("div",{className:"space-y-4",children:[et?jsxRuntimeExports.jsx(AccountSelector,{api:pt}):jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsxs("h1",{className:"text-sm text-center font-bold",children:["Send USDC/USDT",jsxRuntimeExports.jsx("br",{}),"and pay network fees with USDC/USDT on Polkadot Asset Hub"]}),jsxRuntimeExports.jsx(ConnectWallet,{})]}),jsxRuntimeExports.jsxs("div",{className:"border border-black rounded-lg p-4 space-y-4",children:[jsxRuntimeExports.jsxs("div",{className:"space-y-2",children:[jsxRuntimeExports.jsx("h1",{className:"pl-1 font-bold",children:"Recipient"}),jsxRuntimeExports.jsx("input",{className:"w-full border border-black rounded-lg p-4",type:"text",value:tt,onChange:Et,placeholder:"Polkadot Asset Hub address"})]}),jsxRuntimeExports.jsxs("div",{className:"space-y-2",children:[jsxRuntimeExports.jsxs("div",{className:"flex items-center justify-between",children:[jsxRuntimeExports.jsx("h1",{className:"pl-1 font-bold",children:"Amount"}),et&&jsxRuntimeExports.jsx("span",{className:"pr-8 text-gray-500",children:`Available: ${formatBalance(yt,2)} ${ht}`})]}),jsxRuntimeExports.jsxs("div",{className:"flex items-center justify-center",children:[jsxRuntimeExports.jsx("input",{className:"w-full h-14 border border-black rounded-l-lg p-4 box-border appearance-none",type:"number",value:dt,onChange:Lt,placeholder:"0.00"}),jsxRuntimeExports.jsxs("select",{className:"h-14 border border-black border-l-0 rounded-r-lg px-4 py-1 box-border appearance-none hover:bg-gray-200 cursor-pointer font-bold",value:ht,onChange:async kt=>{bt(kt.target.value),St(await estimateFee(kt.target.value=="USDC"?USDC.ASSET_ID:USDT.ASSET_ID,tt,dt,et,pt))},children:[jsxRuntimeExports.jsx("option",{value:"USDC",children:"USDC"},"USDC"),jsxRuntimeExports.jsx("option",{value:"USDT",children:"USDT"},"USDT")]})]})]}),jsxRuntimeExports.jsxs("div",{className:"text-right pr-1",children:["Estimated fee: ",Pt&&formatBalance(Pt,5)," ",ht]}),jsxRuntimeExports.jsxs("div",{className:"text-right pr-1",children:["Total:"," ",jsxRuntimeExports.jsxs("span",{className:"font-bold",children:[Pt&&dt&&formatBalance((parseFloat(dt)*DECIMAL+parseFloat(Pt)).toString(),5)," ",ht]})]}),jsxRuntimeExports.jsx("button",{className:`w-full border border-black p-4 rounded-lg font-bold ${gt?"bg-gray-200":"hover:bg-gray-200 active:bg-gray-200"}`,onClick:It,disabled:gt,children:gt?"Sending...":"Send"})]}),jsxRuntimeExports.jsxs("div",{className:"text-center text-xs text-gray-600 space-x-2 space-y-2",children:[jsxRuntimeExports.jsx("span",{children:" This is still a work in progress, so use with caution!"}),jsxRuntimeExports.jsx("a",{className:"underline",href:"https://github.com/jameshih/mobypay-web",target:"_blank",children:jsxRuntimeExports.jsx("span",{children:"Source code"})}),jsxRuntimeExports.jsx("div",{children:jsxRuntimeExports.jsxs("span",{children:["Check out"," ",jsxRuntimeExports.jsx("a",{className:"underline italic font-bold",href:"https://mobypay.pwa.shih.app",target:"_blank",children:"MobyPay wallet"})," ","(use USDC/USDT on the go!)"]})})]})]}):jsxRuntimeExports.jsxs("span",{children:["⚡ Connecting to ",jsxRuntimeExports.jsx("span",{className:"italic",children:"Polkadot Asset Hub"}),"..."]}),jsxRuntimeExports.jsx(Ie,{position:"top-center",reverseOrder:!1})]})},AccountProvider=({children:et})=>{const[tt,ot]=reactExports.useState([]),[dt,ft]=reactExports.useState(),pt=ht=>{ot(ht)},mt=ht=>{ft(ht)};return jsxRuntimeExports.jsx(AccountContext.Provider,{value:{accounts:tt,selectedAccount:dt,updateAccounts:pt,selectAccount:mt},children:et})};client.createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(React.StrictMode,{children:jsxRuntimeExports.jsx(AccountProvider,{children:jsxRuntimeExports.jsx(App,{})})}));export{u8aConcatStrict as a,u8aEq as b,web3Enable as c,web3Accounts as d,web3AccountsSubscribe as e,web3FromSource as f,web3FromAddress as g,web3ListRpcProviders as h,isWeb3Injected as i,web3UseRpcProvider as j,u8aToU8a as u,web3EnablePromise as w};
